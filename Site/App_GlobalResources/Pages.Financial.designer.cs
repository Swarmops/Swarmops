//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Swarmops.Logic.Resources;

namespace Resources.Pages {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Financial {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Financial() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new MonoResourceManager("Pages.Financial");
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cash Advance #{0:N0} for {1} has been approved for {3:N2}..
        /// </summary>
        public static string AttestCosts_AdvanceAttested {
            get {
                return ResourceManager.GetString("AttestCosts_AdvanceAttested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The approval for Cash Advance #{0:N0} for {1} was RETRACTED.  It will not be paid out unless approved again..
        /// </summary>
        public static string AttestCosts_AdvanceDeattested {
            get {
                return ResourceManager.GetString("AttestCosts_AdvanceDeattested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot approve this amount. The budget is empty for the year {0}..
        /// </summary>
        public static string AttestCosts_BudgetIsEmpty {
            get {
                return ResourceManager.GetString("AttestCosts_BudgetIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot approve a negative amount..
        /// </summary>
        public static string AttestCosts_CannotAttestNegative {
            get {
                return ResourceManager.GetString("AttestCosts_CannotAttestNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot approve a zero amount..
        /// </summary>
        public static string AttestCosts_CannotAttestZero {
            get {
                return ResourceManager.GetString("AttestCosts_CannotAttestZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, you cannot rebudget a salary payout..
        /// </summary>
        public static string AttestCosts_Error_CantRebudgetSalary {
            get {
                return ResourceManager.GetString("AttestCosts_Error_CantRebudgetSalary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That doesn&apos;t seem to be a valid amount. Please retry?.
        /// </summary>
        public static string AttestCosts_Error_InvalidAmountRetry {
            get {
                return ResourceManager.GetString("AttestCosts_Error_InvalidAmountRetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select a budget to retarget the charge for..
        /// </summary>
        public static string AttestCosts_Error_PleaseSelectBudget {
            get {
                return ResourceManager.GetString("AttestCosts_Error_PleaseSelectBudget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expense Claim #{0:N0} from {1} for {2} {3:N2} has been approved..
        /// </summary>
        public static string AttestCosts_ExpenseAttested {
            get {
                return ResourceManager.GetString("AttestCosts_ExpenseAttested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Approval for Expense Claim #{0:N0} from {1} was RETRACTED. It will not be paid unless approved again..
        /// </summary>
        public static string AttestCosts_ExpenseDeattested {
            get {
                return ResourceManager.GetString("AttestCosts_ExpenseDeattested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action.
        /// </summary>
        public static string AttestCosts_GridHeader_Action {
            get {
                return ResourceManager.GetString("AttestCosts_GridHeader_Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Beneficiary.
        /// </summary>
        public static string AttestCosts_GridHeader_Beneficiary {
            get {
                return ResourceManager.GetString("AttestCosts_GridHeader_Beneficiary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Budget.
        /// </summary>
        public static string AttestCosts_GridHeader_Budget {
            get {
                return ResourceManager.GetString("AttestCosts_GridHeader_Budget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string AttestCosts_GridHeader_Description {
            get {
                return ResourceManager.GetString("AttestCosts_GridHeader_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Docs.
        /// </summary>
        public static string AttestCosts_GridHeader_Docs {
            get {
                return ResourceManager.GetString("AttestCosts_GridHeader_Docs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item.
        /// </summary>
        public static string AttestCosts_GridHeader_Item {
            get {
                return ResourceManager.GetString("AttestCosts_GridHeader_Item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested.
        /// </summary>
        public static string AttestCosts_GridHeader_Requested {
            get {
                return ResourceManager.GetString("AttestCosts_GridHeader_Requested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Costs waiting for your approval.
        /// </summary>
        public static string AttestCosts_Header_CostsAwaitingAttestation {
            get {
                return ResourceManager.GetString("AttestCosts_Header_CostsAwaitingAttestation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is where you approve costs that other people are requesting from your budgets. Nothing is paid before you have approved it..
        /// </summary>
        public static string AttestCosts_Info {
            get {
                return ResourceManager.GetString("AttestCosts_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invoice #{0:N0} from {1} for {2} {3:N2} has been approved..
        /// </summary>
        public static string AttestCosts_InvoiceAttested {
            get {
                return ResourceManager.GetString("AttestCosts_InvoiceAttested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Approval for Invoice #{0:N0} from {1} was RETRACTED.  It will not be paid unless approved again..
        /// </summary>
        public static string AttestCosts_InvoiceDeattested {
            get {
                return ResourceManager.GetString("AttestCosts_InvoiceDeattested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Approve.
        /// </summary>
        public static string AttestCosts_Modal_ButtonAmount {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_ButtonAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Approve.
        /// </summary>
        public static string AttestCosts_Modal_ButtonCorrect {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_ButtonCorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deny.
        /// </summary>
        public static string AttestCosts_Modal_ButtonDeny {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_ButtonDeny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rebudget.
        /// </summary>
        public static string AttestCosts_Modal_ButtonRebudget {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_ButtonRebudget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to My hovercraft is full of eels.
        /// </summary>
        public static string AttestCosts_Modal_DenyTextPlaceholder {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_DenyTextPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (The amount must exclude any VAT specified!).
        /// </summary>
        public static string AttestCosts_Modal_DescribeCorrectNoVat {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_DescribeCorrectNoVat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What amount are you attesting instead (in {0})?.
        /// </summary>
        public static string AttestCosts_Modal_DescribeOptionAmount {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_DescribeOptionAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change this item to this amount (in {0}), then attest it like that:.
        /// </summary>
        public static string AttestCosts_Modal_DescribeOptionCorrect {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_DescribeOptionCorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional reason for denial to the submitter:.
        /// </summary>
        public static string AttestCosts_Modal_DescribeOptionDeny {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_DescribeOptionDeny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move the charge to this budget instead:.
        /// </summary>
        public static string AttestCosts_Modal_DescribeOptionRebudget {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_DescribeOptionRebudget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fix problems or deny approval.
        /// </summary>
        public static string AttestCosts_Modal_Header {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I will approve this, but for a different amount..
        /// </summary>
        public static string AttestCosts_Modal_RadioOptionAmount {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_RadioOptionAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount is wrong. I will approve it for the correct amount..
        /// </summary>
        public static string AttestCosts_Modal_RadioOptionCorrect {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_RadioOptionCorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I will not approve this record. It is scratched..
        /// </summary>
        public static string AttestCosts_Modal_RadioOptionDeny {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_RadioOptionDeny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This record should charge a different budget. Move it there..
        /// </summary>
        public static string AttestCosts_Modal_RadioOptionRebudget {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_RadioOptionRebudget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What seems to be the problem with this record?.
        /// </summary>
        public static string AttestCosts_Modal_WhatIsProblem {
            get {
                return ResourceManager.GetString("AttestCosts_Modal_WhatIsProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are not enough funds remaining in the budget to approve this cost..
        /// </summary>
        public static string AttestCosts_OutOfBudget {
            get {
                return ResourceManager.GetString("AttestCosts_OutOfBudget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are not enough funds to approve this. You can attest up to {0} {1:N2} more in this budget for the year {2}..
        /// </summary>
        public static string AttestCosts_OutOfBudgetPrecise {
            get {
                return ResourceManager.GetString("AttestCosts_OutOfBudgetPrecise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;strong&gt;OVERDRAFT BUDGET?&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;There are not enough funds remaining in the budget to approve this expense. Normally, it would be blocked from approval. However, you may override this limitation and attest anyway, thereby causing the account to overdraft its budget.&lt;br/&gt;&lt;br/&gt;Do you want to approve the expense, thereby forcing an overdraft, or do you want to cancel, staying on budget instead?&lt;br/&gt;&lt;br/&gt;.
        /// </summary>
        public static string AttestCosts_OverdraftConfirm {
            get {
                return ResourceManager.GetString("AttestCosts_OverdraftConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stay on Budget.
        /// </summary>
        public static string AttestCosts_OverdraftConfirmNo {
            get {
                return ResourceManager.GetString("AttestCosts_OverdraftConfirmNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force Overdraft.
        /// </summary>
        public static string AttestCosts_OverdraftConfirmYes {
            get {
                return ResourceManager.GetString("AttestCosts_OverdraftConfirmYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BUDGET WAS OVERDRAFTED..
        /// </summary>
        public static string AttestCosts_Overdrafted {
            get {
                return ResourceManager.GetString("AttestCosts_Overdrafted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Approve Costs.
        /// </summary>
        public static string AttestCosts_PageTitle {
            get {
                return ResourceManager.GetString("AttestCosts_PageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conference #{0:N0}, arranged by {1}, has been approved for {3:N2}..
        /// </summary>
        public static string AttestCosts_ParleyAttested {
            get {
                return ResourceManager.GetString("AttestCosts_ParleyAttested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Approval for Conference #{0:N0} by {1} was RETRACTED.  It will not be greenlighted unless approved again..
        /// </summary>
        public static string AttestCosts_ParleyDeattested {
            get {
                return ResourceManager.GetString("AttestCosts_ParleyDeattested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Salary #{0:N0} for {1} was attested for {3:N2}..
        /// </summary>
        public static string AttestCosts_SalaryAttested {
            get {
                return ResourceManager.GetString("AttestCosts_SalaryAttested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Approval for Salary #{0:N0} for {1} was RETRACTED. It will not be paid out unless approved again..
        /// </summary>
        public static string AttestCosts_SalaryDeattested {
            get {
                return ResourceManager.GetString("AttestCosts_SalaryDeattested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;strong&gt;WARNING: BUDGET NOT SET&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;The cost you&apos;re approving belongs to an account in the ledger that lacks owner and doesn&apos;t have a defined budget allowance for the year. Consider visiting the Chart of Accounts and allocating budgets for the expected revenue and expenses.&lt;br/&gt;&lt;br/&gt;This message will only display once per visit to Cost Approvals.&lt;br/&gt;.
        /// </summary>
        public static string AttestCosts_Warn_UninitializedBudget {
            get {
                return ResourceManager.GetString("AttestCosts_Warn_UninitializedBudget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invoice amount total (in {0}).
        /// </summary>
        public static string CreateInboundInvoice_Amount {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VAT part of total ({0}).
        /// </summary>
        public static string CreateInboundInvoice_AmountVat {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_AmountVat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create.
        /// </summary>
        public static string CreateInboundInvoice_ButtonCreate {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_ButtonCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string CreateInboundInvoice_Description {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invoice Image.
        /// </summary>
        public static string CreateInboundInvoice_HeaderInvoiceImage {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_HeaderInvoiceImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Payment Details.
        /// </summary>
        public static string CreateInboundInvoice_HeaderPaymentDetails {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_HeaderPaymentDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is where you file invoices received at your organization (&quot;Accounts Payable&quot;). Enter the supplier name, amount, due date, the invoice reference, and upload an image of the received invoice. Also, select a budget. The budget owner needs to attest, as usual. (Future roadmapped expansions to this mechanism include purchase orders and supplier lists.).
        /// </summary>
        public static string CreateInboundInvoice_Info {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received Inbound Invoice.
        /// </summary>
        public static string CreateInboundInvoice_PageTitle {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_PageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invoice reference.
        /// </summary>
        public static string CreateInboundInvoice_Reference {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_Reference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OCR / Automatic.
        /// </summary>
        public static string CreateInboundInvoice_ReferenceAutomaticOcr {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_ReferenceAutomaticOcr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual.
        /// </summary>
        public static string CreateInboundInvoice_ReferenceManual {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_ReferenceManual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inbound Invoice #{0:N0} filed..
        /// </summary>
        public static string CreateInboundInvoice_SuccessMessage {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_SuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account.
        /// </summary>
        public static string CreateInboundInvoice_SupplierAccount {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_SupplierAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload image file.
        /// </summary>
        public static string CreateInboundInvoice_UploadInvoiceImage {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_UploadInvoiceImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the supplier&apos;s bank account or equivalent..
        /// </summary>
        public static string CreateInboundInvoice_ValidationError_Account {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_ValidationError_Account", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the amount of money (in {0}) the invoice requests..
        /// </summary>
        public static string CreateInboundInvoice_ValidationError_Amount {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_ValidationError_Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a budget to charge..
        /// </summary>
        public static string CreateInboundInvoice_ValidationError_Budget {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_ValidationError_Budget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please upload one or more documents of the original invoice..
        /// </summary>
        public static string CreateInboundInvoice_ValidationError_Documents {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_ValidationError_Documents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select an option..
        /// </summary>
        public static string CreateInboundInvoice_ValidationError_MissingTag {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_ValidationError_MissingTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please describe what this purchase was..
        /// </summary>
        public static string CreateInboundInvoice_ValidationError_Purpose {
            get {
                return ResourceManager.GetString("CreateInboundInvoice_ValidationError_Purpose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating Outbound Invoice.
        /// </summary>
        public static string CreateOutboundInvoice_BoxTitle {
            get {
                return ResourceManager.GetString("CreateOutboundInvoice_BoxTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create.
        /// </summary>
        public static string CreateOutboundInvoice_ButtonCreate {
            get {
                return ResourceManager.GetString("CreateOutboundInvoice_ButtonCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating Outbound Invoice.
        /// </summary>
        public static string CreateOutboundInvoice_PageTitle {
            get {
                return ResourceManager.GetString("CreateOutboundInvoice_PageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outbound Invoice #{0:N0} filed..
        /// </summary>
        public static string CreateOutboundInvoice_SuccessMessage {
            get {
                return ResourceManager.GetString("CreateOutboundInvoice_SuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a QR code for donations to {0}. Read it from your phone&apos;s bitcoin wallet to make a donation, or donate from your computer directly to [{1}] (that&apos;s a Bitcoin Cash address)..
        /// </summary>
        public static string Donate_Explain {
            get {
                return ResourceManager.GetString("Donate_Explain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received {0} {1:N2} ({2:N0} microcoins or &quot;bits&quot;). Thank you!.
        /// </summary>
        public static string Donate_FundsReceived {
            get {
                return ResourceManager.GetString("Donate_FundsReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Funds Received ({0}).
        /// </summary>
        public static string Donate_FundsReceivedLabel {
            get {
                return ResourceManager.GetString("Donate_FundsReceivedLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received {0} microcoins (&quot;bits&quot;). Thank you!.
        /// </summary>
        public static string Donate_FundsReceivedNative {
            get {
                return ResourceManager.GetString("Donate_FundsReceivedNative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want to donate to the organization, your can do so here..
        /// </summary>
        public static string Donate_Info {
            get {
                return ResourceManager.GetString("Donate_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Donate.
        /// </summary>
        public static string Donate_PageTitle {
            get {
                return ResourceManager.GetString("Donate_PageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for transaction....
        /// </summary>
        public static string Donate_StatusInitial {
            get {
                return ResourceManager.GetString("Donate_StatusInitial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction detected, verifying....
        /// </summary>
        public static string Donate_TransactionDetected {
            get {
                return ResourceManager.GetString("Donate_TransactionDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Donation to {0}.
        /// </summary>
        public static string Donate_TxLabel {
            get {
                return ResourceManager.GetString("Donate_TxLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loan to {0}.
        /// </summary>
        public static string Donate_TxLabel_Loan {
            get {
                return ResourceManager.GetString("Donate_TxLabel_Loan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expense claim amount (in {0}).
        /// </summary>
        public static string FileExpenseClaim_Amount {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Number.
        /// </summary>
        public static string FileExpenseClaim_BankAccount {
            get {
                return ResourceManager.GetString("FileExpenseClaim_BankAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing Number.
        /// </summary>
        public static string FileExpenseClaim_BankClearing {
            get {
                return ResourceManager.GetString("FileExpenseClaim_BankClearing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bank Name.
        /// </summary>
        public static string FileExpenseClaim_BankName {
            get {
                return ResourceManager.GetString("FileExpenseClaim_BankName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Budget.
        /// </summary>
        public static string FileExpenseClaim_Budget {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Budget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request.
        /// </summary>
        public static string FileExpenseClaim_ButtonRequest {
            get {
                return ResourceManager.GetString("FileExpenseClaim_ButtonRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cost Type.
        /// </summary>
        public static string FileExpenseClaim_CostType {
            get {
                return ResourceManager.GetString("FileExpenseClaim_CostType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string FileExpenseClaim_Description {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Expensify CSV.
        /// </summary>
        public static string FileExpenseClaim_Expensify_CsvUploadDescription {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_CsvUploadDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;&lt;strong&gt;ERROR: Unable to parse the Expensify CSV.&lt;/strong&gt; If this is a CSV file from Expensify, then Swarmops needs the columns &quot;Timestamp&quot;, &quot;Amount&quot;, &quot;Merchant&quot;, &quot;Comment&quot;, &quot;Category&quot;, &quot;MCC&quot;, &quot;Original Currency&quot;, and &quot;Original Amount&quot; to be present in the file. If the organization reports VAT, then a further column called &quot;VAT&quot; is required.&lt;/p&gt;&lt;p&gt;Unable to proceed with this file.&lt;/p&gt;.
        /// </summary>
        public static string FileExpenseClaim_Expensify_Error_BadFile {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_Error_BadFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;&lt;strong&gt;ERROR: The Expensify CSV file is missing required data fields.&lt;/strong&gt; The file appears to be missing at least one of the required fields of Expensify&apos;s default CSV profile. Refer to the technical documentation and compare with the file you tried to upload. (It is a more probable cause of error, of course, that you tried to upload the completely wrong file &amp;ndash; maybe a photograph instead of an Expensify CSV &amp;ndash; and that this is the cause for the missing expected data.)&lt;/p&gt;&lt;p&gt;Unable to pro [rest of string was truncated]&quot;;.
        /// </summary>
        public static string FileExpenseClaim_Expensify_Error_InvalidCsv {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_Error_InvalidCsv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;&lt;strong&gt;ERROR: The Expensify CSV file doesn&apos;t have a VAT field.&lt;/strong&gt; Since this organization reports Value Added Tax (VAT) to authorities, this must be specified on a per-expense basis. Please enable VAT in Expensify and create a new CSV export profile that exports this under the column header &quot;VAT&quot;. If your team has already created such a CSV profile, you may just need to select it when exporting to CSV.&lt;/p&gt;&lt;p&gt;Unable to process this file.&lt;/p&gt;.
        /// </summary>
        public static string FileExpenseClaim_Expensify_Error_NeedsVat {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_Error_NeedsVat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have many expense reports, you can gather them with Expensify and upload an Expensify CSV report here (which you obtain from at Expensify under Reports, Export, as CSV). Swarmops will use Expensify to fetch all the individual receipts and log them as separate expense claims for proper accounting..
        /// </summary>
        public static string FileExpenseClaim_Expensify_InstructionsBasic {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_InstructionsBasic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order for this to work, since {0} reports VAT to the tax authorities, you&apos;ll need to modify the default Expensify CSV profile to include the VAT, which the default doesn&apos;t. Expensify&apos;s help pages has more on how to do this and if you&apos;re using Expensify on a team basis, your Expensify policy should already have a VAT-enabled CSV export profile..
        /// </summary>
        public static string FileExpenseClaim_Expensify_InstructionsNeedVat {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_InstructionsNeedVat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Based on the organization&apos;s settings, the &quot;Default CSV&quot; export profile in Expensify should be sufficient for Swarmops..
        /// </summary>
        public static string FileExpenseClaim_Expensify_InstructionsNothingAdvanced {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_InstructionsNothingAdvanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All expense claims need a budget before submitting..
        /// </summary>
        public static string FileExpenseClaim_Expensify_NeedBudgetsForAll {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_NeedBudgetsForAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Expensify records to submit.
        /// </summary>
        public static string FileExpenseClaim_Expensify_NoRecordsLeft {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_NoRecordsLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expensify report&apos;s currency is.
        /// </summary>
        public static string FileExpenseClaim_Expensify_ReportCurrency {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_ReportCurrency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready to submit one claim.
        /// </summary>
        public static string FileExpenseClaim_Expensify_SubmitRecordSingle {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_SubmitRecordSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready to submit {0} claims.
        /// </summary>
        public static string FileExpenseClaim_Expensify_SubmitRecordsSeveral {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_SubmitRecordsSeveral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Claim successfully filed..
        /// </summary>
        public static string FileExpenseClaim_Expensify_SuccessOne {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_SuccessOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully filed {0} claims..
        /// </summary>
        public static string FileExpenseClaim_Expensify_SuccessSeveral {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_SuccessSeveral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Another Expensify CSV File?.
        /// </summary>
        public static string FileExpenseClaim_Expensify_UploadAnother {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Expensify_UploadAnother", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to myself.
        /// </summary>
        public static string FileExpenseClaim_ForWhom_DefaultMyself {
            get {
                return ResourceManager.GetString("FileExpenseClaim_ForWhom_DefaultMyself", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an expense claim from whom?.
        /// </summary>
        public static string FileExpenseClaim_ForWhom_Prompt {
            get {
                return ResourceManager.GetString("FileExpenseClaim_ForWhom_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Bank Details.
        /// </summary>
        public static string FileExpenseClaim_HeaderBankDetails {
            get {
                return ResourceManager.GetString("FileExpenseClaim_HeaderBankDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receipt Images.
        /// </summary>
        public static string FileExpenseClaim_HeaderReceiptImages {
            get {
                return ResourceManager.GetString("FileExpenseClaim_HeaderReceiptImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have made a purchase on behalf of the organization using your private funds, you will likely want reimbursement for that by filing an &lt;em&gt;expense claim&lt;/em&gt;. You do that here by uploading the receipts and selecting the budget they should be charged to. If you have previously received a cash advance for this purchase, this is where you clear the organization&apos;s loan to you by submitting receipts..
        /// </summary>
        public static string FileExpenseClaim_Info {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request Money Back For Expense.
        /// </summary>
        public static string FileExpenseClaim_PageTitle {
            get {
                return ResourceManager.GetString("FileExpenseClaim_PageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expense claim has been successfully filed for {0} {1:N2} against the budget of {2}. The receipts will need to be validated and the claim will need to be attested by the budget owner..
        /// </summary>
        public static string FileExpenseClaim_SuccessMessagePartOne {
            get {
                return ResourceManager.GetString("FileExpenseClaim_SuccessMessagePartOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As soon as this has happened, the funds will proceed to payout to your indicated account..
        /// </summary>
        public static string FileExpenseClaim_SuccessMessagePartTwo {
            get {
                return ResourceManager.GetString("FileExpenseClaim_SuccessMessagePartTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As this is your own budget, attestation is already complete. Only validation is necessary..
        /// </summary>
        public static string FileExpenseClaim_SuccessMessagePartTwoOwnBudget {
            get {
                return ResourceManager.GetString("FileExpenseClaim_SuccessMessagePartTwoOwnBudget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Expensify Report For Reimbursement.
        /// </summary>
        public static string FileExpenseClaim_Title_Expensify {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Title_Expensify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Receipt Images.
        /// </summary>
        public static string FileExpenseClaim_UploadRecieptImages {
            get {
                return ResourceManager.GetString("FileExpenseClaim_UploadRecieptImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the amount of money (in {0}) that you are claiming..
        /// </summary>
        public static string FileExpenseClaim_ValidationError_Amount {
            get {
                return ResourceManager.GetString("FileExpenseClaim_ValidationError_Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please upload one or more receipt images supporting the expense claim..
        /// </summary>
        public static string FileExpenseClaim_ValidationError_Documents {
            get {
                return ResourceManager.GetString("FileExpenseClaim_ValidationError_Documents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select an option as indicated..
        /// </summary>
        public static string FileExpenseClaim_ValidationError_MissingTag {
            get {
                return ResourceManager.GetString("FileExpenseClaim_ValidationError_MissingTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please describe what this purchase was..
        /// </summary>
        public static string FileExpenseClaim_ValidationError_Purpose {
            get {
                return ResourceManager.GetString("FileExpenseClaim_ValidationError_Purpose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VAT of the total ({0}).
        /// </summary>
        public static string FileExpenseClaim_Vat {
            get {
                return ResourceManager.GetString("FileExpenseClaim_Vat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listing Inbound Invoices.
        /// </summary>
        public static string ListInboundInvoices_Header {
            get {
                return ResourceManager.GetString("ListInboundInvoices_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invoice sender.
        /// </summary>
        public static string ListInboundInvoices_Header_Sender {
            get {
                return ResourceManager.GetString("ListInboundInvoices_Header_Sender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This lists the latest 100 invoices, sorted by their due date with newest first..
        /// </summary>
        public static string ListInboundInvoices_Info {
            get {
                return ResourceManager.GetString("ListInboundInvoices_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inbound Invoices.
        /// </summary>
        public static string ListInboundInvoices_Title {
            get {
                return ResourceManager.GetString("ListInboundInvoices_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sent.
        /// </summary>
        public static string ListOutboundInvoices_CreatedDateTime {
            get {
                return ResourceManager.GetString("ListOutboundInvoices_CreatedDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer.
        /// </summary>
        public static string ListOutboundInvoices_CustomerReceivingInvoice {
            get {
                return ResourceManager.GetString("ListOutboundInvoices_CustomerReceivingInvoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listing Outbound Invoices.
        /// </summary>
        public static string ListOutboundInvoices_Header {
            get {
                return ResourceManager.GetString("ListOutboundInvoices_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This lists the 100 most recent outbound invoices, sorted by when they were created, newest first..
        /// </summary>
        public static string ListOutboundInvoices_Info {
            get {
                return ResourceManager.GetString("ListOutboundInvoices_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount Total.
        /// </summary>
        public static string ListOutboundInvoices_InvoiceAmountTotalIncludingTaxes {
            get {
                return ResourceManager.GetString("ListOutboundInvoices_InvoiceAmountTotalIncludingTaxes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Due Date.
        /// </summary>
        public static string ListOutboundInvoices_PaymentExpectedByDate {
            get {
                return ResourceManager.GetString("ListOutboundInvoices_PaymentExpectedByDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List Outbound Invoices.
        /// </summary>
        public static string ListOutboundInvoices_Title {
            get {
                return ResourceManager.GetString("ListOutboundInvoices_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...and this.
        /// </summary>
        public static string PayOutMoney_AutomationFieldNext {
            get {
                return ResourceManager.GetString("PayOutMoney_AutomationFieldNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan this.
        /// </summary>
        public static string PayOutMoney_AutomationFieldStart {
            get {
                return ResourceManager.GetString("PayOutMoney_AutomationFieldStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount.
        /// </summary>
        public static string PayOutMoney_GridHeader_Amount {
            get {
                return ResourceManager.GetString("PayOutMoney_GridHeader_Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currency, Method.
        /// </summary>
        public static string PayOutMoney_GridHeader_CurrencyMethod {
            get {
                return ResourceManager.GetString("PayOutMoney_GridHeader_CurrencyMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paid.
        /// </summary>
        public static string PayOutMoney_GridHeader_PaidOut {
            get {
                return ResourceManager.GetString("PayOutMoney_GridHeader_PaidOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pay.
        /// </summary>
        public static string PayOutMoney_GridHeader_PayThis {
            get {
                return ResourceManager.GetString("PayOutMoney_GridHeader_PayThis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recipient.
        /// </summary>
        public static string PayOutMoney_GridHeader_Recipient {
            get {
                return ResourceManager.GetString("PayOutMoney_GridHeader_Recipient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference.
        /// </summary>
        public static string PayOutMoney_GridHeader_Reference {
            get {
                return ResourceManager.GetString("PayOutMoney_GridHeader_Reference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Costs Ready For Payout.
        /// </summary>
        public static string PayOutMoney_Header {
            get {
                return ResourceManager.GetString("PayOutMoney_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the various forms of costs to the organization that have passed all the hurdles for payout. They are ready to be paid out to the recipient. Here is where you check them off as being paid out (probably while having your bank open in another window)..
        /// </summary>
        public static string PayOutMoney_Info {
            get {
                return ResourceManager.GetString("PayOutMoney_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is Paid.
        /// </summary>
        public static string PayOutMoney_Modal_ConfirmPaid {
            get {
                return ResourceManager.GetString("PayOutMoney_Modal_ConfirmPaid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currency and Amount.
        /// </summary>
        public static string PayOutMoney_Modal_CurrencyAmount {
            get {
                return ResourceManager.GetString("PayOutMoney_Modal_CurrencyAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute This Payment Manually Now.
        /// </summary>
        public static string PayOutMoney_Modal_Header {
            get {
                return ResourceManager.GetString("PayOutMoney_Modal_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you scanning this payment?.
        /// </summary>
        public static string PayOutMoney_Modal_LabelOcr1 {
            get {
                return ResourceManager.GetString("PayOutMoney_Modal_LabelOcr1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show in machine-readable format.
        /// </summary>
        public static string PayOutMoney_Modal_LabelOcr2 {
            get {
                return ResourceManager.GetString("PayOutMoney_Modal_LabelOcr2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transfer Method.
        /// </summary>
        public static string PayOutMoney_Modal_TransferMethod {
            get {
                return ResourceManager.GetString("PayOutMoney_Modal_TransferMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show OCR for mobile apps.
        /// </summary>
        public static string PayoutMoney_OptionShowOcr {
            get {
                return ResourceManager.GetString("PayoutMoney_OptionShowOcr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show open payouts ({0:N0}).
        /// </summary>
        public static string PayOutMoney_OptionShowOpen {
            get {
                return ResourceManager.GetString("PayOutMoney_OptionShowOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pay Out Money.
        /// </summary>
        public static string PayOutMoney_PageTitle {
            get {
                return ResourceManager.GetString("PayOutMoney_PageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Payment is late.
        /// </summary>
        public static string PayOutMoney_PaymentLate {
            get {
                return ResourceManager.GetString("PayOutMoney_PaymentLate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot undo payout #{0}: it has already settled or closed..
        /// </summary>
        public static string PayOutMoney_PayoutCannotUndo {
            get {
                return ResourceManager.GetString("PayOutMoney_PayoutCannotUndo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Payout #{0:N0} to {1} was created..
        /// </summary>
        public static string PayOutMoney_PayoutCreated {
            get {
                return ResourceManager.GetString("PayOutMoney_PayoutCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Payout #{0:N0} was undone and everything restored..
        /// </summary>
        public static string PayOutMoney_PayoutUndone {
            get {
                return ResourceManager.GetString("PayOutMoney_PayoutUndone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additive Tax.
        /// </summary>
        public static string PayrollTaxForms_AdditiveTax {
            get {
                return ResourceManager.GetString("PayrollTaxForms_AdditiveTax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deducted Tax.
        /// </summary>
        public static string PayrollTaxForms_DeductedTax {
            get {
                return ResourceManager.GetString("PayrollTaxForms_DeductedTax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gross Paycheck.
        /// </summary>
        public static string PayrollTaxForms_GrossPay {
            get {
                return ResourceManager.GetString("PayrollTaxForms_GrossPay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View cheat sheets (completed tax forms) for the organization payroll, which are easy for you to copy to your actual tax forms, or possibly even print as is. Performance and actual forms vary by country and sometimes depend on third-party code and plugins..
        /// </summary>
        public static string PayrollTaxForms_Info {
            get {
                return ResourceManager.GetString("PayrollTaxForms_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Payroll Tax Forms.
        /// </summary>
        public static string PayrollTaxForms_PageTitle {
            get {
                return ResourceManager.GetString("PayrollTaxForms_PageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monthly Tax Forms For {0} For.
        /// </summary>
        public static string PayrollTaxForms_TaxFormsHeader {
            get {
                return ResourceManager.GetString("PayrollTaxForms_TaxFormsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Cost.
        /// </summary>
        public static string PayrollTaxForms_TotalCost {
            get {
                return ResourceManager.GetString("PayrollTaxForms_TotalCost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Tax.
        /// </summary>
        public static string PayrollTaxForms_TotalTax {
            get {
                return ResourceManager.GetString("PayrollTaxForms_TotalTax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advance amount (in {0}).
        /// </summary>
        public static string RequestCashAdvance_Amount {
            get {
                return ResourceManager.GetString("RequestCashAdvance_Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Number.
        /// </summary>
        public static string RequestCashAdvance_BankAccount {
            get {
                return ResourceManager.GetString("RequestCashAdvance_BankAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing Number.
        /// </summary>
        public static string RequestCashAdvance_BankClearing {
            get {
                return ResourceManager.GetString("RequestCashAdvance_BankClearing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bank Name.
        /// </summary>
        public static string RequestCashAdvance_BankName {
            get {
                return ResourceManager.GetString("RequestCashAdvance_BankName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Budget.
        /// </summary>
        public static string RequestCashAdvance_Budget {
            get {
                return ResourceManager.GetString("RequestCashAdvance_Budget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request.
        /// </summary>
        public static string RequestCashAdvance_ButtonRequest {
            get {
                return ResourceManager.GetString("RequestCashAdvance_ButtonRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Bank Details.
        /// </summary>
        public static string RequestCashAdvance_HeaderBankDetails {
            get {
                return ResourceManager.GetString("RequestCashAdvance_HeaderBankDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you are about to make a purchase on behalf of the organization, but need the money in advance rather than claiming it back afterwards, you can request a cash advance for a specific purpose..
        /// </summary>
        public static string RequestCashAdvance_Info {
            get {
                return ResourceManager.GetString("RequestCashAdvance_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request Cash Advance.
        /// </summary>
        public static string RequestCashAdvance_PageTitle {
            get {
                return ResourceManager.GetString("RequestCashAdvance_PageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purpose.
        /// </summary>
        public static string RequestCashAdvance_Purpose {
            get {
                return ResourceManager.GetString("RequestCashAdvance_Purpose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cash advance has been requested for &lt;strong&gt;{0}&lt;/strong&gt;. The requested amount is {2} {3:N2}. Note that this is a &lt;strong&gt;loan&lt;/strong&gt; from the organization until receipts have been presented..
        /// </summary>
        public static string RequestCashAdvance_SuccessMessagePartOne {
            get {
                return ResourceManager.GetString("RequestCashAdvance_SuccessMessagePartOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This needs to be attested by the budget owner and will then proceed to payout..
        /// </summary>
        public static string RequestCashAdvance_SuccessMessagePartTwo {
            get {
                return ResourceManager.GetString("RequestCashAdvance_SuccessMessagePartTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As this is your own budget, this has been automatically attested and has proceeded to payout..
        /// </summary>
        public static string RequestCashAdvance_SuccessMessagePartTwoOwnBudget {
            get {
                return ResourceManager.GetString("RequestCashAdvance_SuccessMessagePartTwoOwnBudget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the amount of money (in {0}) that you&apos;d like to advance..
        /// </summary>
        public static string RequestCashAdvance_ValidationError_Amount {
            get {
                return ResourceManager.GetString("RequestCashAdvance_ValidationError_Amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter your bank account number..
        /// </summary>
        public static string RequestCashAdvance_ValidationError_BankAccount {
            get {
                return ResourceManager.GetString("RequestCashAdvance_ValidationError_BankAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter your bank&apos;s clearing number..
        /// </summary>
        public static string RequestCashAdvance_ValidationError_BankClearing {
            get {
                return ResourceManager.GetString("RequestCashAdvance_ValidationError_BankClearing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter your bank&apos;s name..
        /// </summary>
        public static string RequestCashAdvance_ValidationError_BankName {
            get {
                return ResourceManager.GetString("RequestCashAdvance_ValidationError_BankName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select a budget to charge..
        /// </summary>
        public static string RequestCashAdvance_ValidationError_Budget {
            get {
                return ResourceManager.GetString("RequestCashAdvance_ValidationError_Budget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please state the purpose of the cash advance..
        /// </summary>
        public static string RequestCashAdvance_ValidationError_Purpose {
            get {
                return ResourceManager.GetString("RequestCashAdvance_ValidationError_Purpose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receipts awaiting your validation.
        /// </summary>
        public static string ValidateReceipts_Header_ReceiptsAwaitingValidation {
            get {
                return ResourceManager.GetString("ValidateReceipts_Header_ReceiptsAwaitingValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is where you inspect and confirm the validity of receipts that accompany expense claims. Check that the amount is correct and that the receipt appears to be for what it is claimed to be for..
        /// </summary>
        public static string ValidateReceipts_Info {
            get {
                return ResourceManager.GetString("ValidateReceipts_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validate Receipts.
        /// </summary>
        public static string ValidateReceipts_PageTitle {
            get {
                return ResourceManager.GetString("ValidateReceipts_PageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation for receipts for Expense Claim #{0:N0} for {1} {2:N2} was RETRACTED. The expense claim will not proceed to payout unless re-validated..
        /// </summary>
        public static string ValidateReceipts_ReceiptsDevalidated {
            get {
                return ResourceManager.GetString("ValidateReceipts_ReceiptsDevalidated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The receipts for Expense Claim #{0:N0} for {1} {2:N2} have been validated..
        /// </summary>
        public static string ValidateReceipts_ReceiptsValidated {
            get {
                return ResourceManager.GetString("ValidateReceipts_ReceiptsValidated", resourceCulture);
            }
        }
    }
}
