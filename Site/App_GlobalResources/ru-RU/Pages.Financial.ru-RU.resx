<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  
  
  
  
  
  <data name="AttestCosts_Error_CantRebudgetSalary" xml:space="preserve">
    <value>К сожалению, вы не можете rebudget выплату заработной платы.</value>
  </data>
  <data name="AttestCosts_Error_InvalidAmountRetry" xml:space="preserve">
    <value>Это не похоже на действительную сумму. Пожалуйста, повтори?</value>
  </data>
  <data name="AttestCosts_Error_PleaseSelectBudget" xml:space="preserve">
    <value>Пожалуйста, выберите бюджет, чтобы переориентировать плату за.</value>
  </data>
  
  
  
  
  
  <data name="AttestCosts_GridHeader_Docs" xml:space="preserve">
    <value>Документация</value>
    <comment>Button to see underlying documentation. Keep short!</comment>
  </data>
  
  
  
  
  
  
  
  
  
  
  <data name="AttestCosts_Modal_DenyTextPlaceholder" xml:space="preserve">
    <value>Мое судно на воздушной подушке полно угрей</value>
    <comment>This is a Monty Python reference. When translating, translate to "I am denying your request for funds because..."</comment>
  </data>
  
  
  <data name="AttestCosts_Modal_DescribeOptionDeny" xml:space="preserve">
    <value>Необязательная причина отказа отправителю:</value>
  </data>
  <data name="AttestCosts_Modal_DescribeOptionRebudget" xml:space="preserve">
    <value>Переместить расходы в этот бюджет:</value>
  </data>
  
  
  
  
  <data name="AttestCosts_Modal_RadioOptionRebudget" xml:space="preserve">
    <value>Эта запись должна взимать другой бюджет. Переместите его туда.</value>
  </data>
  <data name="AttestCosts_Modal_WhatIsProblem" xml:space="preserve">
    <value>Что, кажется, проблема с этой записью?</value>
  </data>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <data name="CreateInboundInvoice_Info" xml:space="preserve">
    <value>Здесь вы передаете счета, полученные в Вашей организации ("Расчеты с поставщиками"). Введите название поставщика, сумму, дату оплаты, ссылку на накладную и загрузите изображение полученной накладной. Кроме того, выберите бюджет. Бюджетный собственник должен засвидетельствовать, как обычно. (Будущие расширения этого механизма включают заказы на закупку и списки поставщиков.)</value>
  </data>
  
  
  
  
  
  
  
  <data name="CreateInboundInvoice_ValidationError_Account" xml:space="preserve">
    <value>Пожалуйста, введите банковский счет поставщика или его эквивалент.</value>
  </data>
  
  
  
  <data name="Donate_Info" xml:space="preserve">
    <value>Если вы хотите пожертвовать организации, вы можете сделать это здесь.</value>
  </data>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <data name="FileExpenseClaim_PageTitle" xml:space="preserve">
    <value>Запрос Возврата Денег За Счет</value>
  </data>
  
  <data name="FileExpenseClaim_SuccessMessagePartTwo" xml:space="preserve">
    <value>Как только это произойдет, средства перейдут к выплате на указанный Вами счет.</value>
  </data>
  <data name="FileExpenseClaim_SuccessMessagePartTwoOwnBudget" xml:space="preserve">
    <value>Поскольку это ваш собственный бюджет, аттестация уже завершена. Необходима только проверка.</value>
  </data>
  <data name="FileExpenseClaim_UploadRecieptImages" xml:space="preserve">
    <value>Загрузить Изображения Квитанций</value>
  </data>
  
  <data name="FileExpenseClaim_ValidationError_Documents" xml:space="preserve">
    <value>Пожалуйста, загрузите один или несколько изображений квитанции, поддерживающих претензию на расходы.</value>
  </data>
  <data name="FileExpenseClaim_ValidationError_MissingTag" xml:space="preserve">
    <value>Пожалуйста, выберите вариант, как указано.</value>
    <comment>Very general as tags may be many things.</comment>
  </data>
  <data name="FileExpenseClaim_ValidationError_Purpose" xml:space="preserve">
    <value>Пожалуйста, опишите, что это была за покупка.</value>
  </data>
  
  
  
  
  <data name="PayOutMoney_Info" xml:space="preserve">
    <value>Это различные формы затрат для организации, которые прошли все препятствия для выплаты. Они готовы к выплате получателю. Вот где вы проверяете их как выплаченные (вероятно, при открытии вашего банка в другом окне).</value>
  </data>
  
  
  
  
  
  
  
  
  
  <data name="PayrollTaxForms_Info" xml:space="preserve">
    <value>Просмотр шпаргалки (заполненные налоговые формы) для организации заработной платы, которые легко для вас, чтобы скопировать в ваши фактические налоговые формы, или, возможно, даже распечатать, как есть. Производительность и реальные формы зависят от страны и иногда зависят от стороннего кода и плагинов.</value>
  </data>
  
  
  
  
  
  
  
  <data name="RequestCashAdvance_BankName" xml:space="preserve">
    <value>Название банка</value>
  </data>
  <data name="RequestCashAdvance_Budget" xml:space="preserve">
    <value>Бюджет</value>
  </data>
  <data name="RequestCashAdvance_HeaderBankDetails" xml:space="preserve">
    <value>Ваши банковские реквизиты</value>
  </data>
  <data name="RequestCashAdvance_Info" xml:space="preserve">
    <value>Если вы собираетесь совершить покупку от имени организации, но вам нужны деньги заранее, а не требовать их обратно после этого, вы можете запросить денежный аванс для конкретной цели.</value>
  </data>
  
  <data name="RequestCashAdvance_Purpose" xml:space="preserve">
    <value>Цель</value>
  </data>
  
  <data name="RequestCashAdvance_SuccessMessagePartTwo" xml:space="preserve">
    <value>Это должно быть подтверждено владельцем бюджета, а затем перейти к выплате.</value>
  </data>
  <data name="RequestCashAdvance_SuccessMessagePartTwoOwnBudget" xml:space="preserve">
    <value>Поскольку это ваш собственный бюджет, это было автоматически засвидетельствовано и приступило к выплате.</value>
    <comment>This is displayed if either the person creating the cash advance OR the person receiving it is the budget owner.</comment>
  </data>
  <data name="RequestCashAdvance_ValidationError_Amount" xml:space="preserve">
    <value>Пожалуйста, введите сумму денег (в {0}).</value>
    <comment>{0} is the currency.</comment>
  </data>
  <data name="RequestCashAdvance_ValidationError_BankAccount" xml:space="preserve">
    <value>Пожалуйста, введите Ваш номер банковского счета.</value>
  </data>
  
  <data name="RequestCashAdvance_ValidationError_BankName" xml:space="preserve">
    <value>Пожалуйста, введите название Вашего банка.</value>
  </data>
  
  
  
  <data name="ValidateReceipts_Info" xml:space="preserve">
    <value>Здесь вы проверяете и подтверждаете действительность квитанций, которые сопровождают претензии по расходам. Убедитесь, что сумма верна и что квитанция, как представляется, для того, что он утверждается для.</value>
  </data>
  
  
  
  
  
  
  <data name="CreateInboundInvoice_ValidationError_Documents" xml:space="preserve">
    <value>Пожалуйста, загрузите один или несколько документов оригинального счета-фактуры.</value>
  </data>
  
  <data name="CreateInboundInvoice_ValidationError_Purpose" xml:space="preserve">
    <value>Пожалуйста, опишите, что это была за покупка.</value>
  </data>
  
  
  
  
  
  
  <data name="ListInboundInvoices_Info" xml:space="preserve">
    <value>В этом списке перечислены последние 100 счетов-фактур, отсортированных по дате их оплаты с новейшим первым.</value>
  </data>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <data name="FileExpenseClaim_Expensify_InstructionsBasic" xml:space="preserve">
    <value>Если у вас есть много отчетов о расходах, вы можете собрать их с expensify и отправка отчета здесь банк автоматически в формате CSV (который можно получить с в банк автоматически под отчеты, экспорт в CSV). Swarmops будет использовать Expensify для извлечения всех отдельных поступлений и регистрировать их как отдельные претензии расходов для надлежащего учета.</value>
  </data>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
</root>