<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Asset_BankAccount" xml:space="preserve">
    <value>Bank Account</value>
  </data>
  <data name="Asset_BitcoinCold" xml:space="preserve">
    <value>Bitcoin Cold Storage</value>
  </data>
  <data name="Asset_BitcoinHot" xml:space="preserve">
    <value>Bitcoin Hot Wallet</value>
  </data>
  <data name="Asset_CashAdvances" xml:space="preserve">
    <value>Cash Advances</value>
  </data>
  <data name="Asset_Hardware" xml:space="preserve">
    <value>Hardware, Machinery, etc.</value>
  </data>
  <data name="Asset_InboundVat" xml:space="preserve">
    <value>Inbound VAT</value>
    <comment>Value Added Tax</comment>
  </data>
  <data name="Asset_OutboundInvoices" xml:space="preserve">
    <value>Outbound Invoices</value>
  </data>
  <data name="Asset_Paypal" xml:space="preserve">
    <value>Paypal Account</value>
  </data>
  <data name="Cost_AccountingErrors" xml:space="preserve">
    <value>Accounting Errors</value>
    <comment>Used to compensate for all kinds of random mistakes</comment>
  </data>
  <data name="Cost_Airfare" xml:space="preserve">
    <value>Airfare, Airports, and Transit</value>
    <comment>"Transit" refers to transit to/from airport.</comment>
  </data>
  <data name="Cost_AirfareBusiness" xml:space="preserve">
    <value>Business or First Class</value>
  </data>
  <data name="Cost_AirfareCoach" xml:space="preserve">
    <value>Coach</value>
  </data>
  <data name="Cost_AllocatedFunds" xml:space="preserve">
    <value>Allocated Funds</value>
  </data>
  <data name="Cost_AnnualResult" xml:space="preserve">
    <value>Annual Profit/Loss</value>
  </data>
  <data name="Cost_AssetDepreciation" xml:space="preserve">
    <value>Asset Depreciation</value>
  </data>
  <data name="Cost_BankFees" xml:space="preserve">
    <value>Bank Fees</value>
  </data>
  <data name="Cost_BitcoinFees" xml:space="preserve">
    <value>Bitcoin Miner Fees</value>
  </data>
  <data name="Cost_CentRounding" xml:space="preserve">
    <value>Cent Rounding</value>
    <comment>As in rounding to nearest small unit of currency</comment>
  </data>
  <data name="Cost_Conferences" xml:space="preserve">
    <value>Conferences (our own)</value>
    <comment>This is for confs that the organization is _hosting_.</comment>
  </data>
  <data name="Cost_EventTickets" xml:space="preserve">
    <value>Event Tickets</value>
    <comment>Typically _remote_ event tickets, as this accounts sorts under travel.</comment>
  </data>
  <data name="Cost_FinancialFees" xml:space="preserve">
    <value>Financial fees</value>
    <comment>Master account to bitcoin mining and bank fees</comment>
  </data>
  <data name="Cost_ForexLosses" xml:space="preserve">
    <value>Forex Capital Losses</value>
    <comment>"Forex" here is short for "Foreign Currency Exchange Rate". May include bitcoin.</comment>
  </data>
  <data name="Cost_Hospitality" xml:space="preserve">
    <value>Hospitality</value>
  </data>
  <data name="Cost_IctInfrastructure" xml:space="preserve">
    <value>ICT and Infrastructure</value>
  </data>
  <data name="Cost_InterestLosses" xml:space="preserve">
    <value>Interest Losses</value>
  </data>
  <data name="Cost_LegalFees" xml:space="preserve">
    <value>Legal fees</value>
  </data>
  <data name="Cost_LodgingFiveStar" xml:space="preserve">
    <value>5 Star</value>
    <comment>Five-star rating</comment>
  </data>
  <data name="Cost_LodgingFourStar" xml:space="preserve">
    <value>4 Star</value>
    <comment>Four-star rating</comment>
  </data>
  <data name="Cost_LodgingHostel" xml:space="preserve">
    <value>Hostel or budget equivalent</value>
  </data>
  <data name="Cost_LodgingShared" xml:space="preserve">
    <value>Shared lodging (AirBnB etc)</value>
  </data>
  <data name="Cost_LodgingThreeStar" xml:space="preserve">
    <value>3 Star</value>
    <comment>Three-star rating</comment>
  </data>
  <data name="Cost_MarketingCampaigns" xml:space="preserve">
    <value>Marketing and Campaigns</value>
  </data>
  <data name="Cost_OfficeEquipment" xml:space="preserve">
    <value>Office Equipment</value>
  </data>
  <data name="Cost_Offices" xml:space="preserve">
    <value>Offices</value>
  </data>
  <data name="Cost_OfficeSpace" xml:space="preserve">
    <value>Office Space, Maintenance</value>
  </data>
  <data name="Cost_OfficeSupplies" xml:space="preserve">
    <value>Office Supplies (consumables)</value>
  </data>
  <data name="Cost_PublicTransit" xml:space="preserve">
    <value>Public Transit</value>
    <comment>The local kind within a city or limited area.</comment>
  </data>
  <data name="Cost_ResearchDevelopment" xml:space="preserve">
    <value>Research and Development</value>
  </data>
  <data name="Cost_Staff" xml:space="preserve">
    <value>Staff</value>
  </data>
  <data name="Cost_StaffBenefits" xml:space="preserve">
    <value>Staff Benefits</value>
    <comment>Non-compensation benefits (car, phone, etc). Usually taxable.</comment>
  </data>
  <data name="Cost_StaffExpenses" xml:space="preserve">
    <value>Staff Expenses</value>
  </data>
  <data name="Cost_StaffPerDiem" xml:space="preserve">
    <value>Staff Per-Diem</value>
    <comment>As in "extra travel compensation"</comment>
  </data>
  <data name="Cost_StaffSalaries" xml:space="preserve">
    <value>Staff Salaries</value>
  </data>
  <data name="Cost_Taxes" xml:space="preserve">
    <value>Taxes</value>
  </data>
  <data name="Cost_TaxiTransport" xml:space="preserve">
    <value>Taxi, Limo, etc</value>
  </data>
  <data name="Cost_TrainsFerries" xml:space="preserve">
    <value>Trains and Ferries</value>
  </data>
  <data name="Cost_Transportation" xml:space="preserve">
    <value>Transportation</value>
  </data>
  <data name="Cost_Travel" xml:space="preserve">
    <value>Travel</value>
    <comment>Root account for travel related accounts</comment>
  </data>
  <data name="Cost_TravelLodging" xml:space="preserve">
    <value>Lodging</value>
  </data>
  <data name="Cost_TravelPerDiem" xml:space="preserve">
    <value>Per Diems</value>
    <comment>This is compensation to people traveling for added everyday costs. Usually follows an official guide.</comment>
  </data>
  <data name="Cost_Unforeseen" xml:space="preserve">
    <value>Unforeseen</value>
  </data>
  <data name="Debt_Equity" xml:space="preserve">
    <value>Equity</value>
  </data>
  <data name="Debt_EquityRestricted" xml:space="preserve">
    <value>Restricted Equity</value>
    <comment>As in "equity sold to shareholders"</comment>
  </data>
  <data name="Debt_EquityUnrestricted" xml:space="preserve">
    <value>Unrestricted Equity</value>
  </data>
  <data name="Debt_ExpenseClaims" xml:space="preserve">
    <value>Expense Claims</value>
  </data>
  <data name="Debt_General" xml:space="preserve">
    <value>General Debt</value>
  </data>
  <data name="Debt_InboundInvoices" xml:space="preserve">
    <value>Inbound Invoices</value>
  </data>
  <data name="Debt_OutboundVat" xml:space="preserve">
    <value>Outbound VAT</value>
    <comment>Value Added Tax</comment>
  </data>
  <data name="Debt_Salaries" xml:space="preserve">
    <value>Salaries Due</value>
  </data>
  <data name="Debt_Taxes" xml:space="preserve">
    <value>Taxes Due</value>
  </data>
  <data name="Income_Donations" xml:space="preserve">
    <value>Donations</value>
  </data>
  <data name="Income_ForexGains" xml:space="preserve">
    <value>Forex Capital Gains</value>
    <comment>"Forex" here is short for "Foreign Currency Exchange Rate". May include bitcoin.</comment>
  </data>
  <data name="Income_InterestGains" xml:space="preserve">
    <value>Interest Gains</value>
  </data>
  <data name="Income_MembershipDues" xml:space="preserve">
    <value>Membership Dues</value>
  </data>
  <data name="Income_Sales" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="Income_SubsidiesGrants" xml:space="preserve">
    <value>Subsidies and Grants</value>
  </data>
  <data name="Asset_ShortTerm" xml:space="preserve">
    <value>Short Term Assets</value>
  </data>
  <data name="Asset_TransfersInProgress" xml:space="preserve">
    <value>Internal Transfers in Progress</value>
  </data>
  <data name="Asset_InboundVatReported" xml:space="preserve">
    <value>Surplus inbound VAT in report</value>
    <comment>This is nonzero if the inbound amount (to get back) is higher than the outbound</comment>
  </data>
  <data name="Asset_InboundVatUnreported" xml:space="preserve">
    <value>Inbound VAT to report</value>
    <comment>Accumulates to each VAT report, set by VAT report frequency</comment>
  </data>
  <data name="Debt_OutboundVatReported" xml:space="preserve">
    <value>Reported VAT to pay</value>
    <comment>This is nonzero if there's VAT to pay to tax authorities</comment>
  </data>
  <data name="Debt_OutboundVatUnreported" xml:space="preserve">
    <value>Outbound VAT to report</value>
    <comment>Accumulates to each VAT report, as set by VAT report frequency</comment>
  </data>
  <data name="Asset_TaxAdvances" xml:space="preserve">
    <value>Taxes Prepayment</value>
    <comment>Most tax authorities require you to pay some part in advance</comment>
  </data>
  <data name="Asset_BankAccounts" xml:space="preserve">
    <value>Bank Accounts</value>
    <comment>Note the plural form</comment>
  </data>
  <data name="Cost_BusinessServices" xml:space="preserve">
    <value>Business Services</value>
    <comment>Like paperwork services, fruit delivery, travel booking, anything that isn't strictly office maintenance</comment>
  </data>
  <data name="Cost_MaintenanceDonations" xml:space="preserve">
    <value>Maintenance Donations</value>
    <comment>This is donations toward maintenance of the Swarmops / Backoffice.Cash codebase and data.</comment>
  </data>
  <data name="Asset_PrivateWithdrawals" xml:space="preserve">
    <value>Private Withdrawals</value>
  </data>
  <data name="Debt_PrivateDeposits" xml:space="preserve">
    <value>Private Deposits</value>
  </data>
  <data name="Asset_PrivateWithdrawals_HealthInsurance" xml:space="preserve">
    <value>Health Insurance</value>
    <comment>This is for one personal health insurance, for the sole business owner of the small business, when it is tax deductible (like in Germany).</comment>
  </data>
</root>