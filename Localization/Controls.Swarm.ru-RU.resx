<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Positions_AssignAnotherPerson" xml:space="preserve">
    <value>Назначить другого человека...</value>
    <comment>To an existing position that accepts multiple people (like "assistants")</comment>
  </data>
  <data name="Positions_AssignElsewhere" xml:space="preserve">
    <value>(назначить под Моей Организацией)</value>
  </data>
  <data name="Positions_AssignFifthPerson" xml:space="preserve">
    <value>Назначить пятого человека...</value>
  </data>
  <data name="Positions_AssignFirstPerson" xml:space="preserve">
    <value>Назначить...</value>
  </data>
  <data name="Positions_AssignFourthPerson" xml:space="preserve">
    <value>Назначить четвёртого человека...</value>
  </data>
  <data name="Positions_AssignmentDuration" xml:space="preserve">
    <value>Длительность назначения (может быть продлена)</value>
  </data>
  <data name="Positions_AssignmentExpires" xml:space="preserve">
    <value>Истекает</value>
    <comment>The date a position assignment autoterminates</comment>
  </data>
  <data name="Positions_AssignPersonToPosition" xml:space="preserve">
    <value>Назначить этого человека на позицию</value>
  </data>
  <data name="Positions_AssignSecondPerson" xml:space="preserve">
    <value>Назначить второго человека...</value>
  </data>
  <data name="Positions_AssignSixthPerson" xml:space="preserve">
    <value>Назначить шестого человека...</value>
    <comment>ok, this is not strictly necessary, just a bell &amp; whistle</comment>
  </data>
  <data name="Positions_AssignThirdPerson" xml:space="preserve">
    <value>Назначить третьего человека...</value>
  </data>
  <data name="Positions_ButtonAssign" xml:space="preserve">
    <value>Назначить</value>
    <comment>Kind of "hire" but also for volunteers</comment>
  </data>
  <data name="Positions_ConfirmSelfTerminate" xml:space="preserve">
    <value>&lt;strong&gt;ПОКИНУТЬ СВОЙ ПОСТ?&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;Это &lt;strong&gt;Ваше&lt;/strong&gt; назначение. Прекращение своего собственного назначения - это всё равно, что сказать: "Я УХОЖУ". Меры будут приняты незамедлительно. Вы действительно хотите это сделать?&lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="Positions_ConfirmTerminate" xml:space="preserve">
    <value>&lt;strong&gt;ОТМЕНИТЬ НАЗНАЧЕНИЕ?&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;Вы хотите убрать &lt;span id="spanTerminatePersonName"&gt;[PERSONNAME]&lt;/span&gt; с назначения на &lt;span id="spanTerminatePositionName"&gt;[POSITIONNAME]&lt;/span&gt;? Это действие эквивалентно увольнению кого-либо и должно быть проведено в соответствии с внутренними правилами и местными законами.&lt;br/&gt;&lt;br/&gt;</value>
    <comment>{0} is the person name, {1} is the position title.</comment>
  </data>
  <data name="Positions_CreatePosition" xml:space="preserve">
    <value>Создать новую должность...</value>
  </data>
  <data name="Positions_ModalHeader" xml:space="preserve">
    <value>Назначить человека, как &lt;span id='{0}_modalPositionName'&gt;...&lt;/span&gt; &lt;span id='{0}_modalGeographyName'&gt; &lt;/span&gt;</value>
    <comment>Header for new assignment dialog</comment>
  </data>
  <data name="Positions_NoMorePeopleOnPosition" xml:space="preserve">
    <value>Ошибка: Нельзя назначить больше людей на эту позицию.</value>
  </data>
  <data name="Positions_PleaseSelectPerson" xml:space="preserve">
    <value>Пожалуйста, выберите сотрудника для назначения.</value>
  </data>
  <data name="Positions_Subleaders" xml:space="preserve">
    <value>Главы подразделений</value>
  </data>
  <data name="Positions_TerminateNo" xml:space="preserve">
    <value>Не Увольнять</value>
  </data>
  <data name="Positions_TerminateSelfNo" xml:space="preserve">
    <value>Ой! Нет, вернуться!</value>
  </data>
  <data name="Positions_TerminateSelfYes" xml:space="preserve">
    <value>Да, Я Увольняюсь</value>
  </data>
  <data name="Positions_TerminateYes" xml:space="preserve">
    <value>Уволиться</value>
  </data>
  <data name="Positions_Vacant" xml:space="preserve">
    <value>(вакантная должность)</value>
    <comment>For unassigned positions</comment>
  </data>
</root>