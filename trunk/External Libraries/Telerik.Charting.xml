<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Charting</name>
    </assembly>
    <members>
        <member name="T:Telerik.Charting.ActiveRegion">
            <summary>Represents the active region of the chart element/item.</summary>
        </member>
        <member name="T:Telerik.Charting.StateManagedObject">
            <summary>
            Base class implements IStateManager
            </summary>
        </member>
        <member name="T:Telerik.Charting.IChartingStateManagedItem">
            <summary>
            Common interface for a State managed collection items
            </summary>
        </member>
        <member name="T:Telerik.Charting.IChartingStateManager">
            <summary>
            The common interface for all chart elements support View State tracking
            </summary>
        </member>
        <member name="M:Telerik.Charting.IChartingStateManager.LoadViewState(System.Object)">
            <summary>
            Loads data from a View State
            </summary>
            <param name="state">View Sate to load data from</param>
        </member>
        <member name="M:Telerik.Charting.IChartingStateManager.SaveViewState">
            <summary>
            Saves object data to a View State
            </summary>
            <returns>Saved View State</returns>
        </member>
        <member name="M:Telerik.Charting.IChartingStateManager.TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Charting.IChartingStateManagedItem.SetDirty">
            <summary>
            Sets item dirty state
            </summary>
        </member>
        <member name="M:Telerik.Charting.StateManagedObject.Telerik#Charting#IChartingStateManager#LoadViewState(System.Object)">
            <summary>
            Loads data from a view state
            </summary>
            <param name="state">View state to load data from</param>
        </member>
        <member name="M:Telerik.Charting.StateManagedObject.Telerik#Charting#IChartingStateManager#SaveViewState">
            <summary>
            Saves object data to a view state
            </summary>
            <returns>Saved view state object</returns>
        </member>
        <member name="M:Telerik.Charting.StateManagedObject.Telerik#Charting#IChartingStateManager#TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Charting.StateManagedObject.CloneState">
            <summary>
            Makes a view state clone
            </summary>
            <returns>StateBag</returns>
        </member>
        <member name="M:Telerik.Charting.StateManagedObject.SaveViewState">
            <summary>
            Saves object data to a view state
            </summary>
            <returns>Saved view state object</returns>
        </member>
        <member name="M:Telerik.Charting.StateManagedObject.TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Charting.StateManagedObject.LoadViewState(System.Object)">
            <summary>
            Loads data from a view state
            </summary>
            <param name="state">View state to load data from</param>
        </member>
        <member name="M:Telerik.Charting.StateManagedObject.SetDirty">
            <summary>
            Sets the item dirty state
            </summary>
        </member>
        <member name="M:Telerik.Charting.StateManagedObject.ToString">
            <exclude/>
            <excludetoc/>
            <summary>
            ToString() override. Used in the properties grid to avoid object type showing.
            </summary>
            <returns>Empty string</returns>
        </member>
        <member name="P:Telerik.Charting.StateManagedObject.ViewStateIgnoresCase">
            <summary>
            Gets if view sate should ignore case
            </summary>
        </member>
        <member name="P:Telerik.Charting.StateManagedObject.ViewState">
            <summary>
            Sate bag to store view state content
            </summary>
        </member>
        <member name="P:Telerik.Charting.StateManagedObject.Telerik#Charting#IChartingStateManager#IsTrackingViewState">
            <summary>
            Is view state tracking changes
            </summary>
        </member>
        <member name="F:Telerik.Charting.ActiveRegion.activeRegionParent">
            <summary>
            Parent chart element
            </summary>
        </member>
        <member name="F:Telerik.Charting.ActiveRegion.activeRegionList">
            <summary>
            List contains all regions for element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ActiveRegion.#ctor">
            <summary>Creates a new instance of the class.</summary>
        </member>
        <member name="M:Telerik.Charting.ActiveRegion.#ctor(System.Object)">
            <summary>Creates a new instance of the class.</summary>
        </member>
        <member name="M:Telerik.Charting.ActiveRegion.CheckPoint(System.Drawing.PointF)">
            <summary>
            Checks whether point lies inside region
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ActiveRegion.GoToUrl">
            <summary>
            Opens a web browser to the specified URL
            </summary>
        </member>
        <member name="M:Telerik.Charting.ActiveRegion.IsEmpty">
            <summary>
            Returns true if ActiveRegion contains no data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ActiveRegion.GetActiveRegions(System.Drawing.PointF,Telerik.Charting.IContainer)">
            <summary>
            Determine on which elements(if its visually intersect) of chart click occur
            </summary>
            <param name="point">Click coordinates</param>
            <param name="container">Container object</param>
            <returns>Active region object collection</returns>
        </member>
        <member name="P:Telerik.Charting.ActiveRegion.Parent">
            <summary>Reference to the parent.</summary>
        </member>
        <member name="P:Telerik.Charting.ActiveRegion.Region">
            <summary>
             Define a graphic path
            </summary>
        </member>
        <member name="P:Telerik.Charting.ActiveRegion.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Telerik.Charting.ActiveRegion.Tooltip">
            <summary>
            Tooltip
            </summary>
        </member>
        <member name="P:Telerik.Charting.ActiveRegion.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="E:Telerik.Charting.ActiveRegion.Click">
            <summary>
            Fires when the chart element to which the active region belongs is
            clicked.
            </summary>
        </member>
        <member name="T:Telerik.Charting.IActiveRegion">
            <exclude/>
            <excludetoc/>
            <summary>Base Interface for classes which support click feature</summary>
        </member>
        <member name="P:Telerik.Charting.IActiveRegion.ActiveRegion">
            <summary>
            Active region object
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartGraphics">
            <summary>
            Chart graphics class. Wrapper over the System.Drawing.Graphics.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartGraphics.chartGraphicsGraphics">
            <summary>
            Base System.Drawing.Graphics object
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartGraphics.translateTransformDefaultX">
            <summary>
            Fixed displacement for X coordinate
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartGraphics.translateTransformDefaultY">
            <summary>
            Fixed displacement for Y coordinate
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartGraphics.translateTransformDefaultOrder">
            <summary>
            Default translate transform order
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.TranslateTransformDefault">
            <summary>
            Apply TranslateTransform with fixed displacements
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DropTranslateTransformDefault">
            <summary>
            Apply TranslateTransform with fixed negative displacements
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.#ctor(System.Drawing.Graphics)">
            <summary>
            Create instance of class
            </summary>
            <param name="graphics">System.Drawing.Graphics object</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.TranslateTransformDefault(System.Single,System.Single)">
            <summary>
            Apply TranslateTransform with fixed displacements and sets its
            </summary>
            <param name="dx">Fixed displacement for X coordinate</param>
            <param name="dy">Fixed displacement for Y coordinate</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.TranslateTransformDefault(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Apply TranslateTransform with fixed displacements and sets its
            </summary>
            <param name="dx">Fixed displacement for X coordinate</param>
            <param name="dy">Fixed displacement for Y coordinate</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.TranslateTransformDefaultAdd(System.Single,System.Single)">
            <summary>
            Changing fixed displacements
            </summary>
            <param name="dx">Fixed displacement for X coordinate</param>
            <param name="dy">Fixed displacement for Y coordinate</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.AddMetafileComment(System.Byte[])">
            <summary>
            Adds a comment to the current System.Drawing.Imaging.Metafile.
            </summary>
            <param name="data">Array of bytes that contains the comment.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.BeginContainer">
            <summary>
            Saves a graphics container with the current state of this System.Drawing.Graphics
                and opens and uses a new graphics container.
            </summary>
            <return>
            This method returns a System.Drawing.Drawing2D.GraphicsContainer that represents
                the state of this System.Drawing.Graphics at the time of the method call.
            </return>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
            <summary>
            Saves a graphics container with the current state of this System.Drawing.Graphics
                and opens and uses a new graphics container with the specified scale transformation.
            </summary>
            <param name="dstrect">System.Drawing.Rectangle structure that, together with the srcrect parameter,
                specifies a scale transformation for the container.</param>
            <param name="srcrect">System.Drawing.Rectangle structure that, together with the dstrect parameter,
                specifies a scale transformation for the container.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure for the container.</param>
            <returns>This method returns a System.Drawing.Drawing2D.GraphicsContainer that represents
                the state of this System.Drawing.Graphics at the time of the method call.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
            <summary>
            Saves a graphics container with the current state of this System.Drawing.Graphics
                and opens and uses a new graphics container with the specified scale transformation.
            </summary>
            <param name="dstrect">System.Drawing.RectangleF structure that, together with the srcrect parameter,
                specifies a scale transformation for the new graphics container.</param>
            <param name="srcrect">System.Drawing.RectangleF structure that, together with the dstrect parameter,
                specifies a scale transformation for the new graphics container.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure for the container.</param>
            <returns>This method returns a System.Drawing.Drawing2D.GraphicsContainer that represents
                the state of this System.Drawing.Graphics at the time of the method call.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.Clear(System.Drawing.Color)">
            <summary>
            Clears the entire drawing surface and fills it with the specified background
                color.
            </summary>
            <param name="color">System.Drawing.Color structure that represents the background color of the
                drawing surface.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Performs a bit-block transfer of color data, corresponding to a rectangle
                of pixels, from the screen to the drawing surface of the System.Drawing.Graphics.
            </summary>
            <param name="upperLeftSource">The point at the upper-left corner of the source rectangle.</param>
            <param name="upperLeftDestination">The point at the upper-left corner of the destination rectangle.</param>
            <param name="blockRegionSize">The size of the area to be transferred.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
             <summary>
             Performs a bit-block transfer of color data, corresponding to a rectangle
                 of pixels, from the screen to the drawing surface of the System.Drawing.Graphics.
             </summary>
             <param name="upperLeftSource">The point at the upper-left corner of the source rectangle.</param>
             <param name="upperLeftDestination">The point at the upper-left corner of the destination rectangle.</param>
             <param name="blockRegionSize">The size of the area to be transferred.</param>
             <param name="copyPixelOperation">One of the System.Drawing.CopyPixelOperation values.</param>
             <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">CopyPixelOperation is not a member of System.Drawing.CopyPixelOperation.</exception>
             <exception cref="T:System.ComponentModel.Win32Exception">The operation failed.</exception>
            
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
            <summary>
            Performs a bit-block transfer of the color data, corresponding to a rectangle
                of pixels, from the screen to the drawing surface of the System.Drawing.Graphics.
            </summary>
            <param name="sourceX">The x-coordinate of the point at the upper-left corner of the source rectangle.</param>
            <param name="sourceY">The y-coordinate of the point at the upper-left corner of the source rectangle.</param>
            <param name="destinationX">The x-coordinate of the point at the upper-left corner of the destination
                rectangle.</param>
            <param name="destinationY">The y-coordinate of the point at the upper-left corner of the destination
                rectangle.</param>
            <param name="blockRegionSize">The size of the area to be transferred.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
            <summary>
            Performs a bit-block transfer of the color data, corresponding to a rectangle
                of pixels, from the screen to the drawing surface of the System.Drawing.Graphics.
            </summary>
            <param name="sourceX">The x-coordinate of the point at the upper-left corner of the source rectangle.</param>
            <param name="sourceY">The y-coordinate of the point at the upper-left corner of the source rectangle</param>
            <param name="destinationX">The x-coordinate of the point at the upper-left corner of the destination
                rectangle.</param>
            <param name="destinationY">The y-coordinate of the point at the upper-left corner of the destination
                rectangle.</param>
            <param name="blockRegionSize">The size of the area to be transferred.</param>
            <param name="copyPixelOperation">One of the System.Drawing.CopyPixelOperation values.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">copyPixelOperation is not a member of System.Drawing.CopyPixelOperation.</exception>
            <exception cref="T:System.ComponentModel.Win32Exception">The operation failed</exception>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.Dispose">
            <summary>
            Releases all resources used by this System.Drawing.Graphics.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a System.Drawing.Rectangle
                structure.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the arc.</param>
            <param name="rect">System.Drawing.RectangleF structure that defines the boundaries of the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point
                of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending
                point of the arc.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a System.Drawing.RectangleF
                structure.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the arc.</param>
            <param name="rect">System.Drawing.RectangleF structure that defines the boundaries of the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point
                of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending
                point of the arc.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of
                coordinates, a width, and a height.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the arc.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the
                ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the
                ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point
                of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending
                point of the arc.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of
                coordinates, a width, and a height.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the arc.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the
                ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the
                ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point
                of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending
                point of the arc.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Draws a Bézier spline defined by four System.Drawing.Point structures.
            </summary>
            <param name="pen">System.Drawing.Pen structure that determines the color, width, and style
                of the curve.</param>
            <param name="pt1">System.Drawing.Point structure that represents the starting point of the
                curve.</param>
            <param name="pt2">System.Drawing.Point structure that represents the first control point for
                the curve.</param>
            <param name="pt3">System.Drawing.Point structure that represents the second control point for
                the curve.</param>
            <param name="pt4"> System.Drawing.Point structure that represents the ending point of the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a Bezier spline defined by four System.Drawing.PointF structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the curve.</param>
            <param name="pt1">System.Drawing.PointF structure that represents the starting point of the
                curve.</param>
            <param name="pt2">System.Drawing.PointF structure that represents the first control point for
                the curve.</param>
            <param name="pt3">System.Drawing.PointF structure that represents the second control point
                for the curve.</param>
            <param name="pt4">System.Drawing.PointF structure that represents the ending point of the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a Bézier spline defined by four ordered pairs of coordinates that represent
                points.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the curve.</param>
            <param name="x1">The x-coordinate of the starting point of the curve.</param>
            <param name="y1">The y-coordinate of the starting point of the curve.</param>
            <param name="x2">The x-coordinate of the first control point of the curve.</param>
            <param name="y2">The y-coordinate of the first control point of the curve.</param>
            <param name="x3">The x-coordinate of the second control point of the curve.</param>
            <param name="y3">The y-coordinate of the second control point of the curve.</param>
            <param name="x4">The x-coordinate of the ending point of the curve.</param>
            <param name="y4">The y-coordinate of the ending point of the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
            Draws a series of Bézier splines from an array of System.Drawing.Point structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that represent the points that determine
                the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of Bézier splines from an array of System.Drawing.PointF structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the points that
                determine the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
            Draws a closed cardinal spline defined by an array of System.Drawing.Point
                structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a closed cardinal spline defined by an array of System.Drawing.PointF
                structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
            <summary>
            Draws a closed cardinal spline defined by an array of System.Drawing.Point
                structures using a specified tension.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled. This parameter is required but ignored.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
            <summary>
            Draws a closed cardinal spline defined by an array of System.Drawing.PointF
                structures using a specified tension.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled. This parameter is required but is ignored.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.Point
                structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.PointF
                structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.Point
                structures using a specified tension.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.PointF
                structures using a specified tension.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the points that
                define the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.PointF
                structures. The drawing begins offset from the beginning of the array.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the
                starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.Point
                structures using a specified tension.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the
                starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.PointF
                structures using a specified tension. The drawing begins offset from the
                beginning of the array.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the
                starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
            Draws an ellipse specified by a bounding System.Drawing.Rectangle structure.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the ellipse.</param>
            <param name="rect">System.Drawing.Rectangle structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding System.Drawing.RectangleF.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the ellipse.</param>
            <param name="rect">System.Drawing.RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates,
                a height, and a width.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the ellipse.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates,
                a height, and a width.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the ellipse.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
            <summary>
            Draws the image represented by the specified System.Drawing.Icon within the
                area specified by a System.Drawing.Rectangle structure.
            </summary>
            <param name="icon">System.Drawing.Icon to draw.</param>
            <param name="targetRect">System.Drawing.Rectangle structure that specifies the location and size of
                the resulting image on the display surface. The image contained in the icon
                parameter is scaled to the dimensions of this rectangular area.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
            <summary>
            Draws the image represented by the specified System.Drawing.Icon at the specified
                coordinates.
            </summary>
            <param name="icon"> System.Drawing.Icon to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
            <summary>
            Draws the image represented by the specified System.Drawing.Icon without
                scaling the image.
            </summary>
            <param name="icon">System.Drawing.Icon to draw.</param>
            <param name="targetRect">System.Drawing.Rectangle structure that specifies the location and size of
                the resulting image. The image is not scaled to fit this rectangle, but retains
                its original size. If the image is larger than the rectangle, it is clipped
                to fit inside it.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
            <summary>
            Draws the specified System.Drawing.Image, using its original physical size,
                at the specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw</param>
            <param name="point">System.Drawing.Point structure that represents the location of the upper-left
                corner of the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
                the specified shape and size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
            <summary>
             Draws the specified System.Drawing.Image, using its original physical size,
                at the specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="point">System.Drawing.PointF structure that represents the upper-left corner of
                the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
            the specified shape and size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
                the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="rect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
                the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="rect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
            <summary>
            Draws the specified System.Drawing.Image, using its original physical size,
                at the specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Draws the specified image, using its original physical size, at the location
                specified by a coordinate pair.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
                the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <param name="width">Width of the drawn image.</param>
            <param name="height">Height of the drawn image</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
            <summary>
            Draws a portion of an image at a specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the System.Drawing.Image
                to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
                the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <param name="width">Width of the drawn image.</param>
            <param name="height">Height of the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
            <summary>
            Draws a portion of an image at a specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
                method according to application-determined criteria.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
                method according to application-determined criteria.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
                method according to application-determined criteria.</param>
            <param name="callbackData">Value specifying additional data for the System.Drawing.Graphics.DrawImageAbort
                delegate to use when checking whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
                method.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints"> Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
                method according to application-determined criteria.</param>
            <param name="callbackData">Value specifying additional data for the System.Drawing.Graphics.DrawImageAbort
                delegate to use when checking whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
                method.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect"> System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
                method according to application-determined criteria.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for image.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
                method according to application-determined criteria.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth"> Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
                method according to application-determined criteria.</param>
            <param name="callbackData">Value specifying additional data for the System.Drawing.Graphics.DrawImageAbort
                delegate to use when checking whether to stop execution of the DrawImage
                method.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
                method according to application-determined criteria.</param>
            <param name="callbackData">Value specifying additional data for the System.Drawing.Graphics.DrawImageAbort
                delegate to use when checking whether to stop execution of the DrawImage
                method.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
            <summary>
            Draws a specified image using its original physical size at a specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="point">System.Drawing.Point structure that specifies the upper-left corner of the
                drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws a specified image using its original physical size at a specified location.
            </summary>
            <param name="image"> System.Drawing.Image to draw.</param>
            <param name="rect">System.Drawing.Rectangle that specifies the upper-left corner of the drawn
                image. The X and Y properties of the rectangle specify the upper-left corner.
                The Width and Height properties are ignored.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Draws the specified image using its original physical size at the location
                specified by a coordinate pair.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a specified image using its original physical size at a specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <param name="width">Not used.</param>
            <param name="height">Not used.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws the specified image without scaling and clips it, if necessary, to
                fit in the specified rectangle.
            </summary>
            <param name="image">The System.Drawing.Image to draw.</param>
            <param name="rect">The System.Drawing.Rectangle in which to draw the image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Draws a line connecting two System.Drawing.Point structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line.</param>
            <param name="pt1">System.Drawing.Point structure that represents the first point to connect.</param>
            <param name="pt2">System.Drawing.Point structure that represents the second point to connect.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting two System.Drawing.PointF structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line.</param>
            <param name="pt1">System.Drawing.PointF structure that represents the first point to connect.</param>
            <param name="pt2">System.Drawing.PointF structure that represents the second point to connect.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by the coordinate pairs.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line.</param>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a line connecting the two points specified by the coordinate pairs.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line.</param>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
            Draws a series of line segments that connect an array of System.Drawing.Point
                structures.
            </summary>
            <param name="pen"> System.Drawing.Pen that determines the color, width, and style of the line
                segments.</param>
            <param name="points">Array of System.Drawing.Point structures that represent the points to connect.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array of System.Drawing.PointF
                structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line
                segments.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the points to connect.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a System.Drawing.Drawing2D.GraphicsPath.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the path.</param>
            <param name="path">System.Drawing.Drawing2D.GraphicsPath to draw.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a System.Drawing.Rectangle
                structure and two radial lines.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the pie
                shape.</param>
            <param name="rect">System.Drawing.Rectangle structure that represents the bounding rectangle
                that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of
                the pie shape.</param>
            <param name="sweepAngle"> Angle measured in degrees clockwise from the startAngle parameter to the
                second side of the pie shape.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a System.Drawing.RectangleF
                structure and two radial lines.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the pie
                shape.</param>
            <param name="rect">System.Drawing.RectangleF structure that represents the bounding rectangle
                that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle"> Angle measured in degrees clockwise from the x-axis to the first side of
                the pie shape.</param>
            <param name="sweepAngle"> Angle measured in degrees clockwise from the startAngle parameter to the
                second side of the pie shape.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a
                width, a height, and two radial lines.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the pie
                shape.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie shape comes.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie
                shape comes.</param>
            <param name="height"> Height of the bounding rectangle that defines the ellipse from which the
                pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of
                the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the
                second side of the pie shape.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a
                width, a height, and two radial lines.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the pie
                shape.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie shape comes.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie
                shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the
                pie shape comes.</param>
            <param name="startAngle"> Angle measured in degrees clockwise from the x-axis to the first side of
                the pie shape.</param>
            <param name="sweepAngle"> Angle measured in degrees clockwise from the startAngle parameter to the
                second side of the pie shape.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
             Draws a polygon defined by an array of System.Drawing.Point structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of System.Drawing.Point structures that represent the vertices of the
                polygon.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of System.Drawing.PointF structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the vertices of
                the polygon.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
             Draws a rectangle specified by a System.Drawing.Rectangle structure.
            </summary>
            <param name="pen"> A System.Drawing.Pen that determines the color, width, and style of the rectangle.</param>
            <param name="rect">A System.Drawing.Rectangle structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawRectangle(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle specified by a System.Drawing.RectangleF structure.
                ChartGraphics custom method
            </summary>
            <param name="pen">A System.Drawing.Pen that determines the color, width, and style of the rectangle.</param>
            <param name="rect"> A System.Drawing.RectangleF structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A System.Drawing.Pen that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">The width of the rectangle to draw.</param>
            <param name="height">The height of the rectangle to draw.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height"> Height of the rectangle to draw.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
            <summary>
            Draws a series of rectangles specified by System.Drawing.Rectangle structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the outlines
                of the rectangles.</param>
            <param name="rects">Array of System.Drawing.Rectangle structures that represent the rectangles
                to draw.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
            <summary>
            Draws a series of rectangles specified by System.Drawing.RectangleF structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the outlines
                of the rectangles.</param>
            <param name="rects">Array of System.Drawing.RectangleF structures that represent the rectangles
                to draw.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location with the specified
                System.Drawing.Brush and System.Drawing.Font objects.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="point">System.Drawing.PointF structure that specifies the upper-left corner of the
                drawn text.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified
                System.Drawing.Brush and System.Drawing.Font objects.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">System.Drawing.RectangleF structure that specifies the location of the drawn
                text.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
            <summary>
            Draws the specified text string at the specified location with the specified
                System.Drawing.Brush and System.Drawing.Font objects.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified
                System.Drawing.Brush and System.Drawing.Font objects using the formatting
                attributes of the specified System.Drawing.StringFormat.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="point">System.Drawing.PointF structure that specifies the upper-left corner of the
                drawn text.</param>
            <param name="format">System.Drawing.StringFormat that specifies formatting attributes, such as
                line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified
                System.Drawing.Brush and System.Drawing.Font objects using the formatting
                attributes of the specified System.Drawing.StringFormat.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">System.Drawing.RectangleF structure that specifies the location of the drawn
                text.</param>
            <param name="format">System.Drawing.StringFormat that specifies formatting attributes, such as
                line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified
                System.Drawing.Brush and System.Drawing.Font objects using the formatting
                attributes of the specified System.Drawing.StringFormat.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font"> System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
            <param name="format">System.Drawing.StringFormat that specifies formatting attributes, such as
                line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
            <summary>
             Closes the current graphics container and restores the state of this System.Drawing.Graphics
                to the state saved by a call to the System.Drawing.Graphics.BeginContainer()
                method.
            </summary>
            <param name="container">System.Drawing.Drawing2D.GraphicsContainer that represents the container
                this method restores.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint"> System.Drawing.Point structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
               method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
             Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint"> System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="callback"> System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
               method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records of the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile"> System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
             Sends the records of the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
               method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.Point structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints"> Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData"> Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" -->
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records of the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect"> System.Drawing.Rectangle structure that specifies the location and size of
                the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
             Sends the records of the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point using specified
                image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.Point structure that specifies the location of the upper-left corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero for this parameter.</param>
            <param name="imageAttr"> System.Drawing.Imaging.ImageAttributes that specifies image attribute information for the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.Point structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified parallelogram using
                specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point using specified
                image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified parallelogram using
                specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData"> Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structures that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records of the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified rectangle using specified
                image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData"> Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records of a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile"> System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" -->
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records of a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.Point structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
             Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback"> System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" -->
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records of a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point using
                specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.Point structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram
                using specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
               for the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point using
                specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram
                using specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect"> System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records of a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified rectangle
                using specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records of a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified rectangle
                using specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.ChartGraphics.ExcludeClip(System.Drawing.Rectangle)" -->
        <member name="M:Telerik.Charting.ChartGraphics.ExcludeClip(System.Drawing.Region)">
            <summary>
            Updates the clip region of this System.Drawing.Graphics to exclude the area
                specified by a System.Drawing.Region.
            </summary>
            <param name="region">System.Drawing.Region that specifies the region to exclude from the clip region.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.Point structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.PointF structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.Point structures using the specified fill mode.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.PointF structures using the specified fill mode.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.Point structures using the specified fill mode and tension
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.PointF structures using the specified fill mode and tension.
            </summary>
            <param name="brush">A System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle specified
                by a System.Drawing.Rectangle structure.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rect">System.Drawing.Rectangle structure that represents the bounding rectangle
                that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle specified
                by a System.Drawing.RectangleF structure.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rect">System.Drawing.RectangleF structure that represents the bounding rectangle
                that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle specified
                by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Fills the interior of an ellipse defined by a bounding rectangle specified
                by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the interior of a System.Drawing.Drawing2D.GraphicsPath.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="path">System.Drawing.Drawing2D.GraphicsPath that represents the path to fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse specified by a
                System.Drawing.RectangleF structure and two radial lines.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rect">System.Drawing.Rectangle structure that represents the bounding rectangle
                that defines the ellipse from which the pie section comes.</param>
            <param name="startAngle"> Angle in degrees measured clockwise from the x-axis to the first side of
                the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the
                second side of the pie section.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse specified by a
                pair of coordinates, a width, a height, and two radial lines.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie section comes.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie
                section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the
                pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of
                the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the
                second side of the pie section.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills the interior of a pie section defined by an ellipse specified by a
                pair of coordinates, a width, a height, and two radial lines.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie section comes.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie
                section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the
                pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of
                the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the
                second side of the pie section.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by
                System.Drawing.Point structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.Point structures that represent the vertices of the
                polygon to fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by
                System.Drawing.PointF structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the vertices of
                the polygon to fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by
                System.Drawing.Point structures using the specified fill mode.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.Point structures that represent the vertices of the
                polygon to fill.</param>
            <param name="fillMode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                the style of the fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by
                System.Drawing.PointF structures using the specified fill mode.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the vertices of
                the polygon to fill.</param>
            <param name="fillMode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                the style of the fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
            Fills the interior of a rectangle specified by a System.Drawing.Rectangle
                structure.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rect">System.Drawing.Rectangle structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a System.Drawing.RectangleF
                structure.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rect">System.Drawing.RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width,
                and a height.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width,
                and a height.
            </summary>
            <param name="brush"> System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
            <summary>
            Fills the interiors of a series of rectangles specified by System.Drawing.Rectangle
                structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rects">Array of System.Drawing.Rectangle structures that represent the rectangles
                to fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
            <summary>
            Fills the interiors of a series of rectangles specified by System.Drawing.RectangleF
                structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rects">Array of System.Drawing.RectangleF structures that represent the rectangles
                to fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
            <summary>
            Fills the interior of a System.Drawing.Region.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="region">System.Drawing.Region that represents the area to fill.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.Flush">
            <summary>
            Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
            <summary>
            Forces execution of all pending graphics operations with the method waiting
                or not waiting, as specified, to return before the operations finish.
            </summary>
            <param name="intention">Member of the System.Drawing.Drawing2D.FlushIntention enumeration that specifies
                whether the method returns immediately or waits for any existing operations
                to finish.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.GetContextInfo">
            <summary>
            XML comment contains invalid XML: End tag 'doc' does not match the start tag 'member'.
            </summary>
            <returns>Object</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.GetHdc">
            <summary>
            Gets the handle to the device context associated with this System.Drawing.Graphics.
            </summary>
            <returns>Handle to the device context associated with this System.Drawing.Graphics.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.GetNearestColor(System.Drawing.Color)">
            <summary>
            Gets the nearest color to the specified System.Drawing.Color structure.
            </summary>
            <param name="color">System.Drawing.Color structure for which to find a match.</param>
            <returns>A System.Drawing.Color structure that represents the nearest color to the one specified with the color parameter.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.IntersectClip(System.Drawing.Rectangle)">
            <summary>
            Updates the clip region of this System.Drawing.Graphics to the intersection
                of the current clip region and the specified System.Drawing.Rectangle structure.
            </summary>
            <param name="rect">System.Drawing.Rectangle structure to intersect with the current clip region.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.IntersectClip(System.Drawing.RectangleF)">
            <summary>
            Updates the clip region of this System.Drawing.Graphics to the intersection
                of the current clip region and the specified System.Drawing.Rectangle structure.
            </summary>
            <param name="rect">System.Drawing.Rectangle structure to intersect with the current clip region.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.IntersectClip(System.Drawing.Region)">
            <summary>
            Updates the clip region of this System.Drawing.Graphics to the intersection
                of the current clip region and the specified System.Drawing.Region.
            </summary>
            <param name="region">System.Drawing.Region to intersect with the current region.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.IsVisible(System.Drawing.Point)">
            <summary>
            Indicates whether the specified System.Drawing.Point structure is contained
                within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="point">System.Drawing.Point structure to test for visibility.</param>
            <returns>true if the point specified by the point parameter is contained within the
                visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.IsVisible(System.Drawing.PointF)">
            <summary>
            Indicates whether the specified System.Drawing.PointF structure is contained
                within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="point">System.Drawing.PointF structure to test for visibility.</param>
            <returns>true if the point specified by the point parameter is contained within the
                visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.IsVisible(System.Drawing.Rectangle)">
            <summary>
            Indicates whether the rectangle specified by a System.Drawing.Rectangle structure
                is contained within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="rect">System.Drawing.Rectangle structure to test for visibility.</param>
            <returns> true if the rectangle specified by the rect parameter is contained within
                the visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.IsVisible(System.Drawing.RectangleF)">
            <summary>
            Indicates whether the rectangle specified by a System.Drawing.RectangleF
                structure is contained within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="rect">System.Drawing.RectangleF structure to test for visibility.</param>
            <returns>true if the rectangle specified by the rect parameter is contained within
                the visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.IsVisible(System.Single,System.Single)">
            <summary>
            Indicates whether the point specified by a pair of coordinates is contained
                within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="x">The x-coordinate of the point to test for visibility.</param>
            <param name="y">The y-coordinate of the point to test for visibility.</param>
            <returns> true if the point defined by the x and y parameters is contained within the
                visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.IsVisible(System.Int32,System.Int32)">
            <summary>
             Indicates whether the point specified by a pair of coordinates is contained
                within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="x">The x-coordinate of the point to test for visibility.</param>
            <param name="y">The y-coordinate of the point to test for visibility.</param>
            <returns> true if the point defined by the x and y parameters is contained within the
                visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Indicates whether the rectangle specified by a pair of coordinates, a width,
                and a height is contained within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
            <param name="width">Width of the rectangle to test for visibility.</param>
            <param name="height">Height of the rectangle to test for visibility.</param>
            <returns>true if the rectangle defined by the x, y, width, and height parameters is
                contained within the visible clip region of this System.Drawing.Graphics;
                otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Indicates whether the rectangle specified by a pair of coordinates, a width,
                and a height is contained within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
            <param name="width">Width of the rectangle to test for visibility.</param>
            <param name="height">Height of the rectangle to test for visibility.</param>
            <returns>true if the rectangle defined by the x, y, width, and height parameters is
                contained within the visible clip region of this System.Drawing.Graphics;
                otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Gets an array of System.Drawing.Region objects, each of which bounds a range
                of character positions within the specified string.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="layoutRect">System.Drawing.RectangleF structure that specifies the layout rectangle for
                the string.</param>
            <param name="stringFormat">System.Drawing.StringFormat that represents formatting information, such
                as line spacing, for the string.</param>
            <returns>This method returns an array of System.Drawing.Region objects, each of which
                bounds a range of character positions within the specified string.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified by the text parameter as drawn with the font parameter.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font that defines the format of the string.</param>
            <param name="width">Maximum width of the string in pixels.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified in the text parameter as drawn with the font parameter.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font
                within the specified layout area.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font defines the text format of the string.</param>
            <param name="layoutArea">System.Drawing.SizeF structure that specifies the maximum layout area for
                the text.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified by the text parameter as drawn with the font parameter.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font
                and formatted with the specified System.Drawing.StringFormat.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="width">Maximum width of the string.</param>
            <param name="format">System.Drawing.StringFormat that represents formatting information, such
                as line spacing, for the string.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified in the text parameter as drawn with the font parameter
                and the stringFormat parameter.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font
                and formatted with the specified System.Drawing.StringFormat.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font defines the text format of the string.</param>
            <param name="origin">System.Drawing.PointF structure that represents the upper-left corner of
                the string.</param>
            <param name="stringFormat">System.Drawing.StringFormat that represents formatting information, such
                as line spacing, for the string.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified by the text parameter as drawn with the font parameter
                and the stringFormat parameter.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font
                and formatted with the specified System.Drawing.StringFormat.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font defines the text format of the string.</param>
            <param name="layoutArea">System.Drawing.SizeF structure that specifies the maximum layout area for
                the text.</param>
            <param name="stringFormat">System.Drawing.StringFormat that represents formatting information, such
                as line spacing, for the string.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified in the text parameter as drawn with the font parameter
                and the stringFormat parameter.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font
                and formatted with the specified System.Drawing.StringFormat.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="layoutArea">System.Drawing.SizeF structure that specifies the maximum layout area for
                the text.</param>
            <param name="stringFormat">System.Drawing.StringFormat that represents formatting information, such
                as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size of the string, in the units specified by the System.Drawing.Graphics.PageUnit
                property, of the text parameter as drawn with the font parameter and the
                stringFormat parameter.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Multiplies the world transformation of this System.Drawing.Graphics and specified
                the System.Drawing.Drawing2D.Matrix.
            </summary>
            <param name="matrix">4x4 System.Drawing.Drawing2D.Matrix that multiplies the world transformation.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Multiplies the world transformation of this System.Drawing.Graphics and specified
                the System.Drawing.Drawing2D.Matrix in the specified order.
            </summary>
            <param name="matrix">4x4 System.Drawing.Drawing2D.Matrix that multiplies the world transformation.</param>
            <param name="order">Member of the System.Drawing.Drawing2D.MatrixOrder enumeration that determines
                the order of the multiplication.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.ReleaseHdc">
            <summary>
            Releases a device context handle obtained by a previous call to the System.Drawing.Graphics.GetHdc()
                method of this System.Drawing.Graphics.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.ReleaseHdc(System.IntPtr)">
            <summary>
            Releases a device context handle obtained by a previous call to the System.Drawing.Graphics.GetHdc()
                method of this System.Drawing.Graphics.
            </summary>
            <param name="hdc">Handle to a device context obtained by a previous call to the System.Drawing.Graphics.GetHdc()
                method of this System.Drawing.Graphics.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.ReleaseHdcInternal(System.IntPtr)">
            <summary>
            Releases a handle to a device context.
            </summary>
            <param name="hdc">Handle to a device context.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.ResetClip">
            <summary>
            Resets the clip region of this System.Drawing.Graphics to an infinite region.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.ResetTransform">
            <summary>
            Resets the world transformation matrix of this System.Drawing.Graphics to
                the identity matrix.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
            <summary>
            Restores the state of this System.Drawing.Graphics to the state represented
                by a System.Drawing.Drawing2D.GraphicsState.
            </summary>
            <param name="gstate">System.Drawing.Drawing2D.GraphicsState that represents the state to which
                to restore this System.Drawing.Graphics.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.RotateTransform(System.Single)">
            <summary>
            Applies the specified rotation to the transformation matrix of this System.Drawing.Graphics.
            </summary>
            <param name="angle">Angle of rotation in degrees.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Applies the specified rotation to the transformation matrix of this System.Drawing.Graphics
                in the specified order.
            </summary>
            <param name="angle">Angle of rotation in degrees.</param>
            <param name="order">Member of the System.Drawing.Drawing2D.MatrixOrder enumeration that specifies
                whether the rotation is appended or prepended to the matrix transformation.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.Save">
            <summary>
            Saves the current state of this System.Drawing.Graphics and identifies the
                saved state with a System.Drawing.Drawing2D.GraphicsState.
            </summary>
            <returns>This method returns a System.Drawing.Drawing2D.GraphicsState that represents
                the saved state of this System.Drawing.Graphics.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.ScaleTransform(System.Single,System.Single)">
            <summary>
            Applies the specified scaling operation to the transformation matrix of this
                System.Drawing.Graphics by prepending it to the object's transformation matrix.
            </summary>
            <param name="sx">Scale factor in the x direction.</param>
            <param name="sy">Scale factor in the y direction.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Applies the specified scaling operation to the transformation matrix of this
                System.Drawing.Graphics in the specified order.
            </summary>
            <param name="sx">Scale factor in the x direction.</param>
            <param name="sy">Scale factor in the y direction.</param>
            <param name="order">Member of the System.Drawing.Drawing2D.MatrixOrder enumeration that specifies
                whether the scaling operation is prepended or appended to the transformation
                matrix.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.SetClip(System.Drawing.Graphics)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the Clip property
                of the specified System.Drawing.Graphics.
            </summary>
            <param name="g">System.Drawing.Graphics from which to take the new clip region.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the specified
                System.Drawing.Drawing2D.GraphicsPath.
            </summary>
            <param name="path">System.Drawing.Drawing2D.GraphicsPath that represents the new clip region.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.SetClip(System.Drawing.Rectangle)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the rectangle
                specified by a System.Drawing.Rectangle structure.
            </summary>
            <param name="rect">System.Drawing.Rectangle structure that represents the new clip region.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the rectangle
                specified by a System.Drawing.RectangleF structure.
            </summary>
            <param name="rect">System.Drawing.RectangleF structure that represents the new clip region.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.ChartGraphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.ChartGraphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)" -->
        <member name="M:Telerik.Charting.ChartGraphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the result of
                the specified operation combining the current clip region and the rectangle
                specified by a System.Drawing.Rectangle structure.
            </summary>
            <param name="rect">System.Drawing.Rectangle structure to combine.</param>
            <param name="combineMode">Member of the System.Drawing.Drawing2D.CombineMode enumeration that specifies
                the combining operation to use.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the result of
                the specified operation combining the current clip region and the rectangle
                specified by a System.Drawing.RectangleF structure.
            </summary>
            <param name="rect">System.Drawing.RectangleF structure to combine.</param>
            <param name="combineMode">Member of the System.Drawing.Drawing2D.CombineMode enumeration that specifies
                the combining operation to use.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.ChartGraphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)" -->
        <member name="M:Telerik.Charting.ChartGraphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
            <summary>
            Transforms an array of points from one coordinate space to another using
                the current world and page transformations of this System.Drawing.Graphics.
            </summary>
            <param name="destSpace">Member of the System.Drawing.Drawing2D.CoordinateSpace enumeration that specifies
                the destination coordinate space.</param>
            <param name="srcSpace">Member of the System.Drawing.Drawing2D.CoordinateSpace enumeration that specifies
                the source coordinate space.</param>
            <param name="pts">Array of System.Drawing.Point structures that represents the points to transformation.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
            <summary>
            Transforms an array of points from one coordinate space to another using
                the current world and page transformations of this System.Drawing.Graphics.
            </summary>
            <param name="destSpace">Member of the System.Drawing.Drawing2D.CoordinateSpace enumeration that specifies
                the destination coordinate space.</param>
            <param name="srcSpace">Member of the System.Drawing.Drawing2D.CoordinateSpace enumeration that specifies
                the source coordinate space.</param>
            <param name="pts">Array of System.Drawing.PointF structures that represent the points to transform.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.TranslateClip(System.Single,System.Single)">
            <summary>
                Translates the clipping region of this System.Drawing.Graphics by specified
                amounts in the horizontal and vertical directions.
            </summary>
            <param name="dx">The x-coordinate of the translation.</param>
            <param name="dy">The y-coordinate of the translation.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.TranslateClip(System.Int32,System.Int32)">
            <summary>
                Translates the clipping region of this System.Drawing.Graphics by specified
                amounts in the horizontal and vertical directions.
            </summary>
            <param name="dx">The x-coordinate of the translation.</param>
            <param name="dy">The y-coordinate of the translation. </param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.TranslateTransform(System.Single,System.Single)">
            <summary>
                Changes the origin of the coordinate system by prepending the specified translation
                to the transformation matrix of this System.Drawing.Graphics.
            </summary>
            <param name="dx">The x-coordinate of the translation.</param>
            <param name="dy">The y-coordinate of the translation.</param>
        </member>
        <member name="M:Telerik.Charting.ChartGraphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
                Changes the origin of the coordinate system by applying the specified translation
                to the transformation matrix of this System.Drawing.Graphics in the specified
                order.
            </summary>
            <param name="dx">The x-coordinate of the translation.</param>
            <param name="dy">The y-coordinate of the translation.</param>
            <param name="order">Member of the System.Drawing.Drawing2D.MatrixOrder enumeration that specifies
                whether the translation is pretended or appended to the transformation matrix.</param>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.Graphics">
            <summary>
            Base System.Drawing.Graphics object
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.Clip">
             <summary>
             Gets or sets a System.Drawing.Region that limits the drawing region of this System.Drawing.Graphics.
             </summary>
             <return> 
             A System.Drawing.Region that limits the portion of this System.Drawing.Graphics that is currently available for drawing.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.ClipBounds">
            <summary>
            Gets a System.Drawing.RectangleF structure that bounds the clipping region of this System.Drawing.Graphics.
            </summary>
            <return>
            A System.Drawing.RectangleF structure that represents a bounding rectangle for the clipping region of this System.Drawing.Graphics.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.CompositingMode">
            <summary>
            Gets a value that specifies how composited images are drawn to this System.Drawing.Graphics.
            </summary>
            <return>
            This property specifies a member of the System.Drawing.Drawing2D.CompositingMode enumeration.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.CompositingQuality">
            <summary>
            Gets or sets the rendering quality of composited images drawn to this System.Drawing.Graphics.
            </summary>
            <return>This property specifies a member of the System.Drawing.Drawing2D.CompositingQuality enumeration.</return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.DpiX">
            <summary>
            Gets the horizontal resolution of this System.Drawing.Graphics.
            </summary>
            <return>
            The value, in dots per inch, for the horizontal resolution supported by this System.Drawing.Graphics.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.DpiY">
            <summary>
            Gets the vertical resolution of this System.Drawing.Graphics.
            </summary>
            <return>
            The value, in dots per inch, for the vertical resolution supported by this
                System.Drawing.Graphics.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.InterpolationMode">
            <summary>
            Gets or sets the interpolation mode associated with this System.Drawing.Graphics.
            </summary>
            <return>
            One of the System.Drawing.Drawing2D.InterpolationMode values.
            </return>        
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.IsClipEmpty">
            <summary>
            Gets a value indicating whether the clipping region of this System.Drawing.Graphics
                is empty.
            </summary>
            <return>
             true if the clipping region of this System.Drawing.Graphics is empty; otherwise,
                false.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.IsVisibleClipEmpty">
            <summary>
            Gets a value indicating whether the visible clipping region of this System.Drawing.Graphics
                is empty.
            </summary>
            <return>
            true if the visible portion of the clipping region of this System.Drawing.Graphics
                is empty; otherwise, false.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.PageScale">
            <summary>
            Gets or sets the scaling between world units and page units for this System.Drawing.Graphics.
            </summary>
            <return>
            This property specifies a value for the scaling between world units and page
                units for this System.Drawing.Graphics.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.PageUnit">
             <summary>
             Gets or sets the unit of measure used for page coordinates in this System.Drawing.Graphics.
             </summary>
             <return>
             One of the System.Drawing.GraphicsUnit values other than System.Drawing.GraphicsUnit.World.
             </return>
             <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
             System.Drawing.Graphics.PageUnit is set to System.Drawing.GraphicsUnit.World,
                 which is not a physical unit.
            </exception>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.PixelOffsetMode">
            <summary>
            Gets or set a value specifying how pixels are offset during rendering of
                this System.Drawing.Graphics.
            </summary>
            <return>
            This property specifies a member of the System.Drawing.Drawing2D.PixelOffsetMode
                enumeration
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.RenderingOrigin">
            <summary>
            Gets or sets the rendering origin of this System.Drawing.Graphics for dithering
                and for hatch brushes.
            </summary>
            <return>
            A System.Drawing.Point structure that represents the dither origin for 8-bits-per-pixel
                and 16-bits-per-pixel dithering and is also used to set the origin for hatch
                brushes.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.SmoothingMode">
            <summary>
            Gets or sets the rendering quality for this System.Drawing.Graphics.
            </summary>
            <return>
            One of the System.Drawing.Drawing2D.SmoothingMode values.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.TextContrast">
            <summary>
            Gets or sets the gamma correction value for rendering text.
            </summary>
            <return>
            The gamma correction value used for rendering anti aliased and ClearType text.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.TextRenderingHint">
            <summary>
            Gets or sets the rendering mode for text associated with this System.Drawing.Graphics.
            </summary>
            <return>
            One of the System.Drawing.Text.TextRenderingHint values.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.Transform">
            <summary>
             Gets or sets a copy of the geometric world transformation for this System.Drawing.Graphics.
            </summary>
            <return>
            A copy of the System.Drawing.Drawing2D.Matrix that represents the geometric
                world transformation for this System.Drawing.Graphics.
            </return>
        </member>
        <member name="P:Telerik.Charting.ChartGraphics.VisibleClipBounds">
            <summary>
            Gets the bounding rectangle of the visible clipping region of this System.Drawing.Graphics.
            </summary>
            <return>
            A System.Drawing.RectangleF structure that represents a bounding rectangle
                for the visible clipping region of this System.Drawing.Graphics.
            </return>
        </member>
        <member name="T:Telerik.Charting.Chart">
            <summary>
            This is an class which provides charting functionality for Telerik
            products.
            </summary>
        </member>
        <member name="T:Telerik.Charting.LayoutElement">
            <summary>
            Base class for all objects being calculated
            </summary>
        </member>
        <member name="T:Telerik.Charting.RenderedObject">
            <summary>
            Base class for all objects being rendered
            </summary>
        </member>
        <member name="T:Telerik.Charting.IOrdering">
            <summary>
            Common interface for an order list element of rendering container
            </summary>
        </member>
        <member name="M:Telerik.Charting.IOrdering.GetOrder">
            <summary>
            Gets elements order position
            </summary>
        </member>
        <member name="M:Telerik.Charting.IOrdering.SetOrder(System.Int32)">
            <summary>
            Sets this object in new render order position
            </summary>
            <param name="index">new position</param>
        </member>
        <member name="M:Telerik.Charting.IOrdering.Remove">
            <summary>
            Remove element from  render order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.IOrdering.BringForward">
            <summary>
            Send element at one step forward in the render order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.IOrdering.BringToFront">
            <summary>
            Sets element at the first position in render order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.IOrdering.SendBackward">
            <summary>
            Send element at one step back in the render order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.IOrdering.SendToBack">
            <summary>
            Send element at the end of render order list
            </summary>
        </member>
        <member name="P:Telerik.Charting.IOrdering.Container">
            <summary>
            Gets or sets the container element
            </summary>
        </member>
        <member name="F:Telerik.Charting.RenderedObject.objectContainer">
            <summary>
            Container, that contains the render order for taken up elements
            (For  property)
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderedObject.GetOrder">
            <summary>
            Get this elements order position in container
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderedObject.SetOrder(System.Int32)">
            <summary>
            Set this object in new render order position
            </summary>
            <param name="index">New position</param>
        </member>
        <member name="M:Telerik.Charting.RenderedObject.Remove">
            <summary>
            Remove this  element from  render order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderedObject.BringForward">
            <summary>
            Send element at one step forward in the render order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderedObject.BringToFront">
            <summary>
            Set element at the first position in render order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderedObject.SendBackward">
            <summary>
            Send element at one step back in the render order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderedObject.SendToBack">
            <summary>
            Send element at the end of render order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderedObject.OnRender">
            <summary>
            Called after rendering
            </summary>
        </member>
        <member name="P:Telerik.Charting.RenderedObject.Container">
            <summary>
            Link to container element
            </summary>
        </member>
        <member name="E:Telerik.Charting.RenderedObject.RenderEventHandler">
            <summary>
            Rendering event handler
            </summary>
        </member>
        <member name="M:Telerik.Charting.LayoutElement.#ctor(Telerik.Charting.IContainer)">
            <summary>
            Creates new class instance
            </summary>
            <param name="container">Container</param>
        </member>
        <member name="M:Telerik.Charting.LayoutElement.#ctor(Telerik.Charting.Styles.LayoutStyle,Telerik.Charting.IContainer)">
            <summary>
            Creates new class instance
            </summary>
            <param name="appearance">Appearance</param>
            <param name="container">Container object</param>
        </member>
        <member name="M:Telerik.Charting.LayoutElement.GetOffset(System.Object,Telerik.Charting.LayoutElement.OffsetCalculationDelegate)">
            <summary>
            Gets element offset
            </summary>
            <param name="oelement">Element</param>
            <param name="calcMethod">Offset calculation method delegate (left, right, top, bottom)</param>
            <returns>Offset value</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutElement.GetOffsetLeft(System.Object)">
            <summary>
            Gets left offset
            </summary>
            <param name="oelement">Element to get an offset of</param>
            <returns>Offset value</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutElement.GetOffsetTop(System.Object)">
            <summary>
            Gets top offset
            </summary>
            <param name="element">Element to get an offset of</param>
            <returns>Offset value</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutElement.GetOffsetRight(System.Object)">
            <summary>
            Gets right offset
            </summary>
            <param name="element">Element to get an offset of</param>
            <returns>Offset value</returns>        
        </member>
        <member name="M:Telerik.Charting.LayoutElement.GetOffsetBottom(System.Object)">
            <summary>
            Gets bottom offset
            </summary>
            <param name="element">Element to get an offset of</param>
            <returns>Offset value</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutElement.CalculatePosition(Telerik.Charting.Styles.ISizesAndPaddings)">
            <summary>
            Calculates element position in container
            </summary>
            <param name="containerDimensions">Rendering container dimensions</param>
        </member>
        <member name="M:Telerik.Charting.LayoutElement.CalculatePosition(Telerik.Charting.RenderEngine)">
            <summary>
            Calculates element position. Makes an additional check for a container object type 
            </summary>
            <param name="renderEngine"></param>
        </member>
        <member name="M:Telerik.Charting.LayoutElement.TrackViewState">
            <summary>
            Tracking view state changes
            </summary>
        </member>
        <member name="M:Telerik.Charting.LayoutElement.LoadViewState(System.Object)">
            <summary>
            Loads data from a view state
            </summary>
            <param name="savedState">Views state to load from</param>
        </member>
        <member name="M:Telerik.Charting.LayoutElement.SaveViewState">
            <summary>
            Saves settings to a view state
            </summary>
            <returns>Saved view state</returns>
        </member>
        <member name="T:Telerik.Charting.LayoutElement.OffsetCalculationDelegate">
            <summary>
            Offset calculation method delegate
            </summary>
            <param name="prevElem">Previous element in a container's order list</param>
            <param name="container">Rendering container</param>
            <param name="prevElemPosition">Previous element's position in a container order list</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Charting.IContainer">
            <summary>
            Common interface for a rendering container objects
            </summary>
        </member>
        <member name="M:Telerik.Charting.IContainer.GetOrder(Telerik.Charting.IOrdering)">
            <summary>
            Get elements order position
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.IContainer.Add(Telerik.Charting.IOrdering)">
            <summary>
            Add element at the end of list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.IContainer.Insert(System.Int32,Telerik.Charting.IOrdering)">
            <summary>
            Insert element at specific position in list
            </summary>
            <param name="order">Element</param>
            <param name="element">Position index</param>
        </member>
        <member name="M:Telerik.Charting.IContainer.Remove(Telerik.Charting.IOrdering)">
            <summary>
            Remove  element from list
            </summary>
            <param name="element">Element for removing</param>
        </member>
        <member name="M:Telerik.Charting.IContainer.RemoveAt(System.Int32)">
            <summary>
            Remove  element from list by it's index
            </summary>
            <param name="index">Elements index for remove</param>
        </member>
        <member name="M:Telerik.Charting.IContainer.ReIndex">
            <summary>
            Re index order list
            </summary>
        </member>
        <member name="P:Telerik.Charting.IContainer.OrderList">
            <summary>
            List, that is represent the render order for taken up elements
            </summary>
        </member>
        <member name="P:Telerik.Charting.IContainer.NextPosition">
            <summary>
            Get a next free order position
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartTitle">
            <summary>
            Title for chart
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartLegend">
            <summary>
            Chart legend
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartPlotArea">
            <summary>
            Chart plot area
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartComponent">
            <summary>
            Control holder
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartOrderList">
            <summary>
            List, that is represent the render order for taken up elements
            (For IContainer.OrderList property)
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartDesignTime">
            <summary>
            Provides information whether the chart is used in design-time mode.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartDataManager">
            <summary>
            Data Manager for data binding
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartSeriesCollection">
            <summary>
            Series collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartDesignTimeSeriesCollection">
            <summary>
            Temporary series collection in design time
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartOriginalSeriesCollection">
            <summary>
            Temporary copy of original series collection in design time
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartCustomPalettes">
            <summary>
            Custom palettes collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartCustomFigures">
            <summary>
            Users custom figures collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartFigures">
            <summary>
            Default figures collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.Chart.chartSkinsCollection">
            <summary>
            Skins Collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.#ctor">
            <summary>
            Default constructor for Chart
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.Chart_BeforeLayout(System.Object,System.EventArgs)">
            <summary>
            Default method for BeforeLayout event handler
            </summary>
            <param name="sender">Object</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Telerik.Charting.Chart.Chart_PrePaint(System.Object,System.EventArgs)">
            <summary>
            Default method for PrePaint event handler
            </summary>
            <param name="sender">Object</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Telerik.Charting.Chart.#ctor(Telerik.Charting.IChartComponent)">
            <summary>
            Constructor from different chart controls
            </summary>
            <param name="component">IChartComponent</param>
        </member>
        <member name="M:Telerik.Charting.Chart.Finalize">
            <summary>
            Default destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.CallRegionEvent(System.Drawing.PointF,Telerik.Charting.IContainer)">
            <summary>
            Determine on which element of chart click occur
            </summary>
            <param name="point">Click coordinates</param>
            <param name="container">Container object</param>
            <returns>Active region object</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.ChangeSeriesType">
            <summary>
            Set type for all series as DefaultType
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.ApplyPalette(System.String)">
            <summary>
            Apply palette for chart
            </summary>
            <param name="paletteName">Palette name</param>
        </member>
        <member name="M:Telerik.Charting.Chart.ApplySkin(System.String)">
            <summary>
            Apply skin for chart
            </summary>
            <param name="skinName">Skin name</param>
        </member>
        <member name="M:Telerik.Charting.Chart.ShouldApplyTextWrapping(Telerik.Charting.Styles.AutoTextWrap)">
            <summary>
            Specifies should apply text wrapping or not
            </summary>
            <param name="textBlockAutoTextWrap">AutoTextWrap from text block</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.Clone">
            <summary>
            Makes a chart's clone 
            </summary>
            <returns>Chart's clone</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.UpdateDesign">
            <summary>
            Update design-time preview
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.SetDataGroupColumn(System.String)">
            <summary>
            Changes the DataGroupColumn property without DataBind method call
            </summary>
            <param name="columnName">Column Name</param>
        </member>
        <member name="M:Telerik.Charting.Chart.GetTextQuality">
            <summary>
            Provide relation between enums TextQuality(Teleriks) and TextRenderingHint(.Net)
            </summary>
            <returns>TextRenderingHint value</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.GetImageQuality">
            <summary>
            Provide relation between enums ImageQuality(Teleriks) and SmoothingMode(.Net)
            </summary>
            <returns>SmoothingMode value</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.OnlyPieSeries">
            <summary>
            Returns true if only pie series present
            </summary>
            <returns>Boolean</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.MapPath(System.String)">
            <summary>
            MapPath functionality
            </summary>
            <param name="filePath">path</param>
            <returns>path</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.InitDesignTime">
            <summary>
            Initialize design-time mode
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.FinalizeDesignTime">
            <summary>
            Finalize design-time mode
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.ClearSkin(System.Object)">
            <summary>
            Clearing skin settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.IsDefaultValue(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Checking property on a default value
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.GetDefaultPropertyValue(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Return a default value of a property
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.GetPropertyValue(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Return a value of a property
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.LoadSkin(System.Object,System.IO.TextWriter)">
            <summary>
            Load skin from
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.SaveSkin(System.Object)">
            <summary>
            Saving skin
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.LoadChart(System.Object,System.IO.TextReader)">
            <summary>
            Loading chart from XML string wrapped in TextWriter
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.SaveChart(System.Object)">
            <summary>
            Exports chart to a XML string wrapped in TextWriter
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.ResolvePhysicalLocation(System.String)">
            <summary>
            Return a full path
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.LocalDataFilePathToGlobal(System.Web.UI.WebControls.AccessDataSource)">
            <summary>
            Return a full path for a data source object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.LocalDataFilePathToGlobal(System.Web.UI.WebControls.XmlDataSource)">
            <summary>
            Return a full path for a data source object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.Init">
            <summary>
            Initialize chart and its properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.CalculateChart">
            <summary>
            Chart calculations: Binding series to legend for BeforeLayout Event
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.ReCalculateChart">
            <summary>
            Chart recalculation
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.OnBeforeLayout(System.Object,System.EventArgs)">
            <summary>
            Execute BeforeLayoutEventHandler
            </summary>
            <param name="chart">Chart</param>
            <param name="args">Arguments</param>
        </member>
        <member name="M:Telerik.Charting.Chart.OnPrePaint(System.Object,System.EventArgs)">
            <summary>
            Execute PrePaintEventHandler
            </summary>
            <param name="chart">Chart</param>
            <param name="args">Arguments</param>
        </member>
        <member name="M:Telerik.Charting.Chart.GetImage">
            <summary>Returns the chart image</summary>
        </member>
        <member name="M:Telerik.Charting.Chart.GetImage(Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>Returns the chart image</summary>
        </member>
        <member name="M:Telerik.Charting.Chart.GetImage(System.Int32,System.Int32)">
            <summary>Returns the chart image</summary>
        </member>
        <member name="M:Telerik.Charting.Chart.GetStaticArea(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Returns the chart static area as image for zoom feature</summary>
        </member>
        <member name="M:Telerik.Charting.Chart.GetPlotArea(System.Int32,System.Int32,System.Single,System.Single,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>Returns the chart plot area part as image for zoom feature</summary>
        </member>
        <member name="M:Telerik.Charting.Chart.GetScaledImageWidth(System.Single,System.Single)">
            <summary>
            Get image width when scaling enabled
            </summary>
            <param name="xScale">X scale coefficient</param>
            <param name="yScale">Y scale coefficient</param>
            <returns>Width in pixels</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.GetScaledImageHeight(System.Single,System.Single)">
            <summary>
            Get image height when scaling enabled
            </summary>
            <param name="xScale">X scale coefficient</param>
            <param name="yScale">Y scale coefficient</param>
            <returns>Height in pixels</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.PrepareForScale(System.Single,System.Single)">
            <summary>Preapare chart for zooming</summary>
        </member>
        <member name="M:Telerik.Charting.Chart.RestoreAfterScale(System.Int32,System.Int32)">
            <summary>Restore chart after zooming</summary>
        </member>
        <member name="M:Telerik.Charting.Chart.CheckLimitations">
            <summary>
            Checking restrictions for when some charts modes enabled
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.PrepareForAutoLayout">
            <summary>
            Prepare chart elements for AutoLayout feature
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.RestoreAutoLayoutChanges">
            <summary>
            Restore chart elements setting after drawing in AutoLayout mode
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.GetAxis(System.Int32,System.Int32,System.Single,System.Single,Telerik.Charting.ChartAxisType)">
            <summary>Returns an axis image only with ticks and axis items</summary>
        </member>
        <member name="M:Telerik.Charting.Chart.GetException(Telerik.Charting.RenderEngine,System.Exception)">
            <summary>Returns crash-exception image if any</summary>
        </member>
        <member name="M:Telerik.Charting.Chart.CallRegionEvent(System.Int32,System.Int32)">
            <summary>
            Determine on which element of chart click occur
            </summary>
            <param name="x">Click x coodrinate</param>
            <param name="y">Click y coodrinate</param>
            <returns>Active region object</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.CallRegionEvent(System.Single,System.Single)">
            <summary>
            Determine on which element of chart click occur
            </summary>
            <param name="x">Click x coodrinate</param>
            <param name="y">Click y coodrinate</param>
            <returns>Active region object</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.CallRegionEvent(System.Drawing.Point)">
            <summary>
            Determine on which element of chart click occur
            </summary>
            <param name="point">Click coodrinates</param>
            <returns>Active region object</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.CallRegionEvent(System.Drawing.PointF)">
            <summary>
            Determine on which element of chart click occur
            </summary>
            <param name="point">Click coodrinates</param>
            <returns>Active region object</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.GetSeries(System.String)">
            <summary>
            Get series
            </summary>
            <param name="name">Series name</param>
            <returns>Series or null</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.GetSeries(System.Int32)">
            <summary>
            Get series
            </summary>
            <param name="index">Series index</param>
            <returns>Series or null</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.GetSeries(System.Drawing.Color)">
            <summary>
            Gets a reference to the data first series by specifying data series color.
            </summary>
            <param name="seriesColor">Series color</param>
            <returns>Series or null</returns>
        </member>
        <member name="M:Telerik.Charting.Chart.AddChartSeries(Telerik.Charting.ChartSeries)">
            <summary>
            Adds a new data series to the chart's data series collection.
            </summary>
            <param name="series">Series for adding</param>
        </member>
        <member name="M:Telerik.Charting.Chart.AddSeries(Telerik.Charting.ChartSeries)">
            <summary>
            Add series
            </summary>
            <param name="series">Series to add</param>
        </member>
        <member name="M:Telerik.Charting.Chart.AddSeries(Telerik.Charting.ChartSeriesCollection)">
            <summary>
            Add series
            </summary>
            <param name="chartSeries">Series for adding</param>
        </member>
        <member name="M:Telerik.Charting.Chart.AddSeries(Telerik.Charting.ChartSeries[])">
            <summary>
            Add series
            </summary>
            <param name="chartSeries">Series for adding</param>
        </member>
        <member name="M:Telerik.Charting.Chart.AddSeries(System.Collections.Generic.List{Telerik.Charting.ChartSeries})">
            <summary>
            Add series
            </summary>
            <param name="seriesList">Series for adding</param>
        </member>
        <member name="M:Telerik.Charting.Chart.AddSeries(Telerik.Charting.ChartSeries,Telerik.Charting.ChartSeries[])">
            <summary>
            Add series
            </summary>
            <param name="chartSeries">Series for adding</param>
            <param name="chartSeriesArray">Series for adding</param>
        </member>
        <member name="M:Telerik.Charting.Chart.RemoveAllSeries">
            <summary>
            Clear series collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.RemoveSeries(Telerik.Charting.ChartSeries,Telerik.Charting.ChartSeries[])">
            <summary>
            Remove series
            </summary>
            <param name="chartSeries">Series</param>
            <param name="chartSeriesArray">Series</param>
        </member>
        <member name="M:Telerik.Charting.Chart.RemoveSeries(System.String,System.String[])">
            <summary>
            Remove series
            </summary>
            <param name="seriesName">Series name</param>
            <param name="seriesNames">Series names</param>
        </member>
        <member name="M:Telerik.Charting.Chart.RemoveSeriesAt(System.Int32,System.Int32[])">
            <summary>
            Remove series
            </summary>
            <param name="index">Series index</param>
            <param name="indexes">Series indexes</param>
        </member>
        <member name="M:Telerik.Charting.Chart.GetOrder(Telerik.Charting.IOrdering)">
            <summary>
            Get elements order position
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.Chart.Add(Telerik.Charting.IOrdering)">
            <summary>
            Add element at the end of list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.Chart.Insert(System.Int32,Telerik.Charting.IOrdering)">
            <summary>
            Insert element at specific position in list
            </summary>
            <param name="order">Position</param>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.Chart.Remove(Telerik.Charting.IOrdering)">
            <summary>
            Remove  element from list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.Chart.RemoveAt(System.Int32)">
            <summary>
            Remove  element from list by it's index
            </summary>
            <param name="index">Position</param>
        </member>
        <member name="M:Telerik.Charting.Chart.ReIndex">
            <summary>
            Re-index order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.Dispose">
            <summary>
            Disposing chart object
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Charting.Chart.Dispose(System.Boolean)">
            <summary>
            Disposing chart object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.TrackViewState">
            <summary>
            Tracking ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.LoadViewState(System.Object)">
            <summary>
            Loading ViewState data
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.SaveViewState">
            <summary>
            Saving ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Chart.CopyFrom(Telerik.Charting.Chart)">
            <summary>
            Copy chart setting
            </summary>
            <param name="baseChart">Base chart</param>
        </member>
        <member name="P:Telerik.Charting.Chart.Figures">
            <summary>Contains a figures collection .</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.CustomFigures">
            <summary>Contains a collection of custom figures.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.CustomPalettes">
            <summary>
            Contains a collection of custom palettes
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.DesignTime">
            <summary>Provides information whether the chart is used in design-time mode.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.ChartTitle">
            <summary>Provides access to the title element of the chart.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.Legend">
            <summary>Provides access to the legend element of the chart.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.Appearance">
            <summary>Contains appearance related settings.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.PlotArea">
            <summary>Contains a chart plot area element.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Charting.Chart.DefaultType">
            <summary>Specifies the default series type.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.Bitmap">
            <summary>Use this property to access the chart bitmap.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.DataGroupColumn">
            <summary>
            Specifies a column which will be used for group by clause. A new series will be
            created for each unique record in this column.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.Series">
            <summary>
            Gets or sets the RadChart's chart series collection object.
            </summary>  
        </member>
        <member name="P:Telerik.Charting.Chart.SeriesPalette">
            <summary>
            Specifies the series palette
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.SeriesPaletteWrapper">
            <summary>
            Added just temporary to avoid build warnings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.AutoLayout">
            <summary>
            Specifies AutoLayout mode to all items on the chart control.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.AutoLayoutWrapper">
            <summary>
            Added just temporary to avoid build warnings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.AutoTextWrap">
            <summary>
            Specifies AutoTextWrap mode for all wrappable text blocks of the chart control.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.AutoTextWrapWrapper">
            <summary>
            Added just temporary to avoid build warnings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.Skin">
            <summary>Specifies the skin to use.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.SkinsOverrideStyles">
            <summary>
            When true and using a skin, user will not be able to override any of the skin
            appearance.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.DataManager">
            <summary>
            Exposes advanced data binding options. You can use this property to perform custom
            data binding at runtime.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.SeriesOrientation">
            <summary>
            Specifies the orientation of chart series on the plot area.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.IntelligentLabelsEnabled">
            <summary>Toggles the use of the IntelligentLabels feature.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.ApplicationPath">
            <summary>Parent application path.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.TempImagePath">
            <summary>Temporary images path.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.ImageFormat">
            <summary>Specifies the image rendering format.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.BitmapResolution">
            <summary>Specifies the bitmap resolution.</summary>
        </member>
        <member name="P:Telerik.Charting.Chart.TextWrapFactor">
            <summary>
            Return factor for wrap mechanism for fixed sides proportion wrap type
            </summary>
        </member>
        <member name="E:Telerik.Charting.Chart.BeforeLayoutEventHandler">
            <summary>
             Event handle for BeforeLayout Event
            </summary>
        </member>
        <member name="E:Telerik.Charting.Chart.PrePaintEventHandler">
            <summary>
             Event handle for PrePaint Event
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.DesignTimeSeriesCollection">
            <summary>
            Specifies a design-time series collection
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.OriginalSeriesCollection">
            <summary>
            Specifies a temporary copy of original series in design-time mode
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.Parent">
            <summary>
            Parent chart element
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.ScaleEnabled">
            <summary>
            Show enable scale or not
            </summary>
        </member>
        <member name="P:Telerik.Charting.Chart.OrderList">
            <summary>List containing the render order of elements.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Charting.Chart.NextPosition">
            <summary>Gets the next free order position.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Charting.IChartComponent">
            <summary>
            Common chart components definitions
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Charting.IChartComponent.MapPath(System.String)">
            <summary>
            MapMath method
            </summary>
            <param name="filePath">path</param>
            <returns>path</returns>
        </member>
        <member name="M:Telerik.Charting.IChartComponent.Clone">
            <summary>
            Control clone
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Charting.IChartComponent.Chart">
            <summary>
            Chart object
            </summary>
        </member>
        <member name="P:Telerik.Charting.IChartComponent.TempImagesFolder">
            <summary>
            Path to the Temp folder
            </summary>
        </member>
        <member name="P:Telerik.Charting.IChartSupportsScaling.ScaleEnabled">
            <summary>
            Gets a value indicating whether scaling is enabled.
            </summary>
        </member>
        <member name="T:Telerik.Charting.IChartDesigner">
            <summary>
            Charting component
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Charting.IChartDesigner.Update">
            <summary>
            Updating designer
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartException">
            <summary>
            Common charting error
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Charting.ChartException.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Telerik.Charting.ChartException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message</param>
            <param name="inner">Parent Error</param>
        </member>
        <member name="M:Telerik.Charting.ChartException.WrappedByWidth(Telerik.Charting.ChartGraphics,System.String,System.Drawing.Font,System.Single)">
            <summary>
            For chart exceptions drawing
            </summary>
            <param name="graphics">Graphics</param>
            <param name="text">Message</param>
            <param name="font">Font</param>
            <param name="width">Width</param>
            <returns>string</returns>
        </member>
        <member name="T:Telerik.Charting.ChartSeriesType">
            <summary>Supported series types.</summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.Bar">
            <summary>
            Specifies a bar data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.StackedBar">
            <summary>
            Specifies a stacked bar data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.StackedBar100">
            <summary>
            Specifies a stacked 100 bar data series.
            </summary>        
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.Line">
            /// <summary>
            Specifies a line data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.Area">
            <summary>
            Specifies an area data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.StackedArea">
            <summary>
            Specifies a stacked area data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.StackedArea100">
            <summary>
            Specifies a stacked 100 area data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.Pie">
            /// <summary>
            Specifies a pie data series.
            </summary>        
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.Gantt">
            /// <summary>
            Specifies a gantt data series.
            </summary>       
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.Bezier">
            <summary>
            Specifies a bezier data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.Spline">
            <summary>
            Specifies a spline data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.Bubble">
            <summary>
            Specifies a bubble data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.Point">
            <summary>
            Specifies a point data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.SplineArea">
            <summary>
            Specifies an spline area data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.StackedSplineArea">
            <summary>
            Specifies a stacked spline area data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.StackedSplineArea100">
            <summary>
            Specifies a stacked 100 spline area data series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.CandleStick">
            <summary>Specifies a candlestick data series.</summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.StackedLine">
            <summary>Specifies a stacked line data series.</summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesType.StackedSpline">
            <summary>Specifies a stacked spline data series.</summary>
        </member>
        <member name="T:Telerik.Charting.TableRenderType">
            <summary>
            RenderType of DataTable
            </summary>
        </member>
        <member name="T:Telerik.Charting.ContentHorizontalAlign">
            <summary>
            Horizontal Alignment of text in DataTable cells
            </summary>
        </member>
        <member name="T:Telerik.Charting.ContentVerticalAlign">
            <summary>
            Vertical Alignment of text in DataTable cells
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartDataTable">
            <summary>
            DataTable. Shows the series data in a tabular format.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDataTable.dataTableData">
            <summary>
            Contains DataTable data
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDataTable.dataTablePlotArea">
            <summary>
            PlotArea to which DataTable related to
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDataTable.dataTableSizesW">
            <summary>
            Cells' width
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDataTable.dataTableSizesH">
            <summary>
            Cells' height
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDataTable.seriesMarkers">
            <summary>
            Markers of series
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDataTable.dataTableShouldCalculate">
            <summary>
            Should be recalculated when AutoLayout
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartDataTable.FillData(Telerik.Charting.ChartSeriesCollection)">
            <summary>
            Fill data by series' items values
            </summary>
            <param name="seriesCollection"></param>
        </member>
        <member name="M:Telerik.Charting.ChartDataTable.Reset">
            <summary>
            Reset to default
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartDataTable.Initilaize">
            <summary>
            Initialize DataTable's data
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartDataTable.WrapText(System.String,Telerik.Charting.RenderEngine)">
            <summary>
            Wrap DataTable text using factor for wrap mechanism
            </summary>
            <param name="str">Text that should be wrapped</param>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Wrapped string</returns>
        </member>
        <member name="M:Telerik.Charting.ChartDataTable.WrapText(System.String,Telerik.Charting.RenderEngine,System.Single)">
            <summary>
            Wrap DataTable text
            </summary>
            <param name="str">Text that should be wrapped</param>
            <param name="renderEngine">RenderEngine of chart</param>
            <param name="width">Fixed width of wrapped text</param>
            <returns>Wrapped string</returns>
        </member>
        <member name="M:Telerik.Charting.ChartDataTable.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Calculate size of DataTable
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Charting.ChartDataTable.CalculatePosition(Telerik.Charting.RenderEngine)">
            <summary>
            Calculate position
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Charting.ChartDataTable.#ctor(Telerik.Charting.ChartPlotArea)">
            <summary>
            Create new instance of ChartDataTable class
            </summary>
            <param name="plotArea">PlotArea to which DataTable is related to</param>
        </member>
        <member name="M:Telerik.Charting.ChartDataTable.#ctor(Telerik.Charting.ChartPlotArea,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of ChartDataTable class
            </summary>
            <param name="plotArea">PlotArea to which DataTable is related to</param>
            <param name="container">Container of DataTable</param>
        </member>
        <member name="P:Telerik.Charting.ChartDataTable.SizesW">
            <summary>
            Cells' widths array
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartDataTable.SizesH">
            <summary>
            Cells' heights array
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartDataTable.PlotArea">
            <summary>
            Plot area to which DataTable is related
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartDataTable.Data">
            <summary>
            Data stored in cells
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartDataTable.Visible">
            <summary>
            Visibility of DataTable
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartDataTable.IsVisible">
            <summary>
            Visible and not calculate
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartDataTable.Appearance">
            <summary>
            Appearance options
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartDataTable.SeriesMarkers">
            <summary>
            Markers of series
            </summary>
        </member>
        <member name="T:Telerik.Charting.ArrayDataHelper">
            <summary>
            Helper class used for an Arrays data binding
            </summary>
        </member>
        <member name="T:Telerik.Charting.DataHelper">
            <summary>
            Common helper class. Implements most of ICommonDataHelper members
            </summary>
        </member>
        <member name="T:Telerik.Charting.ICommonDataHelper">
            <summary>
            Contains common members that should be implemented in the data source helpers for supported data sources
            </summary>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetColumnIndex(System.String)">
            <summary>
            Gets the column index by column name in the Data Source object 
            </summary>
            <param name="columnName">Column name</param>
            <returns>Column index if column found or -1 if column not found</returns>
            <remarks>This method is not supported by all data sources</remarks>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetColumnName(System.Int32)">
            <summary>
            Gets the column name if it is supported by data source
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Column name if found or an empty string</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetDoubleValue(System.Int32,System.Int32)">
            <summary>
            Return the double value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Double value at given column and row</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetObjectValue(System.Int32,System.Int32)">
            <summary>
            Return the object value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Object value at given column and row from data source</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetStringValue(System.Int32,System.Int32)">
            <summary>
            Return the string value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>String value at given column and row of a data source</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetFilteredColumn(System.Int32)">
            <summary>
            Return unique column's content
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Objects array with unique column values</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetSortedAndFilteredColumn(System.Int32)">
            <summary>
            Return sorted unique column's content
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Objects array with unique column values sorted ascending</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.IsColumnNumeric(System.Int32)">
            <summary>
            Returns true if given column contains numeric values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains numeric values</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.IsColumnString(System.Int32)">
            <summary>
            Returns true if given column contains string type values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains string values</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.IsItemNumeric(System.Int32,System.Int32)">
            <summary>
            Returns true if value at the given position is numeric
            </summary>
            <param name="rowIndex">Row position index of data item in a data source</param>
            <param name="columnIndex">Column index of data item in a data source</param>
            <returns>True if data item contains numeric value at given row and column</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetGroupsColumnIndex">
            <summary>
            Returns possible groups column used for automatic data binding
            </summary>
            <returns>Automatically found possible column with repeating values for a data grouping</returns>
            <remarks>Only the first found numeric column will be checked. 
            If such column is not found or does not contain repeatable values the -1 will be returned
            </remarks>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetLabelsColumnIndex(System.Int32)">
            <summary>
            Returns possible column used as labels source when group column present
            </summary>
            <param name="groupColumn">DataGroupColumn index in a data source</param>
            <returns>Column index that can be used as a series item labels source</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetValuesXColumnIndex">
            <summary>
            Returns possible series items X values column
            </summary>
            <returns>Possible series items X values column's index or -1 if no proper column found</returns>      
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetValuesYColumnIndex">
            <summary>
            Returns possible series items Y values column
            </summary>
            <returns>Possible numeric columns array available for a data binding</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetValuesYColumns">
            <summary>
            Returns all possible series items Y values columns
            </summary>
            <returns>Possible numeric columns array available for a data binding</returns>
        </member>
        <member name="M:Telerik.Charting.ICommonDataHelper.GetGanttValuesColumns">
            <summary>
            Returns possible Gantt series items values columns array
            </summary>
            <returns>Data source columns array available for a Gantt series data binding (X, Y, X2, Y2 values)</returns>
        </member>
        <member name="P:Telerik.Charting.ICommonDataHelper.RowsCount">
            <summary>
            Gets the data source rows count
            </summary>
        </member>
        <member name="P:Telerik.Charting.ICommonDataHelper.ColumnsCount">
            <summary>
            Gets the data source columns count
            </summary>
        </member>
        <member name="P:Telerik.Charting.ICommonDataHelper.ColumnNameSupported">
            <summary>
            Returns true if data source supports columns naming or false in other cases
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetDoubleValue(System.Int32,System.Int32)">
            <summary>
            Return the double value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Double value at given column and row</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetObjectValue(System.Int32,System.Int32)">
            <summary>
            Return the object value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Object value at given column and row from data source</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetStringValue(System.Int32,System.Int32)">
            <summary>
            Return the string value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>String value at given column and row of a data source</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.IsColumnNumeric(System.Int32)">
            <summary>
            Returns true if given column contains numeric values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains numeric values</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.IsColumnString(System.Int32)">
            <summary>
            Returns true if given column contains string type values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains string values</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetColumnIndex(System.String)">
            <summary>
            Gets the column index by column name in the Data Source object 
            </summary>
            <param name="columnName">Column name</param>
            <returns>Column index if column found or -1 if column not found</returns>
            <remarks>This method is not supported by all data sources</remarks>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetColumnName(System.Int32)">
            <summary>
            Gets the column name if it is supported by data source
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Column name if supported by a data source</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.IsItemNumeric(System.Int32,System.Int32)">
            <summary>
            Returns true if value at the given position is numeric
            </summary>
            <param name="rowIndex">Row position index of data item in a data source</param>
            <param name="columnIndex">Column index of data item in a data source</param>
            <returns>True if data item contains numeric value at given row and column</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetLabelsColumnIndex(System.Int32)">
            <summary>
            Returns possible column used as labels source when group column present
            </summary>
            <param name="groupColumn">DataGroupColumn index in a data source</param>
            <returns>Column index that can be used as a series item labels source</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetGroupsColumnIndex">
            <summary>
            Returns possible groups column used for automatic data binding
            </summary>
            <returns>Automatically found possible column with repeating values for a data grouping</returns>
            <remarks>Only the first found numeric column will be checked. 
            If such column is not found or does not contain repeatable values the -1 will be returned
            </remarks>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetFilteredColumn(System.Int32)">
            <summary>
            Return unique column's content
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Objects array with unique column values</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetSortedAndFilteredColumn(System.Int32)">
            <summary>
            Return sorted unique column's content
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Objects array with unique column values sorted ascending</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetValuesXColumnIndex">
            <summary>
            Gets possible series items X values column
            </summary>
            <returns>Possible series items X values column's index or -1 if no proper column found</returns>      
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetValuesYColumnIndex">
            <summary>
            Gets possible series items Y values column
            </summary>
            <returns>Possible series items Y values column's index or -1 if no proper column found</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetValuesYColumns">
            <summary>
            Returns all possible series items Y values columns
            </summary>
            <returns>Possible numeric columns array available for a data binding</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.GetGanttValuesColumns">
            <summary>
            Returns all possible data source columns that could be used as Gantt series items
            </summary>
            <returns>Data source columns array available for a Gantt series data binding</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.IsNullableType(System.Type)">
            <summary>
            Checks is given type is Nullable
            </summary>
            <param name="type">Type to check</param>
            <returns>True if type is Nullable, or False</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.IsTypeNumeric(System.Type)">
            <summary>
            Checks whether the type given is numeric
            </summary>
            <param name="type">Type to check</param>
            <returns>True if Type is numeric</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.IsValueNumeric(System.Object)">
            <summary>
            Checks whether the value's type is numeric
            </summary>
            <param name="obj">Value to check</param>
            <returns>True if given object can be converted to number</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.IsTypeString(System.Type)">
            <summary>
            Checks whether the type given is string type
            </summary>
            <param name="type">Type to check</param>
            <returns>True if given type is string</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.IsValueString(System.Object)">
            <summary>
            Checks whether the value's type is String
            </summary>
            <param name="obj">Object to check</param>
            <returns>True if object can be converted to string</returns>
        </member>
        <member name="M:Telerik.Charting.DataHelper.CreateDataHelper(System.Object,System.String,System.Boolean)">
            <summary>
            Returns the data helper class accordingly to the data source type 
            </summary>
            <param name="dataSource">Data source</param>
            <param name="dataMember">Data Member (i.e. Table name)</param>
            <param name="isDesign">Design mode pointer</param>
            <returns>ICommonDataHelper-compartable object</returns>
        </member>
        <member name="P:Telerik.Charting.DataHelper.RowsCount">
            <summary>
            Returns the data source rows count
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataHelper.ColumnsCount">
            <summary>
            Returns the data source columns count
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataHelper.ColumnNameSupported">
            <summary>
            Returns true if data source supports columns naming or false in other cases
            </summary>
        </member>
        <member name="M:Telerik.Charting.ArrayDataHelper.indicies(System.Int32)">
            <summary>
            Indices matrix accordingly to a data array Rank
            </summary>
            <param name="columnIndex">Data column index</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ArrayDataHelper.#ctor(System.Array)">
            <summary>
            Array DataHelper constructor
            </summary>
            <param name="array">Data array</param>
        </member>
        <member name="M:Telerik.Charting.ArrayDataHelper.GetObjectValue(System.Int32,System.Int32)">
            <summary>
            Return the object value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ArrayDataHelper.IsColumnNumeric(System.Int32)">
            <summary>
            Returns true if given column contains numeric values
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ArrayDataHelper.IsColumnString(System.Int32)">
            <summary>
            Returns true if given column contains string type values
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ArrayDataHelper.GetColumnIndex(System.String)">
            <summary>
            Returns column index in a data array by column name
            </summary>
            <param name="columnName">Column name in data array</param>
            <remarks>Unsupported by current DataHelper</remarks>
            <returns>Always returns -1</returns>
        </member>
        <member name="M:Telerik.Charting.ArrayDataHelper.GetColumnName(System.Int32)">
            <summary>
            Returns column name in a data array by column index
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Empty string, because it is unsupported by current DataHelper</returns>
        </member>
        <member name="P:Telerik.Charting.ArrayDataHelper.RowsCount">
            <summary>
            Gets the data source rows count
            </summary>
        </member>
        <member name="P:Telerik.Charting.ArrayDataHelper.ColumnsCount">
            <summary>
            Gets the data source columns count
            </summary>
        </member>
        <member name="P:Telerik.Charting.ArrayDataHelper.ColumnNameSupported">
            <summary>
            Returns false, because current data source does not support columns naming
            </summary>
        </member>
        <member name="T:Telerik.Charting.DataManager">
            <summary>
            Acquires and manipulates data from databases or other sources. 
            Populates the SeriesCollection of the chart control. 
            </summary>
        </member>
        <member name="F:Telerik.Charting.DataManager.DESIGN_ROWS_AFFECTED">
            <summary>
            Top data sources rows used during design-time data binding
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataManager.GetColumnIndex(System.String,Telerik.Charting.DataManager.ColumnType)">
            <summary>
            General column's index detection method
            </summary>
            <param name="column">Column index or name</param>
            <param name="columnType">Data source column type accordingly to ColumnType enumeration</param>
            <returns>Column index in a data source</returns>
        </member>
        <member name="M:Telerik.Charting.DataManager.FindPossibleColumnIndex(System.Int32,Telerik.Charting.DataManager.ColumnType)">
            <summary>
            Returns possible column index in data source
            </summary>
            <param name="groupColumn">DataGroupColumn index if present or -1 if not</param>
            <param name="type">Data source column type accordingly to ColumnType enumeration</param>
            <returns>Column index or -1 if impossible to find column</returns>
        </member>
        <member name="M:Telerik.Charting.DataManager.GetGroupsColumn(System.String)">
            <summary>
            Gets the groups column index from data source
            </summary>
            <param name="groupsColumn">DataGroupColumn index if present or -1 if not</param>
            <returns>Groups column index or -1 if data grouping disabled</returns>
            <remarks>When the groups column has not been set it will be found automatically</remarks> 
        </member>
        <member name="M:Telerik.Charting.DataManager.GetLabelsColumn(System.String)">
            <summary>
            Gets the labels column index in data source
            </summary>
            <param name="labelsColumn">DataLabelsColumn index if present or -1 if not</param>
            <returns>Series labels column index</returns>
            <remarks>When the labels column has not been set it will be found automatically</remarks> 
        </member>
        <member name="M:Telerik.Charting.DataManager.GetValuesColumn(System.Int32,System.String,Telerik.Charting.DataManager.ColumnType,System.Boolean)">
            <summary>
            Gets the series X, Y, X2, Y2, Y3, Y4 values columns 
            </summary>
            <param name="groupsColumn">DataGroupColumn index if present or -1 if not</param>
            <param name="column">Column name</param>
            <param name="columnType">Data source column type accordingly to ColumnType enumeration</param>
            <returns>Column with numeric values. It can be used as X, Y, X2, Y2, Y3, Y4 values source. 
            If impossible to find a column or data helper is NULL it returns -1</returns>
            <remarks>When the series X, X2 or Y2 values column has not been set it will be found automatically</remarks> 
            <param name="auto">Should automatic column search be used or not</param>
        </member>
        <member name="M:Telerik.Charting.DataManager.GetValuesYColumns(System.String[],System.Boolean)">
            <summary>
            Gets the series Y values columns array
            </summary>
            <param name="valuesYColumns">Y values columns array. Can contain as column names as indexes</param>
            <param name="auto">Should auto mode be applied</param>
            <returns>Y values columns indexes array</returns>
            <remarks>When the series Y values column has not been set it will be found automatically</remarks>
        </member>
        <member name="M:Telerik.Charting.DataManager.GetAxisLabelsColumn(System.String)">
            <summary>
            Gets the axis labels column index
            </summary>
            <param name="axisLabelsColumn">Axis labels column index or name</param>
            <returns>Column index</returns>
        </member>
        <member name="M:Telerik.Charting.DataManager.GetItemName(System.Int32,System.Boolean,System.Int32,System.Int32[],System.Int32,System.Int32,Telerik.Charting.DataManager.ItemType)">
            <summary>
            Returns either chart series name or series item name
            </summary>
            <param name="groupColumn">DataGroupColumn index</param>
            <param name="isGroupColumnNumeric">True if group column contains numeric values only</param>
            <param name="labelsColumn">Series Labels column index</param>
            <param name="valuesYColumns">Y Values columns array</param>
            <param name="row">Data item's row index in a data source</param>
            <param name="column">Data item's column index in a data source</param>
            <param name="itemType">Item type Series or SeriesItem</param>
            <returns>Chart item name for an auto created Series or SeriesItem</returns>
        </member>
        <member name="M:Telerik.Charting.DataManager.DataBindXAxes(System.Int32)">
            <summary>
            Data bind X Axis labels
            </summary>
            <param name="groupColumn">DataGroupColumn index if present or -1 in other case</param>
        </member>
        <member name="M:Telerik.Charting.DataManager.ItemsEqual(Telerik.Charting.ChartSeriesItem,Telerik.Charting.ChartSeriesItem)">
            <summary>
            Compares two series items
            </summary>
            <param name="item1">Item to compare</param>
            <param name="item2">Item to compare</param>
            <returns>True if items represent the same data and have same names</returns>
        </member>
        <member name="M:Telerik.Charting.DataManager.DataBindSeries(System.Int32)">
            <summary>
            Populates existing chart series collection with data.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataManager.DataBindAuto(System.Int32)">
            <summary>
            Automatically populates chart series collection with data.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataManager.CreateSeries(System.Int32,System.Boolean,System.Int32,System.Int32,Telerik.Charting.DataManager.ValuesColumns)">
            <summary>
            Returns new chart series 
            </summary>
            <param name="groupColumn">DataGroupColumn index or -1 if grouping is not used</param>
            <param name="isGroupColumnNumeric">True if group column contains numeric values only</param>
            <param name="row">Data item's row index in a data source</param>
            <param name="column">Data item's column index in a data source</param>
            <param name="vColumns">Values columns array</param>
            <returns>New ChartSeries instance</returns>
        </member>
        <member name="M:Telerik.Charting.DataManager.CreateSeriesItem(System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Charting.DataManager.ValuesColumns,System.Boolean)">
            <summary>
            Creates new Chart Series item from data source
            </summary>
            <param name="row">Data item's row index in a data source</param>
            <param name="column">Data item's column index in a data source</param>
            <param name="groupColumn">DataGroupColumn index or -1 if grouping is not used</param>
            <param name="labelsColumn">Series items labels column</param>
            <param name="vColumns">Values columns array</param>
            <param name="useLabels">Assign name and label for a series item or not</param>
            <returns>New ChartSeriesItem instance with data from a data source</returns>
        </member>
        <member name="M:Telerik.Charting.DataManager.GetDataItem(System.Int32)">
            <summary>
            Returns a Data item from a data source
            </summary>
            <param name="row">Data item's row index in a data source</param>
            <returns>Data item row or null in other cases</returns>
        </member>
        <member name="M:Telerik.Charting.DataManager.ValidateDataSource(System.Object)">
            <summary>
            Validates data source object passed
            </summary>
            <param name="dataSource">Data Source</param>
            <remarks>The data source should implement the IEnumerable interface</remarks>
        </member>
        <member name="M:Telerik.Charting.DataManager.OnItemDataBound(Telerik.Charting.ChartSeries,Telerik.Charting.ChartSeriesItem,System.Object)">
            <summary>
            Calls an ItemDataBound event
            </summary>
            <param name="chartSeries">Series</param>
            <param name="chartSeriesItem">Series item</param>
            <param name="dataItem">Data Source</param>
        </member>
        <member name="M:Telerik.Charting.DataManager.DataBind">
            <summary>
            Forces the data to be refreshed
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataManager.ClearDataSource">
            <summary>
            Clears the Data Source used
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataManager.CopyFrom(Telerik.Charting.DataManager)">
            <summary>
            Copies settings from another data manager
            </summary>
            <param name="manager">Source DataManager to copy settings from</param>
        </member>
        <member name="M:Telerik.Charting.DataManager.#ctor(Telerik.Charting.Chart)">
            <summary>
            Default constructor
            </summary>
            <param name="chart">Parent chart object</param>
        </member>
        <member name="P:Telerik.Charting.DataManager.UseAutoBind">
            <summary>
            Sets the necessary using or not the automatic data binding at the design time
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.IsChartSupportsXAxisDataBinding">
            <summary>
            Returns true if possible to use the automatic X Axis data binding
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.IsSeriesSupportsXValues">
            <summary>
            Does the chart series support the X Values
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.IsSeriesSupportsY2Values">
            <summary>
            Does the chart series support the Y2 Values
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.IsSeriesSupportsX2Values">
            <summary>
            Does the chart series support the X2 Values
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.IsSeriesSupportsX2Y2Values">
            <summary>
            Does the chart series support the X2 and Y2 Values
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.IsSeriesSupportsY3Values">
            <summary>
            Does the chart series support the Y3 Values
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.IsSeriesSupportsY4Values">
            <summary>
            Does the chart series support the Y4 Values
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.CurrentSeriesType">
            <summary>
            Type of the currently processed series
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.CurrentDataHelper">
            <summary>
            Active DataHelper
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.ParentChart">
            <summary>
            Parent Chart object's reference
            </summary>
        </member>
        <member name="E:Telerik.Charting.DataManager.ItemDataBound">
            <summary>
            Event raised after the each series item's data binding  
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.DataSource">
            <summary>
            Chart Data Source object
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.DataMember">
            <summary>
            Gets or sets the name of the list of data that the data-bound control binds to, in cases where the data source contains more than one distinct list of data items.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.IsDataBindCalled">
            <summary>
            Returns true if DataBind method has been called
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.LabelsColumn">
            <summary>
            The data source column used as chart labels source
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.ValuesXColumn">
            <summary>
            The data source column used as series items X coordinate
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataManager.ValuesYColumns">
            <summary>
            The data source columns array used as series items Y coordinate source
            </summary>
            <remarks>This array could be used to set the Gantt chart data source columns. 
            The columns should be added in the following order: X, Y, X2, Y2 </remarks>
        </member>
        <member name="P:Telerik.Charting.DataManager.UseSeriesGrouping">
            <summary>
            Enables or disables the series grouping feature
            </summary>
            <remarks>Default value is True</remarks>
        </member>
        <member name="T:Telerik.Charting.DataManager.ValuesColumns">
            <summary>
            Data source columns indexes used for a series data binding
            </summary>
        </member>
        <member name="T:Telerik.Charting.DataManager.ColumnType">
            <summary>
            Possible data source columns' types 
            </summary>
        </member>
        <member name="T:Telerik.Charting.DataManager.ItemType">
            <summary>
            Chart item type Series or SeriesItem
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartItemDataBoundEventArgs">
            <summary>
            Class containing event data for an ItemDataBound event
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartItemDataBoundEventArgs.#ctor(Telerik.Charting.ChartSeriesItem,Telerik.Charting.ChartSeries,System.Object)">
            <summary>
            Class constructor
            </summary>
            <param name="seriesItem">Data bound series item</param>
            <param name="chartSeries">Parent series</param>
            <param name="dataItem">Current data source object</param>
        </member>
        <member name="P:Telerik.Charting.ChartItemDataBoundEventArgs.DataItem">
            <summary>
            Real data source object for a chart. 
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartItemDataBoundEventArgs.ChartSeries">
            <summary>
            Chart series 
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartItemDataBoundEventArgs.SeriesItem">
            <summary>
            Series item
            </summary>
        </member>
        <member name="T:Telerik.Charting.DataTableDataHelper">
            <summary>
            DataTable data source helper class
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataTableDataHelper.#ctor(System.Data.DataTable)">
            <summary>
            Default constructor
            </summary>
            <param name="data">DataTable objects as chart's data source</param>
        </member>
        <member name="M:Telerik.Charting.DataTableDataHelper.GetObjectValue(System.Int32,System.Int32)">
            <summary>
            Return the object value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Object value at given column and row from data source</returns>
        </member>
        <member name="M:Telerik.Charting.DataTableDataHelper.IsColumnNumeric(System.Int32)">
            <summary>
            Returns true if given column contains numeric values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains numeric values</returns>
        </member>
        <member name="M:Telerik.Charting.DataTableDataHelper.IsColumnString(System.Int32)">
            <summary>
            Returns true if given column contains string type values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains string values</returns>
        </member>
        <member name="M:Telerik.Charting.DataTableDataHelper.GetColumnIndex(System.String)">
            <summary>
            Gets the column index by column name in the Data Source object 
            </summary>
            <param name="columnName">Column name</param>
            <returns>Column index if column found or -1 if column not found</returns>
        </member>
        <member name="M:Telerik.Charting.DataTableDataHelper.GetColumnName(System.Int32)">
            <summary>
            Gets the column name 
            </summary>
            <param name="columnIndex">Column index</param>
            <returns></returns>        
        </member>
        <member name="P:Telerik.Charting.DataTableDataHelper.RowsCount">
            <summary>
            Gets the data source rows count
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataTableDataHelper.ColumnsCount">
            <summary>
            Gets the data source columns count
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataTableDataHelper.ColumnNameSupported">
            <summary>
            Returns true, because current data source supports columns naming
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataTableDataHelper.DataTable">
            <summary>
            Gets the DataTable object
            </summary>
        </member>
        <member name="T:Telerik.Charting.Product">
            <summary>
            Sample object. Used for a data binding demonstration only
            </summary>
        </member>
        <member name="T:Telerik.Charting.ProductsBL">
            <summary>
            Sample business logic object. Used for a data binding demonstration only
            </summary>
        </member>
        <member name="M:Telerik.Charting.ProductsBL.GetProductsList">
            <summary>
            Returns products list
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Charting.DataSetClass">
            <summary>
            Sample class returns DataSet for an ObjectDataSource data binding demo
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataSetClass.#ctor">
            <summary>
            Constructor. Loads sample data in DataSet
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataSetClass.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataSetClass.GetData">
            <summary>
            Gets data as DataSet object
            </summary>
            <returns>DataSet with sample data</returns>
        </member>
        <member name="T:Telerik.Charting.ComplexDataSetClass">
            <summary>
            Sample class returns DataSet with several columns which could be used as Y values source. Used for a data binding demonstration only
            </summary>
            <remarks>Shows products sales by month.</remarks>
        </member>
        <member name="M:Telerik.Charting.ComplexDataSetClass.#ctor">
            <summary>
            Constructor. Loads sample data in DataSet
            </summary>
        </member>
        <member name="M:Telerik.Charting.ComplexDataSetClass.Finalize">
            <summary>
            Class destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.ComplexDataSetClass.GetData">
            <summary>
            Gets data
            </summary>
            <returns>DataSet with sample multicolumn data</returns>
        </member>
        <member name="T:Telerik.Charting.ProductsList">
            <summary>
            IBindingList example. Used for a data binding demonstration only
            </summary>
        </member>
        <member name="M:Telerik.Charting.ProductsList.LoadProducts">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Charting.ProductsList.Add(Telerik.Charting.Product)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ProductsList.AddNew">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ProductsList.Remove(Telerik.Charting.Product)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.ProductsList.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="ev"></param>
        </member>
        <member name="P:Telerik.Charting.ProductsList.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Charting.DoubleCollection">
            <summary>
            Collection base object example. Used for a data binding demostration only
            </summary>
        </member>
        <member name="M:Telerik.Charting.DoubleCollection.InitData">
            <summary>
            Data load method
            </summary>
        </member>
        <member name="T:Telerik.Charting.DemoData">
            <summary>
            Simple data sources examples class. Used for a data binding demonstration only
            </summary>
        </member>
        <member name="F:Telerik.Charting.DemoData.DoubleArray">
            <summary>
            Double Array example
            </summary>
        </member>
        <member name="F:Telerik.Charting.DemoData.ObjectsArray">
            <summary>
            Object array without groups column example
            </summary>
        </member>
        <member name="F:Telerik.Charting.DemoData.ObjectsArrayCat">
            <summary>
            Object array with groups column example
            </summary>
        </member>
        <member name="M:Telerik.Charting.DemoData.#ctor">
            <summary>
            Main class constructor
            </summary>
        </member>
        <member name="P:Telerik.Charting.DemoData.DoubleList">
            <summary>
            Strong typed double list example
            </summary>
        </member>
        <member name="T:Telerik.Charting.ListDataHelper">
            <summary>
            Helper class for data binding on the strongly typed lists of objects that can be accessed by index
            </summary>
        </member>
        <member name="M:Telerik.Charting.ListDataHelper.#ctor(System.Collections.IList)">
            <summary>
            Constructor
            </summary>
            <param name="list">Data source that implements IList interface</param>
        </member>
        <member name="M:Telerik.Charting.ListDataHelper.GetObjectValue(System.Int32,System.Int32)">
            <summary>
            Return the object value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Object value at given column and row from data source</returns>
        </member>
        <member name="M:Telerik.Charting.ListDataHelper.IsColumnNumeric(System.Int32)">
            <summary>
            Returns true if given column contains numeric values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains numeric values</returns>
        </member>
        <member name="M:Telerik.Charting.ListDataHelper.IsColumnString(System.Int32)">
            <summary>
            Returns true if given column contains string type values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains string values</returns>
        </member>
        <member name="M:Telerik.Charting.ListDataHelper.GetColumnIndex(System.String)">
            <summary>
            Returns column index in a data list by column name
            </summary>
            <param name="columnName">Column name in data list</param>
            <remarks>Unsupported by current DataHelper</remarks>
            <returns>Always returns -1</returns>
        </member>
        <member name="M:Telerik.Charting.ListDataHelper.GetColumnName(System.Int32)">
            <summary>
            Returns column name in a data list by column index
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Empty string, because it is unsupported by current DataHelper</returns>
        </member>
        <member name="P:Telerik.Charting.ListDataHelper.RowsCount">
            <summary>
            Gets the data source rows count
            </summary>
        </member>
        <member name="P:Telerik.Charting.ListDataHelper.ColumnsCount">
            <summary>
            Gets the data source columns count
            </summary>
        </member>
        <member name="P:Telerik.Charting.ListDataHelper.ColumnNameSupported">
            <summary>
            Returns false, because current data source does not support columns naming
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartBaseLabel">
            <summary>
            Base class for all labels
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartBaseLabel.chartBaseLabelTextBlock">
            <summary>
            ChartLabel text
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartBaseLabel.chartBaseLabelMarker">
            <summary>
            Graphic marker
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartBaseLabel.chartBaseLabelParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartBaseLabel.chartBaseLabelOrderList">
            <summary>
            List, that represent the render order for taken up elements
            (For IContainer.OrderList property)
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartBaseLabel.chartBaseLabelActiveRegion">
            <summary>
            Active region
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.#ctor">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.#ctor(Telerik.Charting.IContainer)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="container">Container of the label</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.#ctor(System.Object,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container of the label</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.#ctor(System.Object)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.#ctor(System.String)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="text">Text of TextBlock</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.#ctor(Telerik.Charting.TextBlock)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="textBlock">TextBlock</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.#ctor(System.Object,Telerik.Charting.IContainer,Telerik.Charting.TextBlock)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container of the label</param>
            <param name="textBlock">TextBlock</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.#ctor(System.Object,Telerik.Charting.IContainer,Telerik.Charting.TextBlock,Telerik.Charting.Styles.LayoutStyle)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container of the label</param>
            <param name="textBlock">TextBlock</param>
            <param name="appearance">Style of label</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.IsVisible">
            <summary>
            Gets whether Label is real visible
            </summary>
            <returns>Label's visibility</returns>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Measure label
            </summary>
            <param name="renderEngine">Render Engine of chart</param>
            <returns>Calculated size of Label</returns>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.CalculatePosition(Telerik.Charting.RenderEngine)">
            <summary>
            Calculates position
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.GetOrder(Telerik.Charting.IOrdering)">
            <summary>
            Gets elements order position
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.Add(Telerik.Charting.IOrdering)">
            <summary>
            Add element at the end of list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.Insert(System.Int32,Telerik.Charting.IOrdering)">
            <summary>
            Insert element at specific position in list
            </summary>
            <param name="order">Position</param>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.Remove(Telerik.Charting.IOrdering)">
            <summary>
            Remove  element from list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.RemoveAt(System.Int32)">
            <summary>
            Remove  element from list by it's index
            </summary>
            <param name="index">Position</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.ReIndex">
            <summary>
            Re-index order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.Dispose">
            <summary>
            Dispose element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.Dispose(System.Boolean)">
            <summary>
            Dispose element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.LoadViewState(System.Object)">
            <summary>
            Load ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.SaveViewState">
            <summary>
            Save to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="M:Telerik.Charting.ChartBaseLabel.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of ChartBaseLabel class with the same fields as this object</returns>
        </member>
        <member name="P:Telerik.Charting.ChartBaseLabel.TextBlock">
            <summary>
            ChartLabel TextBlock
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartBaseLabel.Marker">
            <summary>
            Graphic marker of label
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartBaseLabel.Parent">
            <summary>
            Gets and sets Parent element
            </summary>
            <value>Element that should be Parent for this</value>
        </member>
        <member name="P:Telerik.Charting.ChartBaseLabel.PlacementDirection">
            <summary>
            Gets and sets Direction of label position in auto mode
            </summary>
            <value>Direction of label position.</value>
        </member>
        <member name="P:Telerik.Charting.ChartBaseLabel.ActiveRegion">
             <summary>
            Gets and sets Active region
             </summary>
             <value>Active region to set</value>
        </member>
        <member name="P:Telerik.Charting.ChartBaseLabel.Visible">
            <summary>
            Gets and sets label's visibility
            </summary>
            <value>Visible label or not</value>
        </member>
        <member name="P:Telerik.Charting.ChartBaseLabel.OrderList">
            <summary>
            List, that represent the render order for taken up elements
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartBaseLabel.NextPosition">
            <summary>
            Gets a next free order position
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartLabel">
            <summary>
            Base class for labels with style
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartLabel.#ctor">
            <summary>
            Create new instance of ChartLabel class
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartLabel.#ctor(System.Object)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="parent">Parent Element</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabel.#ctor(System.String)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="text">Text of label</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabel.#ctor(Telerik.Charting.Styles.StyleLabel)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="appearance">Style of label</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabel.#ctor(Telerik.Charting.Styles.StyleLabel,System.Object)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabel.#ctor(Telerik.Charting.Styles.StyleLabel,System.String)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabel.#ctor(Telerik.Charting.Styles.StyleLabel,Telerik.Charting.TextBlock)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="textBlock">TextBlock of label</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabel.#ctor(Telerik.Charting.Styles.StyleLabel,Telerik.Charting.TextBlock,System.Object)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="textBlock">TextBlock of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabel.#ctor(Telerik.Charting.Chart,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabel.#ctor(System.Object,Telerik.Charting.IContainer,Telerik.Charting.Styles.StyleLabel,Telerik.Charting.TextBlock,System.String)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of chart</param>
            <param name="textBlock">TextBlock of label</param>
            <param name="text">Text of label</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabel.IsVisible">
            <summary>
            Gets visibility of label
            </summary>
            <returns>Visible or not </returns>
        </member>
        <member name="P:Telerik.Charting.ChartLabel.Appearance">
            <summary>
            Link to visualization and design properties
            </summary>
        </member>
        <member name="T:Telerik.Charting.ExtendedLabel">
            <summary>
            Base class for extended labels
            </summary>
        </member>
        <member name="F:Telerik.Charting.ExtendedLabel.extendedLabelItems">
            <summary>
            Inside labels collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.#ctor">
            <summary>
            Create new instance of Extended label class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.#ctor(System.Object)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.#ctor(System.String)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="text">Text of label</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.#ctor(Telerik.Charting.Styles.StyleExtendedLabel)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="appearance">Style of label</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.#ctor(Telerik.Charting.Styles.StyleExtendedLabel,System.Object)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.#ctor(Telerik.Charting.Styles.StyleExtendedLabel,System.String)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.#ctor(Telerik.Charting.TextBlock)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="textBlock">TextBlock</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.#ctor(System.Object,Telerik.Charting.IContainer,Telerik.Charting.TextBlock)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container</param>
            <param name="textBlock">TextBlock</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.#ctor(System.Object,Telerik.Charting.IContainer,Telerik.Charting.Styles.StyleExtendedLabel,Telerik.Charting.TextBlock,System.String)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container</param>
            <param name="appearance">Style of label</param>
            <param name="textBlock">TextBlock</param>
            <param name="text">Text of elemnt</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.GetMaxAvailableContentSize">
            <summary>
            Gets Available Content Size
            </summary>
            <returns>Size without margins and paddings</returns>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.IsVisible">
            <summary>
            Gets visibility of label
            </summary>
            <returns>Visibility of label</returns>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Measure label
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of label</returns>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.Clear">
            <summary>
            Clear LabelItems collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.AddLabel(Telerik.Charting.LabelItem,Telerik.Charting.LabelItem[])">
            <summary>
            Add inside labels
            </summary>
            <param name="Label">Inside label to add</param>
            <param name="chartLabels">Inside labels to add</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.AddLabel(Telerik.Charting.ChartLabelsCollection)">
            <summary>
            Add inside labels
            </summary>
            <param name="chartLabels">Inside labels to add</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.AddLabel(Telerik.Charting.LabelItem[])">
            <summary>
            Add inside labels
            </summary>
            <param name="chartLabels">Inside labels to add</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.AddLabel(System.Collections.Generic.List{Telerik.Charting.LabelItem})">
            <summary>
            Add inside labels
            </summary>
            <param name="chartLabels">Inside labels to add</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.GetLabel(System.Int32)">
            <summary>
            Get inner label at specified position
            </summary>
            <param name="index">Position to get label</param>
            <returns>Label at specified position</returns>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.RemoveAllLabels">
            <summary>
            Removes all inner labels
            </summary>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.RemoveLabel(Telerik.Charting.LabelItem,Telerik.Charting.LabelItem[])">
            <summary>
            Removes inner labels
            </summary>
            <param name="Label">Label to remove</param>
            <param name="chartLabels">Labels to remove</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.RemoveLabel(System.Int32,System.Int32[])">
            <summary>
            Removes inner labels
            </summary>
            <param name="index">Position where label should be removed</param>
            <param name="indexes">Positions where labels should be removed</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.LoadViewState(System.Object)">
            <summary>
            load ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.ExtendedLabel.SaveViewState">
            <summary>
            Save ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.ExtendedLabel.Appearance">
             <summary>
            Gets style of label
             </summary>
        </member>
        <member name="P:Telerik.Charting.ExtendedLabel.Item(System.Int32)">
            <summary>
            Gets and sets LabelItem at specified position
            </summary>
            <param name="itemIndex">Item position</param>
            <returns>Item at specified position</returns>
            <value>Item to set at specified position</value>
        </member>
        <member name="P:Telerik.Charting.ExtendedLabel.Items">
            <summary>
            Items collection.
            </summary>
        </member>
        <member name="T:Telerik.Charting.LabelItem">
            <summary>
            Base class for labels in label collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.LabelItem.labelItemIsBound">
            <summary>
            Whether item is bound to series
            </summary>
        </member>
        <member name="M:Telerik.Charting.LabelItem.#ctor">
            <summary>
            New instance of LabelItem class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.LabelItem.#ctor(System.Object)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.LabelItem.#ctor(System.String)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="text">Text of label</param>
        </member>
        <member name="M:Telerik.Charting.LabelItem.#ctor(Telerik.Charting.Styles.StyleLabel)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="appearance">Style of label</param>
        </member>
        <member name="M:Telerik.Charting.LabelItem.#ctor(Telerik.Charting.Styles.StyleLabel,System.Object)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.LabelItem.#ctor(Telerik.Charting.Styles.StyleLabel,System.String)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="appearance">Style of chart</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.LabelItem.#ctor(Telerik.Charting.Styles.StyleLabel,Telerik.Charting.TextBlockLabelItem)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="appearance">Style of chart</param>
            <param name="textBlock">TextBlock</param>
        </member>
        <member name="M:Telerik.Charting.LabelItem.#ctor(System.Object,Telerik.Charting.Styles.StyleLabel,Telerik.Charting.TextBlockLabelItem,System.String)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="appearance">Style of chart</param>
            <param name="textBlock">TextBlock</param>
            <param name="text">Text of label</param>
        </member>
        <member name="P:Telerik.Charting.LabelItem.Name">
             <summary>
            Gets and sets Label name in collection
             </summary>
             <value>Name of label</value>
        </member>
        <member name="P:Telerik.Charting.LabelItem.IsBound">
            <summary>
            Is current item bound item or custom item
            </summary>
        </member>
        <member name="T:Telerik.Charting.BindableLegendItem">
            <summary>
            Class for bindable legend items
            </summary>
        </member>
        <member name="F:Telerik.Charting.BindableLegendItem.bindableLegendItemSource">
            <summary>
            Object to which items are bindable
            </summary>
        </member>
        <member name="M:Telerik.Charting.BindableLegendItem.#ctor(Telerik.Charting.Styles.StyleLabel,System.Object)">
            <summary>
            Create new instance of BindableLegendItem class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="P:Telerik.Charting.BindableLegendItem.BindableLegendItemSource">
            <summary>
            Source object item bound to
            </summary>
        </member>
        <member name="T:Telerik.Charting.SeriesItemLabel">
            <summary>
            Series item label
            </summary>
        </member>
        <member name="F:Telerik.Charting.SeriesItemLabel.seriesItemLabelConnectionPoint">
            <summary>
            Connection point for label
            </summary>
        </member>
        <member name="F:Telerik.Charting.SeriesItemLabel.seriesItemLabelConnectionMidPoint">
            <summary>
            Center of label
            </summary>
        </member>
        <member name="F:Telerik.Charting.SeriesItemLabel.seriesItemLabelRectangle">
            <summary>
            Rectangle of label
            </summary>
        </member>
        <member name="M:Telerik.Charting.SeriesItemLabel.#ctor">
            <summary>
            Create new instance of SeriesItemLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.SeriesItemLabel.#ctor(Telerik.Charting.ChartSeries)">
            <summary>
             Create new instance of SeriesItemLabel class.
            </summary>
            <param name="series">Series to which label belongs</param>
        </member>
        <member name="M:Telerik.Charting.SeriesItemLabel.CheckPlotAreaIntersection(Telerik.Charting.ChartPlotArea)">
            <summary>
            Checks if label intersect bounds of PlotArea
            </summary>
            <param name="plotArea">PlotArea for checking</param>
            <returns>Whether label intersect bounds of PlotArea</returns>
        </member>
        <member name="M:Telerik.Charting.SeriesItemLabel.AdjustPositionByPlotArea(Telerik.Charting.ChartPlotArea,System.Int32)">
            <summary>
            Move part of label in PlotArea
            </summary>
            <param name="plotArea">PlotArea to move in</param>
            <param name="side">Side of label which is not in PlotArea</param>
        </member>
        <member name="M:Telerik.Charting.SeriesItemLabel.SetOutsideCoordinates(System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Set label outside item
            </summary>
            <param name="rect">Item rectangle</param>
            <param name="isAuto">If Location is auto(Location - Auto, Outside, Inside)</param>
        </member>
        <member name="M:Telerik.Charting.SeriesItemLabel.SetInsideCoordinates(System.Drawing.RectangleF)">
            <summary>
            Set label inside item
            </summary>
            <param name="rect">Item rectangle</param>
        </member>
        <member name="M:Telerik.Charting.SeriesItemLabel.IsVisible(Telerik.Charting.ChartSeries)">
            <summary>
            Visibility of label
            </summary>
            <param name="series">Series to which label belongs</param>
            <returns>Visibility of label</returns>
        </member>
        <member name="M:Telerik.Charting.SeriesItemLabel.CalculateLayout(System.Drawing.PointF,System.Drawing.PointF,System.Boolean,Telerik.Charting.RenderEngine)">
            <summary>
            Calculate position
            </summary>
            <param name="locationPoint">Location point</param>
            <param name="connectionPoint">Connection point</param>
            <param name="showLabelConnectors">Visibilit of label connectors</param>
            <param name="engine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Charting.SeriesItemLabel.Adjust(Telerik.Charting.ChartPlotArea)">
            <summary>
            Moves label inside PlotArea
            </summary>
            <param name="plotArea">PlotArea</param>
        </member>
        <member name="M:Telerik.Charting.SeriesItemLabel.AdjustLabelConnectionPointForPie(System.Double,System.Drawing.PointF)">
            <summary>
            Relocate connection point for pie series 
            </summary>
            <param name="rotationAngle">Angle of  pie part</param>
            <param name="connectionPoint">Connection point</param>
            <returns>Corrected connection point</returns>
        </member>
        <member name="M:Telerik.Charting.SeriesItemLabel.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Create new instance of SeriesItemLabel class with the same fields as this object</returns>
        </member>
        <member name="P:Telerik.Charting.SeriesItemLabel.ConnectionPoint">
            <summary>
            Connection point for label
            </summary>
        </member>
        <member name="P:Telerik.Charting.SeriesItemLabel.ConnectionMidPoint">
            <summary>
            Center of label to connect to 
            </summary>
        </member>
        <member name="P:Telerik.Charting.SeriesItemLabel.Appearance">
            <summary>
            Visualization and design properties
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisLabelHidden">
            <summary>
            Axis label base
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisLabelHidden.#ctor">
            <summary>
            Create new instance of AxisLabelHidden
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisLabelHidden.#ctor(System.Object)">
            <summary>
            Create new instance of AxisLabelHidden
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.AxisLabelHidden.#ctor(System.String)">
            <summary>
            Create new instance of AxisLabelHidden
            </summary>
            <param name="text">Text of label</param>
        </member>
        <member name="M:Telerik.Charting.AxisLabelHidden.#ctor(System.Object,Telerik.Charting.IContainer,Telerik.Charting.Styles.StyleLabelHidden,Telerik.Charting.TextBlock,System.String)">
            <summary>
            Create new instance of AxisLabelHidden
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of label</param>
            <param name="textBlock">TextBlock</param>
            <param name="text">Text of label</param>
        </member>
        <member name="P:Telerik.Charting.AxisLabelHidden.Visible">
            <summary>
            Gets and sets Visibility of label
            </summary>
            <value>Visibility of label</value>
        </member>
        <member name="T:Telerik.Charting.AxisLabel">
            <summary>
            X Axis label
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisLabel.#ctor">
            <summary>
            Create new instance of AxisLabel
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisLabel.#ctor(System.Object,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of AxisLabel
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="T:Telerik.Charting.AxisYLabel">
            <summary>
            Y axis label
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisYLabel.#ctor">
            <summary>
            Create new instance of AxisYLabel
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisYLabel.#ctor(System.Object,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of AxisYLabel
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="T:Telerik.Charting.MarkedZoneLabel">
            <summary>
            MarkedZone label class
            </summary>
        </member>
        <member name="M:Telerik.Charting.MarkedZoneLabel.#ctor">
            <summary>
            Create new instance of MarkedZoneLabel
            </summary>
        </member>
        <member name="M:Telerik.Charting.MarkedZoneLabel.#ctor(Telerik.Charting.Styles.StyleLabel)">
            <summary>
            Create new instance of MarkedZoneLabel
            </summary>
            <param name="appearance">Style of label</param>
        </member>
        <member name="M:Telerik.Charting.MarkedZoneLabel.#ctor(Telerik.Charting.Styles.StyleLabel,System.Object)">
            <summary>
            Create new instance of MarkedZoneLabel
            </summary>
            <param name="appearance">Style of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.MarkedZoneLabel.#ctor(Telerik.Charting.Styles.StyleLabel,System.String)">
            <summary>
            Create new instance of MarkedZoneLabel
            </summary>
            <param name="appearance">Style of label</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.MarkedZoneLabel.#ctor(Telerik.Charting.Chart,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of MarkedZoneLabel
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="T:Telerik.Charting.ChartLabelsCollection">
            <summary>
            Collection of labels
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartingStateManagedCollection`1">
            <summary>
            Base class for all collections support view state tracking
            </summary>
            <typeparam name="T">Collection item type</typeparam>
        </member>
        <member name="T:Telerik.Charting.IDeserializableCollection">
            <summary>
            Describes the elements collection which can be de-serialized using StyleSerializer
            </summary>
        </member>
        <member name="M:Telerik.Charting.IDeserializableCollection.PopulateFromXml(System.Xml.XmlElement)">
            <summary>
            Populates collection with items from imported Xml code
            </summary>
            <param name="rootElement">XmlElement to import from</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.IndexOf(`0)">
            <summary>
            Item index in collection
            </summary>
            <param name="item">Item to get index of</param>
            <returns>Index</returns>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts item at the given index
            </summary>
            <param name="index">Index</param>
            <param name="item">Item to insert</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes item from collection at given index
            </summary>
            <param name="index">Index to remove at</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.Add(`0)">
            <summary>
            Adds new item in collection
            </summary>
            <param name="item">Item to add</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.AddRange(`0[])">
            <summary>
            Adds items range in collection
            </summary>
            <param name="itemsToAdd">Items array to add</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.Clear">
            <summary>
            Clears collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.Contains(`0)">
            <summary>
            Checks does collection contain the given item
            </summary>
            <param name="item">Item to check</param>
            <returns>True if item is a collection member</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.ChartingStateManagedCollection`1.CopyTo(`0[],System.Int32)" -->
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.Remove(`0)">
            <summary>
            Removes item from collection
            </summary>
            <param name="item">Item to remove</param>
            <returns>True in case of success</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.ChartingStateManagedCollection`1.GetEnumerator" -->
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection
            </summary>
            <returns>An System.Collections.IEnumerator object that can be used to iterate through the collection</returns>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.Telerik#Charting#IChartingStateManager#LoadViewState(System.Object)">
            <summary>
            Loads collection from view state
            </summary>
            <param name="state">View state to load from</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.LoadViewState(System.Object)">
            <summary>
            Loads collection from view state
            </summary>
            <param name="state">View state to load from</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.SaveViewState">
            <summary>
            Saves collection to a view state
            </summary>
            <returns>Saved state bag object</returns>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.Telerik#Charting#IChartingStateManager#SaveViewState">
            <summary>
            Saves collection to a view state
            </summary>
            <returns>Saved state bag object</returns>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.Telerik#Charting#IChartingStateManager#TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.SetDirty">
            <summary>
            Sets is item in the dirty state
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.SetItemDirty(`0)">
            <summary>
            Marks collection item dirty
            </summary>
            <param name="item">Item to mark</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds new item in the IList
            </summary>
            <param name="value">Item to add</param>
            <returns>Item index in IList</returns>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Clear">
            <summary>
            Clears IList items
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Checks does IList contain the given value
            </summary>
            <param name="value">Value to check</param>
            <returns>True if contains</returns>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Gets the index of the object value in an IList
            </summary>
            <param name="value">Value to check</param>
            <returns>Index in IList or -1 if IList does not contain given value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts new value in IList at given index
            </summary>
            <param name="index">Index to insert to</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes value from IList
            </summary>
            <param name="value">Value to remove</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes value from IList at the given index
            </summary>
            <param name="index">Index to remove value at</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
                Copies the entire ICollection to a compatible one-dimensional
                array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.OnInsert(System.Int32,System.Object)">
            <summary>
            Item before insert event
            </summary>
            <param name="index">Index to insert at</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Item after insert event
            </summary>
            <param name="index">Index to insert at</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.OnRemove(System.Int32,System.Object)">
            <summary>
            Item before remove event
            </summary>
            <param name="index">Index to insert at</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Item after remove event
            </summary>
            <param name="index">Index to insert at</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.OnClear">
            <summary>
            Before collection clearing event
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.OnClearComplete">
            <summary>
            Collection after clean event
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.Telerik#Charting#IDeserializableCollection#PopulateFromXml(System.Xml.XmlElement)">
            <summary>
            Populates collection from XML element
            </summary>
            <param name="rootElement">XmlElement to import from</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.PopulateFromXml(System.Xml.XmlElement)">
            <summary>
            Populates collection from XML element
            </summary>
            <param name="rootElement">XmlElement to import from</param>
        </member>
        <member name="M:Telerik.Charting.ChartingStateManagedCollection`1.ToString">
            <exclude/>
            <excludetoc/>
            <summary>
            ToString() override. Used in the properties grid to avoid object type showing.
            </summary>
            <returns>Empty string</returns>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.List">
            <summary>
            Items list
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.First">
            <summary>
            Link to first item in collection
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.Last">
            <summary>
            Link to last item in collection
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.Item(System.Int32)">
            <summary>
            Gets the collection item at given index
            </summary>
            <param name="index">Index</param>
            <returns>Item of type "T"</returns>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.Count">
            <summary>
            Gets items count in collection
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.IsReadOnly">
            <summary>
            Gets true if collection is read-only
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.Telerik#Charting#IChartingStateManager#IsTrackingViewState">
            <summary>
            Gets the view state tracking status
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#IList#IsFixedSize">
            <summary>
            Is IList fixed size. Returns False
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#IList#IsReadOnly">
            <summary>
            Is IList is read-only
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the value from/to IList at the give index
            </summary>
            <param name="index">Index to give element at</param>
            <returns>Value from IList</returns>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#ICollection#Count">
            <summary>
            Gets the collection items count
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Checks is collection synchronized
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartingStateManagedCollection`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets the collection root
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartLabelsCollection.labelsCollectionParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.#ctor">
            <summary>
            Create new instance of ChartLabelsCollection class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.ClearBindableItems">
            <summary>
            Clear bindable items from collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.CopyBindableItemsTo(Telerik.Charting.ChartLabelsCollection)">
            <summary>
            Copy bindable items to collection
            </summary>
            <param name="items">Collection of items copy to</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.IsVisible">
            <summary>
            Visibility of items collection 
            </summary>
            <returns>Whether any item is visible</returns>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.Add(Telerik.Charting.LabelItem)">
            <summary>
            Add LabelItem at the collection
            </summary>
            <param name="item">LabelItem for adding</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.Clear">
            <summary>
            Clear collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.Insert(System.Int32,Telerik.Charting.LabelItem)">
            <summary>
            Insert LabelItem in collection at the specific position
            </summary>
            <param name="index">Position</param>
            <param name="item">LabelItem</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.Remove(Telerik.Charting.LabelItem)">
            <summary>
            Remove LabelItem from collection
            </summary>
            <param name="item">LabelItem</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove LabelItem in the specific position from collection
            </summary>
            <param name="index">Position</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Remove item at specified index
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.OnClearComplete">
            <summary>
            Clear items
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Insert item in collection
            </summary>
            <param name="index">Index to insert in</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="M:Telerik.Charting.ChartLabelsCollection.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="state">ViewState with data</param>
        </member>
        <member name="P:Telerik.Charting.ChartLabelsCollection.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartLabelsCollection.Item(System.Int32)">
            <summary>
            Gets or sets a LabelItem at the specific position in Labels collection.
            </summary>
            <param name="index">Position in the collection</param>
            <returns>LabelItem at the specific position </returns>
        </member>
        <member name="T:Telerik.Charting.ChartMarker">
            <summary>
            Base class for a different markers representation
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartMarker.chartMarkerParent">
            <summary>
            Parent Chart element
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartMarker.chartMarkerActiveRegion">
            <summary>
            Active region
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarker.#ctor">
            <summary>
            Create new instance of ChartMarker class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarker.#ctor(System.Object)">
            <summary>
            Create new instance of ChartMarker class.
            </summary>
            <param name="parent">Parent lement</param>
        </member>
        <member name="M:Telerik.Charting.ChartMarker.#ctor(Telerik.Charting.IContainer)">
            <summary>
            Create new instance of ChartMarker class.
            </summary>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.ChartMarker.#ctor(System.Object,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of ChartMarker class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.ChartMarker.CopyFrom(Telerik.Charting.ChartMarker)">
            <summary>
            Copy fields from specified object
            </summary>
            <param name="marker">Marker to copy from</param>
        </member>
        <member name="M:Telerik.Charting.ChartMarker.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarker.LoadViewState(System.Object)">
            <summary>
            Load data to ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.ChartMarker.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.ChartMarker.Visible">
            <summary>
            Gets and sets visibility
            </summary>
            <value>Visibility of marker</value>
        </member>
        <member name="P:Telerik.Charting.ChartMarker.Parent">
             <summary>
            Gets and sets  Parent element
             </summary>
             <value>Parent element</value>
        </member>
        <member name="P:Telerik.Charting.ChartMarker.Appearance">
            <summary>
            LabelAppearance properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMarker.ActiveRegion">
            <summary>
            Active region
            </summary>
        </member>
        <member name="T:Telerik.Charting.IntelligentEngine">
            <summary>
            Intelligence labels engine. Used to automatically series labels relocation to avoid their overlapping.
            </summary>
        </member>
        <member name="M:Telerik.Charting.IntelligentEngine.Distribute(System.Collections.Generic.List{Telerik.Charting.SeriesItemLabel},System.Drawing.RectangleF)">
            <summary>
            Distribute labels
            </summary>
            <param name="rects">PlotArea rectangle</param>
        </member>
        <member name="M:Telerik.Charting.IntelligentEngine.Distribute(System.Drawing.RectangleF[],Telerik.Charting.SeriesItemLabel)">
            <summary>
            Distribute labels
            </summary>
            <param name="rects">Labels' rectangles</param>
            <param name="moveRect">Label to move</param>
        </member>
        <member name="M:Telerik.Charting.IntelligentEngine.IsLocateInVisibleArea(Telerik.Charting.SeriesItemLabel,System.Drawing.RectangleF)">
            <summary>
            Filters labels
            </summary>
            <param name="labels">Label for checking whether it is in visible part of chart</param>
            <param name="area">Visible area</param>
        </member>
        <member name="M:Telerik.Charting.IntelligentEngine.HitTest(System.Drawing.RectangleF[],System.Drawing.RectangleF,System.Nullable{System.Drawing.PointF}@,System.Nullable{System.Drawing.RectangleF}@)">
            <summary>
            Intersection testing
            </summary>
            <param name="rects">Rectangles for checking whether intersection takes place</param>
            <param name="rect">Rectangle to check intersection with other rectangles</param>
            <param name="cPoint">Point of rectangle that intersect other rectangle</param>
            <param name="cRect">Rectangle that specified rectangle intersects</param>
            <returns>True if rectangle intersect specified rectangles</returns>
        </member>
        <member name="M:Telerik.Charting.IntelligentEngine.MoveTo(System.Drawing.RectangleF@,System.Drawing.PointF)">
            <summary>
            Move rect to new location
            </summary>
            <param name="rect">Rectangle to move</param>
            <param name="point">New point location</param>
        </member>
        <member name="M:Telerik.Charting.IntelligentEngine.GetDistance(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calculates distance between two points
            </summary>
            <param name="point1">First point</param>
            <param name="point2">Second point</param>
            <returns>Distance between two points</returns>
        </member>
        <member name="M:Telerik.Charting.IntelligentEngine.GetMoveData(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.PointF)">
            <summary>
            Define an object that containes an information about moving required
            </summary>
            <param name="rect">One label rectangle</param>
            <param name="rect2">Second label rectangle</param>
            <param name="ipoint">Intersection point</param>
            <returns>MoveData object</returns>
        </member>
        <member name="M:Telerik.Charting.IntelligentEngine.GetValueIndex(System.Single[])">
            <summary>
            Define a side in which moving require
            </summary>
            <param name="dims">Array of distances</param>
            <returns>Index for Direction enum</returns>
        </member>
        <member name="M:Telerik.Charting.IntelligentEngine.IsVertical(Telerik.Charting.IntelligentEngine.Direction)">
            <summary>
            Check if vertical moving takes place
            </summary>
            <param name="direction">Direction to move</param>
            <returns>True if vertical moving takes place</returns>
        </member>
        <member name="T:Telerik.Charting.IntelligentEngine.Direction">
            <summary>
            Where label should be moved
            </summary>
        </member>
        <member name="T:Telerik.Charting.IntelligentEngine.MoveData">
            <summary>
            Moving related data holder
            </summary>
        </member>
        <member name="F:Telerik.Charting.IntelligentEngine.MoveData.moveDataDistance">
            <summary>
            Distance to move label
            </summary>
        </member>
        <member name="F:Telerik.Charting.IntelligentEngine.MoveData.moveDataDirection">
            <summary>
            Direction where to move
            </summary>
        </member>
        <member name="P:Telerik.Charting.IntelligentEngine.MoveData.Distance">
            <summary>
            Gets and sets Moving distance
            </summary>
            <value>Distance for moving</value>
        </member>
        <member name="P:Telerik.Charting.IntelligentEngine.MoveData.Direction">
            <summary>
            Gets and sets Moving direction
            </summary>
            <value>Direction for moving</value>
        </member>
        <member name="T:Telerik.Charting.TextBlock">
            <summary>
            Label text properties
            </summary>
        </member>
        <member name="F:Telerik.Charting.TextBlock.textBlockCalculatedMaxLength">
            <summary>
            Max length of text
            </summary>
        </member>
        <member name="F:Telerik.Charting.TextBlock.textBlockWrapContext">
            <summary>
            Contains specified parameters for wrapping text 
            </summary>
        </member>
        <member name="F:Telerik.Charting.TextBlock.textBlockWrappedText">
            <summary>
            Wrapped text
            </summary>
        </member>
        <member name="F:Telerik.Charting.TextBlock.textBlockParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Charting.TextBlock.DEFAULT_TEXT">
            <summary>
            Default text of text block
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlock.#ctor">
            <summary>
            Create new instance of TextBlock class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlock.#ctor(Telerik.Charting.Styles.StyleTextBlock)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="appearance">Style of TextBlock</param>
        </member>
        <member name="M:Telerik.Charting.TextBlock.#ctor(System.String)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.TextBlock.#ctor(Telerik.Charting.Styles.StyleTextBlock,System.String)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="appearance">Style of TextBlock</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.TextBlock.#ctor(Telerik.Charting.ChartBaseLabel,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.TextBlock.#ctor(Telerik.Charting.ChartBaseLabel,Telerik.Charting.IContainer,System.String)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.TextBlock.#ctor(Telerik.Charting.ChartBaseLabel,Telerik.Charting.IContainer,Telerik.Charting.Styles.StyleTextBlock)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of TextBlock</param>
        </member>
        <member name="M:Telerik.Charting.TextBlock.#ctor(Telerik.Charting.ChartBaseLabel,Telerik.Charting.IContainer,Telerik.Charting.Styles.StyleTextBlock,System.String)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of textblock</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.TextBlock.CheckToolTip">
            <summary>
            Forms ToolTip if text length greater than max length
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlock.CheckToolTip(System.String)">
            <summary>
            Forms ToolTip if text length greater than max length
            </summary>
            <param name="oldText">Text</param>
        </member>
        <member name="M:Telerik.Charting.TextBlock.textBlockAppearance_MaxLengthChanged(System.Object,System.EventArgs)">
            <summary>
            Check if tooltip should be changed when max length changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Charting.TextBlock.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="M:Telerik.Charting.TextBlock.CalculatePosition(Telerik.Charting.RenderEngine)">
            <summary>
            Calculate TextBlock position
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Charting.TextBlock.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlock.Dispose(System.Boolean)">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Should appearance be disposed</param>
        </member>
        <member name="P:Telerik.Charting.TextBlock.Visible">
            <summary>
            get a and sets visibility of TextBlock
            </summary>
            <value>Visibility of TextBlock</value>
        </member>
        <member name="P:Telerik.Charting.TextBlock.Parent">
            <summary>
            Parent chart element
            </summary>
            <value>Parent element</value>
        </member>
        <member name="P:Telerik.Charting.TextBlock.Text">
            <summary>
            Contained text data
            </summary>
            <value>Text</value>
        </member>
        <member name="P:Telerik.Charting.TextBlock.Appearance">
            <summary>
            Text field style
            </summary>
            <value>Style of TextBlock</value>
        </member>
        <member name="P:Telerik.Charting.TextBlock.VisibleText">
            <summary>
            Visible text with MaxLength applied
            </summary>
        </member>
        <member name="P:Telerik.Charting.TextBlock.IsVisible">
            <summary>
            Gets TextBlock visibility
            </summary>
        </member>
        <member name="T:Telerik.Charting.TextBlockTitle">
            <summary>
            Chart title text container properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockTitle.#ctor">
            <summary>
            Create new instance of TextBlockTitle class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockTitle.#ctor(Telerik.Charting.ChartTitle,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockTitle class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockTitle.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="P:Telerik.Charting.TextBlockTitle.Text">
            <summary>
            Contained text data
            </summary>
        </member>
        <member name="T:Telerik.Charting.TextBlockEmptySeriesMessage">
            <summary>
            Empty Series message text container properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockEmptySeriesMessage.#ctor">
            <summary>
            Create new instance of TextBlockEmptySeriesMessage class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockEmptySeriesMessage.#ctor(Telerik.Charting.EmptySeriesMessage,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockEmptySeriesMessage class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockEmptySeriesMessage.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="P:Telerik.Charting.TextBlockEmptySeriesMessage.Text">
            <summary>
            Contained text data
            </summary>
        </member>
        <member name="T:Telerik.Charting.TextBlockAxisItem">
            <summary>
            Axis item text container properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockAxisItem.#ctor">
            <summary>
            Create new instance of TextBlockAxisItem class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockAxisItem.#ctor(Telerik.Charting.ChartAxisItem,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockAxisItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockAxisItem.DefineMaxLengthAuto(Telerik.Charting.RenderEngine)">
            <summary>
            Define Max Length
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockAxisItem.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="T:Telerik.Charting.TextBlockSeriesItem">
            <summary>
            Series label text container properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockSeriesItem.#ctor">
            <summary>
            Create new instance of TextBlockSeriesItem class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockSeriesItem.#ctor(Telerik.Charting.SeriesItemLabel,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockSeriesItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="T:Telerik.Charting.TextBlockHidden">
            <summary>
            Chart title text container properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockHidden.#ctor">
            <summary>
            Create new instance of TextBlockHidden class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockHidden.#ctor(Telerik.Charting.ChartBaseLabel,Telerik.Charting.IContainer)">
            <summary>
             Create new instance of TextBlockHidden class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="P:Telerik.Charting.TextBlockHidden.Visible">
            <summary>
            Gets and sets visibility of TextBlock
            </summary>
            <value>Visibility of TextBlock</value>
        </member>
        <member name="T:Telerik.Charting.TextBlockYAxisLabel">
            <summary>
            Chart Y Axis text container properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockYAxisLabel.#ctor">
            <summary>
            Create new instance of TextBlockYAxisLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockYAxisLabel.#ctor(Telerik.Charting.AxisYLabel,Telerik.Charting.IContainer)">
            <summary>
             Create new instance of TextBlockYAxisLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockYAxisLabel.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="P:Telerik.Charting.TextBlockYAxisLabel.Text">
            <summary>
            Contained text data
            </summary>
        </member>
        <member name="T:Telerik.Charting.TextBlockXAxisLabel">
            <summary>
            Chart X Axis text container properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockXAxisLabel.#ctor">
            <summary>
             Create new instance of TextBlockXAxisLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockXAxisLabel.#ctor(Telerik.Charting.AxisLabel,Telerik.Charting.IContainer)">
            <summary>
             Create new instance of TextBlockXAxisLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockXAxisLabel.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="P:Telerik.Charting.TextBlockXAxisLabel.Text">
            <summary>
            Contained text data
            </summary>
        </member>
        <member name="T:Telerik.Charting.TextBlockLabelItem">
            <summary>
            Legend item's text block
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockLabelItem.#ctor">
            <summary>
             Create new instance of TextBlockLabelItem class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockLabelItem.#ctor(Telerik.Charting.Styles.StyleTextBlock)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="appearance">Style of TextBlock</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockLabelItem.#ctor(System.String)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockLabelItem.#ctor(Telerik.Charting.Styles.StyleTextBlock,System.String)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="appearance">Style of chart</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockLabelItem.#ctor(Telerik.Charting.ChartBaseLabel,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockLabelItem.#ctor(Telerik.Charting.ChartBaseLabel,Telerik.Charting.IContainer,System.String)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockLabelItem.#ctor(Telerik.Charting.ChartBaseLabel,Telerik.Charting.IContainer,Telerik.Charting.Styles.StyleTextBlock)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of TextBlock</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockLabelItem.#ctor(Telerik.Charting.ChartBaseLabel,Telerik.Charting.IContainer,Telerik.Charting.Styles.StyleTextBlock,System.String)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of TextBlock</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockLabelItem.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="T:Telerik.Charting.TextBlockLegend">
            <summary>
            Chart title text container properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockLegend.#ctor">
            <summary>
            Create new instance of TextBlockLegend class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockLegend.#ctor(Telerik.Charting.ExtendedLabel,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockLegend class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockLegend.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="T:Telerik.Charting.TextBlockMarkedZone">
            <summary>
            MarkedZone label's text container properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockMarkedZone.#ctor">
            <summary>
            Create new instance of TextBlockMarkedZone class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.TextBlockMarkedZone.#ctor(Telerik.Charting.MarkedZoneLabel,Telerik.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockMarkedZone class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.TextBlockMarkedZone.Measure(Telerik.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>size of TextBlock</returns>
        </member>
        <member name="T:Telerik.Charting.ChartString">
            <summary>
            The helper class for a text wrapping feature. Represents the text string
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartString.isFirst">
            <summary>
            Defines whether it is first string or not
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartString.isLast">
            <summary>
            Defines whether it is last string or not
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartString.parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartString.words">
            <summary>
            Collection of words in text
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartString.height">
            <summary>
            Height of string
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartString.width">
            <summary>
            Width of string
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartString.#ctor">
            <summary>
            Create instance of ChartString
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartString.#ctor(System.Single)">
            <summary>
            Create instance of ChartString with specified height
            </summary>
            <param name="height">Height of string</param>
        </member>
        <member name="M:Telerik.Charting.ChartString.WidthCalculate">
            <summary>
            Calculate string width
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartString.MoveLastWordToNextString">
            <summary>
            Move last word to next string
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartString.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance with the same properties values as current class instance</returns>
        </member>
        <member name="P:Telerik.Charting.ChartString.IsFirst">
            <summary>
            Defines whether it is first string or not
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartString.IsLast">
            <summary>
            Defines whether it is last string or not
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartString.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartString.NextString">
            <summary>
            Get next string
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartString.Previous">
            <summary>
            Get previous string
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartString.Width">
            <summary>
            Get width of string
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartString.Height">
            <summary>
            Get height of string
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartString.Words">
            <summary>
            Collection of words
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartStringCollection">
            <summary>
            Strings collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartStringCollection.parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartStringCollection.#ctor(Telerik.Charting.ChartText)">
            <summary>
            Create new instance of ChartStringCollection class
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.ChartStringCollection.Add(Telerik.Charting.ChartString)">
            <summary>
             Add new string to collection
            </summary>
            <param name="str">String to add</param>
            <returns>Index of added string</returns>
        </member>
        <member name="M:Telerik.Charting.ChartStringCollection.GetNext(Telerik.Charting.ChartString)">
            <summary>
            Get next string after specified one
            </summary>
            <param name="str">String for search</param>
            <returns>Next string after specified one</returns>
        </member>
        <member name="M:Telerik.Charting.ChartStringCollection.GetPrevious(Telerik.Charting.ChartString)">
            <summary>
            Get previous string before specified one
            </summary>
            <param name="str">String for search</param>
            <returns>Previous string before specified one</returns>
        </member>
        <member name="M:Telerik.Charting.ChartStringCollection.Clone">
            <summary>
            Clone of this object
            </summary>
            <returns>New instance with the same fields</returns>
        </member>
        <member name="P:Telerik.Charting.ChartStringCollection.Item(System.Int32)">
            <summary>
            Get string with specified index
            </summary>
            <param name="index">Index to get string</param>
            <returns>String with specified index</returns>
        </member>
        <member name="P:Telerik.Charting.ChartStringCollection.First">
            <summary>
            Get the first string
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartStringCollection.Last">
            <summary>
            Get the last string
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartStringCollection.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartText">
            <summary>
            Helper class for a text wrapping feature. Represents the text to wrap
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartText.space">
            <summary>
            Word separator
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartText.strings">
            <summary>
            Text divided into strings
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartText.text">
            <summary>
            Inner text
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartText.font">
            <summary>
            Font of text
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartText.graphics">
            <summary>
            Used for measuring text
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartText.#ctor">
            <summary>
            Create new instance of the class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartText.#ctor(System.String,System.Drawing.Font,Telerik.Charting.ChartGraphics)">
            <summary>
            Create new instance of the class.
            </summary>
            <param name="text">Text</param>
            <param name="font">Font of text</param>
            <param name="graphics">Graphics object for measuring string</param>
        </member>
        <member name="M:Telerik.Charting.ChartText.Distibute(System.Single,Telerik.Charting.WrapContext)">
            <summary>
            Breaks text into lines
            </summary>
            <param name="factor">Used to make decision for breaking</param>
            <param name="context">Determines which of parameters(height, width) is fixed</param>
        </member>
        <member name="M:Telerik.Charting.ChartText.Distibute(System.Single,System.Single)">
            <summary>
            Breaks text into lines
            </summary>
            <param name="factor">Used to make decision for breaking</param>
            <param name="needWidth">Fixed width of text</param>
        </member>
        <member name="M:Telerik.Charting.ChartText.Distibute(System.Single)">
            <summary>
             Breaks text into lines
            </summary>
            <param name="factor">Used to make decision for breaking</param>
        </member>
        <member name="M:Telerik.Charting.ChartText.ToString">
            <summary>
            String representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="M:Telerik.Charting.ChartText.FixedProportionDistibution(System.Single)">
            <summary>
            Breaks text into lines with fixed proportions
            </summary>
            <param name="factor">Factor(Height-Width proportion) to make decision</param>
        </member>
        <member name="M:Telerik.Charting.ChartText.FixedHeightDistibution(System.Single,System.Int32)">
            <summary>
            Breaks text into lines with fixed Height
            </summary>
            <param name="factor">Factor(Height-Width proportion) to make decision</param>
            <param name="maxStringsCount">Max Strings Count</param>
        </member>
        <member name="M:Telerik.Charting.ChartText.FixedWidthDistibution(System.Single)">
            <summary>
            Breaks text into lines with fixed width
            </summary>
            <param name="width">Fixed width</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ChartText.AddString(System.String,System.String,System.String,System.Single)">
            <summary>
            Add new string to text of fixed width
            </summary>
            <param name="baseString">Inner text</param>
            <param name="str">String should be added</param>
            <param name="space">Separator between text and new string</param>
            <param name="width">Fixed width</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ChartText.GetStringWithMaxWidth">
            <summary>
            Gets the longest string 
            </summary>
            <returns>The longest string </returns>
        </member>
        <member name="M:Telerik.Charting.ChartText.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of ChartText class with the same fields as this object</returns>
        </member>
        <member name="M:Telerik.Charting.ChartText.DropLineBreaks(System.String)">
            <summary>
            Concat lines to one text
            </summary>
            <param name="text">Inner text</param>
            <returns>Text without new lines delimiters</returns>
        </member>
        <member name="P:Telerik.Charting.ChartText.Space">
            <summary>
            Word separator
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartText.Height">
            <summary>
            Height of text
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartText.Width">
            <summary>
            Width of text
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartText.Factor">
            <summary>
            Used to make decision for breaking text into lines
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartWord">
            <summary>
            Helper class for a text wrapping feature. Represents the one word
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartWord.width">
            <summary>
            Word width
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartWord.text">
            <summary>
            Text of one word
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartWord.parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartWord.#ctor">
            <summary>
            Create new instance of ChartWord
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartWord.#ctor(System.String,System.Single)">
            <summary>
            Create new instance of ChartWord.
            </summary>
            <param name="text">Text of word.</param>
            <param name="width">Width of word.</param>
        </member>
        <member name="M:Telerik.Charting.ChartWord.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of ChartWord with the same fields as this object</returns>
        </member>
        <member name="P:Telerik.Charting.ChartWord.Parent">
            <summary>
            Gets and sets Parent element
            </summary>
            <value>Element that should be parent for this object</value>
        </member>
        <member name="P:Telerik.Charting.ChartWord.Width">
            <summary>
            Gets Width of word
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartWord.Text">
            <summary>
            Gets Word text
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartWordCollection.parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartWordCollection.#ctor(Telerik.Charting.ChartString)">
            <summary>
            Create new instance of the object.
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.ChartWordCollection.Add(Telerik.Charting.ChartWord)">
            <summary>
            Add new word to collection
            </summary>
            <param name="word">Word for adding</param>
            <returns>Index of added word</returns>
        </member>
        <member name="M:Telerik.Charting.ChartWordCollection.RemoveLast">
            <summary>
            Remove last word from collection
            </summary>
            <returns>Last word that was removed</returns>
        </member>
        <member name="M:Telerik.Charting.ChartWordCollection.InsertAsFirst(Telerik.Charting.ChartWord)">
            <summary>
            Insert word at the beginning of collection
            </summary>
            <param name="str">Word to insert</param>
        </member>
        <member name="M:Telerik.Charting.ChartWordCollection.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of ChartWordCollection class with the same fields as this one</returns>
        </member>
        <member name="P:Telerik.Charting.ChartWordCollection.Parent">
            <summary>
            Gets and sets Parent element
            </summary>
            <value>Element that should be Parent for this object</value>
        </member>
        <member name="P:Telerik.Charting.ChartWordCollection.Item(System.Int32)">
            <summary>
            Gets and sets word from/to collection
            </summary>
            <param name="index">Index of word in collection</param>
            <returns>Word from collection with specified index</returns>
            <value>Word that should be placed on specified position</value>
        </member>
        <member name="P:Telerik.Charting.ChartWordCollection.Last">
            <summary>
            Gets last word in collection
            </summary>
        </member>
        <member name="T:Telerik.Charting.WrapType">
            <summary>
            Helper enumeration with a text wrapping modes
            </summary>
        </member>
        <member name="T:Telerik.Charting.WrapContext">
            <summary>
            Text wrapping context object
            </summary>
        </member>
        <member name="F:Telerik.Charting.WrapContext.wrapContainerWidth">
            <summary>
            Width of container
            </summary>
        </member>
        <member name="F:Telerik.Charting.WrapContext.wrapContainerHeight">
            <summary>
            Height of container
            </summary>
        </member>
        <member name="F:Telerik.Charting.WrapContext.wrapType">
            <summary>
            Type demonstrate which of parameters is fixed
            </summary>
        </member>
        <member name="M:Telerik.Charting.WrapContext.#ctor(System.Single,System.Single,Telerik.Charting.WrapType)">
            <summary>
            Create instance of WrapContext class
            </summary>
            <param name="width">Width of container</param>
            <param name="height">Height of container</param>
            <param name="type">Type</param>
        </member>
        <member name="M:Telerik.Charting.WrapContext.#ctor(Telerik.Charting.Styles.Dimensions,Telerik.Charting.WrapType)">
            <summary>
            Create instance of WrapContext class
            </summary>
            <param name="dimension">Dimensions of container object</param>
            <param name="type">Type</param>
        </member>
        <member name="P:Telerik.Charting.WrapContext.ContainerWidth">
            <summary>
            Gets container width
            </summary>
            <value>Width of container</value>
        </member>
        <member name="P:Telerik.Charting.WrapContext.ContainerHeight">
            <summary>
            Gets container height
            </summary>
            <value>Height of container</value>
        </member>
        <member name="P:Telerik.Charting.WrapContext.Type">
            <summary>
            Gets Type of WrapContext
            </summary>
            <value>Type that shows what parameter is fixed</value>
        </member>
        <member name="T:Telerik.Charting.ChartElementLocation">
            <summary>
            Specifies the location of the RadChart's elements.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartElementLocation.InsidePlotArea">
            <summary>
            The chart element is placed inside plot area.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartElementLocation.OutsidePlotArea">
            <summary>
            The chart element is placed outside plot area.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartLegend">
            <summary>
            Chart legend. Shows the series names or series labels listing. Can contains custom items.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartLegend.legendBindableItems">
            <summary>
            Labels for bindable items collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartLegend.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartLegend.#ctor(Telerik.Charting.Chart,Telerik.Charting.IContainer)">
            <summary>
            Constructor
            </summary>
            <param name="parent">Reference to a parent object (Current Chart instance)</param>
            <param name="container">Element container</param>
        </member>
        <member name="M:Telerik.Charting.ChartLegend.ClearBoundItems(System.Boolean)">
            <summary>
            Clears bound items collection
            </summary>
            <param name="copyItems">Should automatically created bound items be removed or not</param>
        </member>
        <member name="M:Telerik.Charting.ChartLegend.AddBoundItem(Telerik.Charting.RenderEngine,Telerik.Charting.ChartSeries,Telerik.Charting.ChartSeriesItem,Telerik.Charting.ChartSeriesLegendDisplayMode,System.Int32,System.Int32)">
            <summary>
            Creates new legend item bound to series or series item
            </summary>
            <param name="engine">RenderEngine</param>
            <param name="series">Chart series</param>
            <param name="item">Series item</param>
            <param name="mode">How series will be represented in Legend: Series names, Series items or hidden (Nothing)</param>
            <param name="seriesIndex">Series index in collection</param>
            <param name="itemIndex">Series item index in collection</param>
            <returns>New LegendItem bound to a chart object: series or series item</returns>
        </member>
        <member name="M:Telerik.Charting.ChartLegend.BindSeriesToLegend(Telerik.Charting.RenderEngine)">
            <summary>
            Creates bound items collection
            </summary>
            <param name="engine">RenderEngine</param>
        </member>
        <member name="M:Telerik.Charting.ChartLegend.AddCustomItemToLegend(System.String,Telerik.Charting.Styles.FillStyle,System.String)">
            <summary>
            Adds custom item to Legend
            </summary>
            <param name="description">Custom legend item text</param>
            <param name="fillStyle">FillStyle</param>
            <param name="figure">Figure for an item marker</param>
        </member>
        <member name="P:Telerik.Charting.ChartLegend.Item(System.Int32)">
            <summary>
            Reference to a label item by its index in items collection
            </summary>
            <param name="itemIndex">Label item's index</param>
            <returns>LabelItem at given index</returns>
        </member>
        <member name="P:Telerik.Charting.ChartLegend.BoundItems">
            <summary>
            Bound items collection
            </summary>
        </member>
        <member name="T:Telerik.Charting.MapAreaBuilderBase">
            <summary>
            The base class with common functionality needed by web chart controls for an image maps creation
            </summary>
        </member>
        <member name="M:Telerik.Charting.MapAreaBuilderBase.GetPath(Telerik.Charting.IOrdering,System.Collections.ArrayList)">
            <summary>
            Gets a string of element path in a parent control order list hierarchy.
            <example>For example, Legend has an index 4 in a Chart's order list, first legend item has an index 0 in Legend's order list.
            So result string will look like "4, 0"</example>
            </summary>
            <param name="element">IOrdering element</param>
            <param name="list">ArrayList with parent indexes</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.MapAreaBuilderBase.GenerateImageMap(Telerik.Charting.IContainer)">
            <summary>
            Generates the image map HTML code
            </summary>
            <param name="container"></param>
            <returns>HTML code with created image map</returns>
        </member>
        <member name="M:Telerik.Charting.MapAreaBuilderBase.AddAxesItemsImageMap(Telerik.Charting.ChartAxis,System.Text.StringBuilder)">
            <summary>
            Creates chart axes specific image maps code
            </summary>
            <param name="axis">Chart axis</param>
            <param name="html">StringBuilder to populate with image map HTML code</param>
        </member>
        <member name="M:Telerik.Charting.MapAreaBuilderBase.AddImageMap(Telerik.Charting.IOrdering,System.Text.StringBuilder,System.Boolean)">
            <summary>
            Generates an image map string for a given IOrdering object and appends it to a given StringBuilder object
            </summary>
            <param name="elem">IOrdering element</param>
            <param name="html">The target StringBuilder object</param>
            <param name="makeTooltipOnly">Disables a JavaScript post back function creation if only tool tip creation required</param>
        </member>
        <member name="M:Telerik.Charting.MapAreaBuilderBase.GetFigureName(Telerik.Charting.ChartSeriesItem,System.Int32)">
            <summary>
            Gets a figure name for a image map type for a different series types
            </summary>
            <param name="seriesItem">Series item</param>
            <param name="regionIndex">The Active region index in a regions list</param>
            <returns>Figure name</returns>
        </member>
        <member name="M:Telerik.Charting.MapAreaBuilderBase.GetShapeType(System.String)">
            <summary>
            Gets an appropriate HTML shape name by an internal figure name
            </summary>
            <param name="figure">The charting Figure string value</param>
            <returns>HTML shape name (rect, circle, poly)</returns>
        </member>
        <member name="M:Telerik.Charting.MapAreaBuilderBase.GetCoordinates(System.Drawing.Drawing2D.GraphicsPath,System.String)">
            <summary>
            Gets the image maps coordinates
            </summary>
            <param name="path">Graphics Path object to get coordinates from</param>
            <param name="figure">Charting figure</param>
            <returns>String of element coordinates in the image map separated by comma</returns>
        </member>
        <member name="M:Telerik.Charting.MapAreaBuilderBase.GetPostBackEventReference(System.String)">
            <summary>
            Returns a string that can be used in a client event to cause post back to 
            the server. The reference string is defined by string argument of additional event information.
            </summary>
            <param name="arguments">A string of optional arguments to pass to the control that processes the post back.</param>
            <returns>A string that, when treated as script on the client, initiates the post back.</returns>
        </member>
        <member name="M:Telerik.Charting.MapAreaBuilderBase.HasChartClickEvent">
            <summary>
            Checks if chart control has a Click event enabled
            </summary>
            <returns>True or False</returns>
        </member>
        <member name="M:Telerik.Charting.MapAreaBuilderBase.GenerateImageMap">
            <summary>
            Generates image map HTML string
            </summary>
            <returns>HTML string</returns>
        </member>
        <member name="T:Telerik.Charting.AxisSegment">
            <summary>
            Axis segment in case of ScaleBreaks enabled
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisSegment.axisSegmentPointStart">
            <summary>
            Start point of segment
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisSegment.axisSegmentPointEnd">
            <summary>
            End point of segment
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisSegment.axisSegmentRectangle">
            <summary>
            Segments rectangle
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisSegment.axisSegmentVisibleValues">
            <summary>
            Axis visible values
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisSegment.axisSegmentItemsCount">
            <summary>
            Items count in this segment
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisSegment.axisSegmentPaths">
            <summary>
            Array of two elements with segments lines as GraphicsPath
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisSegment.axisSegmentPercent">
            <summary>
            Value indicate: how much percents of axis this segment is take up
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisSegment.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisSegment.#ctor(System.String)">
            <summary>
            Creates a new class instance
            <param name="name">Segment name</param>
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisSegment.GetX(System.Double)">
            <summary>
            Gets X coordinate
            </summary>
            <param name="val">Series value to get coordinate of</param>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.AxisSegment.GetY(System.Double)">
            <summary>
            Gets Y coordinate
            </summary>
            <param name="val">Series value to get coordinate of</param>
            <returns>Coordinate</returns>       
        </member>
        <member name="M:Telerik.Charting.AxisSegment.SetRange(Telerik.Charting.ChartSeriesItemsCollection,System.Boolean)">
            <summary>
            Recalculates items values in collection
            </summary>
            <param name="items">Series items with values in current segment diapason</param>
            <param name="isOptimizeMax">Should max value optimization be done or not</param>
        </member>
        <member name="M:Telerik.Charting.AxisSegment.OptimizeNumber(System.Double,System.Nullable{System.Boolean})">
            <summary>
            Getting the better value
            </summary>
            <param name="number">Number</param>
            <param name="toLarge">Should get biggest number or not</param>
            <returns>Number</returns>
        </member>
        <member name="M:Telerik.Charting.AxisSegment.GetAxisItems(Telerik.Charting.ChartAxis)">
            <summary>
            Create axis items
            </summary>
            <param name="axis">Axis</param>
            <returns>Final value</returns>
        </member>
        <member name="M:Telerik.Charting.AxisSegment.IsIntersection(Telerik.Charting.AxisSegment)">
            <summary>
            Check segments on a intersections
            </summary>
            <param name="segment">Any other segment</param>
            <returns>True if segments intersect</returns>
        </member>
        <member name="M:Telerik.Charting.AxisSegment.GetPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Return a path around segments rectangle
            </summary>
            <param name="linePath">Path depending of scale break line type</param>
            <param name="startLine">Should start segment line as scale break line type be created</param>
            <param name="endLine">Should end segment line as scale break line type be created</param>
            <param name="isHorizontal">Plot area series orientation, true if horizontal</param>
            <returns>Segments path</returns>
        </member>
        <member name="P:Telerik.Charting.AxisSegment.Name">
            <summary>
            Segments name in collection
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisSegment.MinValue">
            <summary>
            Segment minimum value at the axis
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisSegment.MaxValue">
            <summary>
            Maximum segment's value at the axis
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisSegment.Step">
            <summary>
            Axis items step for a current Segment
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisSegment.StartPoint">
            <summary>
            Segment start point
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisSegment.EndPoint">
            <summary>
            Segment end point
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisSegment.Rectangle">
            <summary>
            Segment's bound rectangle
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisSegment.PixelsPerValue">
            <summary>
            Pixels per one value
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisSegmentCollection">
            <summary>
            Segments collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisSegmentCollection.CheckedAdd(Telerik.Charting.AxisSegment)">
            <summary>
            Check segment and add it into collection
            </summary>
            <param name="segment">Segment for adding</param>
        </member>
        <member name="M:Telerik.Charting.AxisSegmentCollection.Search(System.Double)">
            <summary>
            Searches for a segment where value is located
            </summary>
            <param name="value">Value to check</param>
            <returns>AxisSegment</returns>
        </member>
        <member name="M:Telerik.Charting.AxisSegmentCollection.Search(System.Double,System.Boolean)">
            <summary>
            Searches for a segment where value is located
            </summary>
            <param name="value">Value to check</param>
            <param name="withoutNull">Null values exclusion reason</param>
            <returns>AxisSegment</returns>
        </member>
        <member name="M:Telerik.Charting.AxisSegmentCollection.Sort">
            <summary>
            Sorts segments 
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisSegmentCollection.Test(Telerik.Charting.ChartSeriesItemsCollection)">
            <summary>
            Checks if series item in current segment
            </summary>
            <param name="items">SeriesItemsCollectionv</param>
            <returns>True if value is in segment</returns>
        </member>
        <member name="P:Telerik.Charting.AxisSegmentCollection.IsHaveNegative">
            <summary>
            Gets true if just one negative value presents in segment
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisSegmentCollection.IsHavePositive">
            <summary>
            Gets true if just one positive value presents in segment
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisSegmentCollection.IsHaveZero">
            <summary>
            Gets true if segment contains axis zero value
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisSegmentCollection.NearZeroValue">
            <summary>
            Gets the nearest to Zero axis value
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisSegmentComparer">
            <summary>
            Segments comparer
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisSegmentComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Segments order comparison
            </summary>
            <param name="x">First segment</param>
            <param name="y">Second segment</param>
            <returns>0 if segments are equal, 
            -1 if first segment should be rendered at top of the second segment at axis, 
            1 if second segment should be rendered at top of the first segment at axis</returns>
        </member>
        <member name="T:Telerik.Charting.ChartAxisType">
            <summary>
            Chart axis types enumeration
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartAxis">
            <summary>
            Base chart axis class
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisAppearance">
            <summary>
            ChartAxis style
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisLabel">
            <summary>
            ChartAxis main label
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisItems">
            <summary>
            ChartAxis items
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisOnlyNegativeValues">
            <summary>
            Show only negative values
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisOnlyPositiveValues">
            <summary>
            Show positive values only
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisRealIsZeroBased">
            <summary>
            Is axis zero based
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisMinItemValue">
            <summary>
            Min axis item value
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisMaxItemValue">
            <summary>
            Max axis item value
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisMinAxisValue">
            <summary>
            Minimum series value
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisMaxAxisValue">
            <summary>
            Maximum series value
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisPointStart">
            <summary>
            Axis start point 
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.chartAxisPointEnd">
            <summary>
            Axis zero value end point 
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.pixelsPerValue">
            <summary>
            Pixels per value field.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxis.zeroCoord">
            <summary>
            Cached zero coordinate value.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.TrackViewState">
            <summary>
            Tracking ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.LoadViewState(System.Object)">
            <summary>
            Loading ViewState data
            </summary>
            <param name="savedState">Saved state bag</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.SaveViewState">
            <summary>
            Saves data to a State Bag
            </summary>
            <returns>Saved axis data to a state bag</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetDistance(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Gets distance between points
            </summary>
            <param name="point1">First point</param>
            <param name="point2">Second point</param>
            <returns>Distance</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.CalculateGridsAndTicks">
            <summary>
            Calculates grid lines and ticks positions
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.ClearAutoPropertiesForAxisItems">
            <summary>
            Excludes the excessive serialization of axis items properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.CorrectAxisLabelPosition(Telerik.Charting.Styles.Position)">
            <summary>
            Used to correct initial axis label AlignedPosition for AutoLayout
            </summary>
            <param name="position">Position</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.CorrectAxisItemPosition(Telerik.Charting.Styles.Position)">
            <summary>
            Used to automatically correct the axis item AlignedPosition in AutoLayout
            </summary>
            <param name="position">Position</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetWidth">
            <summary>
            Gets the largest axis item width 
            </summary>
            <returns>Width value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetHeight">
            <summary>
            Gets the largest axis item height 
            </summary>
            <returns>Height value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.FormatLabel(System.Double)">
            <summary>
            Formats the axis item value with a selected ValueFormat value 
            </summary>
            <param name="val">Item value</param>
            <returns>Formatted string</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetCoordinate(System.Double)">
            <summary>
            Gets value coordinate at axis
            </summary>
            <param name="val">Value</param>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetCoordinate(System.Double,System.Single,System.Boolean)">
            <summary>
            Gets value coordinate at axis
            </summary>
            <param name="val">Value</param>
            <param name="pixelsPerVal">Pixels per value</param>
            <param name="roundCoord">Make a coordinate value rounding or not</param>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetZeroValue">
            <summary>
            Return the base value of the axis.
            </summary>
            <returns>Axis zero value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetZeroCoordinate">
            <summary>
            Gets the coordinate of zero value
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetAxisStartCoord">
            <summary>
            Gets the start value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetAxisEndCoord">
            <summary>
            Gets the end value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.SaveLabelPosition">
            <summary>
            Saves the initial axis label and common axis items positions settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.RestoreLabelPosition">
            <summary>
            Restores the initial axis label and common axis items positions settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.SetRange">
            <summary>
            Recalculates items values in collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.CheckRange(System.Double,System.Double,System.Double)">
            <summary>
            Checks the range values
            </summary>
            <param name="minValue">Min axis value</param>
            <param name="maxValue">Max axis value</param>
            <param name="step">Axis step value</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.DisableCachedValues">
            <summary>
            Restores initial values of cached axis settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetItemsBound(Telerik.Charting.ChartAxisItem,System.Single)">
            <summary>
            Gets the axis item's max bound: horizontally or vertically
            </summary>
            <param name="item">Axis item</param>
            <param name="rotationAngle">Rotation angle's value</param>
            <returns>Max bound value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetClientRectangle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Gets axis image rectangle
            </summary>
            <param name="startPoint">Start point</param>
            <param name="endPoint">End point</param>
            <remarks>Used with client-zoom in ASP.NET Ajax chart</remarks>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetClientRectangle">
            <summary>
            Gets axis image rectangle
            </summary>
            <remarks>Used with client-zoom in ASP.NET Ajax chart</remarks>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetFirstItemHalfDimension">
            <summary>
            Gets the half of the first axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetLastItemHalfDimension">
            <summary>
            Gets the half of the last axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.CalculateLayout(Telerik.Charting.RenderEngine)">
            <summary>
            Calculates axis layout settings
            </summary>
            <param name="renderEngine">RenderEngine</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.InitializeItems">
            <summary>
            Initialize the axis items collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.CalculateAxisLabel(Telerik.Charting.RenderEngine)">
            <summary>
            Calculates axis label's layout settings
            </summary>
            <param name="renderEngine">RenderEngine</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.CheckAxisItemVisibility(Telerik.Charting.ChartAxisItem)">
            <summary>
            Checks the axis item visibility
            </summary>
            <param name="item">Axis item</param>
            <returns>True if item should be rendered</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.IsVisible">
            <summary>
            Checks the axis item visibility 
            </summary>
            <returns>The Boolean value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.SetMinValue(System.Double)">
            <summary>
            Sets the min axis range value
            </summary>
            <param name="minValue">Value to set</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.ShouldSerializeMinValue">
            <summary>
            The axis MinValue design time serialization reason
            </summary>
            <returns>True is value have to be serialized</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.ResetMinValue">
            <summary>
            Resets the MinValue to default
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.ShouldSerializeMaxValue">
            <summary>
            The axis MaxValue design time serialization reason
            </summary>
            <returns>True is value have to be serialized</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.ResetMaxValue">
            <summary>
            Resets the MaxValue to default
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.SetMaxValue(System.Double)">
            <summary>
            Sets the maximum axis range value
            </summary>
            <param name="minValue">Value to set</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.ShouldSerializeStep">
            <summary>
            The axis Step design time serialization reason
            </summary>
            <returns>True is value have to be serialized</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.ResetStep">
            <summary>
            Resets the Step value to default
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.#ctor(Telerik.Charting.ChartPlotArea)">
            <summary>Creates a new instance of the ChartAxis class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.#ctor(Telerik.Charting.ChartPlotArea,Telerik.Charting.IContainer)">
            <summary>Creates a new instance of the ChartAxis class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.Initialize(System.Double,System.Double)">
            <summary>Initializes the axis with min and max values.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.AutoCalcAxisExtents">
            <summary>
            Auto determines the min and max value of the axis
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.CalculateStep(System.Double@,System.Double@)">
            <summary>
            Axis Step calculation method for AutoScaled axes
            </summary>
            <param name="minValue">Min range value</param>
            <param name="maxValue">Max range value</param>
            <returns>Calculated Step value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.AdjustingMinMax(System.Double@,System.Double@,System.Double)">
            <summary>
            Adjusting min/max value according to the set axis properties
            </summary>
            <param name="minValue">Min range value</param>
            <param name="maxValue">Max range value</param>
            <param name="dValue">Rounding digits limit</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.SetPositiveOrNegative(System.Double@,System.Double@)">
            <summary>
            Sets the minimum and maximum axis range values
            </summary>
            <param name="minValue">Min range value</param>
            <param name="maxValue">Max range value</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.AddItem(Telerik.Charting.ChartAxisItem,Telerik.Charting.ChartAxisItem[])">
            <summary>Adds a ChartAxisItem to the axis.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.AddItem(Telerik.Charting.ChartAxisItemsCollection)">
            <summary>Adds a ChartAxisItemsCollection to the axis.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.AddItem(Telerik.Charting.ChartAxisItem[])">
            <summary>Adds ChartAxisItems to the axis.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.AddItem(System.Collections.Generic.List{Telerik.Charting.ChartAxisItem})">
            <summary>Adds ChartAxisItems to the axis.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.GetItem(System.Int32)">
            <summary>Gets the item at the specified index.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.RemoveAllItems">
            <summary>Removes all items</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.RemoveItem(Telerik.Charting.ChartAxisItem,Telerik.Charting.ChartAxisItem[])">
            <summary>Removes the ChartAxisItem specified.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.RemoveItem(System.Int32,System.Int32[])">
            <summary>Removes the ChartAxisItems at the specified indexes.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.RemoveItem(System.Int32)">
            <summary>
            Removes the ChartAxisItem at the specified index.
            </summary>
            <param name="itemIndex">item's index</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.RemoveLastItem">
            <summary>
            Removes the last item from the axis.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.Clear">
            <summary>
            Clears data values of the axis.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.AddRange(System.Double,System.Double,System.Double)">
            <summary>
            Automatically adds new axis items in AutoScale mode.
            </summary>
            <param name="minValue">Min range value</param>
            <param name="maxValue">Max range value</param>
            <param name="step">Axis step value</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.AddItem(System.String,System.Drawing.Color)">
            <summary>
            Adds a new ChartAxisItem object to the axis with the specified label and color.
            </summary>
            <param name="label">Axis label</param>
            <param name="color">Item text color</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.AddItem(System.String,System.Drawing.Color,System.Boolean)">
            <summary>
            Adds a new ChartAxisItem object to the axis with the specified label and color.
            </summary>
            <param name="label">Axis label</param>
            <param name="color">Item text color</param>
            <param name="visible">Visibility</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.AddItem(System.String)">
            <summary>
            Adds a new ChartAxisItem object to the axis with the specified label.
            </summary>
            <param name="label">Axis label text</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.AddItem(System.String,System.Double)">
            <summary>
            Adds a new ChartAxisItem object to the axis with the specified label.
            </summary>
            <param name="label">Axis label text</param>
            <param name="value">Axis item value</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.SetItemLabel(System.Int32,System.String)">
            <summary>
            Sets new label text for the axis item at the specified position.
            </summary>
            <param name="itemIndex">Item index in collection</param>
            <param name="newLabelText">Axis item label text</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.SetItemLabel(System.Int32,Telerik.Charting.ChartAxisItem)">
            <summary>
            Sets new label for the axis item at the specified position.
            </summary>
            <param name="itemIndex">Item index in collection</param>
            <param name="newLabelText">Axis item</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.SetItemColor(System.Int32,System.Drawing.Color)">
            <summary>
            Sets new color for the axis item text at the specified position.
            </summary>
            <param name="itemIndex">Item index in collection</param>
            <param name="newColor">Item text color</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxis.Dispose">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.TicksLength">
            <summary>
            Gets the longest tick length
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.IsMajorTickVisible">
            <summary>
            Gets the major axis ticks visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.IsMinorTickVisible">
            <summary>
            Gets the minor axis ticks visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.IsTickVisible">
            <summary>
            Gets the axis ticks visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.StartPoint">
            <summary>
            Gets or Sets the start point of axis line
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.EndPoint">
            <summary>
            Gets or Sets the end point of axis line
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.ItemsBound">
            <summary>
            Gets the larger value of axis items dimensions: height or width
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.PixelsPerValue">
            <summary>
            Pixels per axis unit.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.Chart">
            <summary>
            Reference to a Chart class instance
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.PlotRect">
            <summary>
            Gets the PlotArea's rectangle
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.AxisType">
            <summary>
            Gets the axis type: X, Y and Y2 axis
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.IsParentVisible">
            <summary>
            Gets if PlotArea should be rendered or not
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.Visible">
            <summary>Specifies whether the axis should be rendered.</summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.Item(System.Int32)">
            <summary>
            Returns the axis item at the specified position.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.AutoScale">
            <summary>
            Enables or disables automatic axis scaling.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.Appearance">
            <summary>
            ChartAxis style
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.AxisLabel">
            <summary>
            ChartAxis label
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.Parent">
            <summary>
            Parent element (PlotArea)
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.MinValue">
            <summary>
            Specifies the min value of the axis range.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.MaxValue">
            <summary>
            Specifies the max value of the axis range.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.Step">
            <summary>
            Specifies the step at which axis values are calculated
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.IsZeroBased">
            <summary>
            Specifies whether the axis begins from 0.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.MaxItemsCount">
            <summary>
            Gets or sets maximal count of the axis items when auto scaling.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.VisibleValues">
            <summary>
            Determines the type of shown values
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.LabelStep">
            <summary>
            Draw each 1,2,...,n item
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxis.Items">
            <summary>
            Returns a collection of axis items.
            </summary>
        </member>
        <member name="T:Telerik.Charting.BarOrderingMode">
            <summary>
            Bar charts ordering modes
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartXAxis">
            <summary>Represents the X Axis.</summary>
        </member>
        <member name="F:Telerik.Charting.ChartXAxis.pixelStep">
            <summary>
            Cached pixel step value.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.#ctor(Telerik.Charting.ChartPlotArea)">
            <summary>
            Creates a new instance of the ChartXAxis class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.#ctor(Telerik.Charting.ChartPlotArea,Telerik.Charting.IContainer)">
            <summary>Creates a new instance of the ChartXAxis class.</summary>
        </member>
        <member name="F:Telerik.Charting.ChartXAxis.TickPoints">
            <summary>
            Axis ticks points 
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartXAxis.GridPoints">
            <summary>
            Axis grid lines points
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartXAxis.TickPointsTypes">
            <summary>
            Ticks points' types 
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartXAxis.GridPointsTypes">
            <summary>
            Grid points' types in array
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetPixelStep">
            <summary>
            Returns axis step in pixels
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetCoordinate(System.Double)">
            <summary>
            Gets value coordinate at axis
            </summary>
            <param name="val">Value</param>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetZeroCoordinate">
            <summary>
            Gets the X coordinate of the axis which corresponds to the base value (0, min (if positive), max (if negative))
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetAxisStartCoord">
            <summary>
            Gets the start value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetAxisEndCoord">
            <summary>
            Gets the end value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetFreePositions">
            <summary>
            Axis items count without min and max value
            </summary>
            <returns>Integer</returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetMarksCount">
            <summary>
            Tick marks count
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetStartCoordinate">
            <summary>
            Gets coordinate of the first axis item in a different LayoutModes
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.DisableCachedValues">
            <summary>
            Restores initial values of cached axis settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetClientRectangle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Gets axis image rectangle
            </summary>
            <param name="startPoint">Start point</param>
            <param name="endPoint">End point</param>
            <remarks>Used with client-zoom in ASP.NET Ajax chart</remarks>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetClientRectangle">
            <summary>
            Gets axis image rectangle
            </summary>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetFirstItemHalfDimension">
            <summary>
            Gets the half of the first axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetLastItemHalfDimension">
            <summary>
            Gets the half of the last axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.GetMaxItemBound">
            <summary>
            Gets the larger value of axis items dimensions: height or width
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.InitializeItems">
            <summary>
            Initialize axis items collection in dependency of series items collection values limits
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.CalculateLayout(Telerik.Charting.RenderEngine)">
            <summary>
            Calculates axis layout settings
            </summary>
            <param name="renderEngine">Render Engine reference</param>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.CheckAxisItemVisibility(Telerik.Charting.ChartAxisItem)">
            <summary>
            Checks the axis item visibility
            </summary>
            <param name="item">Axis item</param>
            <returns>True if item should be rendered</returns>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.CalculateAxisItemsLayout(Telerik.Charting.RenderEngine,System.Nullable{System.Single})">
            <summary>
            Calculates axis items layout settings
            </summary>
            <param name="renderEngine">Render Engine reference</param>
            <param name="maxBound">Already calculated ItemsBound value</param>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.CalculateGridsAndTicks">
            <summary>
            Calculates grid lines and ticks positions
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.AddItem(System.String)">
            <summary>
            Adds a new axis item.
            </summary>
            <param name="label">Item text</param>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.AddItem(System.String,System.Drawing.Color)">
            <summary>
            Adds a new axis item.
            </summary>
            <param name="label">Item text</param>
            <param name="color">Item text color</param>
        </member>
        <member name="M:Telerik.Charting.ChartXAxis.ClearDataBoundState">
            <summary>
            Clears all data bound settings for axis
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartXAxis.DataLabelsColumn">
            <summary>
            The data source column used as axis items labels source
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartXAxis.IsDataBound">
            <summary>
            Gets whether X ChartAxis data bound or not
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartXAxis.LayoutMode">
            <summary>
            Specifies the layout style of the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartXAxis.AutoShrink">
            <summary>
            Specifies whether the axis is auto shrink or not.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartXAxis.ItemsBound">
            <summary>
            Max axis item coordinate (X or Y). Farther value.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartXAxis.OrderingMode">
            <summary>
            Define bar's series ordering mode
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartXAxis.PixelsPerValue">
            <summary>
            Pixels count per value
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartXAxis.AxisType">
            <summary>
            Axis type value: XAxis
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartXAxis.IsMinorTickVisible">
            <summary>
            Gets the minor axis ticks visibility
            <remarks>Always false for XAxis</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartXAxis.IsMajorTickVisible">
            <summary>
            Gets the major axis ticks visibility
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartYAxisMode">
            <summary>
            Specifies the Y axis modes.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartYAxisMode.Normal">
            <summary>
            Sets default Y axis mode.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartYAxisMode.Extended">
            <summary>Extends the axis when AutoScale property is set to true.</summary>
        </member>
        <member name="T:Telerik.Charting.ChartYAxisType">
            <summary>
            Primary or Secondary
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartYAxisType.Primary">
            <summary>Specifies primary Y-Axis</summary>
        </member>
        <member name="F:Telerik.Charting.ChartYAxisType.Secondary">
            <summary>Specifies secondary Y-Axis</summary>
        </member>
        <member name="T:Telerik.Charting.ChartYAxis">
            <summary>Represents a chart Y Axis.</summary>
        </member>
        <member name="F:Telerik.Charting.ChartYAxis.chartYAxisScaleBreak">
            <summary>
            Scale break settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.LoadViewState(System.Object)">
            <summary>
            Loads Y axis settings from view state
            </summary>
            <param name="savedState">View state</param>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.SaveViewState">
            <summary>
            Saves axis settings to a state bag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.#ctor(Telerik.Charting.ChartPlotArea,Telerik.Charting.ChartYAxisType)">
            <summary>Creates a new instance of the ChartYAxis class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.CalculateGridsAndTicks">
            <summary>
            Calculates grid lines and ticks positions
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.Initialize(System.Double,System.Double)">
            <summary>Initializes the axis with min and max values.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.InitializeSegments">
            <summary>
            Makes preparations for an axis segmentation in case of Scale Breaks enabled
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.CreateSegments">
            <summary>
            Creates axis segments when Scale breaks enabled
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.OptimizeSegments(Telerik.Charting.AxisSegmentCollection,Telerik.Charting.ChartSeriesItemsCollection)">
            <summary>
            Replaces overlapped segments with one segment
            </summary>
            <param name="LocalSegments">Calculated segments</param>
            <param name="items">Series items</param>
            <returns>Optimized axis segments collection without overlapped segments</returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.CalculateSegmentsPosition">
            <summary>
            Calculates segments positions
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.GetCoordinate(System.Double)">
            <summary>
            Gets value coordinate at axis
            </summary>
            <param name="val">Value</param>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.GetZeroCoordinate">
            <summary>
            Gets the coordinate of zero value
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.GetAxisStartCoord">
            <summary>
            Gets the start value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.GetAxisEndCoord">
            <summary>
            Gets the end value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.GetZeroValue">
            <summary>
            Return the base value of the axis.
            </summary>
            <returns>Axis zero value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.GetClientRectangle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Gets axis image rectangle
            </summary>
            <param name="startPoint">Start point</param>
            <param name="endPoint">End point</param>
            <remarks>Used with client-zoom in ASP.NET Ajax chart</remarks>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.GetClientRectangle">
            <summary>
            Gets axis image rectangle
            </summary>
            <remarks>Used with client-zoom in ASP.NET Ajax chart</remarks>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.GetFirstItemHalfDimension">
            <summary>
            Gets the half of the first axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.GetLastItemHalfDimension">
            <summary>
            Gets the half of the last axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.GetMaxItemBound">
            <summary>
            Gets the larger value of axis items dimensions: height or width
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.InitializeItems">
            <summary>
            Initialize axis items collection in dependency of series items collection values limits
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.CalculateLayout(Telerik.Charting.RenderEngine)">
            <summary>
            Calculates axis layout settings
            </summary>
            <param name="renderEngine">Render Engine reference</param>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.CalculateAxisItemsLayout(Telerik.Charting.RenderEngine,System.Boolean,System.Nullable{System.Single})">
            <summary>
            Calculates axis items layout settings
            </summary>
            <param name="renderEngine">Render Engine reference</param>
            <param name="getItemBoundOnly">Should method calculate the ItemsBound value only</param>
            <param name="maxBound">Already calculated ItemsBound value</param>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.GetPixelStep(System.Decimal)">
            <summary>
            Gets pixels between two axis items
            </summary>
            <param name="itemValue">Axis item value. Can be used to detect if value is located in the any axis segment</param>
            <returns>Distance in pixels</returns>
        </member>
        <member name="M:Telerik.Charting.ChartYAxis.CreateSegmentsRenderingRegions(Telerik.Charting.RenderEngine)">
            <summary>
            Creates rendering areas for a several axis segments in case of Scale breaks
            </summary>
            <param name="renderEngine">Render Engine reference</param>
        </member>
        <member name="P:Telerik.Charting.ChartYAxis.IsLogarithmic">
            <summary>
            Use Logarithmic scale or not.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartYAxis.LogarithmBase">
            <summary>
            Logarithm base.
            <remarks>Min possible value is 2</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartYAxis.Segments">
            <summary>
            Segments collection
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartYAxis.ScaleBreaks">
            <summary>
            Scale breaks settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartYAxis.YAxisType">
            <summary>
            Defines a type of YAxis
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartYAxis.AxisMode">
            <summary>
            Gets or sets the style of the Y axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartYAxis.ItemsBound">
            <summary>
            Max axis item coordinate (X or Y). Farther value.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartYAxis.MajorPoints">
            <summary>
            Points array for a major ticks and grid lines
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartYAxis.MinorPoints">
            <summary>
            Points array for a minor ticks and grid lines
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartYAxis.AxisType">
            <summary>
            Gets the axis type: Y or Y2 axes
            </summary>
        </member>
        <member name="T:Telerik.Charting.SegmentsCombinePriority">
            <summary>
            Segments sorting support structure
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartAxisItemType">
            <summary>
            Axis item types enumeration
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxisItemType.Normal">
            <summary>
            Simple axis item
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxisItemType.SegmentStart">
            <summary>
            Segment start axis item
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxisItemType.SegmentEnd">
            <summary>
            Segment end axis item
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartAxisItem">
            <summary>Represents an axis item.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.#ctor(Telerik.Charting.IContainer)">
            <summary>Creates a new instance of the class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.#ctor">
            <summary>Creates a new instance of the class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.#ctor(System.String)">
            <summary>Creates a new instance of the class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.#ctor(System.String,System.Drawing.Color)">
            <summary>
            Creates a new instance of the class.
            </summary>
            <param name="labelText">Item text</param>
            <param name="color">Item text color</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.#ctor(System.String,System.Drawing.Color,System.Boolean)">
            <summary>
            Creates a new instance of the class.
            </summary>
            <param name="label">Item text</param>
            <param name="color">Item text color</param>
            <param name="visible">Visibility</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.#ctor(System.String,System.Drawing.Color,System.Boolean,Telerik.Charting.IContainer)">
            <summary>
            Creates a new instance of the class.
            </summary>
            <param name="label">Item text</param>
            <param name="color">Item text color</param>
            <param name="visible">Visibility</param>
            <param name="container">Item container object</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.GetBound">
            <summary>
            Gets the bound rectangle
            </summary>
            <returns>RectangleF</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.GetHeight">
            <summary>
            Bound rectangle's height
            </summary>
            <returns>Height value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.GetHeight(System.Boolean,System.Boolean)">
            <summary>
            Bound rectangle's height
            </summary>
            <param name="withTopMargin">Include top margin value in target height or not</param>
            <param name="withBottomMargin">Include bottom margin value in target height or not</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.GetWidth">
            <summary>
            Bound rectangle's width
            </summary>
            <returns>Width value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.GetWidth(System.Boolean,System.Boolean)">
            <summary>
            Bound rectangle's width
            </summary>
            <param name="withTopMargin">Include left margin value in target width or not</param>
            <param name="withBottomMargin">Include right margin value in target width or not</param>
            <returns>Width value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.CorrectTextBlockAlignedPosition(System.Boolean)">
            <summary>
            Corrects text block's aligned position value
            </summary>
            <param name="reason">Reason to correct</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItem.Measure(Telerik.Charting.RenderEngine,Telerik.Charting.ChartAxisItem)">
            <summary>
            Calculates the text block's size
            </summary>
            <param name="renderEngine">RenderEngine reference</param>
            <param name="emptyItem">Axis item with default settings to compare with current item</param>
            <returns>SizeF</returns>
        </member>
        <member name="P:Telerik.Charting.ChartAxisItem.Visible">
            <summary>Specifies whether the axis item should be rendered.</summary>
        </member>
        <member name="P:Telerik.Charting.ChartAxisItem.Value">
            <summary>
            Specifies the value of the axis.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartAxisItemsCollection">
            <summary>A collection to store axis items.</summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxisItemsCollection.chartAxisItemsCollectionParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollection.#ctor">
            <summary>Creates a new instance of the ChartAxisItemsCollection class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollection.#ctor(Telerik.Charting.ChartAxis)">
            <summary>Creates a new instance of the ChartAxisItemsCollection class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollection.#ctor(System.Drawing.Font)">
            <summary>
            Creates a new instance of the AxisItems class with the specified default item font.
            </summary>
            <param name="itemFont">Axis item's Font settings</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollection.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new instance of the AxisItems class with the specified default item color.
            </summary>
            <param name="itemColor">Axis item text color settings</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollection.#ctor(System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Creates a new instance of the AxisItems class with the specified default item font and color.
            </summary>
            <param name="itemFont">Axis item's Font settings</param>
            <param name="itemColor">Axis item text color settings</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollection.DeleteItem(System.Int32)">
            <summary>
            Removes axis item from collection
            </summary>
            <param name="itemIndex">Item index to delete at</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollection.GetItemRotationAngle(Telerik.Charting.ChartAxisItem)">
            <summary>
            Gets axis item's rotation angle
            </summary>
            <param name="item">Axis item</param>
            <returns>Rotation angle value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollection.GetWidth">
            <summary>
            Gets widest axis item's width
            </summary>
            <returns>Width value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollection.GetHeight">
            <summary>
            Gets highest axis item's height
            </summary>
            <returns>Height value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollection.Add(Telerik.Charting.ChartAxisItem)">
            <summary>
            Adds a chart axis item to the collection.
            </summary>
            <param name="chartAxisItem">Axis item to add</param>
        </member>
        <member name="P:Telerik.Charting.ChartAxisItemsCollection.Parent">
            <summary>
            Parent element
            </summary>       
        </member>
        <member name="P:Telerik.Charting.ChartAxisItemsCollection.Item(System.Int32)">
            <summary>
            Gets or sets a ChartAxisItem element at the specified position.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ScaleBreakLineType">
            <summary>
            Possible axis scale break's line types
            </summary>
        </member>
        <member name="T:Telerik.Charting.ScaleBreak">
            <summary>
            Y Axis scale break
            </summary>
        </member>
        <member name="F:Telerik.Charting.ScaleBreak.scaleBreakParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ScaleBreak.TrackViewState">
            <summary>
            Tracking view state changes
            </summary>
        </member>
        <member name="M:Telerik.Charting.ScaleBreak.LoadViewState(System.Object)">
            <summary>
            Loads settings from a view state
            </summary>
            <param name="savedState">Saved state bag</param>
        </member>
        <member name="M:Telerik.Charting.ScaleBreak.SaveViewState">
            <summary>
            Saves settings to a view state
            </summary>
            <returns>Saved state bag</returns>
        </member>
        <member name="M:Telerik.Charting.ScaleBreak.#ctor(Telerik.Charting.ChartAxis)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.ScaleBreak.CreateScaleBreakLine(System.Double,System.Boolean)">
            <summary>
            Gets the scale break line
            </summary>
            <param name="length">Line length</param>
            <param name="isHorizontal">Is series orientation horizontal (true) or vertical (false)</param>
            <returns>Graphics path with an appropriate line inside</returns>
        </member>
        <member name="P:Telerik.Charting.ScaleBreak.Enabled">
            <summary>
            Is scale break feature enabled
            </summary>
        </member>
        <member name="P:Telerik.Charting.ScaleBreak.LineStyle">
            <summary>
            Break line's appearance settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.ScaleBreak.MaxCount">
            <summary>
            Max scale breaks count
            </summary>
        </member>
        <member name="P:Telerik.Charting.ScaleBreak.ValueTolerance">
            <summary>
            Value tolerance in percents
            </summary>
        </member>
        <member name="P:Telerik.Charting.ScaleBreak.Width">
            <summary>
            Space width between two break lines
            </summary>
        </member>
        <member name="P:Telerik.Charting.ScaleBreak.Line">
            <summary>
            Break line appearance settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.ScaleBreak.Segments">
            <summary>
            Segments collection. Used with ScaleBreak feature enabled
            </summary>
        </member>
        <member name="P:Telerik.Charting.ScaleBreak.Parent">
            <summary>
            Parent element reference (ChartAxis)
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartPlotArea">
            <summary>
            Plot area - series rendering canvas.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaMarkedZones">
            <summary>
            Collection of Marked zones
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaXAxis">
            <summary>
            X Axis
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaYAxis">
            <summary>
            Y Axis
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaYAxis2">
            <summary>
            Secondary Y Axis
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaParent">
            <summary>
            Link to a chart object
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaEmptySeriesMessage">
            <summary>
            Label for empty series notification
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaRegionCommon">
            <summary>
            Temporary (for rendering process) contains common drawing region of plot area based on both (main and secondary) axis scale breaks
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaRegionYAxisPrimary">
            <summary>
            Temporary (for rendering process) contains drawing region of plot area based on Y axis scale breaks
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaRegionYAxisSecondary">
            <summary>
            Temporary (for rendering process) contains drawing region of plot area based on secondary Y axis scale breaks
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaSeriesLabels">
            <summary>
            Temporary (for rendering process) list of series items labels
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.popVals">
            <summary>
            List for save series popular values. Used for render strict bar series
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaChartDataTable">
            <summary>
            Table that contain series data
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPlotArea.chartPlotAreaOrderList">
            <summary>
            List, that represents the render order list for taken up elements
            (For IOrdering.Container property)
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.LoadViewState(System.Object)">
            <summary>
            Load ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.SaveViewState">
            <summary>
            Save Track ViewState
            </summary>
            <returns>Object data as array</returns>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.#ctor">
            <summary>
            Create instance of the class
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.#ctor(Telerik.Charting.Chart)">
            <summary>
            Create instance of the class
            </summary>
            <param name="parent">Chart</param>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.Init">
            <summary>
            Initialize object properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.InitOrderList">
            <summary>
            Fill order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.UpdateAxisOrientation">
            <summary>
            Updated axes orientation accordingly to the SeriesOrientation
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.SeriesCollection">
            <summary>
            Series collection on current plot area
            </summary>
            <returns>Series collection</returns>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.SeriesCollection(Telerik.Charting.ChartYAxisType)">
            <summary>
            Series collection on plot area filtered by Y axis type
            </summary>
            <param name="chartYAxisType"></param>
            <returns>Series collection</returns>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.InitializeAxes">
            <summary>
            Axis initialization
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.CreateRectanglesInSeriesLabel">
            <summary>
            Create rectangles in the series items labels for Intelligent engine
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.ClearAutoPropertiesForAxisItems">
            <summary>
            Clearing automatic properties for axis items
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.GetBarStart(Telerik.Charting.ChartSeries)">
            <summary>
            Return position for starting bars drawing
            </summary>
            <param name="series">Series</param>
            <returns>Position</returns>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.GetBarStart(Telerik.Charting.ChartSeries,System.Boolean)">
            <summary>
            Return position for starting bars drawing
            </summary>
            <param name="series">Series</param>
            <param name="displacementOnly">Local(true) or global(false)</param>
            <returns>Position</returns>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.Reset">
            <summary>
            Restore default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.ResetRegions">
            <summary>
            Drop plot area clip regions
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.PrepareForScale">
            <summary>
            Prepare plot area for scale feature
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.PrepareForScale(System.Single,System.Single)">
            <summary>
            Prepare plot area for scale feature
            </summary>
            <param name="xScale">X scale coefficient</param>
            <param name="yScale">Y scale coefficient</param>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.RestoreAfterScale">
            <summary>
            Restore plot area settings after scaling
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.GetBarWidth">
            <summary>
            Returns the width of the bars according to the number of bar series and overlap ratio between them.
            </summary>
            <returns>Bar width</returns>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.GetBarWidth(Telerik.Charting.ChartSeries)">
            <summary>
            Returns the width of the bars according to the number of bar series and overlap ratio between them.
            </summary>
            <param name="series">Series</param>
            <returns>Bar width</returns>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.CalculatePosition(Telerik.Charting.RenderEngine)">
            <summary>
            Position calculation
            </summary>
            <param name="renderEngine">Instance of RenderEngine object</param>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.CalculateChartDataTablePlotAreaRelative(Telerik.Charting.RenderEngine,System.Single,System.Single)">
            <summary>
            Calculate plot area relative data table 
            </summary>
            <param name="renderEngine">Instance of RenderEngine object</param>
            <param name="containerWidth">Visual container width</param>
            <param name="containerHeight">Visual container height</param>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.GetOrder(Telerik.Charting.IOrdering)">
            <summary>
            Get elements order position
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.Add(Telerik.Charting.IOrdering)">
            <summary>
            Add element at the end of list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.Insert(System.Int32,Telerik.Charting.IOrdering)">
            <summary>
            Insert element at specific position in list
            </summary>
            <param name="order">Position</param>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.Remove(Telerik.Charting.IOrdering)">
            <summary>
            Remove  element from list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.RemoveAt(System.Int32)">
            <summary>
            Remove  element from list by it's index
            </summary>
            <param name="index">Position</param>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.ReIndex">
            <summary>
            Re-index order list
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPlotArea.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">Should dispouse</param>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.SeriesLabels">
            <summary>
            Temporary (for rendering process) list of series items labels
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.PlotRegionCommon">
            <summary>
            Common rendering region
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.PlotRegionYAxisPrimary">
            <summary>
            Rendering region for a primary Y Axis series
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.PlotRegionYAxisSecondary">
            <summary>
            Rendering region for a secondary Y Axis series
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.MarkedZones">
            <summary>
            Marked zones collection
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.Visible">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.DataTable">
            <summary>
            Table that contain series data
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.Name">
            <summary>
            Plot Area name in collection
            <remarks>Hidden until only one plot area present in chart</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.SeriesOrientation">
            <summary>
            Specifies the orientation of chart series on the plot area.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.IntelligentLabelsEnabled">
            <summary>
            Intelligent labels engine switch
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.EmptySeriesMessage">
            <summary>
            Specifies empty series message text
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.XAxis">
            <summary>
            Gets XAxis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.YAxis">
            <summary>
            Primary YAxis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.YAxis2">
            <summary>
            Secondary YAxis
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.Appearance">
            <summary>
            Style
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.Chart">
            <summary>
            Link to chart object
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.PopularValues">
            <summary>
            Popular values collection
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.OrderList">
            <summary>
            List, that is represent the render order for taken up elements
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPlotArea.NextPosition">
            <summary>
            Get a next free order position
            </summary>
        </member>
        <member name="T:Telerik.Charting.EmptySeriesMessage">
            <summary>
            Empty series message
            <remarks>Visible if no or empty series present</remarks>
            </summary>
        </member>
        <member name="M:Telerik.Charting.EmptySeriesMessage.#ctor">
            <summary>
            Create instance of the class
            </summary>
        </member>
        <member name="M:Telerik.Charting.EmptySeriesMessage.#ctor(Telerik.Charting.ChartPlotArea)">
            <summary>
            Create instance of the class
            </summary>
            <param name="parent">Plot area</param>
        </member>
        <member name="M:Telerik.Charting.EmptySeriesMessage.#ctor(Telerik.Charting.IContainer)">
            <summary>
            Create instance of the class
            </summary>
            <param name="container">Rendering container element</param>
        </member>
        <member name="M:Telerik.Charting.EmptySeriesMessage.#ctor(Telerik.Charting.ChartPlotArea,Telerik.Charting.IContainer)">
            <summary>
            Create instance of the class
            </summary>
            <param name="parent">Plot area</param>
            <param name="container">Rendering container element</param>
        </member>
        <member name="M:Telerik.Charting.EmptySeriesMessage.IsVisible">
            <summary>
            Checks if empty series message should be visible or not
            </summary>
            <returns>Should be visible or not</returns>
        </member>
        <member name="P:Telerik.Charting.EmptySeriesMessage.Visible">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="T:Telerik.Charting.MarkedZoneType">
            <summary>
            Enum describe a marked zone types
            </summary>
        </member>
        <member name="F:Telerik.Charting.MarkedZoneType.Horizontal">
            <summary>
            Y axis based marked zone
            </summary>
        </member>
        <member name="F:Telerik.Charting.MarkedZoneType.Vertical">
            <summary>
            X axis based marked zone
            </summary>
        </member>
        <member name="F:Telerik.Charting.MarkedZoneType.Rectangular">
            <summary>
            Both axis based marked zone
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartMarkedZone">
            <summary>
            Class describe a Marked zone functionality
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartMarkedZone.chartMarkedZoneAppearance">
            <summary>
            Appearance properties for marked zone
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartMarkedZone.chartMarkedZoneLabel">
            <summary>
            Marked zone label
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZone.TrackViewState">
            <summary>
            Tracking ViewState for Marked zone object
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZone.LoadViewState(System.Object)">
            <summary>
            Loading ViewState data into Marked zone object
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZone.SaveViewState">
            <summary>
            Saving Marked zone object into ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZone.#ctor(Telerik.Charting.IContainer)">
            <summary>
            Create a instance of object
            </summary>
            <param name="container">Container object</param>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZone.#ctor">
            <summary>
            Create a instance of object
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZone.#ctor(System.String)">
            <summary>
            Create a instance of object
            </summary>
            <param name="name">Name for marked zone</param>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZone.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZone.ToString">
            <summary>
            Marked zone to String
            </summary>
            <returns>Marked zone name</returns>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZone.GetZoneType">
            <summary>
            Define and return a marked zone type
            </summary>
            <returns>Marked zone type</returns>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZone.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZone.Dispose(System.Boolean)">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Should disposing or not</param>
        </member>
        <member name="P:Telerik.Charting.ChartMarkedZone.Visible">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMarkedZone.Label">
            <summary>
            Marked zone label
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMarkedZone.Appearance">
            <summary>
            Appearance properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMarkedZone.Name">
            <summary>
            Marked zone name
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMarkedZone.YAxisType">
            <summary>
            Marked zone Y Axis type
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMarkedZone.ValueStartX">
            <summary>
            Marker start position X
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMarkedZone.ValueEndX">
            <summary>
            Marker end position X
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMarkedZone.ValueStartY">
            <summary>
            Marker start position Y
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMarkedZone.ValueEndY">
            <summary>
            Marker end position Y
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartMarkedZonesCollection">
            <summary>
            Marked zones collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartMarkedZonesCollection.chartMarkedZonesCollectionParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZonesCollection.#ctor">
            <summary>
            Create instance of class
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZonesCollection.#ctor(Telerik.Charting.ChartPlotArea)">
            <summary>
            Create instance of class
            </summary>
            <param name="parent">ChartPlotArea object as parent</param>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZonesCollection.Add(Telerik.Charting.ChartMarkedZone)">
            <summary>
            Add MarkerZone in the collection
            </summary>
            <param name="item">GridMarker for adding</param>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZonesCollection.Clear">
            <summary>
            Clear collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZonesCollection.Insert(System.Int32,Telerik.Charting.ChartMarkedZone)">
            <summary>
            Insert GridMarker in collection at the specific position
            </summary>
            <param name="index">Position</param>
            <param name="item">GridMarker</param>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZonesCollection.Remove(Telerik.Charting.ChartMarkedZone)">
            <summary>
            Remove GridMarker from collection
            </summary>
            <param name="item">GridMarker</param>
        </member>
        <member name="M:Telerik.Charting.ChartMarkedZonesCollection.RemoveAt(System.Int32)">
            <summary>
            Remove GridMarker in the specific position from collection
            </summary>
            <param name="index">Position</param>
        </member>
        <member name="P:Telerik.Charting.ChartMarkedZonesCollection.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMarkedZonesCollection.Item(System.Int32)">
            <summary>
            Gets or sets a GridMarker at the specific position in GridMarkers collection.
            </summary>
            <param name="index">Position in the collection</param>
            <returns>GridMarker at the specific position </returns>
        </member>
        <member name="T:Telerik.Charting.Popular">
            <summary>
            Support class for defining the most popular values in a series items
            </summary>
        </member>
        <member name="F:Telerik.Charting.Popular.popularValue">
            <summary>
            Series item value
            </summary>
        </member>
        <member name="F:Telerik.Charting.Popular.popularNumber">
            <summary>
            Count of series item whit this value
            </summary>
        </member>
        <member name="F:Telerik.Charting.Popular.popularX">
            <summary>
            X position
            </summary>
        </member>
        <member name="F:Telerik.Charting.Popular.popularYpositive">
            <summary>
            Use for stacked series, max positive value
            </summary>
        </member>
        <member name="F:Telerik.Charting.Popular.popularYnegative">
            <summary>
            Use for stacked series, min negative value
            </summary>
        </member>
        <member name="M:Telerik.Charting.Popular.#ctor(System.Single,System.Int32,System.Single)">
            <summary>
            Create instance of class
            </summary>
            <param name="val">Series item value</param>
            <param name="num">Count of items with this value</param>
            <param name="x">X-position</param>
        </member>
        <member name="M:Telerik.Charting.Popular.#ctor(System.Single,System.Int32,System.Single,System.Double,System.Double)">
            <summary>
            Create instance of class
            </summary>
            <param name="val">Series item value</param>
            <param name="num">Count of items with this value</param>
            <param name="x">X-position</param>
            <param name="yNegative">Use for stacked series, max positive value</param>
            <param name="yPositive">Use for stacked series, min negative value</param>
        </member>
        <member name="P:Telerik.Charting.Popular.X">
            <summary>
            X position
            </summary>
        </member>
        <member name="P:Telerik.Charting.Popular.YPositive">
            <summary>
            Use for stacked series, max positive value
            </summary>
        </member>
        <member name="P:Telerik.Charting.Popular.YNegative">
            <summary>
            Use for stacked series, min negative value
            </summary>
        </member>
        <member name="P:Telerik.Charting.Popular.Value">
            <summary>
            Series item value
            </summary>
        </member>
        <member name="P:Telerik.Charting.Popular.Number">
            <summary>
            X position
            </summary>
        </member>
        <member name="T:Telerik.Charting.PopularCollection">
            <summary>
            Collection of Popular objects
            </summary>
        </member>
        <member name="M:Telerik.Charting.PopularCollection.CopyPopList">
            <summary>
            Copy list of pop values to targeted list
            </summary>
            <returns>Popular collection</returns>
        </member>
        <member name="M:Telerik.Charting.PopularCollection.GetPopularValues(Telerik.Charting.Chart)">
            <summary>
            Getting popular values from all series and form list with pop values, his coordinates and number of his popularity
            </summary>
            <param name="chart">Chart object</param>
            <returns>Popular values collection object</returns>
        </member>
        <member name="M:Telerik.Charting.PopularCollection.Popularity(System.Single)">
            <summary>
            Get popularity number by value
            </summary>
            <param name="val">Value</param>
            <returns>Number</returns>
        </member>
        <member name="M:Telerik.Charting.PopularCollection.GetPopularityIndex(System.Single)">
            <summary>
            Get index by value in list of Popularity objects
            </summary>
            <param name="val">value</param>
            <returns>Index</returns>
        </member>
        <member name="T:Telerik.Charting.ChartSeries">
            <summary>
            Series
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeries.chartSeriesAppearance">
            <summary>
            Link to visualization and design properties
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeries.chartSeriesItems">
            <summary>
            ChartSeries items collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeries.chartSeriesPlotArea">
            <summary>
            Plot area element for series drawing
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeries.chartSeriesParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeries.chartSeriesIsActiveRegionSet">
            <summary>
            Returns whether there is an active region associated with the series.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SetParent(Telerik.Charting.ChartSeriesCollection)">
            <summary>
            Set series parent
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.#ctor">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.#ctor(System.String)">
            <summary>
            Creates a new instance of ChartSeries class with given name
            </summary>
            <param name="name">Name of series</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.#ctor(System.String,Telerik.Charting.ChartSeriesType)">
            <summary>
            Creates a new instance of ChartSeries class with given name and type.
            </summary>
            <param name="name">Name of series</param>
            <param name="type">Type of series</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.#ctor(System.String,Telerik.Charting.ChartSeriesType,Telerik.Charting.ChartSeriesCollection)">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
            <param name="name">Name of series</param>
            <param name="type">Type of series</param>
            <param name="parent">Parent of series</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.#ctor(System.String,Telerik.Charting.ChartSeriesType,Telerik.Charting.ChartSeriesCollection,Telerik.Charting.ChartYAxisType,Telerik.Charting.ChartPlotArea,Telerik.Charting.Styles.StyleSeries)">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
            <param name="seriesName">Name of series</param>
            <param name="chartSeriesType">Type of series</param>
            <param name="parent">Parent of series</param>
            <param name="yAxisType">YAxisType(Primary or Secondary)</param>
            <param name="chartPlotArea">PlotArea</param>
            <param name="style">Style of series</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.#ctor(System.String,Telerik.Charting.ChartSeriesType,Telerik.Charting.ChartSeriesCollection,Telerik.Charting.ChartYAxisType,Telerik.Charting.Styles.StyleSeries)">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
            <param name="seriesName">Name of series</param>
            <param name="chartSeriesType">Type of series</param>
            <param name="parent">Parent of series</param>
            <param name="yAxisType">YAxisType(Primary or Secondary)</param>
            <param name="style">Style of series</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.#ctor(System.String,Telerik.Charting.ChartSeriesType,Telerik.Charting.ChartSeriesCollection,Telerik.Charting.ChartYAxisType,Telerik.Charting.ChartPlotArea,Telerik.Charting.Styles.StyleSeries,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
            <param name="seriesName">Name of series</param>
            <param name="chartSeriesType">Type of series</param>
            <param name="parent">Parent of series</param>
            <param name="yAxisType">YAxisType(Primary or Secondary)</param>
            <param name="chartPlotArea">PlotArea</param>
            <param name="style">Style of series</param>
            <param name="dataYColumn">DataSource column that is used to data-bind to the series YValue</param>
            <param name="dataXColumn">DataSource column that is used to data-bind to the series XValue</param>
            <param name="dataYColumn2">DataSource column that is used to data-bind to the series YValue2</param>
            <param name="dataXColumn2">DataSource column that is used to data-bind to the series XValue2</param>
            <param name="dataYColumn3">DataSource column that is used to data-bind to the series YValue3</param>
            <param name="dataYColumn4">DataSource column that is used to data-bind to the series YValue4</param>
            <param name="dataLabelsColumn"> DataSource column (member) that will be used as ChartSeries names source when Y-values are taken from one column for a several chart ChartSeries</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.#ctor(System.String,Telerik.Charting.ChartSeriesType,Telerik.Charting.ChartSeriesCollection,Telerik.Charting.ChartYAxisType,Telerik.Charting.Styles.StyleSeries,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
            <param name="seriesName">Name of series</param>
            <param name="chartSeriesType">Type of series</param>
            <param name="parent">Parent of series</param>
            <param name="yAxisType">YAxisType(Primary or Secondary)</param>
            <param name="style">Style of series</param>
            <param name="dataYColumn">DataSource column that is used to data-bind to the series YValue</param>
            <param name="dataXColumn">DataSource column that is used to data-bind to the series XValue</param>
            <param name="dataYColumn2">DataSource column that is used to data-bind to the series YValue2</param>
            <param name="dataXColumn2">DataSource column that is used to data-bind to the series XValue2</param>
            <param name="dataYColumn3">DataSource column that is used to data-bind to the series YValue3</param>
            <param name="dataYColumn4">DataSource column that is used to data-bind to the series YValue4</param>
            <param name="dataLabelsColumn"> DataSource column (member) that will be used as ChartSeries names source when Y-values are taken from one column for a several chart ChartSeries</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.#ctor(Telerik.Charting.ChartPlotArea)">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
            <param name="plotArea">PlotArea</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.#ctor(Telerik.Charting.ChartSeriesCollection)">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
            <param name="parent">Parent of series</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.ResetActiveRegionForItems">
            <summary>
            Resets active region properties values
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.FindItemIndex(Telerik.Charting.ChartSeriesItem)">
            <summary>
            Search item index in series collection
            </summary>
            <param name="chartItem">Item which index should to find</param>
            <returns>Index of item</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SetFormattedLegendItemText">
            <summary>
            Sets the legend item's formatted text
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.GetEmptyPointYValue(Telerik.Charting.ChartSeriesItem,System.Int32)">
            <summary>
            Gets a Y value for empty points
            </summary>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <returns>Empty point y value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.GetEmptyPointYValue(Telerik.Charting.ChartSeriesItem,System.Int32,System.String)">
            <summary>
            Gets a Y value for empty points
            </summary>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <returns>Empty point y value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.CheckBezierSeriesForItemsCount(System.String@)">
            <summary>
            Performs check for a required Bezier series items amount
            </summary>
            <param name="mess">Error message</param>
            <returns>Bezier series items amount is proper</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.AddLabelsForPieSeries(System.Drawing.PointF[],System.String[],System.Double[],System.Drawing.PointF,System.Single,Telerik.Charting.RenderEngine)">
            <summary>
            Creates Pie series labels
            </summary>
            <param name="points">Points where labels should be located</param>
            <param name="text">Labels text</param>
            <param name="angles">Angles</param>
            <param name="pieCenter">PieCenter point</param>
            <param name="pieRadius">PieRadius</param>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.PrepareSeriesByXValues">
            <summary>
            Filters X dependent series items without X value 
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.Sum">
            <summary>
            Sum of series items' Y values
            </summary>
            <returns> Sum of series items' Y values</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.GetCustomFormat(System.String@,System.String)">
            <summary>
            Custom format string
            </summary>
            <param name="s">String should be formatted</param>
            <param name="expression">Format expression</param>
            <returns>Formated string</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.GetSumForStacked(Telerik.Charting.ChartSeriesItem)">
            <summary>
            Return a sum value of items values
            </summary>
            <param name="item">Series item</param>
            <returns>Sum</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.ReplaceString(System.String@,System.String,System.Double,System.String)">
            <summary>
            Replaces string
            </summary>
            <param name="s">String that should be changed</param>
            <param name="expression">Expression for formatting</param>
            <param name="val">Item Value</param>
            <param name="defaultFormat">Default format</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.FormatValues(System.String,Telerik.Charting.ChartSeriesItem)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.GetItemLabel(Telerik.Charting.ChartSeriesItem)">
            <summary>
            Returns text for item label
            </summary>
            <param name="item">Item which label should be taken</param>
            <returns>Label text</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.Clear">
            <summary>
            Clears all series items from the data series.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.RemoveItem(Telerik.Charting.ChartSeriesItem,Telerik.Charting.ChartSeriesItem[])">
            <summary>
            Removes a series item(s) from the series.
            </summary>
            <param name="seriesItem">Item for removing</param>
            <param name="seriesItems">Items for removing</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.RemoveItem(System.Int32,System.Int32[])">
            <summary>
            Removes a series item(s) from the series.
            </summary>
            <param name="index">Index of item should be removed</param>
            <param name="indexes">Indexes of items should be removed</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.AddItem(Telerik.Charting.ChartSeriesItem,Telerik.Charting.ChartSeriesItem[])">
            <summary>
            Adds a series item(s) to the series.
            </summary>
            <param name="seriesItem">Item to add</param>
            <param name="seriesItems">Items to add</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.AddItem(Telerik.Charting.ChartSeriesItemsCollection)">
            <summary>
            Adds a series item(s) to the series.
            </summary>
            <param name="seriesItems">Items to add</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.AddItem(Telerik.Charting.ChartSeriesItem[])">
            <summary>
            Adds a series item(s) to the series.
            </summary>
            <param name="seriesItems">Items to add</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.AddItem(System.Collections.Generic.List{Telerik.Charting.ChartSeriesItem})">
            <summary>
            Adds a series item(s) to the series.
            </summary>
            <param name="seriesItems">Items to add</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.AddItem(System.Double)">
            <summary>
            Adds a new series item to the data series by specifying its value.
            </summary>
            <param name="value">YValue of new item</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.AddItem(System.Double,System.String)">
            <summary>
            Adds a new series item to the data series by specifying its value and label.
            </summary>
            <param name="value">YValue of new item</param>
            <param name="label">Label of new item</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.AddItem(System.Double,System.String,System.Drawing.Color)">
            <summary>
            Adds a new series item to the data series by specifying its value, label and color.
            </summary>
            <param name="value">YValue of new item</param>
            <param name="label">Label of new item</param>
            <param name="color">Color of new item</param>																	
        </member>
        <member name="M:Telerik.Charting.ChartSeries.AddItem(System.Double,System.String,System.Drawing.Color,System.Boolean)">
            <summary>
            Adds a new series item to the data series by specifying its value, label, color and explosion.
            </summary>
            <param name="value">YValue of new item</param>
            <param name="label">Label of new item</param>
            <param name="color">Color of new item</param>
            <param name="exploded">If item is exploded</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SetItemColor(System.Int32,System.Drawing.Color)">
            <summary>
            Sets a new color to the series item at the specified index.
            </summary>
            <param name="itemIndex">Index of item to change color</param>
            <param name="newColor">New color of item</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SetItemValue(System.Int32,System.Double)">
            <summary>
            Sets a new value for the series item at the specified index.
            </summary>
            <param name="itemIndex">Index of item to change YValue</param>
            <param name="newValue">New YValue</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SetItemLabel(System.Int32,System.String)">
            <summary>
            Sets a new label for the series item at the specified index.
            </summary>
            <param name="itemIndex">Index of item to change label</param>
            <param name="newLabel">New label</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SetItemExplode(System.Int32,System.Boolean)">
            <summary>
            Sets a new explode status for the series item at the specified index.
            </summary>
            <param name="itemIndex">Index of item</param>
            <param name="exploded">Shoul be exploded or not</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SetValues(System.Double[])">
            <summary>
            Sets new values to the data series by passing an array of real values. Old values are cleared.
            </summary>
            <param name="values">New values</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SetColors(System.Drawing.Color[])">
            <summary>
            Sets new colors to the items in the data series.
            </summary>
            <param name="colors">New colors</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SetLabels(System.String[])">
            <summary>
            Sets new labels to the items in the data series.
            </summary>
            <param name="labels">New labels</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SetExplodes(System.Boolean[])">
            <summary>
            Sets exploded statuses to the items in the data series.
            </summary>
            <param name="explodes">New exploded values</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SetItems(Telerik.Charting.ChartSeriesItem[])">
            <summary>
            Sets new SeriesItems objects to the data series.
            </summary>
            <param name="seriesItems">New Items to replace old items in series</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.RemoveItem(System.Int32)">
            <summary>
            Removes the SeriesItem object at the specified index.
            </summary>
            <param name="itemIndex">Index to remove</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.ClearDataBoundState">
            <summary>
            Removes data binding links from series
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.ToString">
            <summary>
            Overridden
            </summary>
            <returns>Series name</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.CopyFrom(Telerik.Charting.ChartSeries)">
            <summary>
            Copies settings from given series
            </summary>
            <param name="originalSeries">Series to copy from</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.CopyItems(Telerik.Charting.ChartSeries)">
            <summary>
            Copies series items from given series
            </summary>
            <param name="originalSeries">Series that items should be copied</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.CloneSeries">
            <summary>
            Return new ChartSeries instance with copied all properties from source object and cloned Items collection
            </summary>
            <returns>New instance of ChartSeries with copied fields</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.Clone">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.Dispose">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.LoadViewState(System.Object)">
            <summary>
            Load ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeries.SaveViewState">
            <summary>
            Save Track ViewState
            </summary>
            <returns>Object data as array</returns>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsActiveRegionSet">
            <summary>Returns whether there is an active region associated with the series.</summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.ActiveRegionAttributes">
            <summary>
            Default attributes for series items' active regions 
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.ActiveRegionToolTip">
            <summary>
            Default tooltip for series items' active regions 
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.ActiveRegionUrl">
            <summary>
            Default url for series items' active regions 
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.Visible">
            <summary>Specifies whether to render the series or not.</summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.Appearance">
            <summary>
            Specifies the visual appearance of series items.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.Type">
            <summary>
            Gets or sets the type of the series.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.PlotArea">
            <summary>
            Plot area element for series drawing
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.Chart">
            <summary>
            Link to Chart object
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.DataXColumn">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series X-value
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.DataXColumn2">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series X2-value
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.DataYColumn">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series Y-value
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.DataYColumn2">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series Y2-value
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.DataYColumn3">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series Y3-value (High for CandleStick chart).
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.DataYColumn4">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series Y4-value (Low for CandleStick chart). 
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.DataLabelsColumn">
            <summary>
            Gets or sets the name of the DataSource column (member) that will be used as ChartSeries names source when Y-values are taken from one column for a several chart ChartSeries
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsDataBound">
            <summary>
            Determines whether the series is configured as data bound or not.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.Name">
            <summary>
            Gets or sets the name of the data series.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.DefaultLabelValue">
            <summary>
            Specifies the default value for the series items labels.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.Index">
            <summary>
            Current series index in the series collection
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.YAxisType">
            <summary>
            Y Axis used by series
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.Item(System.Int32)">
            <summary>
            Gets or sets a ChartSeries SeriesItem object at the specified index.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.Items">
            <summary>
            Gets a collection of series items.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.LegendFormattedText">
            <summary>
            Formatted text string for a Legend
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsScalable">
            <summary>
            Defines whether series can be used with zoom or not
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsXDependent">
            <summary>
            If series depends of X value
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsXDependentSeriesType">
            <summary>
            If current series type is x dependent
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsNormalStacked">
            <summary>
            Determines whether the series is stacked and not stacked100 or not.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsStacked100">
            <summary>
            Determines whether the series is stacked100 or not.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsStacked">
            <summary>
            Determines whether the series is stacked or not.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsLine">
            <summary>
            Determines whether the series is line-type.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsSplineArea">
            <summary>
            Determines whether the series is spline area-type.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsStackedLine">
            <summary>
            Determines whether the series is stacked line-type.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsStackedArea">
            <summary>
            Determines whether the series is stacked area-type.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeries.IsHasEmptyValues">
            <summary>
            Determines whether the series has items with empty values
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartSeriesCollection">
            <summary>
            Series collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesCollection.chartSeriesCollectionParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.#ctor">
            <summary>Creates a new instance of the ChartSeriesCollection class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.#ctor(Telerik.Charting.Chart)">
            <summary>
            Creates a new instance of the ChartSeriesCollection class.
            </summary>
            <param name="parent">Parent for collection</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetMinStacked100Value(Telerik.Charting.ChartSeriesType)">
            <summary>
            Gets minimum Stacked 100 series item value 
            </summary>
            <param name="seriesType">Series Type</param>
            <returns>Minimum Stacked 100 series item value </returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetMaxStacked100Value">
            <summary>
            Gets maximum Stacked 100 series item value 
            </summary>
            <returns>Maximum Stacked 100 series item value </returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetMinStackedValue(Telerik.Charting.ChartSeriesType)">
            <summary>
            Gets the min value of the stacked series of a specifies type.
            </summary>
            <param name="seriesType">Series Type</param>
            <returns>Min value of the stacked series of a specifies type.</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetMaxStackedValue(Telerik.Charting.ChartSeriesType)">
            <summary>
            Gets the max value of the stacked series of a specified type.
            </summary>
            <param name="seriesType">Series Type</param>
            <returns>Max value of the stacked series of a specified type</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetMinYValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Compares two doubles and return minimum value
            </summary>
            <param name="value1">First value to compare</param>
            <param name="value2">Second value to compare</param>
            <returns>Less value</returns>
            <param name="checkNaN">Should NAN values be compared as 0 or not</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetMaxYValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Compares two doubles and return maximum value
            </summary>
            <param name="value1">First value to compare</param>
            <param name="value2">Second value to compare</param>
            <returns>Greater value</returns>
            <param name="checkNaN">Should NAN values be compared as 0 or not</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.OnlyBezierSeries">
            <summary>
            Checks if collection contains only Bezier series
            </summary>
            <returns>Whether collection contains only Bezier series</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.OnlyPieSeries">
            <summary>
            Returns true if collection contains only pie series
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.DefineItemsLabelText">
            <summary>
            Define items label text for each item for the all series in the collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.ClearAutoGeneratedItemsLabelText">
            <summary>
            Clear auto generated items label text for each item in the collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.CheckForErrors">
            <summary>
            Check if collection contains proper data
            </summary>
            <returns>Text of error</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.Stacked(Telerik.Charting.ChartSeries)">
            <summary>
            Returns True if series is a stacked type
            </summary>
            <param name="chartSeries"></param>
            <returns>Is series a stacked type</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.Stacked100(Telerik.Charting.ChartSeries)">
            <summary>
            Returns True if series is a stacked100 type
            </summary>
            <param name="chartSeries"></param>
            <returns>Is series a stacked100 type</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetMaxItemsCount(Telerik.Charting.ChartSeriesType)">
            <summary>
            Gets maximum series items count of specified type
            </summary>
            <param name="seriesType">Type of series</param>
            <returns>Maximum series items count of specified type</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetSeriesCount(Telerik.Charting.ChartSeriesType)">
            <summary>
            Gets series count of specified type
            </summary>
            <param name="seriesType">Series type</param>
            <returns>Series count of specified type</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetSumForStacked(System.Int32)">
            <summary>
            Gets series items sum
            </summary>
            <param name="itemsPosition">Item index for calculating summary</param>
            <returns>Series items sum</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetSumsForStacked(Telerik.Charting.ChartSeriesType)">
            <summary>
            Return a sum value of items values
            </summary>
            <param name="seriesType">Series</param>
            <returns>Dictionary of value and sum</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.HaveXValue">
            <summary>
            Checks if any series item has X value
            </summary>
            <returns>Checks if any series item has X value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetValueLimits">
            <summary>
            Gets value limits
            </summary>
            <returns>Value limits</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.ClearColors">
            <summary>
            Clears all series's style main and secondary colors
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.IsSeriesEmpty">
            <summary>
            Returns True if all series have no items
            </summary>
            <returns>True if all series have no items</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetSeriesCollectionCount(Telerik.Charting.ChartSeriesType,System.Int32)">
            <summary>
            Count of  specified type series
            </summary>
            <param name="chartSeriesType">Type of series</param>
            <param name="startIndex">Start index to search</param>
            <returns>Count of  specified type series</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetSeriesCollection(Telerik.Charting.ChartSeriesType)">
            <summary>
            Collection of series of specified type
            </summary>
            <param name="chartSeriesType">Type of series to select</param>
            <returns>Collection of series of specified type</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetSeriesCollection(Telerik.Charting.ChartSeriesType[])">
            <summary>
            Collection of series of specified types
            </summary>
            <param name="chartSeriesTypes">Types of series to select</param>
            <returns>Collection of series of specified types</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetXUsedSeriesCollection">
            <summary>
            Collection of series that use and have XValues
            </summary>
            <returns>Collection of series that use and have XValues</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetClonedXUsedSeriesCollection">
            <summary>
            Clone X-dpended series collection
            </summary>
            <returns>Clone X-dpended series collection</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetYUsedSeriesCollection">
            <summary>
            Collection of series that use YAxis
            </summary>
            <returns>Collection of series that use YAxis</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.PrepareForScale">
            <summary>
             Prepare series after AutoScale, add fake X values
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.RestoreAfterScale">
            <summary>
            Restore series after AutoScale, remove fake X values
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Final code for series insertion
            </summary>
            <param name="index">Index where series should be insert</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.Add(Telerik.Charting.ChartSeries)">
            <summary>
            Add ChartSeries at the collection
            </summary>
            <param name="chartSeries">ChartSeries to add</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.ClearItems">
            <summary>
            Clears items in all series
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.RemoveSeries">
            <summary>
            Removes the all data series from the series collection.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.Insert(System.Int32,Telerik.Charting.ChartSeries)">
            <summary>
            Insert ChartSeries in collection at the specific position
            </summary>
            <param name="index">Position</param>
            <param name="item">ChartSeries</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.InsertSeries(System.Int32,Telerik.Charting.ChartSeries)">
            <summary>
            Insert ChartSeries in collection at the specific position
            </summary>
            <param name="index">Position</param>
            <param name="item">ChartSeries</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetByName(System.String)">
            <summary>
            Find series by name
            </summary>
            <param name="name">ChartSeries name</param>
            <returns>ChartSeries</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetSeries(System.Int32)">
            <summary>
            Returns a reference to the ChartsSereis object at the specified index.
            </summary>
            <param name="index">Index of series</param>
            <returns>Series with specified index</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetMaxItemsCount">
            <summary>
            Returns the number of items in the longest data series.
            </summary>
            <returns>Number of items in the longest data series</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetMaxItemsCount(Telerik.Charting.ChartPlotArea)">
            <summary>
            Returns the number of items in the longest data series at the given plot area
            </summary>
            <param name="plotArea">PlotArea</param>
            <returns>Number of items in the longest data series</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.ClearDataBoundState">
            <summary>
            Removes data binding links from series
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetFilteredSeriesByYAxis(Telerik.Charting.ChartYAxisType)">
            <summary>
            Gets all series related to the given Y ChartAxis
            </summary>
            <param name="yAxisType">YAxisType(Primary, Secondary)</param>
            <returns>All series related to the given Y ChartAxis</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetMinYValue">
            <summary>
            Gets the minimal item value of all series.
            </summary>
            <returns>Minimal item value of all series</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.GetMaxYValue">
            <summary>
            Gets the maximal item value of all series.
            </summary>
            <returns>Maximal item value of all series</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesCollection.LoadViewState(System.Object)">
            <summary>
            Load ViewState
            </summary>
            <param name="state">ViewState with data</param>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesCollection.Parent">
            <summary>
            Parent element (chart)
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesCollection.Item(System.Int32)">
            <summary>
            Gets or sets a ChartSeries at the specific position in ChartSeries collection.
            </summary>
            <param name="index">Position in the collection</param>
            <returns>ChartSeries at the specific position </returns>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesCollection.IsXDepended">
            <summary>
            Property is true if all series in collection is X depended
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesCollection.BarSeriesCount">
            <summary>
            Returns the number of bar series which are drawn next to each other. StackedBars, StackedBars100 are counted as 1 bar series.
            </summary>
            <returns>Cont of bar series</returns>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesCollection.IsScalable">
            <summary>
            Defines whether all series in collection are scalable
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesCollection.IsUnScalable">
            <summary>
            Defines whether all series in collection are unscalable
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartSeriesLegendDisplayMode">
            <summary>
            Specifies legend items presentation.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesLegendDisplayMode.Nothing">
            <summary>
            The legend does not show any information from the series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesLegendDisplayMode.SeriesName">
            <summary>
            The legend shows the series name.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesLegendDisplayMode.ItemLabels">
            <summary>
            The legend shows the names of the series items.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartSeriesOrientation">
            <summary>
            Series orientation
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesOrientation.Vertical">
            <summary>
            Specifies Vertical Orientation
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesOrientation.Horizontal">
            <summary>
            Specifies Horizontal Orientation
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartValueLimits">
            <summary>
            Class describe a value limits for axis calculation
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartValueLimits.MinXValue">
            <summary>
            Min X value
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartValueLimits.MaxXValue">
            <summary>
            Max X value
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartValueLimits.MinYValue">
            <summary>
            Min Y value
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartValueLimits.MaxYValue">
            <summary>
            Max Y value
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartValueLimits.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates instance of ChartValueLimits class.
            </summary>
            <param name="minXValue">Minimal x value</param>
            <param name="maxXValue">Maximal x value</param>
            <param name="minYValue">Minimal y value</param>
            <param name="maxYValue">Maximal y value</param>
        </member>
        <member name="T:Telerik.Charting.ChartSeriesItem">
            <summary>
            Represents the base element of RadChart's series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesItem.chartSeriesItemAppearance">
            <summary>
            Link to visualization and design properties
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesItem.chartSeriesItemPointAppearance">
            <summary>
            Point mark style
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesItem.chartSeriesItemLabel">
            <summary>
            Item Label
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesItem.chartSeriesItemParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesItem.chartSeriesItemRelativeValue">
            <summary>
            Relative value used for Stacked100 series
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesItem.chartSeriesItemActiveRegion">
            <summary>
            ActiveRegion
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesItem.haveRealXValue">
            <summary>
            Defines if item has user-defined XValue or XValue was generated
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.#ctor(System.Double,System.Double,Telerik.Charting.Styles.StyleSeriesItem)">
            <summary>Creates a new instance of the ChartSeriesItem class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.#ctor(System.Double,System.Double)">
            <summary>Creates a new instance of the ChartSeriesItem class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new instance of the ChartSeriesItem class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new instance of the ChartSeriesItem class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.#ctor">
            <summary>
            Creates a new instance of the ChartSeriesItem class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.#ctor(Telerik.Charting.ChartSeries)">
            <summary>Creates a new instance of the ChartSeriesItem class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of the empty ChartSeriesItem class.
            </summary>
            <param name="isEmpty"></param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.#ctor(System.Double)">
            <summary>
            Creates a new instance of the ChartSeriesItem class.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.#ctor(System.Double,System.String)">
            <summary>
            Creates a new instance of the ChartSeriesItem class.
            </summary>
            <param name="value"></param>
            <param name="labelText"></param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.#ctor(System.Double,System.String,System.Drawing.Color)">
            <summary>
            Creates a new instance of the ChartSeriesItem class.
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <param name="color"></param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.#ctor(System.Double,System.String,System.Drawing.Color,System.Boolean)">
            <summary>		
            Creates a new instance of the ChartSeriesItem class.		
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <param name="color"></param>
            <param name="exploded"></param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.DefineLabelText">
            <summary>
            Define items label text for item
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.ClearAutoGeneratedLabelText">
            <summary>
            Clear auto generated items label text for item
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.GetXValue">
            <summary>
            Returns XValue or 0 if it was not set
            </summary>
            <returns>XValue or 0 if it was not set</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.AddLabel(System.String,System.Drawing.RectangleF,Telerik.Charting.RenderEngine)">
            <summary>
            Add item label to collection of PlotArea's labels for further their rendering
            </summary>
            <param name="text">Label text</param>
            <param name="rect">Item's rectangle to calculate label position</param>
            <param name="engine">RenderEngine of chart</param>
            <returns>Created Label</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.SetLabelAutoPosition(Telerik.Charting.SeriesItemLabel@,Telerik.Charting.ChartSeriesOrientation)">
            <summary>
            Locate item label
            </summary>
            <param name="label">Label to correct position depend on SeriesOrientation</param>
            <param name="chartSeriesOrientation">SeriesOrientation of chart</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.IsVisible(System.Drawing.RectangleF)">
            <summary>
            Returns if item is inside PlotArea
            </summary>
            <param name="rect">Rectangle that contains item</param>
            <returns>Whether item is inside PlotArea</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.ToString">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.Dispose">
            <exclude/>
            <excludetoc/>
            <summary>Dispose object</summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.Dispose(System.Boolean)">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Should dispouse</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.TrackViewState">
            <summary>
            Tracking ViewState data
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.LoadViewState(System.Object)">
            <summary>
            Loading ViewState data
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.SaveViewState">
            <summary>
            Saving ViewState data
            </summary>
            <returns>Saved in View state data</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItem.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of ChartSeriesItem class that is copy of this object </returns>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.Visible">
            <summary>Specifies whether the series item should be rendered.</summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.RelativeValue">
            <summary>
            Relative value used for Stacked100 series
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.ActiveRegion">
            <summary>
            Active region
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.Appearance">
            <summary>
            Link to visualization and design properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.Label">
            <summary>
            Item label
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.Empty">
            <summary>
            Is series item contains empty value
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.XValue">
            <summary>
            Main X value
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.XValue2">
            <summary>
            Second x value for item
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.YValue">
            <summary>
            Main Y value for item
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.YValue2">
            <summary>
            Second y value for item
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.YValue3">
            <summary>
            Third y value for item (could be used in CandleStick charts as High value)
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.YValue4">
            <summary>
            Fourth y value for item (could be used in CandleStick charts as Low value)
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.Item(System.String)">
            <summary>
            Return value by item value type name 
            </summary>
            <param name="valueTypeName">Value type name</param>
            <returns>value</returns>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.Name">
            <summary>
            ChartSeriesItem name 
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.PointAppearance">
            <summary>
            Point appearance settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItem.Index">
            <summary>
            Index in items collection
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartDesignTimeSeriesItem">
            <summary>
            Design-time series item
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempXValue">
            <summary>
            Main X for design created item
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempXValue2">
            <summary>
            Second X for design created item
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempYValue">
            <summary>
            Main Y for design created item
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempYValue2">
            <summary>
            Second Y for design created item
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempYValue3">
            <summary>
            Third Y value for design created item (could be used in CandleStick charts as High value)
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempYValue4">
            <summary>
            Third Y value for design created item (could be used in CandleStick charts as Low value)
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemRandom">
            <summary>
            Random generator for design items
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartDesignTimeSeriesItem.#cctor">
            <summary>
            Constructor to initialize random generator
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartDesignTimeSeriesItem.#ctor(Telerik.Charting.ChartSeries)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="series">Specifies parent for item</param>
        </member>
        <member name="M:Telerik.Charting.ChartDesignTimeSeriesItem.#ctor(System.String,Telerik.Charting.ChartSeries)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="itemName">Name of item</param>
            <param name="series">Parent of item</param>
        </member>
        <member name="M:Telerik.Charting.ChartDesignTimeSeriesItem.Init">
            <summary>
            Initialize item X and Y values
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartDesignTimeSeriesItem.ClearValues">
            <summary>
            Clear X and Y values of the item
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartDesignTimeSeriesItem.SetCorrectValues">
            <summary>
            Use needed X and Y values depend on type of series
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartSeriesItemsCollection">
            <summary>
            Series items collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesItemsCollection.seriesItemsCollectionParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.#ctor">
            <summary>Creates a new instance of the ChartSeriesItemsCollection class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.#ctor(Telerik.Charting.ChartSeries)">
            <summary>
            Creates a new instance of the ChartSeriesItemsCollection class.
            </summary>
            <param name="parent">Parent of the collection</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.DefineLabelText(Telerik.Charting.ChartSeries)">
            <summary>
            Define items label text for each item in the collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.ClearAutoGeneratedLabelText">
            <summary>
            Clear auto generated items label text for each item in the collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.GetItemWithMaxYValue(Telerik.Charting.ChartSeriesItem)">
            <summary>
             Get item with max YValue not greater than specified
            </summary>
            <param name="notMoreItem">Item which YValue is limit for searching</param>
            <returns>Item with max YValue not greater than specified</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.GetItemWithMinYValue(Telerik.Charting.ChartSeriesItem)">
            <summary>
             Get item with min YValue not less than specified
            </summary>
            <param name="notMoreItem">Item which YValue is limit for searching</param>
            <returns>Item with min YValue not less than specified</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.ItemsInRange(System.Double,System.Double)">
            <summary>
            Count of items with YValues in specified range
            </summary>
            <param name="min">Min limit for searching</param>
            <param name="max">Max limit for searching</param>
            <returns>Count of items with YValues in specified range</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.GetMinValue(System.Double,System.Double)">
            <summary>
            Min YValue in specified range
            </summary>
            <param name="minValue">Min limit for searching</param>
            <param name="maxValue">Max limit for searching</param>
            <returns>Min YValue in specified range</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.GetMaxValue(System.Double,System.Double)">
            <summary>
            Max YValue in specified range
            </summary>
            <param name="minValue">Min limit for searching</param>
            <param name="maxValue">Max limit for searching</param>
            <returns>Max YValue in specified range</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.Sort">
            <summary>
            Sort items 
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.Filter(Telerik.Charting.Styles.ChartAxisVisibleValues)">
            <summary>
            Filter items by YAxis VisibleValues(All, Negative, Positive)
            </summary>
            <param name="chartAxisVisibleValues">YAxis VisibleValues(All, Negative, Positive)</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.ResetActiveRegions">
            <summary>
            Clear for all items Region
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.Add(Telerik.Charting.ChartSeriesItem)">
            <summary>
            Add Item at the collection
            </summary>
            <param name="chartSeriesItem">Item to add</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.AddRange(Telerik.Charting.ChartSeriesItemsCollection)">
            <summary>
            Adds a collection of series items to the items collection.
            </summary>
            <param name="chartSeriesItems">Items to add</param>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemsCollection.LoadViewState(System.Object)">
            <summary>
            Load ViewState data
            </summary>
            <param name="state">ViewState with data</param>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItemsCollection.Parent">
            <summary>
            Parent element
            </summary>       
        </member>
        <member name="P:Telerik.Charting.ChartSeriesItemsCollection.Item(System.Int32)">
            <summary>
            Gets or sets a Item at the specific position in Items collection.
            </summary>
            <param name="index">Position in the collection</param>
            <returns>Item at the specific position </returns>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesItemComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Method for comparing ChartSeriesItems
            </summary>
            <param name="x">First SeriesItem</param>
            <param name="y">Second SeriesItem</param>
            <returns>Difference between YValues</returns>
        </member>
        <member name="T:Telerik.Charting.ChartTitle">
            <summary>
            Chart Title 
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartTitle.#ctor">
            <summary>Creates a new instance of the ChartTitle class.</summary>
        </member>
        <member name="M:Telerik.Charting.ChartTitle.#ctor(Telerik.Charting.Chart)">
            <summary>Creates a new instance of the ChartTitle class.</summary>
            <param name="parent">Chart</param>
        </member>
        <member name="M:Telerik.Charting.ChartTitle.#ctor(Telerik.Charting.Chart,Telerik.Charting.IContainer)">
            <summary>Creates a new instance of the ChartTitle class.</summary>
            <param name="parent">Chart</param>
            <param name="container">Elements container</param>
        </member>
        <member name="T:Telerik.Charting.LayoutZoneType">
            <summary>
            Layout zone types
            </summary>
        </member>
        <member name="F:Telerik.Charting.LayoutZoneType.Vertical">
            <summary>
            Vertical layout zone
            </summary>
        </member>
        <member name="F:Telerik.Charting.LayoutZoneType.Horizontal">
            <summary>
            Horizontal layout zone
            </summary>
        </member>
        <member name="T:Telerik.Charting.LayoutZone">
            <summary>
            Virtual chart area for a chart elements placement in auto-layout
            </summary>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.#ctor">
            <summary>
            Creates new class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.ToRectangleF">
            <summary>
            Export zone to rectangle
            </summary>
            <returns>RectangleF</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.ToPosition">
            <summary>
            Layout zone to Position
            </summary>
            <returns>Position</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.ToDimensions">
            <summary>
            Layout zone to Dimensions
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.FromStyle(Telerik.Charting.Styles.Dimensions,System.Object)">
            <summary>
            Creates Layout zone from chart object
            </summary>
            <param name="baseDimensions">Zone container dimensions</param>
            <param name="chartElement">Chart element like ChartTitle or Legend</param>
            <returns>LayoutZone</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.CreateFromAvailableSpace(Telerik.Charting.Styles.DimensionsChart,System.Object,Telerik.Charting.LayoutZone[])">
            <summary>
            Creates new layout zone from a space available for a chart element
            </summary>
            <param name="dimensionsChart">Chart dimensions</param>
            <param name="chartElement">Chart element</param>
            <param name="layoutZones">Existing layout zones</param>
            <returns>LayoutZone</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.DistributeZones(Telerik.Charting.LayoutZone@,Telerik.Charting.LayoutZone@,Telerik.Charting.LayoutZone@)">
            <summary>
            Relocates existing layout zones to avoid their overlapping
            </summary>
            <param name="titleZone">ChartTitle layout zone</param>
            <param name="legendZone">Legend LayoutZone</param>
            <param name="dataTableZone">DataTable layout zone</param>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.FixElementPosition(Telerik.Charting.Styles.Position)">
            <summary>
            Corrects element position to place it inside zone
            </summary>
            <param name="position">Element position</param>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.CalculatePosition(System.Object,Telerik.Charting.Styles.Dimensions,Telerik.Charting.Styles.Position)">
            <summary>
            Calculates element position
            </summary>
            <param name="element">Chart element</param>
            <param name="dimensions">Element dimensions</param>
            <param name="position">Current element position</param>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.DistributeElements">
            <summary>
            Relocates current layout zone elements inside of layout zone
            </summary>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.GetDataTable">
            <summary>
            Gets the DataTable from Layout zone
            </summary>
            <returns>DataTable or null</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.GetTitle">
            <summary>
            Gets ChartTitle from Layout zone
            </summary>
            <returns>ChartTitle or null</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.GetLegend">
            <summary>
            Gets Legend from Layout zone
            </summary>
            <returns>Legend or null</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.RemoveEquals(Telerik.Charting.LayoutZone[])">
            <summary>
            Remove duplicates from layout zone
            </summary>
            <param name="layoutZones">Layout zones array</param>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.FixLayoutZone(Telerik.Charting.LayoutZone@)">
            <summary>
            Fixes layout zone dimensions
            </summary>
            <param name="zone">Layout zone to fix</param>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.IsUsedBefore(Telerik.Charting.LayoutZone[],Telerik.Charting.LayoutZone,System.Int32)">
            <summary>
            Is layout zone already used
            </summary>
            <param name="layoutZones">Layout zones array</param>
            <param name="zone">Layout zone to check</param>
            <param name="index">Start index</param>
            <returns>True if zone already used</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.GetOffsetY(System.Object)">
            <summary>
            Get Y offset of the element in zone
            </summary>
            <param name="element">Element</param>
            <returns>Left offset value</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.GetRealHeight">
            <summary>
            Gets element's bound rectangle height
            </summary>
            <returns>Height</returns>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.FixXAndWidth(Telerik.Charting.LayoutZone,Telerik.Charting.LayoutZone)">
            <summary>
            Fix X coordinate and Width of two layout zones
            </summary>
            <param name="zone1">First Layout zone</param>
            <param name="zone2">Second Layout zones</param>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.DefineType(Telerik.Charting.Styles.Position)">
            <summary>
            Corrects element position position
            </summary>
            <param name="position">Position</param>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.SetMajorDimension(System.Drawing.RectangleF,Telerik.Charting.Styles.ChartMargins)">
            <summary>
            Sets the layout zone dimension including appropriate margins 
            </summary>
            <param name="rect">Bound rectangle</param>
            <param name="margins">Element margins</param>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.SetMinorDimension(Telerik.Charting.Styles.Dimensions)">
            <summary>
            Sets the layout zone dimension 
            </summary>
            <param name="dimensions">Container object dimensions</param>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.DefineBasePosition(Telerik.Charting.Styles.Position,Telerik.Charting.Styles.Dimensions)">
            <summary>
            Corrects the element position to place it inside Layout Zone
            </summary>
            <param name="position">Zone element position</param>
            <param name="baseDimensions">Zone container dimensions</param>
        </member>
        <member name="M:Telerik.Charting.LayoutZone.Add(System.Object)">
            <summary>
            Adds chart element in current layout zone 
            </summary>
            <param name="element">Element to add</param>
        </member>
        <member name="P:Telerik.Charting.LayoutZone.X">
            <summary>
            X coordinate
            </summary>
        </member>
        <member name="P:Telerik.Charting.LayoutZone.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="P:Telerik.Charting.LayoutZone.Width">
            <summary>
            Zone width
            </summary>
        </member>
        <member name="P:Telerik.Charting.LayoutZone.Height">
            <summary>
            Zone height
            </summary>
        </member>
        <member name="P:Telerik.Charting.LayoutZone.Type">
            <summary>
            Zone type
            </summary>
        </member>
        <member name="P:Telerik.Charting.LayoutZone.Item(System.Int32)">
            <summary>
            IOrdering list element by index
            </summary>
            <param name="index">Element index</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Charting.LayoutZone.AlignedPosition">
            <summary>
            Zone aligned position
            </summary>
        </member>
        <member name="T:Telerik.Charting.Security">
            <summary>
            Encryption utility class
            </summary>
        </member>
        <member name="M:Telerik.Charting.Security.encryptStringToBytes_AES(System.String,System.Byte[],System.Byte[])">
            <summary>
            Encrypts string using AES algorithm
            </summary>
            <param name="plainText">Text string to encrypt</param>
            <param name="Key">Encryption key array</param>
            <param name="IV">IV array</param>
            <returns>Encrypted byte array</returns>
        </member>
        <member name="M:Telerik.Charting.Security.decryptStringFromBytes_AES(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypts bytes array to a string using AES algorithm
            </summary>
            <param name="cipherText">Encrypted bytes array</param>
            <param name="Key">Encryption key array</param>
            <param name="IV">IV array</param>
            <returns>Encrypted byte array</returns>
        </member>
        <member name="T:Telerik.Charting.Tools">
            <summary>
            Common chart utility methods
            </summary>
        </member>
        <member name="M:Telerik.Charting.Tools.#ctor">
            <summary>
            Class constructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.Tools.ParseAttribute(System.String@,System.Xml.XmlNode,System.String)">
            <summary>
            Xml support method. Gets the Xml attribute value
            </summary>
            <param name="target">Target string to save the value</param>
            <param name="node">XmlNode to get attribute from</param>
            <param name="targetXmlName">Xml attribute name</param>
            <returns>True in case of success</returns>
        </member>
        <member name="M:Telerik.Charting.Tools.SetAttribute(System.Xml.XmlElement,System.String,System.Object,System.Type)">
            <summary>
            Sets the XmlAttribute value
            </summary>
            <param name="xmlElement">XmlElement to set attribute value</param>
            <param name="attributeName">Attribute name</param>
            <param name="val">Value to set</param>
            <param name="attributeType">Value type if value is Enumeration</param>
        </member>
        <member name="M:Telerik.Charting.Tools.CompareArrays(System.Drawing.Color[],System.Drawing.Color[])">
            <summary>
            Compares two Color arrays
            </summary>
            <param name="a">First array to compare</param>
            <param name="b">Second array to compare</param>
            <returns>True if arrays are equal</returns>
        </member>
        <member name="M:Telerik.Charting.Tools.CompareArrays(System.Single[],System.Single[])">
            <summary>
            Compares two float arrays
            </summary>
            <param name="a">First array to compare</param>
            <param name="b">Second array to compare</param>
            <returns>True if arrays are equal</returns>
        </member>
        <member name="M:Telerik.Charting.Tools.ArraySum(System.Single[])">
            <summary>
            Calculates sum of a float array members
            </summary>
            <param name="a">Array</param>
            <returns>Sum value</returns>
        </member>
        <member name="T:Telerik.Charting.DefaultValues">
            <summary>
            Default properties values constants
            </summary>
        </member>
        <member name="F:Telerik.Charting.DefaultValues.ROUND_DIGITS">
            <summary>
            Rounding digits limit
            </summary>
        </member>
        <member name="F:Telerik.Charting.DefaultValues.MIN_POSSIBLE_STEP">
            <summary>
            Minimum possible axis step value
            </summary>
        </member>
        <member name="F:Telerik.Charting.DefaultValues.defaultForeColors">
            <summary>
            Default main colors array
            </summary>
        </member>
        <member name="F:Telerik.Charting.DefaultValues.defaultSecondColors">
            <summary>
            Default secondary colors array
            </summary>
        </member>
        <member name="M:Telerik.Charting.DefaultValues.GetMainColor(System.Int32)">
            <summary>
            Gets main color from a colors array at the specified index
            </summary>
            <param name="index">Colors index in an array</param>
            <returns>Color</returns>
        </member>
        <member name="M:Telerik.Charting.DefaultValues.GetSecondColor(System.Int32)">
            <summary>
            Gets secondary color from a colors array at the specified index
            </summary>
            <param name="index">Colors index in an array</param>
            <returns>Color</returns>
        </member>
        <member name="T:Telerik.Charting.AxisSegmentsCollectionEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for manipulations of content of axis segments collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisSegmentsCollectionEditor.parentObject">
            <summary>
            Parent object of axis segments collection
            </summary> 
        </member>
        <member name="M:Telerik.Charting.AxisSegmentsCollectionEditor.#ctor(System.Type)">
            <summary>
            Create a instance of AxisSegmentsCollectionEditor class
            </summary>
            <param name="type">Type descriptor</param>
        </member>
        <member name="M:Telerik.Charting.AxisSegmentsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit a value in collection editor
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>returned value</returns>
        </member>
        <member name="M:Telerik.Charting.AxisSegmentsCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of a column for custom collection
            </summary>
            <param name="itemType">Type descriptor</param>
            <returns>new instance</returns>
        </member>
        <member name="T:Telerik.Charting.ChartAxisItemsCollectionEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for manipulations of content of axis items collection
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAxisItemsCollectionEditor.chartAxis">
            <summary>
            Parent object of axis items collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollectionEditor.#ctor(System.Type)">
            <summary>
            Create a instance of ChartAxisItemsCollectionEditor class
            </summary>
            <param name="type">Type descriptor</param>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit a value in collection editor
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>returned value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartAxisItemsCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of a column for custom collection
            </summary>
            <param name="itemType">Type descriptor</param>
            <returns>new instance</returns>
        </member>
        <member name="T:Telerik.Charting.ChartPaletteEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for select palette
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPaletteEditor.editorService">
            <summary>
            Object that provide an interface for a System.Drawing.Design.UITypeEditor to display 
            Windows Forms or to display a control in a drop-down area from a property
            grid control in design mode.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPaletteEditor.columnsListing">
            <summary>
            ListBox for palette selection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPaletteEditor.#ctor">
            <summary>
            Create a instance of ChartPaletteEditor class
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPaletteEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Return edit style for ListBox
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <returns>Edit style</returns>
        </member>
        <member name="M:Telerik.Charting.ChartPaletteEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartPaletteEditor.columnsListing_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Added to automatically close dropdown after user selection
            </summary>
            <param name="sender">Object which generate a event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Charting.ChartPaletteEditor.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPaletteEditor.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPaletteEditor.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True - if should disposing</param>
        </member>
        <member name="P:Telerik.Charting.ChartPaletteEditor.IsDropDownResizable">
            <summary>
            For resize ability
            </summary>
        </member>
        <member name="T:Telerik.Charting.CustomPaletteCollectionEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for palette collection changes
            </summary>
        </member>
        <member name="F:Telerik.Charting.CustomPaletteCollectionEditor.chartComponent">
            <summary>
            Chart component object
            </summary>
        </member>
        <member name="M:Telerik.Charting.CustomPaletteCollectionEditor.#ctor(System.Type)">
            <summary>
            Create a instance of CustomPaletteCollectionEditor class
            </summary>
            <param name="type">Type descriptor</param>
        </member>
        <member name="M:Telerik.Charting.CustomPaletteCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit a value in collection editor
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Charting.CustomPaletteCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of a column for custom collection
            </summary>
            <param name="itemType">Type descriptor</param>
            <returns>New instance</returns>
        </member>
        <member name="T:Telerik.Charting.SeriesCollectionEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for series collection content manipulations
            </summary>
        </member>
        <member name="F:Telerik.Charting.SeriesCollectionEditor.chartComponent">
            <summary>
            Chart as component object
            </summary>
        </member>
        <member name="M:Telerik.Charting.SeriesCollectionEditor.#ctor(System.Type)">
            <summary>
            Create a instance of SeriesCollectionEditor class
            </summary>
        </member>
        <member name="M:Telerik.Charting.SeriesCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit a value in collection editor
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Charting.SeriesCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of a column for custom collection
            </summary>
            <param name="itemType">Type descriptor</param>
            <returns>New instance</returns>
        </member>
        <member name="T:Telerik.Charting.SeriesItemsCollectionEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for series items collection changes
            </summary>
        </member>
        <member name="F:Telerik.Charting.SeriesItemsCollectionEditor.chartSeries">
            <summary>
            Series
            </summary>
        </member>
        <member name="M:Telerik.Charting.SeriesItemsCollectionEditor.#ctor(System.Type)">
            <summary>
            Create a instance of CustomPaletteCollectionEditor class
            </summary>
            <param name="type">Type descriptor</param>
        </member>
        <member name="M:Telerik.Charting.SeriesItemsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit a value in collection editor
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Charting.SeriesItemsCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of a column for custom collection
            </summary>
            <param name="itemType">Type descriptor</param>
            <returns>New instance</returns>
        </member>
        <member name="T:Telerik.Charting.ChartSkinEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for skins collection changes
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSkinEditor.editorService">
            <summary>
            Object which Provides an interface for a System.Drawing.Design.UITypeEditor to display
            Windows Forms or to display a control in a drop-down area from a property
            grid control in design mode.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSkinEditor.columnsListing">
            <summary>
            ListBox for select value
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSkinEditor.#ctor">
            <summary>
            Create a instance of ChartSkinEditor class
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSkinEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Return edit style for ListBox
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <returns>Edit style</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSkinEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSkinEditor.columnsListing_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Added to automatically close dropdown after user selection
            </summary>
            <param name="sender">Object which generate a event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Charting.ChartSkinEditor.GetComponent(System.IServiceProvider)">
            <summary>
            Return a component for changes
            </summary>
            <param name="serviceProvider">Object which defines a mechanism for retrieving a service object.</param>
            <returns>Object which provides functionality required by all components</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSkinEditor.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSkinEditor.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSkinEditor.Dispose(System.Boolean)">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Should dispose</param>
        </member>
        <member name="P:Telerik.Charting.ChartSkinEditor.IsDropDownResizable">
            <summary>
            Used for resize ability
            </summary>
        </member>
        <member name="T:Telerik.Charting.ColorBlendEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for edit complex gradient 
            </summary>
        </member>
        <member name="M:Telerik.Charting.ColorBlendEditor.#ctor(System.Type)">
            <summary>
            Create a instance of ColorBlendEditor class
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Telerik.Charting.ColorBlendEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of a column for custom collection
            </summary>
            <param name="itemType">Type descriptor</param>
            <returns>New instance</returns>
        </member>
        <member name="T:Telerik.Charting.CommentsCollectionEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for comments(additional labels) collection changes
            </summary>
        </member>
        <member name="F:Telerik.Charting.CommentsCollectionEditor.chartComponent">
            <summary>
            Chart component object
            </summary>
        </member>
        <member name="M:Telerik.Charting.CommentsCollectionEditor.#ctor(System.Type)">
            <summary>
            Create a instance of CustomPaletteCollectionEditor class
            </summary>
            <param name="type">Type descriptor</param>
        </member>
        <member name="M:Telerik.Charting.CommentsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit a value in collection editor
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="T:Telerik.Charting.DataColumnEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for DataColumn changing
            </summary>
        </member>
        <member name="F:Telerik.Charting.DataColumnEditor.editorService">
            <summary>
            Object which Provides an interface for a System.Drawing.Design.UITypeEditor to display
            Windows Forms or to display a control in a drop-down area from a property
            grid control in design mode.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DataColumnEditor.columnsListing">
            <summary>
            ListBox for select value
            </summary>
        </member>
        <member name="F:Telerik.Charting.DataColumnEditor.oldValue">
            <summary>
            Previous value
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataColumnEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Return edit style for ListBox
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <returns>Edit style</returns>
        </member>
        <member name="M:Telerik.Charting.DataColumnEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Charting.DataColumnEditor.FillListBox(System.Object,System.String)">
            <summary>
            Filling listbox
            </summary>
            <param name="data">Data</param>
            <param name="dataMember">DataMember</param>
        </member>
        <member name="M:Telerik.Charting.DataColumnEditor.columnsListing_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Added to automatically close dropdown after user selection
            </summary>
            <param name="sender">Object which generate a event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Charting.DataColumnEditor.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataColumnEditor.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataColumnEditor.Dispose(System.Boolean)">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Should dispose</param>
        </member>
        <member name="T:Telerik.Charting.FiguresEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for figure change
            </summary>
        </member>
        <member name="F:Telerik.Charting.FiguresEditor.editorService">
            <summary>
            Object which Provides an interface for a System.Drawing.Design.UITypeEditor to display
            Windows Forms or to display a control in a drop-down area from a property
            grid control in design mode.
            </summary>
        </member>
        <member name="F:Telerik.Charting.FiguresEditor.columnsListing">
            <summary>
            ListBox for select value
            </summary>
        </member>
        <member name="F:Telerik.Charting.FiguresEditor.oldValue">
            <summary>
            Previous value
            </summary>
        </member>
        <member name="F:Telerik.Charting.FiguresEditor.style">
            <summary>
            Style object
            </summary>
        </member>
        <member name="M:Telerik.Charting.FiguresEditor.#ctor">
            <summary>
            Create new instance of FiguresEditor class
            </summary>
        </member>
        <member name="M:Telerik.Charting.FiguresEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Return edit style for ListBox
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <returns>Edit style</returns>
        </member>
        <member name="M:Telerik.Charting.FiguresEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Charting.FiguresEditor.columnsListing_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Added to automatically close dropdown after user selection
            </summary>
            <param name="sender">Object which generate a event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Charting.FiguresEditor.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.FiguresEditor.Dispose">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Should dispose</param>
        </member>
        <member name="M:Telerik.Charting.FiguresEditor.Dispose(System.Boolean)">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Should dispose</param>
        </member>
        <member name="T:Telerik.Charting.CustomFiguresCollectionEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for custom figures collection changes
            </summary>
        </member>
        <member name="F:Telerik.Charting.CustomFiguresCollectionEditor.chartComponent">
            <summary>
            Chart component object
            </summary>
        </member>
        <member name="F:Telerik.Charting.CustomFiguresCollectionEditor.customFiguresCollection">
            <summary>
            Collection of custom figures
            </summary>
        </member>
        <member name="F:Telerik.Charting.CustomFiguresCollectionEditor.cancel">
            <summary>
            True after cancel button click
            </summary>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollectionEditor.#ctor(System.Type)">
            <summary>
            Create new instance of FiguresEditor class
            </summary>
            <param name="type">Type</param>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollectionEditor.UndoChanges">
            <summary>
            Return collection to previous state
            </summary>
            <returns>Custom figures collection </returns>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollectionEditor.CancelChanges">
            <summary>
            Drop changes
            </summary>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of a column for custom collection
            </summary>
            <param name="itemType">Type</param>
            <returns>New instance</returns>
        </member>
        <member name="T:Telerik.Charting.LabelsCollectionEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for labels collection changing
            </summary>
        </member>
        <member name="F:Telerik.Charting.LabelsCollectionEditor.container">
            <summary>
            Extended label
            </summary>
        </member>
        <member name="M:Telerik.Charting.LabelsCollectionEditor.#ctor(System.Type)">
            <summary>
            Create new instance of FiguresEditor class
            </summary>
            <param name="type">Type</param>
        </member>
        <member name="M:Telerik.Charting.LabelsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Charting.LabelsCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of a column for custom collection
            </summary>
            <param name="itemType">Type</param>
            <returns>New instance</returns>
        </member>
        <member name="T:Telerik.Charting.MarkedZonesCollectionEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for marked zones collection changes
            </summary>
        </member>
        <member name="F:Telerik.Charting.MarkedZonesCollectionEditor._plotArea">
            <summary>
            Plot area
            </summary>
        </member>
        <member name="M:Telerik.Charting.MarkedZonesCollectionEditor.#ctor(System.Type)">
            <summary>
            Create new instance of FiguresEditor class
            </summary>
            <param name="type">Type</param>
        </member>
        <member name="M:Telerik.Charting.MarkedZonesCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Charting.MarkedZonesCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of a column for custom collection
            </summary>
            <param name="itemType">Type</param>
            <returns>New instance</returns>
        </member>
        <member name="T:Telerik.Charting.NumericDataColumnEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for DataColumn with numeric data changing
            </summary>
        </member>
        <member name="M:Telerik.Charting.NumericDataColumnEditor.FillListBox(System.Object,System.String)">
            <summary>
            Filling listbox
            </summary>
            <param name="data">Data</param>
            <param name="dataMember">DataMember</param>
        </member>
        <member name="T:Telerik.Charting.PaletteItemsCollectionEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for palette items collection changes
            </summary>
        </member>
        <member name="F:Telerik.Charting.PaletteItemsCollectionEditor._palette">
            <summary>
            Palette for changing
            </summary>
        </member>
        <member name="M:Telerik.Charting.PaletteItemsCollectionEditor.#ctor(System.Type)">
            <summary>
            Create new instance of FiguresEditor class
            </summary>
            <param name="type">Type</param>
        </member>
        <member name="M:Telerik.Charting.PaletteItemsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Charting.PaletteItemsCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Return collection to previous state
            </summary>
            <returns>Custom figures collection </returns>
        </member>
        <member name="T:Telerik.Charting.BitmapToRegion">
            <summary>
            Support class for  drawing not rectangular form elements with bitmap fill
            </summary>
        </member>
        <member name="M:Telerik.Charting.BitmapToRegion.#ctor">
            <summary>
            Create Instance of BitmapToRegion class
            </summary>
        </member>
        <member name="M:Telerik.Charting.BitmapToRegion.Convert(System.Drawing.Bitmap)">
            <summary>
            Trace bitmap data to Region
            </summary>
            <param name="bitmap">Image as Bitmap</param>
            <returns>Result Region</returns>
        </member>
        <member name="T:Telerik.Charting.SelectedChange">
            <summary>
            Delegate, that calls when selected ChartPreview change
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartPreview">
            <summary>
            Reloaded PictureBox special for using in the Wizard for preview different chart images
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPreview._selected">
            <summary>
            Indicate select or not ChartPreview
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPreview.SelectedChange">
            <summary>
            Delegate, that calls when selected ChartPreview change
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPreview.#ctor">
            <summary>
            Create a new instance of ChartPreview class
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPreview.#ctor(Telerik.Charting.Chart,System.Int32,System.Int32)">
            <summary>
            Create a new instance of ChartPreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
        </member>
        <member name="M:Telerik.Charting.ChartPreview.#ctor(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Create a new instance of ChartPreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
        </member>
        <member name="M:Telerik.Charting.ChartPreview.OnMouseHover(System.EventArgs)">
            <summary>
            Override OnMouseHover event
            </summary>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.ChartPreview.OnMouseLeave(System.EventArgs)">
            <summary>
            Override OnMouseLeave event
            </summary>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.ChartPreview.OnClick(System.EventArgs)">
            <summary>
            Override OnClick event
            </summary>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.ChartPreview.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override OnPaint event
            </summary>
            <param name="e">Paint event arguments object</param>
        </member>
        <member name="P:Telerik.Charting.ChartPreview.Selected">
            <summary>
            Indicate select or not ChartPreview
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartTypePreview">
            <summary>
            Class for drawing preview different series types 
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartTypePreview._type">
            <summary>
            Series type
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartTypePreview._parent">
            <summary>
            Base collection with all series types
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartTypePreview.#ctor(Telerik.Charting.Chart,System.Int32,System.Int32)">
            <summary>
            Create a new instance of ChartTypePreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
        </member>
        <member name="M:Telerik.Charting.ChartTypePreview.#ctor(Telerik.Charting.Chart,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create a new instance of ChartTypePreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
            <param name="selected">Should select this preview</param>
        </member>
        <member name="M:Telerik.Charting.ChartTypePreview.#ctor(System.Drawing.Image,Telerik.Charting.ChartSeriesType,System.Int32,System.Int32)">
            <summary>
            Create a new instance of ChartTypePreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
        </member>
        <member name="M:Telerik.Charting.ChartTypePreview.#ctor(System.Drawing.Image,Telerik.Charting.ChartSeriesType,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create a new instance of ChartTypePreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
            <param name="selected">Should select this preview</param>
        </member>
        <member name="P:Telerik.Charting.ChartTypePreview.ChartType">
            <summary>
            Series type
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartSkinPreview">
            <summary>
            Class for drawing preview for different skins 
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSkinPreview._skin">
            <summary>
            Skin name
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSkinPreview._parent">
            <summary>
            Base collection with all skins
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSkinPreview.#ctor(Telerik.Charting.Chart,System.Int32,System.Int32,System.String)">
            <summary>
            Create a new instance of ChartSkinPreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
            <param name="skin">Skin name</param>
        </member>
        <member name="P:Telerik.Charting.ChartSkinPreview.Skin">
            <summary>
            Skin name
            </summary>
        </member>
        <member name="T:Telerik.Charting.SelectedChanged">
            <summary>
            Delegate, that calls when selected ChartPreview change
            </summary>
            <param name="sender">ChartPreview control</param>
        </member>
        <member name="T:Telerik.Charting.ChartPreviewCollection`1">
            <summary>
            Class describe common functionality for collections of different types of ChartPreview
            </summary>
            <typeparam name="T">ChartPreview</typeparam>
        </member>
        <member name="F:Telerik.Charting.ChartPreviewCollection`1.GetSelectedValue">
            <summary>
            Delegate for getting a selected value
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPreviewCollection`1._selectedIndex">
            <summary>
            Index of selected element
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPreviewCollection`1._needChangeProperty">
            <summary>
            Charts elements property for changing
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPreviewCollection`1._component">
            <summary>
            Working component
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartPreviewCollection`1.List">
            <summary>
            List of ChartPreview objects
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPreviewCollection`1.#ctor(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Create a new instance of ChartPreviewCollection class
            </summary>
            <param name="component">Working component</param>
            <param name="needChangeProperty">Charts elements property for changing</param>
        </member>
        <member name="M:Telerik.Charting.ChartPreviewCollection`1.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPreviewCollection`1.BeforeSetValue">
            <summary>
            Default method for event
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPreviewCollection`1.AfterSetValue">
            <summary>
            Default method for event
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPreviewCollection`1.OnSelectedIndexChanged(Telerik.Charting.ChartPreview)">
            <summary>
            Default method for event
            </summary>
            <param name="sender">ChartPreview control</param>
        </member>
        <member name="M:Telerik.Charting.ChartPreviewCollection`1.Dispose">
            <summary>
            Dispose control
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartPreviewCollection`1.Dispose(System.Boolean)">
            <summary>
            Dispose control
            </summary>
            <param name="disposing">Should disposing</param>
        </member>
        <member name="E:Telerik.Charting.ChartPreviewCollection`1.SelectedIndexChanged">
            <summary>
            Event occurs when selected index changed
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPreviewCollection`1.SelectedIndex">
            <summary>
            Index of selected element
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartPreviewCollection`1.Item(System.Int32)">
            <summary>
            Get or set element from collection by integer index
            </summary>
            <param name="index">Index of element</param>
            <returns>ChartPreview object</returns>
        </member>
        <member name="T:Telerik.Charting.ChartPreviewCollection`1.GetSelectedValueDelegate">
            <summary>
            Get a selected value
            </summary>
            <returns>Main(that describe) value from ChartPreview</returns>
        </member>
        <member name="T:Telerik.Charting.ChartTypePreviewCollection">
            <summary>
            Class describe functionality for collections of ChartTypePreview
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartTypePreviewCollection.#ctor(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Create a new instance of ChartPreviewCollection class
            </summary>
            <param name="component">Working component</param>
            <param name="needChangeProperty">Charts elements property for changing</param>
        </member>
        <member name="M:Telerik.Charting.ChartTypePreviewCollection.GetSelectedChartType">
            <summary>
            Return selected type of series types
            </summary>
            <returns>Series type</returns>
        </member>
        <member name="M:Telerik.Charting.ChartTypePreviewCollection.SelectChartByType(System.Nullable{Telerik.Charting.ChartSeriesType})">
            <summary>
            Selecting ChartTypePreview by ChartSeriesType
            </summary>
            <param name="cst">Series type for selecting</param>
        </member>
        <member name="M:Telerik.Charting.ChartTypePreviewCollection.Add(Telerik.Charting.ChartTypePreview)">
            <summary>
            Add ChartTypePreview into the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:Telerik.Charting.ChartTypePreviewCollection.SelectedChartType">
            <summary>
            Selected series type
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartSkinPreviewCollection">
            <summary>
            Class describe functionality for collections of ChartSkinPreview
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSkinPreviewCollection.#ctor(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Create a new instance of ChartPreviewCollection class
            </summary>
            <param name="component">Working component</param>
            <param name="needChangeProperty">Charts elements property for changing</param>
        </member>
        <member name="M:Telerik.Charting.ChartSkinPreviewCollection.GetSelectedSkin">
            <summary>
            Return selected skin
            </summary>
            <returns>Selected skin name</returns>
        </member>
        <member name="M:Telerik.Charting.ChartSkinPreviewCollection.SelectChartBySkin(System.String)">
            <summary>
            Selecting ChartSkinPreview by skin name
            </summary>
            <param name="cst">Skin name for selecting</param>
        </member>
        <member name="M:Telerik.Charting.ChartSkinPreviewCollection.Add(Telerik.Charting.ChartSkinPreview)">
            <summary>
            Add ChartSkinPreview into the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.Charting.ChartSkinPreviewCollection.BeforeSetValue">
            <summary>
            Default method for event
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSkinPreviewCollection.AfterSetValue">
            <summary>
            Default method for event
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSkinPreviewCollection.SelectedSkin">
            <summary>
            Selected skin name
            </summary>
        </member>
        <member name="T:Telerik.Charting.ImageButton">
            <summary>
            Button control with additional functionality for better design for Wizard
            </summary>
        </member>
        <member name="F:Telerik.Charting.ImageButton.clickImage">
            <summary>
            Background image for click state
            </summary>
        </member>
        <member name="F:Telerik.Charting.ImageButton.hoverImage">
            <summary>
            Background image for hover state
            </summary>
        </member>
        <member name="F:Telerik.Charting.ImageButton.outImage">
            <summary>
            Background image for out state
            </summary>
        </member>
        <member name="F:Telerik.Charting.ImageButton.disabledImage">
            <summary>
            Background image for disable state
            </summary>
        </member>
        <member name="F:Telerik.Charting.ImageButton.clickImageSrc">
            <summary>
            Source for background image for click state
            </summary>
        </member>
        <member name="F:Telerik.Charting.ImageButton.hoverImageSrc">
            <summary>
            Source for background image for hover state
            </summary>
        </member>
        <member name="F:Telerik.Charting.ImageButton.outImageSrc">
            <summary>
            Source for background image for out state
            </summary>
        </member>
        <member name="F:Telerik.Charting.ImageButton.disabledImageSrc">
            <summary>
            Source for background image for disable state
            </summary>
        </member>
        <member name="F:Telerik.Charting.ImageButton.isSkinned">
            <summary>
            Value that indicate should apply background images or not
            </summary>
        </member>
        <member name="M:Telerik.Charting.ImageButton.#ctor">
            <summary>
            Create instance of ImageButton class
            </summary>
        </member>
        <member name="M:Telerik.Charting.ImageButton.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Create instance of ImageButton class
            </summary>
            <param name="clickImage">Source for background image for click state</param>
            <param name="hoverImage">Source for background image for hover state</param>
            <param name="outImage">Source for background image for out state</param>
            <param name="disabledImage">Source for background image for disable state</param>
        </member>
        <member name="M:Telerik.Charting.ImageButton.GetImageFromResource(System.String)">
            <summary>
            Read source and create image 
            </summary>
            <param name="name">Source name</param>
            <returns>image object</returns>
        </member>
        <member name="M:Telerik.Charting.ImageButton.ApplySkin(System.Boolean)">
            <summary>
            Apply background images
            </summary>
            <param name="applySkin">Should apply</param>
        </member>
        <member name="M:Telerik.Charting.ImageButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Override default button event OnMouseDown
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="M:Telerik.Charting.ImageButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Override default button event OnMouseUp
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="M:Telerik.Charting.ImageButton.OnMouseEnter(System.EventArgs)">
            <summary>
            Override default button event OnMouseEnter
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Charting.ImageButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Override default button event OnMouseLeave
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Charting.ImageButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override default button event OnPaint
            </summary>
            <param name="e">Paint event arguments</param>
        </member>
        <member name="M:Telerik.Charting.ImageButton.DisposeImage(System.Drawing.Image@)">
            <summary>
            Disposing Image
            </summary>
            <param name="image">Image object reference</param>
        </member>
        <member name="M:Telerik.Charting.ImageButton.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">Should disposing</param>
        </member>
        <member name="P:Telerik.Charting.ImageButton.DisabledImageSrc">
            <summary>
            Source for background image for disable state
            </summary>
        </member>
        <member name="P:Telerik.Charting.ImageButton.OutImageSrc">
            <summary>
            Source for background image for out state
            </summary>
        </member>
        <member name="P:Telerik.Charting.ImageButton.HoverImageSrc">
            <summary>
            Source for background image for hover state
            </summary>
        </member>
        <member name="P:Telerik.Charting.ImageButton.ClickImageSrc">
            <summary>
            Source for background image for hover state
            </summary>
        </member>
        <member name="P:Telerik.Charting.ImageButton.Enabled">
            <summary>
            Value indicate enable button or not
            </summary>
        </member>
        <member name="P:Telerik.Charting.ImageButton.IsSkinned">
            <summary>
            Value that indicate should apply background images or not
            </summary>
        </member>
        <member name="T:Telerik.Charting.ManagedListBox">
            <summary>
            Custom control for Wizard using for list contents manipulations
            </summary>
        </member>
        <member name="F:Telerik.Charting.ManagedListBox._listBox">
            <summary>
            ListBox control
            </summary>
        </member>
        <member name="F:Telerik.Charting.ManagedListBox._upButton">
            <summary>
            ImageButton control for move up ability
            </summary>
        </member>
        <member name="F:Telerik.Charting.ManagedListBox._downButton">
            <summary>
            ImageButton control for move down ability
            </summary>
        </member>
        <member name="F:Telerik.Charting.ManagedListBox._addButton">
            <summary>
            ImageButton control for add ability
            </summary>
        </member>
        <member name="F:Telerik.Charting.ManagedListBox._removeButton">
            <summary>
            ImageButton control for remove ability
            </summary>
        </member>
        <member name="F:Telerik.Charting.ManagedListBox._enableButtons">
            <summary>
            Value indicate enable buttons(ImageButton) or not
            </summary>
        </member>
        <member name="F:Telerik.Charting.ManagedListBox.isSkinned">
            <summary>
            Should apply background images for ImageButton controls
            </summary>
        </member>
        <member name="M:Telerik.Charting.ManagedListBox.#ctor">
            <summary>
            Create instance of ManagedListBox class
            </summary>
        </member>
        <member name="M:Telerik.Charting.ManagedListBox.ApplySkin(System.Boolean)">
            <summary>
            Apply background images for ImageButton controls
            </summary>
            <param name="isSkinned">Should apply background images for ImageButton controls</param>
        </member>
        <member name="M:Telerik.Charting.ManagedListBox.InitializeComponent">
            <summary>
            Internal component initialization
            </summary>
        </member>
        <member name="M:Telerik.Charting.ManagedListBox._listBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Calls when Selected index of element of ListBox changed
            </summary>
            <param name="sender">ListBox object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Charting.ManagedListBox.listBox_ItemsChanged(System.Object)">
            <summary>
            Calls when content of ListBox changed
            </summary>
            <param name="sender">ListBox object</param>
        </member>
        <member name="P:Telerik.Charting.ManagedListBox.EnableButtons">
            <summary>
            Value indicate enable buttons(ImageButton) or not
            </summary>
        </member>
        <member name="P:Telerik.Charting.ManagedListBox.ListBox">
            <summary>
            ListBox control
            </summary>
        </member>
        <member name="P:Telerik.Charting.ManagedListBox.UpButton">
            <summary>
            ImageButton control for add ability
            </summary>
        </member>
        <member name="P:Telerik.Charting.ManagedListBox.DownButton">
            <summary>
            ImageButton control for move down ability
            </summary>
        </member>
        <member name="P:Telerik.Charting.ManagedListBox.AddButton">
            <summary>
            ImageButton control for add ability
            </summary>
        </member>
        <member name="P:Telerik.Charting.ManagedListBox.RemoveButton">
            <summary>
            ImageButton control for remove ability
            </summary>
        </member>
        <member name="P:Telerik.Charting.ManagedListBox.IsSkinned">
            <summary>
            Should apply background images for ImageButton controls
            </summary>
        </member>
        <member name="T:Telerik.Charting.ListBoxItemsChanged">
            <summary>
            Delegate for content of ListBox changed event
            </summary>
            <param name="sender">ListBox</param>
        </member>
        <member name="T:Telerik.Charting.ListBoxItems">
            <summary>
            Class describe a collection of ListBoxItems and its functionality
            </summary>
        </member>
        <member name="F:Telerik.Charting.ListBoxItems.owner">
            <summary>
            Collection owner
            </summary>
        </member>
        <member name="M:Telerik.Charting.ListBoxItems.#ctor(Telerik.Charting.ListBoxContolling)">
            <summary>
            Create new instance of ListBoxItems class
            </summary>
            <param name="owner">ListBox</param>
        </member>
        <member name="M:Telerik.Charting.ListBoxItems.#ctor(Telerik.Charting.ListBoxContolling,Telerik.Charting.ListBoxItems)">
            <summary>
            Create new instance of ListBoxItems class
            </summary>
            <param name="owner">ListBox</param>
            <param name="listBoxItems">ListBoxItems collection</param>
        </member>
        <member name="M:Telerik.Charting.ListBoxItems.#ctor(Telerik.Charting.ListBoxContolling,System.Object[])">
            <summary>
            Create new instance of ListBoxItems class
            </summary>
            <param name="owner">ListBox</param>
            <param name="values">Values for ListBoxItems collection</param>
        </member>
        <member name="M:Telerik.Charting.ListBoxItems.Add(System.Object)">
            <summary>
            Add item into the collection
            </summary>
            <param name="item">Item for adding</param>
        </member>
        <member name="M:Telerik.Charting.ListBoxItems.AddRange(System.Object[])">
            <summary>
            Add items into the collection
            </summary>
            <param name="value">Items values for adding</param>
        </member>
        <member name="M:Telerik.Charting.ListBoxItems.AddRange(Telerik.Charting.ListBoxItems)">
            <summary>
            Add items into the collection
            </summary>
            <param name="value">Items for adding</param>
        </member>
        <member name="M:Telerik.Charting.ListBoxItems.AddRange(System.Windows.Forms.ListBox.ObjectCollection)">
            <summary>
            Add items into the collection
            </summary>
            <param name="value">Items values for adding</param>
        </member>
        <member name="M:Telerik.Charting.ListBoxItems.Clear">
            <summary>
            Clearing collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.ListBoxItems.Insert(System.Int32,System.Object)">
            <summary>
            Insert item into the collection at specific position
            </summary>
            <param name="index">Items position</param>
            <param name="item">Item for adding</param>
        </member>
        <member name="M:Telerik.Charting.ListBoxItems.Remove(System.Object)">
            <summary>
            Remove item from collection
            </summary>
            <param name="item">Item that should be remove</param>
        </member>
        <member name="M:Telerik.Charting.ListBoxItems.RemoveAt(System.Int32)">
            <summary>
            Remove item from collection
            </summary>
            <param name="item">Item with that index should be remove</param>
        </member>
        <member name="E:Telerik.Charting.ListBoxItems.ItemsChanged">
            <summary>
            Calls when content of ListBoxItems collection changed
            </summary>
        </member>
        <member name="T:Telerik.Charting.ListBoxContolling">
            <summary>
            Class describe functionality for controlling ListBox
            </summary>
        </member>
        <member name="M:Telerik.Charting.ListBoxContolling.OnItemsChanged(System.Object)">
            <summary>
            Default method for ListBoxItemsChanged event
            </summary>
            <param name="sender">Sender </param>
        </member>
        <member name="M:Telerik.Charting.ListBoxContolling.#ctor">
            <summary>
            Create new instance of ListBoxContolling class
            </summary>
        </member>
        <member name="M:Telerik.Charting.ListBoxContolling.CreateItemCollection">
            <summary>
            Create Items Collection for ListBox
            </summary>
            <returns>ObjectCollection</returns>
        </member>
        <member name="E:Telerik.Charting.ListBoxContolling.ItemsChanged">
            <summary>
            Event occurs when items collection of ListBox changed
            </summary>
        </member>
        <member name="P:Telerik.Charting.ListBoxContolling.Items">
            <summary>
            Items collection
            </summary>
        </member>
        <member name="T:Telerik.Charting.NumberTextBox">
            <summary>
            Text block for input numbers only
            </summary>
        </member>
        <member name="F:Telerik.Charting.NumberTextBox._numberValue">
            <summary>
            Value as number
            </summary>
        </member>
        <member name="M:Telerik.Charting.NumberTextBox.#ctor">
            <summary>
            Create new instance of NumberTextBox class
            </summary>
        </member>
        <member name="M:Telerik.Charting.NumberTextBox.OnLeave(System.EventArgs)">
            <summary>
            Override OnLeave event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:Telerik.Charting.NumberTextBox.NumberValue">
            <summary>
            Value as number
            </summary>
        </member>
        <member name="T:Telerik.Charting.Activate">
            <summary>
            Delegate calls when TabPage activate
            </summary>
        </member>
        <member name="T:Telerik.Charting.WizardTabPage">
            <summary>
            Class describe TapPage for Wizard
            </summary>
        </member>
        <member name="F:Telerik.Charting.WizardTabPage.Activate">
            <summary>
            Delegate calls when TabPage activate
            </summary>
        </member>
        <member name="M:Telerik.Charting.WizardTabPage.#ctor">
            <summary>
            Create new instance of WizardTabPage class
            </summary>
        </member>
        <member name="T:Telerik.Charting.Design.Wizard.GetDataSourcesList">
            <summary>
            Delegate for getting list of names of available DataSources
            </summary>
            <returns>List of names of available DataSources</returns>
        </member>
        <member name="T:Telerik.Charting.Design.Wizard.GetSelectedDataSourceName">
            <summary>
            Delegate for getting name of selected DataSource
            </summary>
            <returns>List of names of available DataSources</returns>
        </member>
        <member name="T:Telerik.Charting.Design.Wizard.GetData">
            <summary>
            Transfer data from DataSourse in to the control
            </summary>
        </member>
        <member name="T:Telerik.Charting.Design.Wizard.DataSourceChanged">
            <summary>
            Delegate provide event which occurs when DataSource changed
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:Telerik.Charting.Design.Wizard.DataSourceDesignerConfigure">
            <summary>
            Delegate provide functionality for configuration DataSorce in the design Time
            </summary>
        </member>
        <member name="T:Telerik.Charting.Design.Wizard.SetDataSourceID">
            <summary>
            Delegate for set DataSourceID in the control
            </summary>
        </member>
        <member name="T:Telerik.Charting.Design.Wizard.Wizard">
            <summary>
            Class provide Wizard GUI in the design time for chart controls
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.Designer">
            <summary>
            Chart component designer object
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.ChartControlOriginal">
            <summary>
            Chart component contains a original control
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.ChartControlWorking">
            <summary>
            Chart component contains a temporary control which use in the wizard
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.typesPreview">
            <summary>
            Collection for preview series types
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.skinsPreview">
            <summary>
            Collection for preview skins
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.GetDataSourcesList">
            <summary>
            Default method for GetDataSourcesList delegate
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.GetSelectedDataSourceName">
            <summary>
            Default method for GetSelectedDataSourceName delegate
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.GetData">
            <summary>
            Default method for GetData delegate
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.DataSourceChanged">
            <summary>
            Default method for DataSourceChanged delegate
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.DataSourceDesignerConfigure">
            <summary>
            Default method for DataSourceDesignerConfigure delegate
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.SetDataSourceID">
            <summary>
            Default method for SetDataSourceID delegate
            </summary>
        </member>
        <member name="F:Telerik.Charting.Design.Wizard.Wizard.dataTableDataHelper">
            <summary>
            DataTable data source helper object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.#ctor">
            <summary>
            Create a new instance of Wizard class
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.#ctor(Telerik.Charting.IChartDesigner)">
            <summary>
            Create a new instance of Wizard class
            </summary>
            <param name="designer">Chart component designer object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.#ctor(Telerik.Charting.IChartDesigner,System.Boolean)">
            <summary>
            Create a new instance of Wizard class
            </summary>
            <param name="designer">Chart component designer object</param>
            <param name="skinned">Should apply skins for wizard or not</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Init">
            <summary>
            Initialize wizard internal controls
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.FillFromEnum(System.Windows.Forms.ComboBox,System.Type)">
            <summary>
            Fills ComboBox controls from Enum
            </summary>
            <param name="comboBox">ComboBox control</param>
            <param name="enumType">Enum</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.GetEnumValue(System.Type,System.Int32)">
            <summary>
            Gets enum value by its position
            </summary>
            <param name="enumType">Enum</param>
            <param name="index">Position index</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ManageTabData(Telerik.Charting.ChartSeriesType)">
            <summary>
            Management for controls in the Data tab page
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.AddEventTypeTabControls">
            <summary>
            Add Events for tab with series type selection
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.RemoveEventTypeTabControls">
            <summary>
            Remove Events for tab with series type selection
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitType">
            <summary>
            Initialize tab with series type selection
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.GetChartPreview(Telerik.Charting.ChartSeriesType,System.Int32,System.Int32)">
            <summary>
            Create ChartPreview object
            </summary>
            <param name="csType">Series type</param>
            <param name="width">Required width for image rendering</param>
            <param name="height">Required height for image rendering</param>
            <returns>ChartPreview object</returns>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.CreateSeries(System.String,System.Drawing.Color,System.Drawing.Color,Telerik.Charting.ChartSeriesType,Telerik.Charting.Chart)">
            <summary>
            Create series in the chart
            </summary>
            <param name="seriesName">Series name</param>
            <param name="mainColor">Main color</param>
            <param name="secondColor">Second color</param>
            <param name="chartSeriesType">Series type</param>
            <param name="chart">Chart</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.IsVertical_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Change SeriesOrientation property depending of RadioButton state, when RadioButton state changing
            </summary>
            <param name="sender">RadioButton</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.IsHorisontal_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Change SeriesOrientation property depending of RadioButton state, when RadioButton state changing
            </summary>
            <param name="sender">RadioButton</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.AddEventDataTabControls">
            <summary>
            Add events for internal controls in the Data tab
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.linkLabel3_Click(System.Object,System.EventArgs)">
            <summary>
            Goto Axis tab
            </summary>
            <param name="sender">Label</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Data_SeriesType_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Change series type for selected series
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Data_SeriesLabels_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select series labels Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Data_SeriesY2_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select series Y2 values Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Data_SeriesY_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select series Y values Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Data_SeriesX2_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select series X2 values Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Data_SeriesX_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select series X values Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Data_SeriesName_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series name
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsY2_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item Y2 value for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsY_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item Y value for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsX2_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item X2 value for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsX_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item X value for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsLabel_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item label value for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsName_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item name for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Data_SeriesItems_ListBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Define selected series item
            </summary>
            <param name="sender">ListBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Data_SeriesItems_RemoveButton_Click(System.Object,System.EventArgs)">
            <summary>
            Remove series item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Data_SeriesItems_AddButton_Click(System.Object,System.EventArgs)">
            <summary>
            Add series item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Data_SeriesItems_DownButton_Click(System.Object,System.EventArgs)">
            <summary>
            Change series item position(move down) in the collection for selected item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Data_SeriesItems_UpButton_Click(System.Object,System.EventArgs)">
            <summary>
            Change series item position(move up) in the collection for selected item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Data_Series_ListBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Define selected series
            </summary>
            <param name="sender">ListBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Data_Series_RemoveButton_Click(System.Object,System.EventArgs)">
             <summary>
            Remove selected series
             </summary>
             <param name="sender">Button</param>
             <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Data_Series_AddButton_Click(System.Object,System.EventArgs)">
            <summary>
            Add series
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Data_Series_DownButton_Click(System.Object,System.EventArgs)">
            <summary>
            Change series position(move down) in the collection for selected item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Data_Series_UpButton_Click(System.Object,System.EventArgs)">
            <summary>
            Change series position(move up) in the collection for selected item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.RemoveEventDataTabControls">
            <summary>
            Remove events from internal controls in the Data tab
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitData">
            <summary>
            Init internal controls in the Data tab
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitSeries">
            <summary>
            Init controls which bind to the series
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitSeriesItems">
            <summary>
            Init controls which bind to the series items
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.GetItemMark(Telerik.Charting.ChartSeriesItem)">
            <summary>
            Gets a visible item mark  for display in the ListBox
            </summary>
            <param name="seriesItem">Series Item</param>
            <returns>item mark text</returns>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.SelectSeries(System.Int32,System.Boolean)">
            <summary>
            Select series by index
            </summary>
            <param name="index">series index</param>
            <param name="changeSelectedIndex">should change selected index or not</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.SelectSeriesItem(System.Int32)">
            <summary>
            Select series item by index
            </summary>
            <param name="index">series index</param>
            <param name="changeSelectedIndex">should change selected index or not</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.FillDataSourceIds">
            <summary>
            Fill DropDownList from list of available DataSources
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitDatabindOptionControls">
            <summary>
            Initialize controls which bind to the DataBinding functionality
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.DataSourceViewSelectCallback(System.Object)">
            <summary>
            Supporting method for preview data from data source
            </summary>
            <param name="data">Data from data source</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.btn_Data_Edit_Click(System.Object,System.EventArgs)">
            <summary>
            Call DataSource properties and setting dialog
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Data_DataSource_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Apply selecting DataSourse
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Data_AxisLabels_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select axis labels Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Data_GroupColumn_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select grouping Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitSkin">
            <summary>
            Initialize controls on the Skin tab
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.CreateChartPreview(System.String,System.Int32,System.Int32)">
            <summary>
            Create preview for skin
            </summary>
            <param name="skinName">Skin Name</param>
            <param name="width">Required width for preview image</param>
            <param name="height">Required height for preview image</param>
            <returns>ChartSkinPreview object</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.Design.Wizard.Wizard.AddEventLabelsLegendsTitleTabControls" -->
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.linkLabel1_Click(System.Object,System.EventArgs)">
            <summary>
            Go to the data tab
            </summary>
            <param name="sender">Label</param>
            <param name="e">Event arguments</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.Design.Wizard.Wizard.RemoveEventLabelsLegendsTitleTabControls" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.Design.Wizard.Wizard.InitLabelsLegendsTitle" -->
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.RemoveEventVDT">
            <summary>
            Remove events from controls that binding with values of data table
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.AddEventVDT">
            <summary>
            Add events from controls that binding with values of data table
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_VDT_Y_Leave(System.Object,System.EventArgs)">
            <summary>
            Set Y coordinate for DataTable
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_VDT_X_Leave(System.Object,System.EventArgs)">
            <summary>
            Set X coordinate for DataTable
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitValuesDataTable">
            <summary>
            Initialize controls that binding with values of data table
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_VDT_DrawType_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Change RenderType of DataTable
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_VDT_Align_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Change AlignedPosition of DataTable
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.cb_VDT_Visible_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Change Visible of DataTable
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.cb_VDT_Auto_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Change Position.Auto of DataTable
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.AddEventAxisTabControls">
            <summary>
            Add events from controls in the Axis Tab
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.link_Axis_BindLabels_Click(System.Object,System.EventArgs)">
            <summary>
            Go to the Data tab
            </summary>
            <param name="sender">Label object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.cb_Axis_ShowMarks_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Set Tick.Visible for selected axis
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.RemoveEventAxisTabControls">
            <summary>
            Remove events from controls in the Axis Tab
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitAxisX">
            <summary>
            Initialize controls base on the XAxis
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitAxisY">
            <summary>
            Initialize controls base on the YAxis
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitAxisY2">
            <summary>
            Initialize controls base on the YAxis2
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitAxis">
            <summary>
            Initialize Axis tab internal controls
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.cb_Axis_Visible_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Set Axis.Visible for selected axis
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.cb_Axis_ShowLabels_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Set AxisItems visible for selected axis
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.cb_Axis_AutoScale_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Set AutoScale for selected axis
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Axis_Title_Leave(System.Object,System.EventArgs)">
            <summary>
             Set Axis label text for selected axis
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Axis_Step_Leave(System.Object,System.EventArgs)">
            <summary>
             Set Axis step text for selected axis
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Axis_Rotation_Leave(System.Object,System.EventArgs)">
            <summary>
             Set Axis label rotation angle for selected axis
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Axis_MinValue_Leave(System.Object,System.EventArgs)">
            <summary>
             Set MinValue for selected axis
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_Axis_MaxValue_Leave(System.Object,System.EventArgs)">
            <summary>
             Set MaxValue for selected axis
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Axis_VisibleValues_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set VisibleValues for selected axis
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Axis_ValueFormat_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set ValueFormat for selected axis
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Axis_SelectAxis_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set selected axis
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Axis_CopyFrom_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set base axis for copy setting
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_Axis_Alignment_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set AxisLabel AlignedPosition for selected axis
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.btn_Axis_CopySettings_Click(System.Object,System.EventArgs)">
            <summary>
             Copy settings from one axis to another
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_UpButton_Click(System.Object,System.EventArgs)">
            <summary>
            Move up selected manual axis item
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_DownButton_Click(System.Object,System.EventArgs)">
            <summary>
            Move down selected manual axis item
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_Leave(System.Object,System.EventArgs)">
            <summary>
            Set text for manual axis item
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_RemoveButton_Click(System.Object,System.EventArgs)">
            <summary>
            Remove manual axis item
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_ListBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Select target  manual axis item
            </summary>
            <param name="sender">ListBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.FillManualLabels(Telerik.Charting.ChartAxisItemsCollection)">
            <summary>
            Add manual items into the ListBox
            </summary>
            <param name="collection">Collection of ChartAxisItems</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_AddButton_Click(System.Object,System.EventArgs)">
            <summary>
            Add new manual axis item
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.GetSelectedAxis">
            <summary>
            Get selected axis
            </summary>
            <returns>ChartAxis</returns>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.DefineSeriesLabelsProperties(System.Int32)">
            <summary>
            Initialize controls that bindings to the SeriesLabels
            </summary>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_LLT_SeriesLabels_Align_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set SeriesLabel AlignedPosition for selected series
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_LLT_SeriesLabels_Distance_Leave(System.Object,System.EventArgs)">
            <summary>
             Set AxisLabel Distance for selected series
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_LLT_SeriesLabels_Rotation_Leave(System.Object,System.EventArgs)">
            <summary>
             Set AxisLabel Rotation angle for selected series
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.cb_LLT_SeriesLabels_Visible_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
             Set AxisLabel Visible angle for selected series
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_LLT_Series_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set selected series
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_LLT_Legend_Aligment_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set Legend Alignment
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_LLT_Legend_Marker_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set Figure for markers of bindable legend items 
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.cb_LLT_Legend_Visible_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
             Set Visible for Legend
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tb_LLT_Title_Text_Leave(System.Object,System.EventArgs)">
            <summary>
             Set Title text
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ddl_LLT_Title_Aligment_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set AlignedPosition for Title
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.cb_LLT_Title_Visible_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
             Set Visible for Title
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.InitializeComponent">
            <summary>
            
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Wizard_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Mouse Wheel support in the wizard tabs
            </summary>
            <param name="sender">Object</param>
            <param name="e">Mouse Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.tabsSetting_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Select Tab
            </summary>
            <param name="sender">Tab object</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.ApplySkin(System.Boolean)">
            <summary>
            Apply Skin
            </summary>
            <param name="applySkin">Should apply skin</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.OnCreateControl">
            <summary>
            Override OnCreateControl: initialize BackgroundImage for form
            </summary>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override OnPaint: Drawing BackgroundImage for form
            </summary>
            <param name="e">Paint Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.submitButton_Click(System.Object,System.EventArgs)">
            <summary>
            Submit button click
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.applyButton_Click(System.Object,System.EventArgs)">
            <summary>
            Apply button click
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.cancelButton_Click(System.Object,System.EventArgs)">
            <summary>
            Cancel button click
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Wizard_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard MouseMove event
            </summary>
            <param name="sender">Wizard</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.Wizard_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard MouseDown event
            </summary>
            <param name="sender">Wizard</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.WizardAdded(System.Windows.Forms.Form)">
            <summary>
            WizardAdded event
            </summary>
            <param name="container">Form</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.closeButton_Click(System.Object,System.EventArgs)">
            <summary>
            Close button click
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.wizardForm_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard form MouseDown event
            </summary>
            <param name="sender">Form</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.wizardForm_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard form MouseDown event
            </summary>
            <param name="sender">Wizard</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.controlTitle_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard Title MouseDown event
            </summary>
            <param name="sender">Wizard</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Charting.Design.Wizard.Wizard.controlTitle_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard Title MouseMove event
            </summary>
            <param name="sender">Wizard</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="T:Telerik.Charting.WizardControlsHelper">
            <summary>
            Support class for additional functionality which is used in the specific controls in wizard
            </summary>
        </member>
        <member name="M:Telerik.Charting.WizardControlsHelper.GetImageFromResource(System.String)">
            <summary>
            Gets image from resource library
            </summary>
            <param name="name">Resource name</param>
            <returns>Image</returns>
        </member>
        <member name="M:Telerik.Charting.WizardControlsHelper.ConvertBitmapToRegion(System.Drawing.Bitmap)">
            <summary>
            Trace Bitmap data into region
            </summary>
            <param name="bitmap">Image as bitmap</param>
            <returns>Region</returns>
        </member>
        <member name="T:Telerik.Charting.IOrderingCollection">
            <summary>
            Common interface for a ordering collections
            </summary>
        </member>
        <member name="M:Telerik.Charting.IOrderingCollection.AddRange(System.Collections.Generic.List{Telerik.Charting.IOrdering},System.Int32)">
            <summary>
            Adds IOrdering elements list in the collection
            </summary>
            <param name="order">IOrdering list to add</param>
            <param name="afterIndex">The starting index at collection to add elements to</param>
        </member>
        <member name="M:Telerik.Charting.IOrderingCollection.AddVisibleRange(System.Collections.Generic.List{Telerik.Charting.IOrdering},System.Int32)">
            <summary>
            Adds only visible items to collection
            </summary>
            <param name="order">IOrdering list to add</param>
            <param name="afterIndex">The starting index at collection to add elements to</param>
        </member>
        <member name="M:Telerik.Charting.IOrderingCollection.AddVisible(Telerik.Charting.IOrdering,System.Int32)">
            <summary>
            Adds only visible item to collection
            </summary>
            <param name="elem">IOrdering element to add</param>
            <param name="afterIndex">The starting index at collection to add element to</param>
        </member>
        <member name="P:Telerik.Charting.IOrderingCollection.Item(System.Int32)">
            <summary>
            Gets the IOrdering element from collection at the given index
            </summary>
            <param name="index">Element index</param>
            <returns>IOrdering element</returns>
        </member>
        <member name="T:Telerik.Charting.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartClickEventArgs">
            <summary>
            Event arguments when a chart element is clicked.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartClickEventArgs.activeRegion">
            <summary>
            Reverse link to a parent
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartClickEventArgs.series">
            <summary>
            Chart series
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartClickEventArgs.seriesItem">
            <summary>
            Chart Series Item
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartClickEventArgs.#ctor(Telerik.Charting.IActiveRegion,Telerik.Charting.ChartSeries,Telerik.Charting.ChartSeriesItem)">
            <summary>
            Create instance of the class
            </summary>
            <param name="element">Parent object</param>
            <param name="series">series</param>
            <param name="seriesItem">series item</param>
        </member>
        <member name="M:Telerik.Charting.ChartClickEventArgs.#ctor(Telerik.Charting.IActiveRegion,Telerik.Charting.ChartSeries)">
            <summary>
            Create instance of the class
            </summary>
            <param name="element">Parent object</param>
            <param name="series">series</param>
        </member>
        <member name="M:Telerik.Charting.ChartClickEventArgs.#ctor(Telerik.Charting.IActiveRegion)">
            <summary>
            Create instance of the class
            </summary>
            <param name="element">Parent object</param>
        </member>
        <member name="P:Telerik.Charting.ChartClickEventArgs.Element">
            <summary>
            Reverse link to a parent
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartClickEventArgs.Series">
            <summary>
            Chart series
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartClickEventArgs.SeriesItem">
            <summary>
            Chart Series Item
            </summary>
        </member>
        <member name="F:Telerik.Charting.RenderEngine.image">
            <summary>
            Main Image object
            </summary>
        </member>
        <member name="F:Telerik.Charting.RenderEngine.graphics">
            <summary>
            Main Graphics object
            </summary>
        </member>
        <member name="F:Telerik.Charting.RenderEngine.chart">
            <summary>
            Chart that should be rendered
            </summary>
        </member>
        <member name="F:Telerik.Charting.RenderEngine.seriesList">
            <summary>
            Temporary series list for rendering
            </summary>
        </member>
        <member name="F:Telerik.Charting.RenderEngine.getAxisItemBoundOnly">
            <summary>
            Show if only bound of axis items be calculated
            </summary>
        </member>
        <member name="F:Telerik.Charting.RenderEngine.bitmapResolution">
            <summary>
            Resolution of resulting bitmap
            </summary>
        </member>
        <member name="F:Telerik.Charting.RenderEngine.originalSeries">
            <summary>
            Temporary series list
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.#ctor(Telerik.Charting.Chart,System.Single,System.Single)">
            <summary>
            Create instance of class
            </summary>
            <param name="chart">Chart</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.#ctor(Telerik.Charting.Chart,System.Single,System.Single,System.Single)">
            <summary>
            Create instance of class
            </summary>
            <param name="chart">Chart</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="dpi">Resolution</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.#ctor(Telerik.Charting.Chart,System.Single,System.Single,System.Boolean)">
            <summary>
            Create instance of class
            </summary>
            <param name="chart">Chart</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="initGraphics">Value that indicate should initialize graphics object or not</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.ScaleTo(System.Drawing.Drawing2D.GraphicsPath,System.Single,System.Single)">
            <summary>
            Scaling graphic path
            </summary>
            <param name="path">Path for scale</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
            <returns>Scaled path</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.MoveTo(System.Drawing.Drawing2D.GraphicsPath,System.Single,System.Single)">
            <summary>
            Moving graphic path
            </summary>
            <param name="path">Path for moving</param>
            <param name="x">New  X coordinate</param>
            <param name="y">New  Y coordinate</param>
            <returns>Moved path</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.LocalToGlobal(Telerik.Charting.IOrdering)">
            <summary>
            Translate local elements coordinates to global
            </summary>
            <param name="element">Chart element</param>
            <returns>Global positio</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetPen(Telerik.Charting.Styles.StyleBorder,System.Drawing.Drawing2D.PenAlignment)">
            <summary>
            Translate elements visual setting to Pen object
            </summary>
            <param name="border">Border style</param>
            <param name="alignment">Pen Alignment</param>
            <returns>Pen</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetPen(Telerik.Charting.Styles.StyleBorder)">
            <summary>
            Translate elements visual setting to Pen object
            </summary>
            <param name="border">Elements border style</param>
            <returns>Pen</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetPen(Telerik.Charting.Styles.LineStyle,System.Drawing.Color,System.Single)">
            <summary>
            Translate elements visual setting to Pen object
            </summary>
            <param name="border">Elements line style</param>
            <param name="color">Color</param>
            <param name="width">Width</param>
            <returns>Pen</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetBrush(Telerik.Charting.Styles.FillStyle,System.Drawing.RectangleF)">
            <summary>
            Translate elements visual setting to Brush object
            </summary>
            <param name="fill">Fill style of elements</param>
            <param name="rect">Element bound rectangle</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetGradientBrush(System.Drawing.RectangleF,Telerik.Charting.Styles.FillStyle)">
            <summary>
            Translate elements visual setting to Brush object
            </summary>
            <param name="rect">Elements bound rectangle</param>
            <param name="fill">Elements fill setting</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.getDiagonalAngle(System.Drawing.RectangleF)">
            <summary>
            Return a angle for diagonal in rectangle
            </summary>
            <param name="rectS">Rectangle</param>
            <returns>Angle</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.AdjustRect(System.Drawing.RectangleF@)">
            <summary>
            Normalize rectangle
            </summary>
            <param name="rect">Rectangle</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.AdjustRoundSize(System.Int32,Telerik.Charting.Styles.CornerType,Telerik.Charting.Styles.CornerType,System.Int32,System.Int32)">
            <summary>
            Normalize corners round coefficient 
            </summary>
            <param name="roundSize">Round coefficient </param>
            <param name="widthCorner">Type of corner</param>
            <param name="heightCorner">Type of corner</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
            <returns>Round coefficient</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetRoundArea(Telerik.Charting.Styles.Corners,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Rounding corners for rectangle elements
            </summary>
            <param name="corners">Corners</param>
            <param name="X">X coordinate</param>
            <param name="Y">Y coordinate</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
            <returns>Graphics Path with rounded corners</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetRoundRectangle(Telerik.Charting.Styles.Corners,System.Drawing.RectangleF,Telerik.Charting.ChartSeries)">
            <summary>
            Rounding corners for rectangle elements
            </summary>
            <param name="corners">Corners</param>
            <param name="rect">Rectangle</param>
            <param name="series">Series</param>
            <returns>Graphics Path with rounded corners</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetMaxSize(System.Collections.Generic.List{System.Drawing.SizeF})">
            <summary>
            Compare list of SizeF object and return the largest of them
            </summary>
            <param name="sizes">List of sizes</param>
            <returns>Max size</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.AddString(Telerik.Charting.ChartGraphics,System.String,System.String,System.String,System.Single,System.Drawing.Font)">
            <summary>
            String manipulation use in PrepareForHorisontalOverflow and PrepareForVerticalOverflow methods
            </summary>
            <param name="graphics">Graphics</param>
            <param name="result">Result string</param>
            <param name="str">String for adding</param>
            <param name="space">Spacer</param>
            <param name="width">Width</param>
            <param name="font">Font</param>
            <returns>String</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.PrepareForVerticalOverflow(Telerik.Charting.ChartGraphics,System.String,System.Drawing.Font,System.Single)">
            <summary>
            Prepare text for vertical overflow
            </summary>
            <param name="graphics">Graphics</param>
            <param name="text">String</param>
            <param name="font">Font</param>
            <param name="width">Width</param>
            <returns>String</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetRenderRegion(Telerik.Charting.ChartYAxisType)">
            <summary>
            Return area (Region object) for clipping
            </summary>
            <param name="yAxisType">Type of YAxis</param>
            <returns>Region</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetRenderRegion(System.Object)">
            <summary>
            Return area(Region object) for clipping
            </summary>
            <param name="element">Chart element</param>
            <returns>Region</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.Render(Telerik.Charting.IContainer)">
            <summary>
            Rendering chart and/or  its elements
            </summary>
            <param name="element">Chart element</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderPlotAreaElements(System.Boolean,System.Boolean)">
            <summary>
            Rendering PlotArea and its elements
            </summary>
            <param name="withGrid">Value that indicate should render grid lines or not</param>
            <param name="withTicks">Value that indicate should render ticks or not</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawScaleBreaks(Telerik.Charting.ChartYAxis)">
            <summary>
            Drawing ScaleBreacks
            </summary>
            <param name="chartYAxis">Y Axis</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderMarkedZonesLabel">
            <summary>
            Rendering  MarkedZones Label
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderMarkedZones">
            <summary>
            Rendering  all MarkedZones
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderAxisItems(Telerik.Charting.ChartAxis)">
            <summary>
            Rendering chart axis items
            </summary>
            <param name="chartAxis">Axis</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderAxis(Telerik.Charting.ChartAxis)">
            <summary>
            Rendering chart axis
            </summary>
            <param name="chartAxis">Axis</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderYAxis(Telerik.Charting.ChartYAxis)">
            <summary>
            Rendering YAxis
            </summary>
            <param name="yAxis">Y axis</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderAxisLabel(Telerik.Charting.ChartLabel)">
            <summary>
            Rendering chart axis label
            </summary>
            <param name="axisLabel">Axis label</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderMarkedZone(Telerik.Charting.ChartMarkedZone,Telerik.Charting.ChartXAxis,Telerik.Charting.ChartYAxis)">
            <summary>
            Rendering  MarkedZone
            </summary>
            <param name="zone">Marked zone</param>
            <param name="chartXAxis">X Axis</param>
            <param name="chartYAxis">Y Axis</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.ChangePlaces(System.Drawing.PointF@)">
            <summary>
            Change x to y and y to x
            </summary>
            <param name="point">Point</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawGrids(System.Drawing.PointF[],System.Drawing.Pen)">
            <summary>
            Grids line drawing
            </summary>
            <param name="gridPoints">Array of points</param>
            <param name="pen">Pen</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawTicks(System.Drawing.PointF[],System.Int32,System.Drawing.Pen)">
            <summary>
            Ticks drawing
            </summary>
            <param name="tickPoints">Array of points</param>
            <param name="tickLength">Length</param>
            <param name="pen">Pen</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawTicks">
            <summary>
            Ticks drawing
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawTicks(Telerik.Charting.ChartXAxis)">
            <summary>
            Ticks drawing
            </summary>
            <param name="axis">Axis</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawTicks(Telerik.Charting.ChartYAxis)">
            <summary>
            Ticks drawing
            </summary>
            <param name="axis">Axis</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawGrids">
            <summary>
            Grids line drawing
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawGrids(Telerik.Charting.ChartYAxis)">
            <summary>
            Grids line drawing
            </summary>
            <param name="axis">Axis</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawGrids(Telerik.Charting.ChartXAxis)">
            <summary>
            Grids line drawing
            </summary>
            <param name="axis">Axis</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderTextBlock(Telerik.Charting.TextBlock)">
            <summary>
            Rendering TextBlock
            </summary>
            <param name="textBlock">Text block element</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderElement(Telerik.Charting.IOrdering)">
            <summary>
            Rendering chart  elements
            </summary>
            <param name="element">Chart element</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderElement(Telerik.Charting.IOrdering,Telerik.Charting.ChartSeriesItem)">
            <summary>
            Rendering chart  elements
            </summary>
            <param name="element">Chart element</param>
            <param name="item">Series item</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderElement(Telerik.Charting.IOrdering,System.Boolean,System.Boolean)">
            <summary>
            Rendering chart  elements
            </summary>
            <param name="element">Chart element</param>
            <param name="withFill">Value that indicate should drawing fill or not</param>
            <param name="withBorder">Value that indicate should drawing border or not</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderChart">
            <summary>
            Rendering  chart
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderChartDataTableBorder(Telerik.Charting.ChartDataTable)">
            <summary>
            Rendering  chart data table border
            </summary>
            <param name="dataTable">Data table</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderChartDataTable(Telerik.Charting.ChartDataTable)">
            <summary>
            Rendering  chart data table
            </summary>
            <param name="dataTable">Data table</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetAlignedImageBrush(Telerik.Charting.Styles.FillStyle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            Translate elements visual setting to Brush object
            </summary>
            <param name="fs">FillStyle object</param>
            <param name="X">X coordinate of element</param>
            <param name="Y">Y coordinate of element</param>
            <param name="width">Elements width</param>
            <param name="height">Elements height</param>
            <param name="img">Image</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetStretchedImageBrush(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            Translate elements visual setting to Brush object
            </summary>
            <param name="X">X coordinate</param>
            <param name="Y">Y coordinate</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
            <param name="img">Image</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetBasePoint(System.Drawing.RectangleF,Telerik.Charting.Styles.AlignedPositions)">
            <summary>
            Returns a base point for rotation aligned elements
            </summary>
            <param name="rect">Rectangle</param>
            <param name="pos">Aligned position</param>
            <returns>Point</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetParentList(Telerik.Charting.IOrdering,System.Collections.Generic.List{Telerik.Charting.IOrdering}@)">
            <summary>
            Return a list of all ancestry elements
            </summary>
            <param name="element">Element</param>
            <param name="list">Parents list</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetRotationAngle(Telerik.Charting.IOrdering,System.Drawing.Drawing2D.GraphicsPath@)">
            <summary>
            Return global Rotation angle
            </summary>
            <param name="elem">Chart element</param>
            <param name="drawPath">Path</param>
            <returns>Rotation angle</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.InitializeChartElements">
            <summary>
            Initializing elements of chart
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.CalculateElementsForRender">
            <summary>
            Prepare chart elements (calculating sizes, positions, etc) for rendering
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.ScalePlotArea(System.Single,System.Single)">
            <summary>
            Scaling PlotArea for zoom feature
            </summary>
            <param name="xScale">X scale coefficient</param>
            <param name="yScale">Y scale coefficient</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.CalculateElementsForRender(Telerik.Charting.IContainer)">
            <summary>
            Prepare chart elements (calculating sizes, positions, etc) for rendering
            </summary>
            <param name="element">IContainer chart element</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetLabelZone(Telerik.Charting.ChartBaseLabel,System.Boolean)">
            <summary>
            Create layout zone (for AutoLayout feature) based on chart label element
            </summary>
            <param name="label">Label</param>
            <param name="visible">Is label visible</param>
            <returns>Labels Layout zone</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.CalculateElementsForRender(Telerik.Charting.Chart)">
            <summary>
            Prepare chart elements (calculating sizes, positions, etc) for rendering
            </summary>
            <param name="chart">Chart object</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.CreateMetafile(System.Int32,System.Int32)">
            <summary>
            Creating graphics stage for EMF file format
            </summary>
            <param name="width">Image width</param>
            <param name="height">Image Height</param>
            <returns>Image MetaFile</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.InitGraphics(System.Int32,System.Int32)">
            <summary>
            First rendering engine initialization
            </summary>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <returns>Succses</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.Render">
            <summary>
            Renders default chart image and returns it
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.Render(System.Boolean)">
            <summary>
            Renders default chart image. Could return image clone.
            </summary>
            <param name="shouldClone">Value that indicate should create clone of result image or not</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderPlotArea(System.Boolean)">
            <summary>
            Renders Plot area image only
            </summary>
            <param name="shouldClone">Value that indicate should create clone of result image or not</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderChartArea(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Rendering chart background area image without plot area
            </summary>
            <param name="shouldClone">Value that indicate should create clone of result image or not</param>
            <param name="withBackground">Value that indicate use background or not</param>
            <param name="withTitle">Value that indicate should render title or not</param>
            <param name="withLegend">Value that indicate should legend or not</param>
            <param name="withPlotAreaBorder">Value that indicate should render plot area border or not</param>
            <param name="withXAxis">Value that indicate should render XAxis or not</param>
            <param name="withYAxis">Value that indicate should render YAxis or not</param>
            <param name="withYAxis2">Value that indicate should render YAxis2 or not</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderAxis(System.Boolean,Telerik.Charting.ChartAxisType)">
            <summary>
            Rendering chart axis image with ticks and items
            </summary>
            <param name="shouldClone">Value that indicate should create clone of result image or not</param>
            <param name="axisType">Axis type</param>
            <returns>Image</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderFinalImage(System.Boolean)">
            <summary>
            Renders the entire chart image
            </summary>
            <param name="shouldClone">Value that indicate should create clone of result image or not</param>
            <returns>Image</returns>
        </member>
        <member name="F:Telerik.Charting.RenderEngine.renderEngineDrawOnlyShadow">
            <summary>
            Show if need render only shadows
            </summary>
        </member>
        <member name="F:Telerik.Charting.RenderEngine.barWidth">
            <summary>
            Common bars width
            </summary>
        </member>
        <member name="F:Telerik.Charting.RenderEngine.barWidthRatio">
            <summary>
            Common bars width ratio
            </summary>
        </member>
        <member name="F:Telerik.Charting.RenderEngine.renderEngineCurrentPalette">
            <summary>
            Selected Palette
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.Render(Telerik.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering chart and/or  its elements
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderBar(Telerik.Charting.ChartSeries,System.Int32,Telerik.Charting.ChartSeriesItem,System.Int32,System.Drawing.RectangleF)">
            <summary>
            Rendering Bar - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <param name="barRect">Bars rectangle</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderBarShadow(Telerik.Charting.ChartSeries,Telerik.Charting.ChartSeriesItem,System.Drawing.RectangleF)">
            <summary>
            Rendering series shadow for  Bar - type chart
            </summary>
            <param name="series">Series</param>
            <param name="item">Series item</param>
            <param name="barRect">Bars rectangle</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderBarSeries(Telerik.Charting.ChartSeries,System.Int32,Telerik.Charting.BarOrderingMode)">
            <summary>
            Rendering series for  Bar - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
            <param name="mode">Bar ordering mode</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderStackedBarSeries(Telerik.Charting.ChartSeriesType,Telerik.Charting.BarOrderingMode)">
            <summary>
            Rendering series for StackedBar - type chart
            </summary>
            <param name="seriesType">Series type</param>
            <param name="mode">Bar ordering mode</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.StrictParametersModifyForStackedBars(Telerik.Charting.ChartSeriesItem,System.Single,System.Int32@,System.Single@,System.Single@)">
            <summary>
            Modifications in StackedBars for strict mode
            </summary>
            <param name="item">Series item</param>
            <param name="barOverlapRatio">Bars overlap ratio</param>
            <param name="ind">Item index</param>
            <param name="barX">Bars x position</param>
            <param name="barWidthPop">Bar width</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.StrictParametersModifyForStackedBarsPositive(Telerik.Charting.ChartSeriesItem,System.Double,System.Single,System.Single,System.Single@,System.Single@,System.Double@,System.Double@)">
            <summary>
            Modifications in StackedBars (with positive values) for strict mode
            </summary>
            <param name="item">Series item</param>
            <param name="val">Series item value</param>
            <param name="barWidthLocal">Bar width</param>
            <param name="barOverlapRatio">Bars overlap ratio</param>
            <param name="barX">Bars x position</param>
            <param name="barWidthPop">Bar width</param>
            <param name="minV">Minimal value</param>
            <param name="tvalp">Total positive value</param>
            <returns>Value</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.StrictParametersModifyForStackedBarsNegative(Telerik.Charting.ChartSeriesItem,System.Double,System.Single,System.Single,System.Single@,System.Single@,System.Double@,System.Double@)">
            <summary>
            Modifications in StackedBars (with negatives values) for strict mode
            </summary>
            <param name="item">Series item</param>
            <param name="val">Series item value</param>
            <param name="barWidthLocal">Bar width</param>
            <param name="barOverlapRatio">Bars overlap ratio</param>
            <param name="barX">Bars x position</param>
            <param name="barWidthPop">Bar width</param>
            <param name="minV">Minimal value</param>
            <param name="tvaln">Total negative value</param>
            <returns>Value</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetPointsArrayForArea(System.Drawing.PointF[])">
            <summary>
            Returns array of points
            </summary>
            <param name="areaPoints">Array of points</param>
            <returns>Array of points</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetPointaArrayForAreaPointMarks(System.Drawing.PointF[],System.Int32)">
            <summary>
            Returns array of points for drawing points Marks
            </summary>
            <param name="areaPoints">Array of points</param>
            <param name="maxItemsCount">Items count</param>
            <returns>Array of points</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetAreaPath(Telerik.Charting.ChartSeries,System.Int32,System.Int32,System.Drawing.PointF[])">
            <summary>
            Create path for Area-type series
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="maxItemsCount">Max items count</param>
            <param name="points">Array of points</param>
            <returns>Area path</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetAreaItemActiveRegion(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,Telerik.Charting.ChartSeriesOrientation)">
            <summary>
            Create ActiveRegion for Area-type series item
            </summary>
            <param name="firstPoint">Point for first item</param>
            <param name="secondPoint">Point for second item</param>
            <param name="prevValue1">Value of first item</param>
            <param name="prevValue2">Value of second item</param>
            <param name="serOrientation">Series Orientation</param>
            <returns>Path for active region</returns>
            <returns>Area item active region path</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderAreaSeries(Telerik.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for Area - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderStackedAreaSeries(Telerik.Charting.ChartSeriesType)">
            <summary>
            Rendering series for  StackedArea - type chart
            </summary>
            <param name="seriesType">Series type</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderLineSeries(Telerik.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for  Line - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderPieSeries(Telerik.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for  Pie - type chart
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderEmptyPoint(Telerik.Charting.ChartSeries,Telerik.Charting.ChartSeriesItem,System.Int32,System.Single)">
            <summary>
            Rendering Empty point
            </summary>
            <param name="series">Series</param>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <param name="axisStart">Axis start value</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderGanttSeries(Telerik.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for Gantt - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderPointSeries(Telerik.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for Point - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderPointLabelAndMarker(Telerik.Charting.ChartSeries,Telerik.Charting.ChartSeriesItem,System.Int32,System.Int32,System.Drawing.PointF)">
            <summary>
            Rendering point label and marker
            </summary>
            <param name="series">Series</param>
            <param name="item">Series item</param>
            <param name="index">Series index</param>
            <param name="itemIndex">Series item index</param>
            <param name="point">Point</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderBubbleSeries(Telerik.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for  Bubble - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RenderCandlestickSeries(Telerik.Charting.ChartSeries,System.Int32,Telerik.Charting.BarOrderingMode)">
            <summary>
            Rendering series for  CandleStickr - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.SeriesLabelsDraw">
            <summary>
            Rendering Series labels
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawPointMark(Telerik.Charting.ChartSeries,System.Drawing.PointF[])">
            <summary>
            Rendering point marks
            </summary>
            <param name="series">Series</param>
            <param name="points">Array of points</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.AxisVisibleValues(Telerik.Charting.ChartSeries,Telerik.Charting.ChartPlotArea)">
            <summary>
            Checking YAxis type for Series 
            </summary>
            <param name="series">Series</param>
            <param name="plotArea">PlotArea</param>
            <returns>YAxis Visible Values</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawLineShadow(System.Drawing.Pen,Telerik.Charting.ChartSeries,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Rendering shadow for  Line - type chart
            </summary>
            <param name="shadowPen">Pen for shadow drawing</param>
            <param name="series">Series</param>
            <param name="path">Path</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.RemoveZerosFromEndOfList(System.Collections.Generic.List{System.Byte})">
            <summary>
            Removing unnecessary zeros from lists' end
            </summary>
            <param name="list">List</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawLines(Telerik.Charting.ChartSeries,System.Int32,System.Drawing.PointF[])">
            <summary>
            Rendering series for  Line - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
            <param name="points">Array of points</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawBezier(Telerik.Charting.ChartSeries,System.Int32,System.Drawing.PointF[])">
            <summary>
            Rendering series for  Bezier - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Serie index</param>
            <param name="points">Array of points</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawLinesForAreas(Telerik.Charting.ChartSeries,System.Int32,System.Drawing.PointF[])">
            <summary>
            Rendering lines for  Area - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
            <param name="points">Array of points</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.DrawPolygon(Telerik.Charting.ChartSeries,System.Int32,System.Drawing.PointF[],System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Rendering polygon for area-types chart series
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="seriesPoints">Array of points</param>
            <param name="grPath">Path</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetBrush(Telerik.Charting.ChartSeries,System.Int32,Telerik.Charting.ChartSeriesItem,System.Int32,System.Drawing.RectangleF)">
            <summary>
            Translate elements visual setting to Brush object
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <param name="rect">Item rectangle</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetFillStyle(Telerik.Charting.ChartSeries,System.Int32,Telerik.Charting.ChartSeriesItem,System.Int32)">
            <summary>
            Translate elements visual setting to Fill
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series  index</param>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <returns>FillStyle</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetDefaultColors(Telerik.Charting.Styles.FillStyle,System.Int32)">
            <summary>
            Return a default color
            </summary>
            <param name="fillStyle">Fill style of elements</param>
            <param name="index">Elements(series or series item) index</param>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetLineStyle(Telerik.Charting.ChartSeries,System.Int32,Telerik.Charting.ChartSeriesItem)">
            <summary>
            Translate elements visual setting to Pen object
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="item">Series item</param>
            <returns>StyleBorder</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetPen(Telerik.Charting.ChartSeries,System.Int32,Telerik.Charting.ChartSeriesItem)">
            <summary>
            Translate elements visual setting to Pen object
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="item">Series item</param>
            <returns>Pen</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.GetEmptyPen(Telerik.Charting.ChartSeries,System.Int32,Telerik.Charting.ChartSeriesItem)">
            <summary>
            Returns empty Pen object
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="item">Series item</param>
            <returns>Pen</returns>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.ResetClip">
            <summary>
            Drop clip area
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.SetOrderingMode">
            <summary>
            Set correct ordering mode for x axis
            </summary>
        </member>
        <member name="M:Telerik.Charting.RenderEngine.CheckCategoricalOrderingMode">
            <summary>
            Checking a series. Should be applied categorical x axis or not
            </summary>
            <returns>BarOrderingMode</returns>
        </member>
        <member name="P:Telerik.Charting.RenderEngine.ErrorMessageRendered">
            <summary>
            Checks if error message rendered
            </summary>
            <returns>Signal</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.AlignedPositions">
            <summary>
            Aligned positions listing
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AlignedPositions.Right">
            <summary>
            Assign the right position for element
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AlignedPositions.Left">
            <summary>
            Assign the left position for element
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AlignedPositions.Top">
            <summary>
            Assign the top position for element
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AlignedPositions.Bottom">
            <summary>
            Assign the bottom position for element
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AlignedPositions.Center">
            <summary>
            Assign the center position for element
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AlignedPositions.TopRight">
            <summary>
            Assign the top right position for element
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AlignedPositions.TopLeft">
            <summary>
            Assign the top left position for element
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AlignedPositions.BottomRight">
            <summary>
            Assign the bottom right position for element
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AlignedPositions.BottomLeft">
            <summary>
            Assign the bottom left position for element
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.AutoTextWrap">
            <summary>
            Define auto wrap option for text
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AutoTextWrap.Auto">
            <summary>
            Means that value of auto text wrap will be inherit of parent element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AutoTextWrap.True">
            <summary>
            Means that auto text wrap will be applied.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.AutoTextWrap.False">
            <summary>
            Means that auto text wrap will not be applied.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartAxisLayoutMode">
            <summary>
            Specifies different axis styles for positioning of item labels and marks.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartAxisLayoutMode.Normal">
            <summary>
            Sets the default axis layout style.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartAxisLayoutMode.Inside">
            <summary>
            Sets the endmost axis items inside the axis.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartAxisLayoutMode.Between">
            <summary>
            Sets axis items between axis marks.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartAxisVisibility">
            <summary>
            Define visibility option for axis
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartAxisVisibility.Auto">
            <summary>
            Means that axis will be visible if it is XAxis or any series belongs to it.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartAxisVisibility.True">
            <summary>
            Means that axis will be visible.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartAxisVisibility.False">
            <summary>
            Means that axis will be not visible.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartAxisVisibleValues">
            <summary>
            Axis visible values range positive / negative
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartAxisVisibleValues.All">
            <summary>
            All values will be visible.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartAxisVisibleValues.Positive">
            <summary>
            Only positive values will be visible.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartAxisVisibleValues.Negative">
            <summary>
            Only negative values will be visible.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartValueFormat.None">
            <summary>
            Specifies that no default format string is specified. Uses CustomFormat if is .
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartValueFormat.Currency">
            <summary>
            Default format string is set to currency : "C". 
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartValueFormat.Scientific">
            <summary>
            Default format string is set to scientific : "E".
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartValueFormat.General">
            <summary>
            Default format string is set to general : "G".
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartValueFormat.Number">
            <summary>
            Default format string is set to number : "N".
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartValueFormat.Percent">
            <summary>
            Default format string is set to percent : "P".
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartValueFormat.ShortDate">
            <summary>
            Converts to short date using ShortDatePattern set in CurrentCulture. Uses CustomFormat if is set.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartValueFormat.ShortTime">
            <summary>
            Converts to short time using ShortTimePattern set in CurrentCulture. Uses CustomFormat if is set.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartValueFormat.LongDate">
            <summary>
            Converts to long date using LongDatePattern set in CurrentCulture. Uses CustomFormat if is set.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartValueFormat.LongTime">
            <summary>		
            Converts to long time using LongTimePattern set in CurrentCulture. Uses CustomFormat if is set.
            </summary>
        </member>
        <member name="T:Telerik.Charting.GradientElement">
            <summary>
            Gradient element
            </summary>
        </member>
        <member name="M:Telerik.Charting.GradientElement.#ctor">
            <summary>
            Create new instance of GradientElement class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.GradientElement.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            Create new instance of GradientElement class.
            </summary>
            <param name="color">Color </param>
            <param name="position">Position</param>
        </member>
        <member name="M:Telerik.Charting.GradientElement.Reset">
            <summary>
            Reset to default parameters
            </summary>
        </member>
        <member name="M:Telerik.Charting.GradientElement.Equals(System.Object)">
            <summary>
            Comparing to objects
            </summary>
            <param name="obj">Object for comparing</param>
            <returns>Whether objects are equal or not</returns>
        </member>
        <member name="M:Telerik.Charting.GradientElement.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Charting.GradientElement.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of GradientElement class with the same fields as this one</returns>
        </member>
        <member name="P:Telerik.Charting.GradientElement.Color">
            <summary>
            Gets and sets Color
            </summary>
            <value>Color</value>
        </member>
        <member name="P:Telerik.Charting.GradientElement.Position">
            <summary>
            Gets and sets Position
            </summary>
            <value>Position</value>
        </member>
        <member name="T:Telerik.Charting.ColorBlend">
            <summary>
            Defines arrays of elements and positions used for interpolating GradientElement blending in a multicolor gradient.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ColorBlend.colorBlendContainerObject">
            <summary>
            Container element
            </summary>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.#ctor">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.#ctor(System.Drawing.Color[])">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
            <param name="colors">Colors to add</param>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.#ctor(System.Drawing.Color[],System.Object)">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
            <param name="colors">Colors to add to the object</param>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.#ctor(System.Drawing.Color[],System.Single[],System.Object)">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
            <param name="colors">Colors to add to the object.</param>
            <param name="positions">Positions of colors.</param>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.#ctor(System.Drawing.Color[],System.Single[])">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
            <param name="colors">Colors to add to the object</param>
            <param name="positions">Positions of colors</param>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.#ctor(System.Object)">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
            <param name="containerObject">Container element.</param>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.AddRange(Telerik.Charting.ColorBlend)">
            <summary>
            Adds a range of elements to the collection.
            </summary>
            <param name="blend">Object that contains element to add</param>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.LoadFrom(Telerik.Charting.ColorBlend)">
            <summary>
            Load pairs colors\positions from specified object.
            </summary>
            <param name="blend">Object to load from.</param>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.GetColors">
            <summary>
            Gets ColorBlend's colors.
            </summary>
            <returns>ColorBlend's colors.</returns>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.GetPositions">
            <summary>
            Gets ColorBlend's positions.
            </summary>
            <returns>ColorBlend's positions.</returns>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.GetColor(System.Single)">
            <summary>
            Gets color at specified position. 
            </summary>
            <param name="pos">Position to get color.</param>
            <returns>Color at specified position.</returns>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.GetBrush(System.Drawing.RectangleF,System.Single)">
            <summary>
            Returns gradient brush
            </summary>
            <param name="rectangle">Rectangle of brush</param>
            <param name="angle">Angle of brush.</param>
            <returns>Gradient brush</returns>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.Equals(System.Object)">
            <summary>
            Comparing two objects.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>Whether objects equal or not</returns>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.Compare(Telerik.Charting.ColorBlend,Telerik.Charting.ColorBlend)">
            <summary>
            Color blends comparer
            </summary>
            <param name="a">First object for comparing</param>
            <param name="b">Second object for comparing</param>
            <returns>Whether objects equal or not</returns>
        </member>
        <member name="M:Telerik.Charting.ColorBlend.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of ColorBlend class with the same fields as this one.</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.Corners">
            <summary>
            Sets the edge type of rectangular shapes.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Corners.cornersContainerObject">
            <summary>
            Container object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.#ctor(System.Object)">
            <summary>
            Create new instance of Corners class.
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.#ctor">
            <summary>
            Create new instance of Corners class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.#ctor(System.Int32)">
            <summary>
             Create new instance of Corners class.
            </summary>
            <param name="roundSize">RoundSize for coners</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.#ctor(Telerik.Charting.Styles.CornerType,Telerik.Charting.Styles.CornerType,Telerik.Charting.Styles.CornerType,Telerik.Charting.Styles.CornerType,System.Int32)">
            <summary>
             Create new instance of Corners class.
            </summary>
            <param name="topLeft">Type of top left corner</param>
            <param name="topRight">Type of top right corner</param>
            <param name="bottomLeft">Type of bottom left corner</param>
            <param name="bottomRight">Type of bottom right corner</param>
            <param name="roundSize">RoundSize of corners</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.op_Implicit(System.String)~Telerik.Charting.Styles.Corners">
            <summary>
            Implicitly creates a Corners from the specified string.
            </summary>
            <param name="value">The string to parse</param>
            <returns>Object of corners type</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.Parse(System.String)">
            <summary>
            Converts the specified string to Corners.
            </summary>
            <param name="value">The string to convert.</param>
            <returns>Corners that represents the specified string.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified string to a Corners.
            </summary>
            <param name="value">The string to convert.</param>
            <param name="culture">CultureInfo used</param>
            <returns>Object of corners type</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.SetCornersType(Telerik.Charting.Styles.CornerType)">
            <summary>
            Set specified type for all corners
            </summary>
            <param name="cornerType">Type of corners</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.Equals(System.Object)">
            <summary>
            Compare two objects of Corners type
            </summary>
            <param name="obj">Object to compare with</param>
            <returns>Whether objects equal</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.GetHashCode">
             <summary>
            Gets  HashCode
             </summary>
             <returns>HashCode</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of Corners type</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.CopyFrom(Telerik.Charting.Styles.Corners)">
            <summary>
            Copy fields from specified object
            </summary>
            <param name="sourceCorners">Object to copy from</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Corners.Reset">
            <summary>
            Reset all settings to default
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Corners.TopLeft">
            <summary>
            Gets and sets the type of the top left corner of the rectangular shape.
            </summary>
            <value>Type of top left corner</value>
        </member>
        <member name="P:Telerik.Charting.Styles.Corners.TopRight">
             <summary>
            Gets and sets the type of the top right corner of the rectangular shape.
             </summary>
             <value>Type of top right corner</value>
        </member>
        <member name="P:Telerik.Charting.Styles.Corners.BottomLeft">
            <summary>
            Gets and sets the type of the bottom left corner of the rectangular shape.
            </summary>
            <value>Type of bottom left corner</value>
        </member>
        <member name="P:Telerik.Charting.Styles.Corners.BottomRight">
            <summary>
            Gets and sets the type of the bottom right corner of the rectangular shape.
            </summary>
            <value>Type of bottom right corner</value>
        </member>
        <member name="P:Telerik.Charting.Styles.Corners.RoundSize">
             <summary>
             Gets and sets the round size of the corner.
             </summary>
            <value>Round size of corners</value>
        </member>
        <member name="P:Telerik.Charting.Styles.Corners.IsRectangle">
            <summary>
            Check whether all corners are of Rectangle type.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.CornersConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Check whether can convert an object of the given type to the type of this converter, using the specified context
            </summary>
            <param name="context">Context for types converting</param>
            <param name="sourceType">Type to convert</param>
            <returns>Can convert an object or not</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.CornersConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Conversion of an object to the type of this converter
            </summary>
            <param name="context">Context for types converting</param>
            <param name="culture">To use at the current culture</param>
            <param name="value">Object to convert</param>
            <returns>Converted object</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.CornersConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Conversion of an object to the specified type 
            </summary>
            <param name="context">Context for types converting</param>
            <param name="culture">To use at the current culture</param>
            <param name="value">Object to convert</param>
            <param name="destinationType">Type to convert  the value parameter to</param>
            <returns>converted object</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.CornersConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get Properties Supported
            </summary>
            <param name="context">Context</param>
            <returns>Properties Supported</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.CornersConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets Properties of type
            </summary>
            <param name="context">Context</param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns>Properties of this type</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.CornersConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get Create Instance Supported
            </summary>
            <param name="context">Context</param>
            <returns>Get Create Instance Supported</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.CornersConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Create new instance
            </summary>
            <param name="context">Context</param>
            <param name="propertyValues">Properties</param>
            <returns>New instance</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.CornerType">
            <summary>
            Corner type
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.CornerType.Rectangle">
            <summary>
            Specifies a sharp corner.
            </summary>  
        </member>
        <member name="F:Telerik.Charting.Styles.CornerType.Round">
            <summary>
            Specifies a rounded corner.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.CustomShape">
            <summary>Represents custom shape of an element.</summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ElementShape">
            <summary>Represents element shape. Base class for specialized shapes such as 
            EllipseShape, RoundRectShape, Office12Shape, etc. </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ElementShape.SerializeProperties">
            <summary>
            Serializes properties. Required for serialization mechanism of telerik
            framework.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ElementShape.DeserializeProperties(System.String)">
            <summary>
            Deserializes properties. Required for the deserialization mechanism of telerik
            framework.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.CustomShape.#ctor">
            <summary>Initializes a new instance of the CustomShape class.</summary>
        </member>
        <member name="M:Telerik.Charting.Styles.CustomShape.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the CustomShape class using a container.</summary>
        </member>
        <member name="M:Telerik.Charting.Styles.CustomShape.CreatePath(System.Drawing.Rectangle)">
            <summary>Creates a path using a ractangle for bounds.</summary>
        </member>
        <member name="M:Telerik.Charting.Styles.CustomShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.Charting.Styles.CustomShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="P:Telerik.Charting.Styles.CustomShape.Points">
            <summary>Gets a List of Shape points.</summary>
        </member>
        <member name="P:Telerik.Charting.Styles.CustomShape.Dimension">
            <summary>Gets or sets a Rectangle indicating the dimension of the shape.</summary>
        </member>
        <member name="T:Telerik.Charting.Styles.RadShapeEditorControl">
            <summary>
            Represents a shape editor control.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.RadShapeEditorControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.RadShapeEditorControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.RadShapeEditorControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.CustomShapeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.CustomShapeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.CustomShapeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ShapePoint">
            <summary>
            Represents a shape point.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ShapePointBase">
            <summary>
            Represents a base class of the ShapePoint class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePointBase.#ctor">
            <summary>
            Initializes a new instance of the ShapePointbase class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePointBase.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the ShapePoint class using X and Y
            coordinates.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePointBase.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the ShapePoint class using a Point structure.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePointBase.#ctor(Telerik.Charting.Styles.ShapePointBase)">
            <summary>
            Initializes a new instance of the ShapePoint class using an instance of the
            ShapePointBase class.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePointBase.Set(System.Single,System.Single)">
            <summary>
            Sets the X and Y coordinates of the shape point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePointBase.Set(System.Drawing.Point)">
            <summary>
            Sets the point position from a Point structure.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePointBase.GetPoint">
            <summary>
            Retrieves a Point structure corresponding to the point position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePointBase.GetPoint(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePointBase.ToString">
            <summary>
            Retrieves a string representation of the ShapePointBase class.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Charting.Styles.ShapePointBase.X">
            <summary>
            Gets or sets a float value indicating the X coordinate of the shape point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ShapePointBase.Y">
            <summary>
            Gets or sets a float value indicating the Y coordinate of the shape point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ShapePointBase.Anchor">
            <summary>
            Gets or sets a value indicating the anchor style.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ShapePointBase.Locked">
            <summary>
            Gets or sets a boolean value indicating whether the shape point is locked.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePoint.#ctor">
            <summary>
            Initializes a new instance of the ShapePoint class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ShapePoint class from
            the X and Y coordinates of the point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePoint.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the ShapePoint class from a Point structure.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePoint.#ctor(Telerik.Charting.Styles.ShapePoint)">
            <summary>
            Initializes a new instance of the ShapePoint class using a ShapePoint instance.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePoint.CreateBezier(Telerik.Charting.Styles.ShapePointBase)">
            <summary>
            Creates a Bezier curve between the current point and the point given as a
            parameter.
            </summary>
            <param name="nextPoint"></param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePoint.GetCurve(Telerik.Charting.Styles.ShapePoint)">
            <summary>
            
            </summary>
            <param name="nextPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePoint.IsVisible(Telerik.Charting.Styles.ShapePoint,System.Drawing.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="nextPoint"></param>
            <param name="pt"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ShapePoint.IsCurveVisible(System.Drawing.Point[],System.Drawing.Point,System.Double)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="pt"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Charting.Styles.ShapePoint.ControlPoint1">
            <summary>
            Gets or sets the first control point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ShapePoint.ControlPoint2">
            <summary>
            Gets or sets the second control point.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ShapePoint.LineDirections">
            <summary>
            Exposes the line direction.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ShapePoint.LinePositions">
            <summary>
            Exposes the line position.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShapePoint.LinePositions.Horizontal">
            <summary>
            Indicates horizontal position.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShapePoint.LinePositions.Vertical">
            <summary>
            Indicates vertical position.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ElementShapeConverter">
            <summary>Represents element shape converter.</summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ElementShapeEditor">
            <exclude/> 
        </member>
        <member name="T:Telerik.Charting.Styles.RoundRectShape">
            <summary>Represents round rectangle shape.</summary>
        </member>
        <member name="M:Telerik.Charting.Styles.RoundRectShape.#ctor">
            <summary>Initializes a new instance of the RoundRectShape class.</summary>
        </member>
        <member name="M:Telerik.Charting.Styles.RoundRectShape.#ctor(System.Int32)">
            <summary>Initializes a new instance of the RoundRectShape class using a radius.</summary>
        </member>
        <member name="M:Telerik.Charting.Styles.RoundRectShape.CreatePath(System.Drawing.Rectangle)">
            <summary>Greates round rectangle like path.</summary>
        </member>
        <member name="M:Telerik.Charting.Styles.RoundRectShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.Charting.Styles.RoundRectShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="P:Telerik.Charting.Styles.RoundRectShape.Radius">
            <summary><para>Gets or sets the radius of the shape.</para></summary>
        </member>
        <member name="T:Telerik.Charting.Styles.DefaultValues">
            <summary>
            Defaults
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.Dimensions">
            <summary>
            Dimensions base class
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ISizesAndPaddings">
            <summary>
            Interface that sizable objects implement.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ISizesAndPaddings.AutoSize">
            <summary>
            Gets and sets auto size mode.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ISizesAndPaddings.Height">
            <summary>
            Gets and sets height value.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ISizesAndPaddings.Width">
            <summary>
            Gets and sets width value.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ISizesAndPaddings.Margins">
            <summary>
            Gets and sets margins.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ISizesAndPaddings.Paddings">
            <summary>
            Gets and sets paddings.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Dimensions.dimensionsMargins">
            <summary>
            Specifies the margins properties
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Dimensions.dimensionsPaddings">
            <summary>
            Specifies the paddings properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.ShouldSerializeHeight">
            <summary>
            Gets if Height property should be serializable.
            </summary>
            <returns>If Height property should be serializable.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.ResetHeight">
            <summary>
            Reset Height to default value.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.ShouldSerializeWidth">
            <summary>
            Gets if Width property should be serializable.
            </summary>
            <returns>If Width property should be serializable.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.ResetWidth">
            <summary>
            Gets if Width property should be serializable.
            </summary>
            <returns>If Width property should be serializable.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.#ctor(System.Object)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.#ctor">
            <summary>
            Create new instance of Dimensions class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.#ctor(System.Single,System.Single)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="width">Width of element</param>
            <param name="height">Height of element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.#ctor(Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="width">Width of element</param>
            <param name="height">Height of element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.#ctor(Telerik.Charting.Styles.ChartMargins)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="margins">Margins of element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.#ctor(Telerik.Charting.Styles.ChartPaddings)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="paddings">Paddings of element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.#ctor(Telerik.Charting.Styles.ChartMargins,Telerik.Charting.Styles.ChartPaddings)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="margins">Margins of element</param>
            <param name="paddings">Paddings of element</param>
        </member>
        <member name="F:Telerik.Charting.Styles.Dimensions.containerObject">
            <summary>
            Container element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Dimensions.dimensionsCopy">
            <summary>
            Copy of this object.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.Reset">
            <summary>
            Resets to default values
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.EqualsWithoutMarginsPaddings(System.Object)">
            <summary>
            Checks if objects are equal without margins and paddings.
            </summary>
            <param name="obj">Object to compare</param>
            <returns>If objects are equal without margins and paddings</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.SetDimensions(System.Single,System.Single)">
            <summary>
            Sets the new Width and Height values
            </summary>
            <param name="width">Width of element</param>
            <param name="height">Height of element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.SetDimensions(Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>
            Sets the new Width and Height values
            </summary>
            <param name="width">Width of element</param>
            <param name="height">Height of element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.SetDimensions(Telerik.Charting.Styles.Dimensions)">
            <summary>
            Copy dimensions from the object.
            </summary>
            <param name="source">Object tot copy from.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.Equals(System.Object)">
            <summary>
            Comparing of two objects.
            </summary>
            <param name="obj">Object to compare with.</param>
            <returns>Whether objects are equal.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.GetHashCode">
            <summary>
            Gets hash code.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.IsZero">
            <summary>
            Returns True if dimensions width and height are zero values
            </summary>
            <returns>True if dimensions width and height are zero values</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of Dimensions class with the same fields as this object.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.TrackViewState">
            <summary>
            Track ViewState.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState.
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Dimensions.SaveViewState">
            <summary>
            Save data to ViewState.
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.Dimensions.AutoSize">
            <summary>
            Gets and sets Auto sizing mode
            </summary>
            <value>True if auto size, false - if not.</value>
        </member>
        <member name="P:Telerik.Charting.Styles.Dimensions.Height">
            <summary>
            Specifies the height property
            </summary>
            <value>Height value of Unit type.</value>
        </member>
        <member name="P:Telerik.Charting.Styles.Dimensions.Width">
            <summary>
            Specifies the width property
            </summary>
            <value>Width value of Unit type</value>
        </member>
        <member name="P:Telerik.Charting.Styles.Dimensions.Margins">
            <summary>
            Specifies the margins properties
            </summary>
            <value>Margins for element</value>
        </member>
        <member name="P:Telerik.Charting.Styles.Dimensions.Paddings">
            <summary>
            Specifies the paddings properties
            </summary>
            <value>Paddings for element</value>
        </member>
        <member name="P:Telerik.Charting.Styles.Dimensions.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Value of property.</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.DimensionsSeriesPointMark">
            <summary>
            Specific series point marks dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsSeriesPointMark.#ctor(System.Object)">
            <summary>
            Create new instance of DimensionsSeriesPointMark class.
            </summary>
            <param name="containerObject">Container element.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsSeriesPointMark.#ctor">
            <summary>
             Create new instance of DimensionsSeriesPointMark class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsSeriesPointMark.ResetHeight">
            <summary>
            Resets Height to default values
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsSeriesPointMark.ResetWidth">
            <summary>
            Resets Width to default values
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsSeriesPointMark.Reset">
            <summary>
            Resets to default values
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsSeriesPointMark.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of DimensionsSeriesPointMark class with the same fields as this object.</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsSeriesPointMark.Height">
            <summary>
            Specifies Height of element.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsSeriesPointMark.Width">
            <summary>
            Specifies Width of element.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsSeriesPointMark.Margins">
            <summary>
            Specifies margins of element.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsSeriesPointMark.Paddings">
            <summary>
            Specifies paddings of element.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.DimensionsTitle">
            <summary>
            Chart title's dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsTitle.#ctor">
            <summary>
             Create new instance of DimensionsTitle class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsTitle.Reset">
            <summary>
            Reset to default values.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsTitle.Margins">
            <summary>
            Specifies margins of element.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsTitle.Paddings">
            <summary>
            Specifies paddings of element.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.DimensionsPlotArea">
            <summary>
            Default plot area's dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsPlotArea.#ctor">
            <summary>
            Create new instance of DimensionsPlotArea class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsPlotArea.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsPlotArea.Margins">
            <summary>
            Specifies margins of element.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.DimensionsChart">
            <summary>
            Chart's dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsChart.ResetHeight">
            <summary>
            Reset Height to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsChart.ResetWidth">
            <summary>
            Reset Width to default settings
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.DimensionsChart.defWidth">
            <summary>
            Default height
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.DimensionsChart.defHeight">
            <summary>
            Default width
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsChart.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsChart.Height">
            <summary>
            Specifies Height of element
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsChart.Width">
            <summary>
            Specifies Width of element
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.DimensionsLegend">
            <summary>
            Legend's dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsLegend.#ctor">
            <summary>
            Create new instance of DimensionsLegend
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsLegend.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsLegend.Margins">
            <summary>
            Specifies margins of element
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsLegend.Paddings">
            <summary>
            Specified paddings of element
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.DimensionsMarker">
            <summary>
            Marker's default dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsMarker.#ctor(System.Object)">
            <summary>
            Create new instance of DimensionsMarker class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsMarker.#ctor">
            <summary>
            Create new instance of DimensionsMarker class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsMarker.#ctor(System.Single,System.Single)">
            <summary>
            Create new instance of DimensionsMarker class.
            </summary>
            <param name="width">Width of element</param>
            <param name="height">Height of element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsMarker.ResetHeight">
            <summary>
            Reset Height to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsMarker.ResetWidth">
            <summary>
            Reset Width to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsMarker.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsMarker.Paddings">
            <summary>
            Specifies paddings of element
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsMarker.AutoSize">
            <summary>
            Gets and sets Auto size mode of element
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsMarker.Height">
            <summary>
            Specifies height of element
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsMarker.Width">
            <summary>
            Specifies width of element
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.DimensionsPointMarker">
            <summary>
            PointMark's default dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DimensionsPointMarker.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of DimensionsPointMarker class with the same fields as this object.</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.DimensionsPointMarker.Margins">
            <summary>
            Specifies margins of element
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.EmtyValuesMode">
            <summary>
            Empty values representation mode
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.EmptyValue">
            <summary>
            Empty value
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.EmptyValue.emptyValueMarker">
            <summary>
            Empty value point appearance
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.EmptyValue.emptyValueLine">
            <summary>
            Line, Spline, Bezier series line style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.EmptyValue.emptyValueFillStyle">
            <summary>
            Specifies an empty bar fill style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.EmptyValue.#ctor">
            <summary>
            Create new instance of EmptyValue class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.EmptyValue.Reset">
            <summary>
            Reset all settings to default.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.EmptyValue.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of the object EmptyValue with the same fields as this object has.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.EmptyValue.TrackViewState">
            <summary>
            Track ViewState.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.EmptyValue.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState.
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.EmptyValue.SaveViewState">
            <summary>
            Save data to ViewState.
            </summary>
            <returns>Saved data.</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.EmptyValue.Mode">
            <summary>
            Gets and sets Empty values representation mode
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.EmptyValue.Line">
            <summary>
            Gets and sets Empty line style
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.EmptyValue.PointMark">
            <summary>
            Gets and sets Empty value point mark 
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.EmptyValue.FillStyle">
            <summary>
             Specifies an empty bar fill style
            </summary>
        </member>
        <member name="T:Telerik.Charting.CustomFigure">
            <summary>
            User-defined figure
            </summary>
        </member>
        <member name="M:Telerik.Charting.CustomFigure.#ctor">
            <summary>
            Creates new instance of CustomFigure class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.CustomFigure.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of CustomFigure class.
            </summary>
            <param name="name">Name of figure</param>
            <param name="description">Data in string format used for figure creation</param>
        </member>
        <member name="M:Telerik.Charting.CustomFigure.ToString">
            <summary>
            Gets String representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="P:Telerik.Charting.CustomFigure.Name">
            <summary>
            Gets and sets Figure's name
            </summary>
            <value>Name of figure</value>
        </member>
        <member name="P:Telerik.Charting.CustomFigure.Description">
            <summary>
            Gets and sets Figure's source
            </summary>
            <value>Data in string format needed to restore object</value>
        </member>
        <member name="T:Telerik.Charting.CustomFiguresCollection">
            <summary>
            Custom figures collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollection.GetFigure(System.Int32)">
            <summary>
            Gets or sets a custom figures collection item.
            </summary>
            <param name="index">Index to get figure</param>
            <returns>Figure at specified index</returns>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollection.GetFigure(System.String)">
            <summary>
            Gets or sets a custom figures collection item.
            </summary>
            <param name="name">Name of figure to get</param>
            <returns>Figure with specified name</returns>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollection.Add(Telerik.Charting.CustomFigure)">
            <summary>
            Adds a custom figure to the collection.
            </summary>
            <param name="figure">Figure for adding</param>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollection.AddRange(Telerik.Charting.CustomFigure[])">
            <summary>
            Adds an array of figure items to the figures collection.
            </summary>
            <param name="figure">Figures for adding</param>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollection.Contains(System.String)">
            <summary>
            Indicates whether the specified figure item exists in the collection.
            </summary>
            <param name="figureName">Figure name</param>
            <returns>Whether the specified figure item exists in the collection or not</returns>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollection.IndexOf(System.String)">
            <summary>
            Returns the index of the specified figure item.
            </summary>
            <param name="figureName">Name of figure</param>
            <returns>Index of figure with specified name</returns>
        </member>
        <member name="M:Telerik.Charting.CustomFiguresCollection.Remove(System.String)">
            <summary>
            Removes figure with specified name
            </summary>
            <param name="figureName">Name of figure</param>
        </member>
        <member name="F:Telerik.Charting.Styles.DefaultFigures.Cross">
            <summary>
            Default figures' names
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.DefaultFigures.FiguresList">
            <summary>
            List of default figures' names
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DefaultFigures.Contains(System.String)">
            <summary>
            Gets whether list contains figure with specified name
            </summary>
            <param name="name">Name of figure</param>
            <returns>Whether list contains figure with specified name or not</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.DefaultFigures.GetPath(System.String)">
            <summary>
            Get graphics path of figure with specified name
            </summary>
            <param name="name">Name of figure</param>
            <returns>Graphics path</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.DefaultFigures.CreateStarPath(System.Int32,System.Drawing.Rectangle,System.Single)">
            <summary>
            Create graphics path for star figure
            </summary>
            <param name="pointsCount">Count of points in star</param>
            <param name="rect">Rectangle of star figure</param>
            <param name="widthRatio">Ratio</param>
            <returns>Graphics path of star figure</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.FiguresCollection">
            <summary>
            Default figures
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.FiguresCollection.figures">
            <summary>
            List of figures
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FiguresCollection.#ctor">
            <summary>
            Create new instance of FiguresCollection class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FiguresCollection.#ctor(Telerik.Charting.Chart)">
            <summary>
            Create new instance of FiguresCollection class.
            </summary>
            <param name="chart">Chart to add figures into collection</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FiguresCollection.Add(System.Collections.Generic.List{Telerik.Charting.CustomFigure})">
            <summary>
            Add list of figures into collection
            </summary>
            <param name="list">List of figures</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FiguresCollection.Add(System.String)">
            <summary>
            Add figure with specified name
            </summary>
            <param name="name">Name figure for adding</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FiguresCollection.GetPath(System.String)">
            <summary>
            Gets graphics path of figure with specified name
            </summary>
            <param name="name">Name of figure</param>
            <returns>Graphics path</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.FiguresCollection.GetPath(System.String,Telerik.Charting.Chart)">
            <summary>
            Gets graphics path of figure with specified name in chart's custom figures
            </summary>
            <param name="name">Name of figure</param>
            <param name="chart">Chart with custom figures</param>
            <returns>Graphics path</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.FiguresCollection.Figures">
            <summary>
            Gets list of figures
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.GradientFillStyle">
            <summary>
            Specifies the direction of a linear gradient.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.FillSettings">
            <summary>
            Fill settings
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.FillSettings.fillSettingsComplexGradient">
            <summary>
            Specifies the blend colors for Gradient fill
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.#ctor(System.Object)">
            <summary>
            Create new instance of FillSettings class.
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.#ctor">
            <summary>
            Create new instance of FillSettings class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.#ctor(Telerik.Charting.Styles.GradientFillStyle,System.Single,Telerik.Charting.ColorBlend)">
            <summary>
            Constructor for FillSettings for the Linear gradient fill mode
            </summary>
            <param name="lgMode">Linear gradient fill mode</param>
            <param name="lgAngle">Linear gradient fill angle</param>
            <param name="blend">Specifies the blend colors for Gradient fill</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.#ctor(System.Drawing.Drawing2D.HatchStyle)">
            <summary>
            Constructor for FillSettings for the Hatch fill mode
            </summary>
            <param name="style">Hatch style</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.#ctor(Telerik.Charting.Styles.ImageDrawMode,System.String,Telerik.Charting.Styles.ImageAlignModes,Telerik.Charting.Styles.ImageTileModes)">
            <summary>
            Constructor for FillSettings for the Image fill mode
            </summary>
            <param name="idMode">Image mode</param>
            <param name="imageURL">Image path</param>
            <param name="aligneMode">Alignment of image</param>
            <param name="flip">Flip mode</param>
        </member>
        <member name="F:Telerik.Charting.Styles.FillSettings.fillSettingsContainerObject">
            <summary>
            Container element
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.GetImage(Telerik.Charting.Chart)">
            <summary>
            Get background image of chart
            </summary>
            <param name="chart">Chart to get image</param>
            <returns>Image from resources</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of FillSettings class with the same fields as this object.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.Equals(System.Object)">
            <summary>
            Comparing two objects.
            </summary>
            <param name="obj">Object for comparing</param>
            <returns>Whether objects are equal or not</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettings.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.FillSettings.GradientMode">
            <summary>
            Specifies the Linear gradient fill mode
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillSettings.GradientAngle">
            <summary>
            Specifies the Linear gradient fill angle
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillSettings.ComplexGradient">
            <summary>
            Specifies the blend colors for Gradient fill
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillSettings.HatchStyle">
            <summary>
            Specifies the style of hatch fill type
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillSettings.ImageDrawMode">
            <summary>
            Specifies how image should be drawing
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillSettings.BackgroundImage">
            <summary>
            Specifies the URL of Image file
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillSettings.ImageAlign">
            <summary>
            Specifies the Image align mode
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillSettings.ImageFlip">
            <summary>
            Specifies the image flip settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillSettings.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.FillSettingsVerticalGradient">
            <summary>
            Vertical gradient default fill settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillSettingsVerticalGradient.Reset">
            <summary>
            Reset values to default
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillSettingsVerticalGradient.GradientMode">
            <summary>
            Specifies the Linear gradient fill mode
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.FillStyle">
            <summary>
            Fill style base class
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.FillStyle.fillStyleFillSettings">
            <summary>
            Fill settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.#ctor">
            <summary>
            Create new instance of FillStyle class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.#ctor(System.Object)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.#ctor(System.Drawing.Color)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="mainColor">Main color</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="mainColor">Main color</param>
            <param name="secondColor">Second color</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.#ctor(System.Drawing.Color,Telerik.Charting.Styles.FillType)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="mainColor">Main color</param>
            <param name="fillType">One of FillType values(Solid, Gradient, ComplexGradient, Image,Hatch)</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.#ctor(System.Drawing.Color,System.Drawing.Color,Telerik.Charting.Styles.FillType)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="mainColor">Main color</param>
            <param name="secondColor">Second color</param>
            <param name="fillType">One of FillType values(Solid, Gradient, ComplexGradient, Image,Hatch)</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.#ctor(System.Drawing.Color,System.Drawing.Color,Telerik.Charting.Styles.FillSettings,System.Boolean,Telerik.Charting.Styles.FillType)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="mainColor">Main color</param>
            <param name="secondColor">Second color</param>
            <param name="fillSettings">Fill settings</param>
            <param name="gammaCorrection">Specifies whether gamma correction should be used</param>
            <param name="fillType">One of FillType values(Solid, Gradient, ComplexGradient, Image,Hatch)</param>
        </member>
        <member name="F:Telerik.Charting.Styles.FillStyle.fillStyleContainerObject">
            <summary>
            Container element
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.Clone">
            <summary>
            Clone of this object
            </summary>
            <returns>New instance of FillStyle class with the same fields as this object</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.Equals(System.Object)">
            <summary>
            Comparing of two objects
            </summary>
            <param name="obj">Object to compare</param>
            <returns>Whether objects are equal or not</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyle.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyle.MainColor">
            <summary>
            Gets and sets the main color of figure background
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyle.SecondColor">
             <summary>
            Gets and sets the second color of figure background
             </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyle.FillSettings">
            <summary>
            Gets and sets fill settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyle.MainColorOpacity">
            <summary>
            Gets and sets the main color opacity coefficient
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyle.SecondColorOpacity">
             <summary>
            Gets and sets the second color opacity coefficient
             </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyle.GammaCorrection">
            <summary>
            Specifies whether gamma correction should be used
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyle.FillType">
            <summary>
            Specifies which of fill styles (Hatch, Solid, Image, Gradient) should be used
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyle.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets value of property by its name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.FillStyleSeries">
            <summary>
            Series fill style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.FillStyleSeries.Empty">
            <summary>
            FillStyleSeries with default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyleSeries.#ctor">
            <summary>
            Create new instance of FillStyleSeries class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyleSeries.#ctor(Telerik.Charting.ChartSeries)">
            <summary>
            Create new instance of FillStyleSeries class.
            </summary>
            <param name="series">Container element(series)</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyleSeries.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyleSeries.MainColor">
            <summary>
            Gets or sets the color of the data series.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyleSeries.SecondColor">
            <summary>
            Gets or sets the color of the data series.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.FillStyleSeriesPoint">
            <summary>
            Series points fill style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyleSeriesPoint.#ctor(System.Object)">
            <summary>
            Create new instance of FillStyleSeriesPoint class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyleSeriesPoint.#ctor">
            <summary>
            Create new instance of FillStyleSeriesPoint class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyleSeriesPoint.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.FillStyleChart">
            <summary>
            Chart's background fill style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyleChart.#ctor">
            <summary>
            Create new instance of FillStyleChart class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyleChart.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyleChart.FillType">
            <summary>
            Specifies which of fill styles (Hatch, Solid, Image, Gradient) should be used
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyleChart.MainColor">
            <summary>
            Gets or sets the color of the data series.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStylePlotArea.#ctor">
            <summary>
            Create new instance of FillStylePlotArea class.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.FillStylePlotArea.defMainColor">
            <summary>
            Default value of Main color
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.FillStylePlotArea.defSecondColor">
            <summary>
            Default value of Second color
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStylePlotArea.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStylePlotArea.MainColor">
            <summary>
            Chart plot area main color
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStylePlotArea.SecondColor">
            <summary>
            Chart plot area second color
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStylePlotArea.FillType">
            <summary>
            Specifies which of fill styles (Hatch, Solid, Image, Gradient) should be used
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.FillStyleTitle">
            <summary>
            Title's background fill style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyleTitle.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyleTitle.MainColor">
            <summary>
            Chart title main color
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyleTitle.FillType">
            <summary>
            Specifies which of fill styles (Hatch, Solid, Image, Gradient) should be used
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.FillStyleMarkedZones">
            <summary>
            Marked zone fill style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.FillStyleMarkedZones.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyleMarkedZones.MainColor">
            <summary>
            Chart marked zone main color
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.FillStyleMarkedZones.FillType">
            <summary>
            Specifies which of fill styles (Hatch, Solid, Image, Gradient) should be used
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.FillType">
            <summary>
            Fill types listing
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.FillType.Solid">
            <summary>
            Element is filled by one color.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.FillType.Gradient">
            <summary>
            Element is filled by two color.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.FillType.ComplexGradient">
            <summary>
            Element is filled by colors at specified positions.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.FillType.Hatch">
            <summary>
            Element is filled by Hatch type(standard).
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.FillType.Image">
            <summary>
            Element is filled by image.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageAlignModes.Top">
            <summary>
            Image is located at Top of element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageAlignModes.Bottom">
            <summary>
            Image is located at Bottom of element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageAlignModes.Right">
            <summary>
            Image is located at Right of element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageAlignModes.Left">
            <summary>
            Image is located at Left of element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageAlignModes.Center">
            <summary>
            Image is located at Center of element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageAlignModes.TopRight">
            <summary>
            Image is located at TopRight of element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageAlignModes.TopLeft">
             <summary>
            Image is located at TopLeft of element.
             </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageAlignModes.BottomRight">
            <summary>
            Image is located at BottomRight of element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageAlignModes.BottomLeft">
            <summary>
            Image is located at BottomLeft of element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageDrawMode.Align">
            <summary>
            Image is aligned by specified alignment.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageDrawMode.Stretch">
            <summary>
            Stretch image. 
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageDrawMode.Flip">
            <summary>
            Flip image.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageTileModes.Flip">
            <summary>
            Fill element by image that repeats by X and Y.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageTileModes.FlipX">
            <summary>
            Fill element by image that flips by X.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageTileModes.FlipY">
            <summary>
            Fill element by image that flips by Y.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageTileModes.FlipXY">
            <summary>
            Fill element by image that flips by X and Y.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.IPosition">
            <summary>
            Interface that objects with position implement.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.IPosition.Position">
            <summary>
            Gets position.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.LabelItemsCompositionTypes">
            <summary>
            Specifies how marker and text block are situated related to each other.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.LabelItemsCompositionTypes.ColumnImageText">
            <summary>
            Marker at left, TextBlock - at right
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.LabelItemsCompositionTypes.ColumnTextImage">
            <summary>
            Marker at right, TextBlock - at left
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.LabelItemsCompositionTypes.RowImageText">
            <summary>
            Marker at top, TextBlock - at bottom
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.LabelItemsCompositionTypes.RowTextImage">
            <summary>
            Marker at bottom, TextBlock - at top
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.LabelItemsCompositionTypes.None">
            <summary>
            Marker and TextBlock use Position-AlignedPosition. Default value.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.LayoutDecoratorBase">
            <summary>
            Base class for a chart Margins and Paddings
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.LayoutDecoratorBase.chartLayoutDecoratorBaseContainerObject">
            <summary>
            Container element
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.#ctor(System.Object)">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.#ctor">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.#ctor(System.Object,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
            <param name="containerObject">Container element</param>
            <param name="top">Top side</param>
            <param name="right">Right side</param>
            <param name="bottom">Bottom side</param>
            <param name="left">Left side</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.#ctor(Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
            <param name="top">Top side</param>
            <param name="right">Right side</param>
            <param name="bottom">Bottom side</param>
            <param name="left">Left side</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
            <param name="containerObject">Container element</param>
            <param name="top">Top side</param>
            <param name="right">Right side</param>
            <param name="bottom">Bottom side</param>
            <param name="left">Left side</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.#ctor(Telerik.Charting.Styles.Unit)">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
            <param name="top">Value in pixels or percents of all sides</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.Reset">
            <summary>
            Reset to default settings.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.Reset(Telerik.Charting.Styles.Unit)">
            <summary>
            Set value in pixels or percents of all sides
            </summary>
            <param name="value">Value in pixels or percents of all sides</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.Equals(System.Object)">
            <summary>
            Checks whether objects are equal
            </summary>
            <param name="obj">Object to compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.op_Equality(Telerik.Charting.Styles.LayoutDecoratorBase,Telerik.Charting.Styles.LayoutDecoratorBase)">
            <summary>
            Operator comparing
            </summary>
            <param name="layoutDecoratorOne">First object for comparing</param>
            <param name="layoutDecoratorTwo">Second object for comparing</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.op_Inequality(Telerik.Charting.Styles.LayoutDecoratorBase,Telerik.Charting.Styles.LayoutDecoratorBase)">
            <summary>
            Operator not equal
            </summary>
            <param name="layoutDecoratorOne">First object for comparing</param>
            <param name="layoutDecoratorTwo">Second object for comparing</param>
            <returns>Whether objects are not equal</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of LayoutDecoratorBase class with the same fields as this one</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutDecoratorBase.CopyFrom(Telerik.Charting.Styles.LayoutDecoratorBase)">
            <summary>
            Copy fields from object
            </summary>
            <param name="layoutDecorator">Object to copy from</param>
        </member>
        <member name="P:Telerik.Charting.Styles.LayoutDecoratorBase.Left">
            <summary>
            Sets the left side in pixels or percents of the chart's width.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.LayoutDecoratorBase.Right">
            <summary>
            Sets the right side in pixels or percents of the chart's width.
            </summary> 
        </member>
        <member name="P:Telerik.Charting.Styles.LayoutDecoratorBase.Top">
            <summary>
            Sets the top side in pixels or percents of the chart's height.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.LayoutDecoratorBase.Bottom">
            <summary>
            Sets the bottom side in pixels or percents of the chart's height.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.LayoutStyle">
            <summary>
            Base appearance settings for any element being calculated
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.Style">
            <summary>
            Base style class
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Style.styleShadow">
            <summary>
            Specifies the shadowStyle property
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Style.styleBorder">
            <summary>
            Specifies the border for style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Style.styleContainerObject">
            <summary>
            Style container object
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Style.styleChart">
            <summary>
            Chart style related to
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.#ctor(System.Object)">
            <summary>
            Creates new instance of Style class.
            </summary>
            <param name="containerObject">Container object element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.#ctor">
            <summary>
            Creates new instance of Style class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.#ctor(Telerik.Charting.Styles.StyleBorder)">
            <summary>
            Creates new instance of Style class.
            </summary>
            <param name="border">Style border</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.#ctor(Telerik.Charting.Styles.StyleBorder,System.Boolean)">
            <summary>
            Creates new instance of Style class.
            </summary>
            <param name="border">Style border</param>
            <param name="visible">Visibility</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.#ctor(Telerik.Charting.Styles.StyleBorder,System.Boolean,Telerik.Charting.Styles.ShadowStyle)">
            <summary>
            Creates new instance of Style class.
            </summary>
            <param name="border">Style border</param>
            <param name="visible">Visibility</param>
            <param name="shadowStyle">Shadow style</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.IsVisible(System.Object)">
            <summary>
            Gets element visibility
            </summary>
            <param name="element">Element visibility to check</param>
            <returns>Visibility of the specified element</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.Reset">
            <summary>
            Reset settings to default
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.SetPixelValues(Telerik.Charting.IOrdering,Telerik.Charting.IContainer)">
            <summary>
            Set pixels value to width and height properties of element
            </summary>
            <param name="elem">Element to calculate pixel values</param>
            <param name="container">Container of element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.SetPixelValues(Telerik.Charting.IOrdering,System.Single,System.Single)">
            <summary>
            Set pixels value to width and height properties of element
            </summary>
            <param name="elem">Element to calculate pixel values</param>
            <param name="contWidth">Container's width</param>
            <param name="contHeight">Container's height</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.SetPixelValues(Telerik.Charting.Styles.Dimensions,System.Single,System.Single)">
            <summary>
             Set pixels value to width and height properties of element's dimensions
            </summary>
            <param name="objDims">Element's dimensions</param>
            <param name="contWidth">Container's width</param>
            <param name="contHeight">Container's height</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.GetRealBounds(Telerik.Charting.Styles.Dimensions,System.Nullable{System.Single})">
            <summary>
            Calculate bounds of element depend on its rotation and previous dimensions
            </summary>
            <param name="dimensions">Dimensions of element</param>
            <param name="rotation">Rotation angle</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.GetStyleProperty(System.Object,Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value of element by name 
            </summary>
            <param name="element">Element to get property</param>
            <param name="propertyName">Property name</param>
            <returns>Property value of specified element</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState to load data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Style.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.Style.Border">
            <summary>
            Specifies the border style
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Style.Shadow">
            <summary>
            Specifies the shadow settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Style.Visible">
            <summary>
            Specifies visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Style.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.Style.Chart">
            <summary>
            Specifies chart style related to
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.LayoutStyle.position">
            <summary>
            Position of element
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.LayoutStyle.dimensions">
            <summary>
            Dimensions of element
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutStyle.#ctor(System.Object)">
            <summary>
            Creates new instance of LayoutStyle class.
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutStyle.#ctor(Telerik.Charting.Styles.Position)">
            <summary>
            Creates new instance of LayoutStyle class.
            </summary>
            <param name="position">Position of element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutStyle.#ctor(Telerik.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of LayoutStyle class.
            </summary>
            <param name="dimensions">Dimensions of element.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutStyle.#ctor(Telerik.Charting.Styles.Position,Telerik.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of LayoutStyle class.
            </summary>
            <param name="position">Position of element</param>
            <param name="dimensions">Dimensions of element.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutStyle.#ctor(Telerik.Charting.Styles.StyleBorder,System.Boolean,Telerik.Charting.Styles.ShadowStyle,Telerik.Charting.Styles.Position,Telerik.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of LayoutStyle class.
            </summary>
            <param name="border">Border of element</param>
            <param name="visible">Visibility of element</param>
            <param name="shadowStyle">Shadow</param>
            <param name="position">Position</param>
            <param name="dimensions">Dimensions</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutStyle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutStyle.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutStyle.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState 
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LayoutStyle.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.LayoutStyle.Position">
            <summary>
            Specifies the elements Position property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.LayoutStyle.Dimensions">
            <summary>
            Specifies the elements Dimensions property
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleBorder">
            <summary>
            Border style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleBorder.lineStyleContainerObject">
            <summary>
            Style container object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleBorder.#ctor(System.Object)">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleBorder.#ctor">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleBorder.#ctor(System.Boolean)">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
            <param name="visible">Border visibility</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleBorder.#ctor(System.Drawing.Color)">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
            <param name="color">Border color</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleBorder.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
            <param name="color">Border color</param>
            <param name="width">Border width</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleBorder.#ctor(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
            <param name="color">Border color</param>
            <param name="width">Border width</param>
            <param name="penStyle">Border PenStyle</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleBorder.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleBorder.Equals(System.Object)">
            <summary>
            Compare two objects
            </summary>
            <param name="obj">Object tot compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleBorder.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleBorder.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Object with the same fields as this one</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleBorder.Color">
            <summary>
            Specifies the line color property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleBorder.PenStyle">
            <summary>
            Specifies the pen style property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleBorder.Width">
            <summary>
            Specifies the width property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleBorder.Visible">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleBorder.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.LineStyle">
            <summary>
            Common lines style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.LineStyle.#ctor(System.Object)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LineStyle.#ctor">
            <summary>
            Creates new instance of LineStyle class
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.LineStyle.#ctor(System.Boolean)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="visible">Line visibility</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LineStyle.#ctor(System.Drawing.Color)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="color">Line color</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LineStyle.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="color">Line color</param>
            <param name="width">Line width</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LineStyle.#ctor(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="color">Line color</param>
            <param name="width">Line width</param>
            <param name="penStyle">Line PenStyle</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LineStyle.#ctor(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle,System.Drawing.Drawing2D.LineCap)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="color">Line color</param>
            <param name="width">Line width</param>
            <param name="penStyle">Line PenStyle</param>
            <param name="endCap">Line end cap</param>
        </member>
        <member name="M:Telerik.Charting.Styles.LineStyle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.LineStyle.Equals(System.Object)">
            <summary>
            Compare two objects
            </summary>
            <param name="obj">Object tot compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.LineStyle.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.LineStyle.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Object with the same fields as this one</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.LineStyle.EndCap">
            <summary>
            Specifies the end cap property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.LineStyle.StartCap">
            <summary>
            Specifies the start cap property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.LineStyle.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleLineSeries">
            <summary>
            Line series specific style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleLineSeries.tmpStyleLineSeriesColor">
            <summary>
            Line series color
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLineSeries.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLineSeries.Width">
            <summary>
            Gets or sets the width of the series line.
            </summary>
            <value>Width of line</value>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLineSeries.PenStyle">
            <summary>
            Gets or sets PenStyle of the series line
            </summary>
            <value>PenStyle of line</value>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLineSeries.IsEmptyLine">
            <summary>
            Checks if line belongs to StyleEmptyLineSeries class.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLineSeries.Color">
            <summary>
            Gets or sets color of the series line
            </summary>
            <value>Color of line</value>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLineSeries.Visible">
            <summary>
            Line series visibility (same as Series.Visible)
            </summary>
            <value> Visibility of line</value>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleEmptyLineSeries">
            <summary>
            Empty Line series specific style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleEmptyLineSeries.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleEmptyLineSeries.Color">
            <summary>
            Gets or sets color of the series line
            </summary>
            <value>Color of line</value>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleEmptyLineSeries.PenStyle">
            <summary>
            Gets or sets PenStyle of the series line
            </summary>
            <value>PenStyle of line</value>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleSeriesBorder">
            <summary>
            Series border specific style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesBorder.#ctor(Telerik.Charting.ChartSeries)">
            <summary>
            Creates new instance of StyleSeriesBorder class.
            </summary>
            <param name="series">Series object</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesBorder.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesBorder.PenStyle">
            <summary>
            Gets or sets PenStyle of the series border
            </summary>
            <value>PenStyle of line</value>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesBorder.Color">
            <summary>
            Gets or sets color of the series border
            </summary>
            <value>Color of line</value>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleTitleBorder">
            <summary>
            Title border specific style 
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleLegendBorder">
            <summary>
            Legend border specific style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLegendBorder.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLegendBorder.Color">
            <summary>
            Gets and sets border color
            </summary>
            <value>Legend's border color</value>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleChartBorder">
            <summary>
            Chart border specific style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartBorder.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartBorder.Color">
            <summary>
            Gets and sets border color
            </summary>
            <value>Chart's border color</value>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleDataTableBorder">
            <summary>
            Data table's border specific style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleDataTableBorder.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleDataTableBorder.Color">
            <summary>
            Gets and sets border color
            </summary>
            <value>DataTable's border color</value>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleItemLabelConnector">
            <summary>
            Series item label connector line specific style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleItemLabelConnector.#ctor">
            <summary>
            Creates new instance of StyleItemLabelConnector class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleItemLabelConnector.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleItemLabelConnector.Color">
            <summary>
            Gets and sets item label connector's color
            </summary>
            <value>Item label connector'scolor</value>
        </member>
        <member name="T:Telerik.Charting.Styles.ScaleBreaksLineStyle">
            <summary>
            Scale breaks line specific style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ScaleBreaksLineStyle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ScaleBreaksLineStyle.Color">
            <summary>
            Gets and sets ScaleBreak's  color
            </summary>
            <value>ScaleBreak's color</value>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartMargins">
            <summary>
            Margins base class
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMargins.#ctor(System.Object)">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMargins.#ctor">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMargins.#ctor(System.Object,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
            <param name="containerObject">Container object</param>
            <param name="top">Top margin in pixels or percents</param>
            <param name="right">Right margin in pixels or percents</param>
            <param name="bottom">Bottom margin in pixels or percents</param>
            <param name="left">Left margin in pixels or percents</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMargins.#ctor(Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
            <param name="top">Top margin in pixels or percents</param>
            <param name="right">Right margin in pixels or percents</param>
            <param name="bottom">Bottom margin in pixels or percents</param>
            <param name="left">Left margin in pixels or percents</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMargins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
            <param name="top">Top margin in pixels</param>
            <param name="right">Right margin in pixels</param>
            <param name="bottom">Bottom margin in pixels</param>
            <param name="left">Left margin in pixels</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMargins.#ctor(Telerik.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
            <param name="margin">Value to set for all margins</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMargins.op_Implicit(System.String)~Telerik.Charting.Styles.ChartMargins">
            <summary>
            Implicitly creates a new instance of ChartMargins from the specified string.
            </summary>
            <param name="value">The string to parse</param>
            <returns>New instance of ChartMargins from the specified string</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMargins.Parse(System.String)">
            <summary>
            Converts the specified string to an instance of ChartMargins.
            </summary>
            <param name="value">The string to convert from.</param>
            <returns>New instance of ChartMargins from the specified string</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMargins.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified string to an instance of ChartMargins.
            </summary>
            <param name="value">The string to convert from.</param>
            <param name="culture">Culture info</param>
            <returns>New instance of ChartMargins from the specified string</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartMarginsTitle">
            <summary>
            Title's margins
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMarginsTitle.#ctor">
            <summary>
            Creates new instance of ChartMarginsTitle class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMarginsTitle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartMarginsTitle.Right">
            <summary>
            Sets the right margin in pixels or percent of the chart's width.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartMarginsTitle.Top">
            <summary>
            Sets the top margin in pixels or percent of the chart's height.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartMarginsTitle.Bottom">
            <summary>
            Sets the bottom margin in pixels or percent of the chart's height.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartMarginsTitle.Left">
            <summary>
            Sets the left margin in pixels or percent of the chart's width.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartMarginsPlotArea">
            <summary>
            Plot area's margins
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMarginsPlotArea.#ctor">
            <summary>
            Creates new instance of ChartMarginsPlotArea class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMarginsPlotArea.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartMarginsPlotArea.Left">
            <summary>
            Sets the left margin in pixels or percent of the chart's width.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartMarginsPlotArea.Right">
            <summary>
            Sets the right margin in pixels or percent of the chart's width.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartMarginsPlotArea.Top">
            <summary>
            Sets the top margin in pixels or percent of the chart's height.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartMarginsPlotArea.Bottom">
            <summary>
            Sets the bottom margin in pixels or percent of the chart's height.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartMarginsLegend">
            <summary>
            Legend's margins
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMarginsLegend.#ctor">
            <summary>
            Creates new instance of ChartMarginsLegend class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartMarginsLegend.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartMarginsLegend.Right">
            <summary>
            Sets the right margin in pixels or percent of the chart's width.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Orientation.Horizontal">
            <summary>
            Specifies a horizontal drawing
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Orientation.Vertical">
            <summary>
            Specifies a vertical drawing
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Orientation.Undefined">
            <summary>
            Not set
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Overflow.Auto">
            <summary>
            Full auto resizing by contents
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Overflow.Row">
            <summary>
            Horizontal auto resizing by contents
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Overflow.Column">
            <summary>
            Vertical auto resizing by contents
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Overflow.Manual">
            <summary>
            No auto resizing
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartPaddings">
            <summary>
            Base paddings class
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddings.#ctor(System.Object)">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddings.#ctor">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddings.#ctor(System.Object,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
            <param name="containerObject">Container object</param>
            <param name="top">Top padding in pixels or percents</param>
            <param name="right">Right padding in pixels or percents</param>
            <param name="bottom">Bottom padding in pixels or percents</param>
            <param name="left">Left padding in pixels or percents</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddings.#ctor(Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
            <param name="top">Top padding in pixels or percents</param>
            <param name="right">Right padding in pixels or percents</param>
            <param name="bottom">Bottom padding in pixels or percents</param>
            <param name="left">Left padding in pixels or percents</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddings.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
            <param name="top">Top padding in pixels</param>
            <param name="right">Right padding in pixels</param>
            <param name="bottom">Bottom padding in pixels</param>
            <param name="left">Left padding in pixels</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddings.#ctor(Telerik.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
            <param name="margin">Value to set for all paddings</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddings.op_Implicit(System.String)~Telerik.Charting.Styles.ChartPaddings">
            <summary>
            Implicitly creates an instance of ChartPaddings class from the specified string.
            </summary>
            <param name="value">The string to parse</param>
            <returns>Instance of ChartPaddings class from the specified string</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddings.Parse(System.String)">
            <summary>
            Converts the specified string to an instance of ChartPaddings class.
            </summary>
            <param name="value">The string to convert from.</param>
            <returns>Instance of ChartPaddings class from the specified string</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddings.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified string to an instance of ChartPaddings class.
            </summary>
            <param name="value">The string to convert from.</param>
            <param name="culture">Culture info</param>
            <returns>Instance of ChartPaddings class from the specified string</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartPaddingsTitle">
            <summary>
            Chart title's paddings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddingsTitle.#ctor">
            <summary>
            Creates new instance of ChartPaddingsTitle class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddingsTitle.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartPaddingsTitle.Left">
            <summary>
            Specifies the left padding
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartPaddingsTitle.Right">
            <summary>
            Specifies the right padding
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartPaddingsTitle.Top">
            <summary>
            Specifies the top padding
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartPaddingsTitle.Bottom">
            <summary>
            Specifies the bottom padding
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartPaddingsLegend">
            <summary>
            Chart title's paddings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddingsLegend.#ctor">
            <summary>
            Creates new instance of ChartPaddingsLegend class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartPaddingsLegend.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartPaddingsLegend.Top">
            <summary>
            Specifies the top padding
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartPaddingsLegend.Right">
            <summary>
            Specifies the right padding
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartPaddingsLegend.Bottom">
            <summary>
            Specifies the bottom padding
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartPaddingsLegend.Left">
            <summary>
            Specifies the left padding
            </summary>
        </member>
        <member name="T:Telerik.Charting.CustomPalettesCollection">
            <summary>
            User-defined palettes collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.CustomPalettesCollection.#ctor">
            <summary>
            Create new instance of CustomPalettesCollection class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.CustomPalettesCollection.Contains(System.String)">
            <summary>
            Indicates whether the specified palette item exists in the collection.
            </summary>
            <param name="paletteName">Name of palette</param>
            <returns>Whether the specified palette item exists in the collection</returns>
        </member>
        <member name="M:Telerik.Charting.CustomPalettesCollection.IndexOf(System.String)">
            <summary>
            Returns the index of the specified palette item.
            </summary>
            <param name="paletteName">Name of palette</param>
            <returns>Index of the specified palette item</returns>
        </member>
        <member name="M:Telerik.Charting.CustomPalettesCollection.Remove(System.String)">
            <summary>
            Removes palette with specified name from collection
            </summary>
            <param name="paletteName">Name of palette</param>
        </member>
        <member name="M:Telerik.Charting.CustomPalettesCollection.GetPalette(System.Int32)">
            <summary>
            Returns a reference to the Palette object at the specified index.
            </summary>
            <param name="index">Index to get palette</param>
            <returns>Palette at specified index</returns>
        </member>
        <member name="M:Telerik.Charting.CustomPalettesCollection.GetPalette(System.String)">
            <summary>
            Returns a reference to the Palette object by the specified name.
            </summary>
            <param name="name">Name of palette</param>
            <returns>Palette object with specified name</returns>
        </member>
        <member name="T:Telerik.Charting.Palette">
            <summary>
            Series color palette. Used for an automatic series items colors assignment
            </summary>
        </member>
        <member name="F:Telerik.Charting.Palette.paletteItems">
            <summary>
            Palette items collection that palette contains
            </summary>
        </member>
        <member name="M:Telerik.Charting.Palette.#ctor">
            <summary>
            Create new instance of Palette class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Palette.#ctor(System.String)">
            <summary>
            Create new instance of Palette class.
            </summary>
            <param name="name">Name of palette</param>
        </member>
        <member name="M:Telerik.Charting.Palette.#ctor(System.String,System.Drawing.Color[],System.Drawing.Color[])">
            <summary>
            Create new instance of Palette class.
            </summary>
            <param name="name">Name of palette</param>
            <param name="mainColors">Main colors of palette items</param>
            <param name="secondColors">Second colors of palette items</param>
        </member>
        <member name="M:Telerik.Charting.Palette.#ctor(System.String,Telerik.Charting.ColorBlend[])">
            <summary>
            Create new instance of Palette class.
            </summary>
            <param name="name">Name of Palette</param>
            <param name="addtionalColors">Additional colors of palette</param>
        </member>
        <member name="M:Telerik.Charting.Palette.#ctor(System.String,System.Drawing.Color[],System.Boolean)">
            <summary>
            Create new instance of Palette class.
            </summary>
            <param name="name">Name </param>
            <param name="colors">Colors of items</param>
            <param name="twoColors">If true than second and main colors are equal</param>
        </member>
        <member name="M:Telerik.Charting.Palette.FillItemsCollectionFromTwoArrays(System.Drawing.Color[],System.Drawing.Color[])">
            <summary>
            Fill items collection from two color arrays
            </summary>
            <param name="mainColors">Main colors of items</param>
            <param name="secondColors">Second color of items</param>
        </member>
        <member name="M:Telerik.Charting.Palette.GetPaletteItem(System.Int32)">
            <summary>
            Gets palette item with specified index
            </summary>
            <param name="index">Index where palette item should be get</param>
            <returns>Palette item</returns>
        </member>
        <member name="M:Telerik.Charting.Palette.ToString">
            <summary>
            Gets string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="M:Telerik.Charting.Palette.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance with the same fields as this one</returns>
        </member>
        <member name="M:Telerik.Charting.Palette.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Palette.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState data</param>
        </member>
        <member name="M:Telerik.Charting.Palette.SaveViewState">
            <summary>
            Save data into ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Palette.Item(System.Int32)">
            <summary>
            Gets and sets Palette item at specified index
            </summary>
            <param name="index">Index to get palette item</param>
            <returns>Palette item at specified index</returns>
            <value>Palette item </value>
        </member>
        <member name="P:Telerik.Charting.Palette.Items">
            <summary>
            Gets Palette Items Collection
            </summary>
        </member>
        <member name="P:Telerik.Charting.Palette.Name">
            <summary>
            Specifies the palette name
            </summary>
            <value>Palette name</value>
        </member>
        <member name="T:Telerik.Charting.PaletteItem">
            <summary>
            Palette item
            </summary>
        </member>
        <member name="F:Telerik.Charting.PaletteItem.paletteItemAdditionalColors">
            <summary>
            Defines arrays of colors and positions used for interpolating color blending
            </summary>
        </member>
        <member name="M:Telerik.Charting.PaletteItem.#ctor">
            <summary>
            Create new instance of PaletteItem class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.PaletteItem.#ctor(Telerik.Charting.ColorBlend)">
            <summary>
            Create new instance of PaletteItem class.
            </summary>
            <param name="additionalColors">Colors with positions</param>
        </member>
        <member name="M:Telerik.Charting.PaletteItem.#ctor(System.String,Telerik.Charting.ColorBlend)">
            <summary>
             Create new instance of PaletteItem class.
            </summary>
            <param name="name">Name of item</param>
            <param name="additionalColors">Colors with positions</param>
        </member>
        <member name="M:Telerik.Charting.PaletteItem.#ctor(System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
             Create new instance of PaletteItem class.
            </summary>
            <param name="name">Name of item</param>
            <param name="mainColor">Main color of item</param>
            <param name="secondColor">Second color of item</param>
        </member>
        <member name="M:Telerik.Charting.PaletteItem.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
             Create new instance of PaletteItem class.
            </summary>
            <param name="mainColor">Main color of item</param>
            <param name="secondColor">Second color of item</param>
        </member>
        <member name="M:Telerik.Charting.PaletteItem.Reset">
            <summary>
            Reset all settings to default
            </summary>
        </member>
        <member name="M:Telerik.Charting.PaletteItem.ToString">
            <summary>
            Gets string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="M:Telerik.Charting.PaletteItem.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.PaletteItem.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.PaletteItem.SaveViewState">
            <summary>
            Save data into ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="M:Telerik.Charting.PaletteItem.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance with fields equal to these ones</returns>
        </member>
        <member name="P:Telerik.Charting.PaletteItem.AdditionalColors">
            <summary>
            Defines arrays of colors and positions used for interpolating color blending
            </summary>
        </member>
        <member name="P:Telerik.Charting.PaletteItem.MainColor">
            <summary>
            Specifies the main color for palette item
            </summary>
            <value>Main color of item</value>
        </member>
        <member name="P:Telerik.Charting.PaletteItem.SecondColor">
            <summary>
            Specifies the second color for palette item
            </summary>
            <value>Second color of item</value>
        </member>
        <member name="P:Telerik.Charting.PaletteItem.Name">
            <summary>
            Specifies the name for palette item
            </summary>
            <value>Name of item</value>
        </member>
        <member name="T:Telerik.Charting.PaletteItemsCollection">
            <summary>
            Palette items collection
            </summary>
        </member>
        <member name="M:Telerik.Charting.PaletteItemsCollection.#ctor">
            <summary>
            Create new instance of PaletteItemsCollection class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.PaletteItemsCollection.GetItem(System.Int32)">
            <summary>
            Gets Palette item at specified index
            </summary>
            <param name="index">Index to get palette item</param>
            <returns>Palette item at specified index</returns>
        </member>
        <member name="T:Telerik.Charting.PalettesCollection">
            <summary>
            Default palettes
            </summary>
        </member>
        <member name="F:Telerik.Charting.PalettesCollection.Palettes">
            <summary>
            Default color palettes listing
            </summary>
        </member>
        <member name="M:Telerik.Charting.PalettesCollection.#cctor">
            <summary>
            Creates object of PalettesCollection class
            </summary>
        </member>
        <member name="M:Telerik.Charting.PalettesCollection.GetPalette(System.String)">
            <summary>
            Returns default palette by name
            </summary>
            <param name="name">Name of palette</param>
        </member>
        <member name="M:Telerik.Charting.PalettesCollection.Contains(System.String)">
            <summary>
            Checks whether palette name exist in default palettes list
            </summary>
            <param name="name">Name of palette</param>
            <returns>Whether palette name exist in default palettes list or not</returns>
        </member>
        <member name="M:Telerik.Charting.PalettesCollection.GetPalette(System.String,Telerik.Charting.Chart)">
            <summary>
            Returns custom palette by name
            </summary>
            <param name="name">Name of palette</param>
            <param name="chart">Chart to get custom palettes</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Charting.Styles.PlacementDirection">
            <summary>
            Direction of label position in auto mode
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.PlacementDirection.Horizontal">
            <summary>
            Horizontal label's direction
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.PlacementDirection.Vertical">
            <summary>
            Vertical label's direction
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.Position">
            <summary>
            Represents the element position in the container
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Position.positionGlobalX">
            <summary>
            Contains elements' calculated position X for speed optimization
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Position.positionGlobalY">
            <summary>
            Contains elements' calculated position Y for speed optimization
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Position.requireCalculation">
            <summary>
            Contains True if calculation of Positions is needed
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Position.positionCopy">
            <summary>
            Copy of positions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.ShouldSerializeX">
            <summary>
            Manages design-time serialization of X
            </summary>
            <returns>True if value should be serialized</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.ResetX">
            <summary>
            Reset X coordinate to default
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.ShouldSerializeY">
            <summary>
            Manages design-time serialization of Y
            </summary>
            <returns>True if value should be serialized</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.ResetY">
            <summary>
            Reset Y coordinate to default
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.#ctor(System.Object)">
            <summary>
            Creates an instance of Position class.
            </summary>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.#ctor">
            <summary>
            Creates an instance of Position class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.#ctor(System.Single,System.Single)">
            <summary>
            Creates an instance of Position class.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.#ctor(Telerik.Charting.Styles.AlignedPositions)">
            <summary>
            Creates an instance of Position class.
            </summary>
            <param name="position">Aligned position of element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.#ctor(Telerik.Charting.Styles.AlignedPositions,System.Single,System.Single)">
            <summary>
            Creates an instance of Position class.
            </summary>
            <param name="position">Aligned position of element</param>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="F:Telerik.Charting.Styles.Position.positionContainerObject">
            <summary>
            Container element
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.ResetGlobal">
            <summary>
            Resets the cached position
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.SetPositionForAutoLayout">
            <summary>
            Aligned Positions correction for AutoLayout
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current System.Object.
            </summary>
            <param name="obj">Object to compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Position.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.IsTop">
            <summary>
            Defines if position is Top (Top, TopLeft, TopRight, None)
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.IsBottom">
            <summary>
            Defines if position is Bottom (Bottom, BottomLeft, BottomRight)
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.IsLeft">
            <summary>
            Defines if position is Left (Left, BottomLeft, TopLeft)
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.IsRight">
            <summary>
            Defines if position is Right (Right, TopRight, BottomRight)
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.IsNone">
            <summary>
            Defines if position is None
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.Copy">
            <summary>
            Gets and sets copy of positions
            </summary>
            <value>Positions to copy</value>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.Auto">
            <summary>
            Automatic positioning
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.X">
            <summary>
            Specifies the X coordinate of the figure position
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.Y">
            <summary>
            Specifies the Y coordinate of the figure position
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets value of property by name
            </summary>
            <param name="name">Property name</param>
            <returns>Object</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.GlobalX">
            <summary>
            Gets and sets X calculated position used for speed optimization
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.GlobalY">
            <summary>
            Gets and sets Y calculated position used for speed optimization
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Position.IsSetGlobal">
            <summary>
            Defines whether position coordinates were already calculated
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.PositionCenter">
            <summary>
            Specific Position object with predefined AlignedPosition.Center
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.PositionCenter.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.PositionCenter.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.PositionTop">
            <summary>
            Specific Position object with predefined AlignedPosition.Top
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.PositionTop.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.PositionTop.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.PositionBottom">
            <summary>
            Specific Position object with predefined AlignedPosition.Bottom
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.PositionBottom.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.PositionBottom.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.PositionTopLeft">
            <summary>
            Specific Position object with predefined AlignedPosition.TopLeft
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.PositionTopLeft.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.PositionTopLeft.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.PositionRight">
            <summary>
            Specific Position object with predefined AlignedPosition.Right
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.PositionRight.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.PositionRight.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.PositionTopRight">
            <summary>
            Specific Position object with predefined AlignedPosition.TopRight
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.PositionTopRight.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.PositionTopRight.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.PositionLeft">
            <summary>
            Specific Position object with predefined AlignedPosition.Left
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.PositionLeft.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.PositionLeft.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.SkinnablePropertyAttribute">
            <summary>
            Represents the custom property attribute used to mark property as skinable and being used with a skin application
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.SkinnablePropertyAttribute.isSkinnable">
            <summary>
            Defines whether attribute is skinable
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.SkinnablePropertyAttribute.#ctor">
            <summary>
            Create new instance of SkinnablePropertyAttribute class.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.SkinnablePropertyAttribute.IsSkinnable">
            <summary>
            Gets whether attribute is skinable
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSerializer.xmlDoc">
            <summary>
            XML document to save and load style data
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSerializer.processAll">
            <summary>
            Should serialize all properties or only that have skinable property attributes 
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.SaveXMLString(System.Object)">
            <summary>
            Save specified object to XML
            </summary>
            <param name="styleContainer">Object which properties should be save to XML</param>
            <returns>Saved XML text</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.Serialize(System.Object)">
            <summary>
            Serialize properties to XML
            </summary>
            <param name="styleContainer">Object which properties should be save to XML</param>
            <returns>Elemnt created in XML</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.Serialize(System.Object,System.String)">
            <summary>
            Serialize properties to XML
            </summary>
            <param name="styleContainer">Object which properties should be save to XML</param>
            <param name="elementName">Name that created element in XML should have</param>
            <returns>Elemnt created in XML</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.SerializeProperty(System.ComponentModel.PropertyDescriptor,System.Xml.XmlElement,System.Object)">
            <summary>
            Serialize specified property to XML
            </summary>
            <param name="propDescriptor">Abstraction of property style</param>
            <param name="propElement">Parent element</param>
            <param name="styleContainer">Object which properties should be save to XML</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.SerializeComplexObject(System.ComponentModel.PropertyDescriptor,System.Xml.XmlElement,System.Object)">
            <summary>
            Serialize complex object
            </summary>
            <param name="propDescriptor">Abstraction of property style</param>
            <param name="propElement">Parent element</param>
            <param name="styleContainer">Object which properties should be save to XML</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.LoadXMLString(System.String,System.Object)">
            <summary>
            Load elements and properties from XML
            </summary>
            <param name="xmlString">String that contains XML representation of the object</param>
            <param name="styleContainer">Object which properties should be load from XML</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.Deserialize(System.Xml.XmlElement,System.Object)">
            <summary>
            Deserialize element from XML
            </summary>
            <param name="rootElement">Root element</param>
            <param name="styleContainer">Object which properties should be load from XML</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.DeserializeProperty(System.ComponentModel.PropertyDescriptor,System.Xml.XmlElement,System.Object)">
            <summary>
            Deserialize property from XML
            </summary>
            <param name="propDescriptor">Abstraction of property on a one of styles class</param>
            <param name="propElement">Property element that should be deserialized</param>
            <param name="styleContainer">Object which properties should be load from XML</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.DeserializeColorBlend(System.Xml.XmlElement,Telerik.Charting.ColorBlend,System.Int32)">
            <summary>
            Deserialize element of ColorBlend type
            </summary>
            <param name="rootElement">Root element</param>
            <param name="colorBlend">ColorBlend object</param>
            <param name="index">High index limit for which deserialization should take place</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.IsDefaultValue(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Checks if property has default value
            </summary>
            <param name="propDescriptor">Abstraction of property on a one of styles class</param>
            <param name="styleContainer">Style container object</param>
            <returns>Whether property has default value or not</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.GetDefaultPropertyValue(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets the default value for specified property 
            </summary>
            <param name="propDescriptor">Abstraction of property on a one of styles class</param>
            <returns>Default value</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSerializer.GetPropertyValue(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Gets the default value for specified property 
            </summary>
            <param name="propDescriptor">Abstraction of property on a one of styles class</param>
            <param name="styleContainer">Style container object</param>
            <returns>Default value</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSerializer.XmlDoc">
            <summary>
            Gets and sets XML document
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSerializer.ProcessAllProperties">
             <summary>
            Should serialize all properties or only that have skinable property attributes 
             </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ShadowStyle">
            <summary>
            Shadow settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowStyle.#ctor">
            <summary>
            Create new instance of ShadowStyle class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowStyle.#ctor(System.Drawing.Color,System.Single,System.Single,Telerik.Charting.Styles.ShadowPosition)">
            <summary>
            Create new instance of ShadowStyle class.
            </summary>
            <param name="shadowColor">Shadow color</param>
            <param name="shadowBlur">Shadow blur</param>
            <param name="shadowDistance">Shadow distance</param>
            <param name="shadowPosition">Shadow position</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowStyle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowStyle.Equals(System.Object)">
            <summary>
            Comparing of two objects
            </summary>
            <param name="obj">Object to compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowStyle.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowStyle.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance with the same fields as this one</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.ShadowStyle.Color">
            <summary>
            Specifies the shadow color property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ShadowStyle.ColorOpacity">
            <summary>
            The main color opacity coefficient
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ShadowStyle.Position">
            <summary>
            Specifies the shadow position property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ShadowStyle.Blur">
            <summary>
            Specifies the shadow blur property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ShadowStyle.Distance">
            <summary>
            Specifies the shadow distance property
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ShadowStyleChart">
            <summary>
            Common shadow settings
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShadowStyleChart.chart">
            <summary>
            Chart shadow related to
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowStyleChart.#ctor(Telerik.Charting.Chart)">
            <summary>
            Create new instance of ShadowStyleChart class.
            </summary>
            <param name="parent">Parent chart element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowStyleChart.SetShadowBlur(System.Single)">
            <summary>
            Sets blur for all chart elements
            </summary>
            <param name="blur">Blur to set</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowStyleChart.SetShadowPosition(Telerik.Charting.Styles.ShadowPosition)">
            <summary>
            Sets position for all chart elements
            </summary>
            <param name="position">Position to set</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowStyleChart.SetShadowDistance(System.Single)">
            <summary>
            Sets distance for all chart elements
            </summary>
            <param name="distance">Distance to set</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowStyleChart.SetShadowColor(System.Drawing.Color)">
            <summary>
            Sets color for all chart elements
            </summary>
            <param name="color">Color to set</param>
        </member>
        <member name="P:Telerik.Charting.Styles.ShadowStyleChart.Blur">
            <summary>
            Specifies the shadow blur property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ShadowStyleChart.Color">
            <summary>
            Specifies the shadow color property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ShadowStyleChart.Distance">
            <summary>
            Specifies the shadow distance property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.ShadowStyleChart.Position">
            <summary>
            Specifies the shadow position property
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ShadowManager">
            <summary>
            Shadow rendering support class
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.DrawLineShadow(Telerik.Charting.ChartGraphics,System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Single,Telerik.Charting.Styles.ShadowPosition)">
            <summary>
            Draw shadow for line
            </summary>
            <param name="graphics">Chart graphics object</param>
            <param name="pen">Pen used for line shadow</param>
            <param name="points">Points that create line's path</param>
            <param name="lineType">Type of line(0-Line, 1-Bezier, 2-Spline)</param>
            <param name="lineWidth">Width of line</param>
            <param name="pa_width">PlotArea's width</param>
            <param name="pa_height">PlotArea's height</param>
            <param name="shadowDistance">Shadow's distance</param>
            <param name="shadowColor">Shadow's color</param>
            <param name="shadowBlur">Shadow's blur</param>
            <param name="shadowPosition">Shadow's position type</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.DrawLineShadow(Telerik.Charting.ChartGraphics,System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Single,Telerik.Charting.Styles.ShadowPosition)">
            <summary>
            Draw shadow for line
            </summary>
            <param name="graphics">Chart graphics object</param>
            <param name="pen">Pen used for line shadow</param>
            <param name="path">Line's path</param>
            <param name="lineWidth">Line's width</param>
            <param name="pa_width">PlotArea's width</param>
            <param name="pa_height">PlotArea's height</param>
            <param name="shadowDistance">Shadow's distance</param>
            <param name="shadowColor">Shadow's color</param>
            <param name="shadowBlur">Shadow's blur</param>
            <param name="shadowPosition">Shadow's position type</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.SetShadowPosition(Telerik.Charting.Styles.ShadowPosition,System.Drawing.PointF,System.Single)">
            <summary>
            Set shadow start point position by shadowPosition parameter and shadowDistance 
            </summary>
            <param name="position">Shadow's position type</param>
            <param name="point">Calculated shadow position</param>
            <param name="shadowDistance">Shadow's distance</param>
            <returns>Corrected shadow position depended on distance and position type</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.DrawPolygonShadow(Telerik.Charting.ChartSeries,System.Drawing.Drawing2D.GraphicsPath,Telerik.Charting.ChartGraphics,System.Int32,System.Int32)">
            <summary>
            Draws shadow for polygon
            </summary>
            <param name="chartSeries">ChartSeries that contains shadow style</param>
            <param name="grPath">Garphics path of polygon</param>
            <param name="graphic">ChartGraphics object</param>
            <param name="width">PlotArea's width</param>
            <param name="height">PlotArea's height</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.DrawPolygonShadow(Telerik.Charting.ChartSeries,System.Drawing.PointF[],Telerik.Charting.ChartGraphics,System.Int32,System.Int32)">
            <summary>
            Draw shadow for polygon
            </summary>
            <param name="chartSeries">ChartSeries that contains shadow style</param>
            <param name="points">Points that form polygon</param>
            <param name="graphic">ChartGraphics object</param>
            <param name="width">PlotArea's width</param>
            <param name="height">PlotArea's height</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.DrawPolygonShadow(System.Drawing.Drawing2D.GraphicsPath,Telerik.Charting.ChartGraphics,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Single,Telerik.Charting.Styles.ShadowPosition)">
            <summary>
            Draw shadow for polygon
            </summary>
            <param name="grPath">Garphics path of polygon</param>
            <param name="graphic">ChartGraphics object</param>
            <param name="width">PlotArea's width</param>
            <param name="height">PlotArea's height</param>
            <param name="shadowDistance">Shadow's distance</param>
            <param name="shadowColor">Shadow's color</param>
            <param name="shadowBlur">Shadow's blur</param>
            <param name="shadowPosition">Shadow's position type</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.DrawPolygonShadow(System.Drawing.PointF[],Telerik.Charting.ChartGraphics,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Single,Telerik.Charting.Styles.ShadowPosition)">
            <summary>
            Draw shadow for polygon
            </summary>
            <param name="points">Points that form polygon</param>
            <param name="graphic">ChartGraphics object</param>
            <param name="width">PlotArea's width</param>
            <param name="height">PlotArea's height</param>
            <param name="shadowDistance">Shadow's distance</param>
            <param name="shadowColor">Shadow's color</param>
            <param name="shadowBlur">Shadow's blur</param>
            <param name="shadowPosition">Shadow's position type</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.DrawShadow(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Brush,System.Drawing.Pen,System.Single,System.Single,System.Drawing.Size,Telerik.Charting.Styles.DrawType)">
            <summary>
            Method creates shadow for path, based on shadow parameters and Gaussian blur logic for render shadow
            </summary>
            <param name="Path">Path, that describe a figure</param>
            <param name="Brush">Brush, that used for drawing a shadow (define shadow color and transparency)</param>
            <param name="Pen">Pen, that used for drawing a shadow</param>
            <param name="Distance">Distance from object to it shadow</param>
            <param name="BlurCoef">Blur coefficient</param>
            <param name="ShadowImageSize">Size for image, that contain shadow</param>
            <param name="DrawType">Draw figure type</param>
            <returns>Image that contains shadow with blur</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.GetArrayFromImageManaged(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Creates pixels array from image using managed code
            </summary>
            <param name="source">Source bitmap to get pixels</param>
            <param name="wi">Weight of bitmap</param>
            <param name="hi">Height of bitmap</param>
            <returns>Pixels colors</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.Styles.ShadowManager.GetArrayFromImageUnManaged(System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.Styles.ShadowManager.GetArrayFromImage(System.Drawing.Bitmap,System.Drawing.Imaging.BitmapData,System.Int32,System.Int32,System.Boolean)" -->
        <member name="M:Telerik.Charting.Styles.ShadowManager.UpdateImageFromArray(System.Drawing.Bitmap,Telerik.Charting.Styles.BColor[][],System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Charting.Styles.BColor[],System.Int32,System.Int32,System.Drawing.Imaging.BitmapData,System.Boolean)">
            <summary>
            Updates image from pixels array
            </summary>
            <param name="source">Source bitmap to get pixels</param>
            <param name="src">Pixels colors</param>
            <param name="top">Blur top point</param>
            <param name="height">Blur height</param>
            <param name="left">Blur left point</param>
            <param name="width">Blur width</param>
            <param name="dst">Pixels colors as one-dimensioned array</param>
            <param name="srcWidth">Weight of bitmap</param>
            <param name="srcHeight">Height of bitmap</param>
            <param name="bmpData">Data about bitmap locked in memory</param>
            <param name="isGranted">Can unmanaged code be used</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.UpdateImageFromArrayManaged(System.Drawing.Bitmap,Telerik.Charting.Styles.BColor[][],System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Charting.Styles.BColor[],System.Int32,System.Int32)">
            <summary>
            Updates image from pixels array using managed code
            </summary>
            <param name="source">Source bitmap to get pixels</param>
            <param name="src">Pixels colors</param>
            <param name="top">Blur top point</param>
            <param name="height">Blur height</param>
            <param name="left">Blur left point</param>
            <param name="width">Blur width</param>
            <param name="dst">Pixels colors as one-dimensioned array</param>
            <param name="srcWidth">Weight of bitmap</param>
            <param name="srcHeight">Height of bitmap</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.UpdateImageFromArrayUnManaged(System.Drawing.Bitmap,Telerik.Charting.Styles.BColor[][],System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Charting.Styles.BColor[],System.Int32,System.Int32,System.Drawing.Imaging.BitmapData)">
            <summary>
            Updates image from pixels array using unmanaged code
            </summary>
            <param name="source">Source bitmap to get pixels</param>
            <param name="src">Pixels colors</param>
            <param name="top">Blur top point</param>
            <param name="height">Blur height</param>
            <param name="left">Blur left point</param>
            <param name="width">Blur width</param>
            <param name="dst">Pixels colors as one-dimensioned array</param>
            <param name="srcWidth">Weight of bitmap</param>
            <param name="srcHeight">Height of bitmap</param>
            <param name="bmpData">Data about bitmap locked in memory</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.Blur(System.Drawing.Bitmap,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Gaussian blur algorithm for bitmap image
            </summary>
            <param name="source">Image, that can be degraded</param>
            <param name="blurCoefficient">Blur coefficient</param>
            <returns>Degraded bitmap</returns>
            <param name="rect">Blur rectangle</param>
            <returns>Blur image</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.GBlurRow(System.Int32)">
            <summary>
            Support function for blur, generate one dimensional array with coefficients
            </summary>
            <param name="count">Blur coefficient</param>
            <returns>Array with blur coefficients</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ShadowManager.SetMatrix(System.Drawing.Bitmap,Telerik.Charting.Styles.BColor[][],System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Charting.Styles.BColor[],System.Int32,System.Int32)">
            <summary>
            Sets pixels colors to image
            </summary>
            <param name="source">Image to set pixels colors</param>
            <param name="src">Pixels colors as two-dimensioned array</param>
            <param name="top">Blur top point</param>
            <param name="height">Blur height</param>
            <param name="left">Blur left point</param>
            <param name="width">Blur width</param>
            <param name="dst">Pixels colors as one-dimensioned array</param>
            <param name="srcWidth">Image width</param>
            <param name="srcHeight">Image height</param>
        </member>
        <member name="T:Telerik.Charting.Styles.DrawType">
            <summary>
            Types for drawing figures
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.DrawType.Line">
            <summary>
            Only lines
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.DrawType.Fill">
            <summary>
            Only fills
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.DrawType.LineAndFill">
            <summary>
            Lines and fills
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.BColor">
            <summary>
            Describe a 4-byte color and functionality that works with color and byte arrays
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.BColor.R">
            <summary>
            Red channel
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.BColor.G">
            <summary>
            Green channel
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.BColor.B">
            <summary>
            Blue channel
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.BColor.A">
            <summary>
            Alpha (transparency) channel
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.BColor.CreateInstance(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Create new instance of BColor class 
            </summary>
            <param name="r">Red component</param>
            <param name="g">Green component</param>
            <param name="b">Blue component</param>
            <param name="a">Transparency channel</param>
            <returns>New instance of BColor class </returns>
        </member>
        <member name="M:Telerik.Charting.Styles.BColor.CreateInstance">
            <summary>
            Create new instance of BColor class 
            </summary>
            <returns>New instance of BColor class </returns>
        </member>
        <member name="M:Telerik.Charting.Styles.BColor.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Create new instance of BColor class 
            </summary>
            <param name="r">Red channel value</param>
            <param name="g">Green channel value</param>
            <param name="b">Blue channel value</param>
            <param name="a">Alpha (transparency) channel value</param>
        </member>
        <member name="M:Telerik.Charting.Styles.BColor.ToString">
            <summary>
            Convert BColor object to string representation
            </summary>
            <returns>String</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.BColor.GetMatrix(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Get pixels colors from image
            </summary>
            <param name="source">Iamge to get pixels</param>
            <param name="width">Width of image</param>
            <param name="height">Height of image</param>
            <returns>Pixels colors from image</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.BColor.GetMatrix(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Transform one dimensional byte array to two dimensional BColor array, that describe the image 
            </summary>
            <param name="bytes">Array of 4 channel image bytes</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <returns>Two dimensional BColor array, that describe the image</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.BColor.GetRectAsLine(Telerik.Charting.Styles.BColor[][],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Convert two-dimensioned array of pixels colors to one-dimensioned array
            </summary>
            <param name="src">Two-dimensioned array of pixels colors</param>
            <param name="top">Top</param>
            <param name="height">Height</param>
            <param name="left">Left</param>
            <param name="width">Width</param>
            <returns>One-dimensioned array of pixels colors</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.BColor.GetAsLine(Telerik.Charting.Styles.BColor[][],System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Charting.Styles.BColor[],System.Int32,System.Int32)">
            <summary>
            Pixels colors represented as one-dimensioned array each four elements of it contain information about pixel color(r,g,b,a)
            </summary>
            <param name="src">Two-dimensioned array of pixels colors</param>
            <param name="top">Top</param>
            <param name="height">Height</param>
            <param name="left">Left</param>
            <param name="width">Width</param>
            <param name="dst">Pixels colors as one-dimensioned array</param>
            <param name="srcWidth">Image height</param>
            <param name="srcHeight">Image width</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Charting.Styles.ShadowPosition">
            <summary>
            Possible shadow positions listing
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShadowPosition.Right">
            <summary>
            Assign the right position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShadowPosition.Left">
            <summary>
            Assign the left position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShadowPosition.Top">
            <summary>
            Assign the top position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShadowPosition.Bottom">
            <summary>
            Assign the bottom position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShadowPosition.TopRight">
            <summary>
            Assign the  top right position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShadowPosition.TopLeft">
            <summary>
            Assign the top  left position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShadowPosition.BottomRight">
            <summary>
            Assign the bottom right position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShadowPosition.BottomLeft">
            <summary>
            Assign the bottom left position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ShadowPosition.Behind">
            <summary>
            Assign the behind position for shadow
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartSkin">
            <summary>
            Chart skin
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartSkin.skinName">
            <summary>
            Skin name
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartSkin.skinXmlSource">
            <summary>
            XML document that contains skin properties.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartSkin.#ctor">
            <summary>
            Create new instance of ChartSkin class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartSkin.#ctor(System.String)">
            <summary>
            Create new instance of ChartSkin class with specified name.
            </summary>
            <param name="name">Name of skin.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartSkin.#ctor(System.Xml.XmlDocument)">
            <summary>
            Create new instance of ChartSkin class.
            </summary>
            <param name="source">XML document that contains skin properties.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartSkin.IsEmpty(System.String)">
            <summary>
            Checks if skin is not specified for chart.
            </summary>
            <param name="name">Skin name</param>
            <returns>Whether skin is not specified for chart or not</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartSkin.ApplyTo(Telerik.Charting.Chart)">
            <summary>
            Applies skin to given chart
            </summary>
            <param name="chart">Chart to apply skin</param>
        </member>
        <member name="M:Telerik.Charting.Styles.ChartSkin.CreateFromChart(Telerik.Charting.Chart,System.String)">
            <summary>
            Grabs skin from given chart
            </summary>
            <param name="chart">Chart to get skin</param>
            <param name="name">Skin name</param>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartSkin.Name">
            <summary>
            Gets and sets skin name.
            </summary>
            <value>Name of skin</value>
        </member>
        <member name="P:Telerik.Charting.Styles.ChartSkin.XmlSource">
            <summary>
            Gets and sets XML document that contains skin properties.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.Skins.ChartSkinsCollection">
            <summary>
            Chart skins collection
            </summary>
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Skins.ChartSkinsCollection.names">
            <summary>
            Skins listing. New skin name should be added here
            </summary>      
        </member>
        <member name="F:Telerik.Charting.Styles.Skins.ChartSkinsCollection.resourceManager">
            <summary>
            Resource that holds skins.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Skins.ChartSkinsCollection.#ctor">
            <summary>
            Create new instance of ChartSkinsCollection.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Skins.ChartSkinsCollection.Add(Telerik.Charting.Styles.ChartSkin)">
            <summary>
            Add skin to collection.
            </summary>
            <param name="value">Skin to add</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Skins.ChartSkinsCollection.Get(System.String)">
            <summary>
            Get skin with specified name.
            </summary>
            <param name="name">Skin name</param>
            <returns>Skin with specified name</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Skins.ChartSkinsCollection.GetNames">
            <summary>
            Gets names of skins in collection.
            </summary>
            <returns>Names of skins in collection.</returns>
        </member>
        <member name="F:Telerik.Charting.Styles.Skins.ChartSkinsCollection.resourceMan">
            <summary>
            Resource manager.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Skins.ChartSkinsCollection.resourceCulture">
            <summary>
            Provides information about resource.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.ChartSkinsCollection.Item(System.Int32)">
            <summary>
            Gets skin from ChartSkinsCollection by index.
            </summary>
            <param name="index">Index to get skin.</param>
            <returns>Skin at specified index.</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.ChartSkinsCollection.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.ChartSkinsCollection.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.Skins.Images">
            <summary>
            Embedded background images for skins.
            </summary>
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Skins.Images.GetImageFromResource(System.String,System.String)">
            <summary>
            Get image with specified name of specified skin.
            </summary>
            <param name="name">Name of image.</param>
            <param name="skinName">Skin name.</param>
            <returns>Image from resource</returns>
        </member>
        <member name="F:Telerik.Charting.Styles.Skins.Images.resourceMan">
            <summary>
            Resource manager.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Skins.Images.resourceCulture">
            <summary>
            Provides information about resource.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.Images.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.Images.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.Images.chartInox">
            <summary>
            Chart background image of Inox skin.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.Images.chartMac">
            <summary>
            Chart background image of Mac skin.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.Images.chartMarble">
            <summary>
            Chart background image of Marble skin.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.Images.chartMetal">
            <summary>
            Chart background image of Metal skin.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.Images.chartWood">
            <summary>
            Chart background image of Wood skin.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.Images.plotareaInox">
            <summary>
            PlotArea background image of Inox skin.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.Images.plotareaMarble">
            <summary>
            PlotArea background image of Marble skin.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Skins.Images.plotareaMetal">
            <summary>
            PlotArea background image of Metal skin.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleProperties">
            <summary>
            Possible style properties
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleAxis">
            <summary>
            Axis appearance
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleAxis.styleAxisOrientation">
            <summary>
            Specifies the orientation property
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleAxis.styleAxisLabelAppearance">
            <summary>
            Default style for axis label
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleAxis.styleAxisTextAppearance">
            <summary>
            Default axis items text properties style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleAxis.styleAxisMinorTick">
            <summary>
            Axis minor ticks style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleAxis.styleAxisMajorTick">
             <summary>
            Axis major ticks style
             </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleAxis.styleAxisMajorGridLines">
            <summary>
            Major Grid Lines options
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleAxis.styleAxisMinorGridLines">
            <summary>
            Minor Grid Lines options
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.#ctor(Telerik.Charting.ChartAxis)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="axis">Axis related to</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.#ctor">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.#ctor(Telerik.Charting.Styles.Orientation)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="orientation">Axis orientation</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.#ctor(Telerik.Charting.Styles.Orientation,Telerik.Charting.ChartAxis)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="orientation">Axis orientation</param>
            <param name="axis">Axis related to</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.#ctor(Telerik.Charting.Styles.Orientation,Telerik.Charting.Styles.ChartAxisVisibility)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="orientation">Axis orientation</param>
            <param name="visibility">Visibility of axis</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.#ctor(Telerik.Charting.Styles.Orientation,Telerik.Charting.Styles.ChartAxisVisibility,Telerik.Charting.ChartAxis)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="orientation">Axis orientation</param>
            <param name="visibility">Visibility of axis</param>
            <param name="axis">Axis orientation</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.#ctor(Telerik.Charting.Styles.Orientation,Telerik.Charting.Styles.ChartAxisVisibility,Telerik.Charting.Styles.LineStyle)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="orientation">Axis orientation</param>
            <param name="visibility">Visisbility of axis</param>
            <param name="lineStyle">Line style of axis</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.Finalize">
            <summary>
            Dispose this object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.Dispose">
            <summary>
            Dispose this object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.Dispose(System.Boolean)">
            <summary>
            Dispose this object
            </summary>
            <param name="disposing">Should all elements be disposed</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState 
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxis.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.MajorGridLines">
            <summary>
            Major Grid Lines options
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.MinorGridLines">
            <summary>
            Minor Grid Lines options
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.Orientation">
            <summary>
            Specifies the orientation property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.Color">
            <summary>
            Color of Axis
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.Visible">
            <summary>
            Specifies the axis visibility option
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.ValueFormat">
            <summary>
            Specifies a predefined numerical format string.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.LabelAppearance">
            <summary>
            Default style for all axis items
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.MinorTick">
            <summary>
            ChartAxis minor ticks style
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.MajorTick">
            <summary>
            ChartAxis major ticks style
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.CustomFormat">
            <summary>
            Specifies a custom numerical format string.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.Width">
            <summary>
            Specifies the width of the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.TextAppearance">
            <summary>
            Common axis items labels text blocks settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxis.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleAxisY">
            <summary>
            Y axis specific style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxisY.#ctor(Telerik.Charting.ChartYAxis)">
            <summary>
            Creates new instance of StyleAxisY class
            </summary>
            <param name="axis">Axis related to</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxisY.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxisY.Orientation">
            <summary>
            Specifies the orientation property
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleAxisX">
            <summary>
            X axis specific style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxisX.#ctor(Telerik.Charting.ChartXAxis)">
            <summary>
            Creates new instance of StyleAxisX class
            </summary>
            <param name="axis">Axis related to</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxisX.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxisX.MinorTick">
            <summary>
            Specifies minor ticks options
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxisX.MinorGridLines">
            <summary>
            Specifies major ticks options
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleAxisX.Orientation">
            <summary>
            Specifies the orientation property
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.TextQuality">
            <summary>
            Specifies the quality at which text is rendered.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TextQuality.SystemDefault">
            <summary>
            Specifies that each character is drawn using its glyph bitmap, with the system default rendering hint. The text will be drawn using whatever font smoothing settings the user has selected for the system.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TextQuality.SingleBitPerPixel">
            <summary>
            Specifies that each character is drawn using its glyph bitmap. Hinting is not used.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TextQuality.SingleBitPerPixelGridFit">
            <summary>
            Specifies that each character is drawn using its glyph bitmap. Hinting is used to improve character appearance on stems and curvature.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TextQuality.AntiAlias">
            <summary>
            Specifies that each character is drawn using its anti aliased glyph bitmap without hinting. Better quality due to anti aliasing. Stem width differences may be noticeable because hinting is turned off.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TextQuality.AntiAliasGridFit">
            <summary>
            Specifies that each character is drawn using its anti aliased glyph bitmap with hinting. Much better quality due to anti aliasing, but at a higher performance cost.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TextQuality.ClearTypeGridFit">
            <summary>
            Specifies that each character is drawn using its glyph CT bitmap with hinting. The highest quality setting. Used to take advantage of ClearType font features.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ImageQuality">
            <summary>
            Specifies the quality at which image is rendered.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageQuality.Default">
            <summary>
            Specifies the default mode.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageQuality.AntiAlias">
            <summary>
            Specifies anti aliased rendering.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageQuality.HighQuality">
            <summary>
            Specifies high quality, low speed rendering.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ImageQuality.None">
            <summary>
            Specifies no anti aliasing.
            </summary>        
        </member>
        <member name="T:Telerik.Charting.Styles.StyleChart">
            <summary>
            Main chart appearance settings
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleChart.styleChartCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleChart.styleChartFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChart.#ctor(Telerik.Charting.Chart)">
            <summary>
            Creates new instance of StyleChart class.
            </summary>
            <param name="chart">Chart related to.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChart.#ctor(Telerik.Charting.Styles.DimensionsChart,Telerik.Charting.Styles.FillStyleChart,Telerik.Charting.Styles.Corners,Telerik.Charting.Styles.StyleBorder,Telerik.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates new instance of StyleChart class.
            </summary>
            <param name="dimensions">Chart dimensions</param>
            <param name="fillStyle">FillStyle of chart</param>
            <param name="corners">Corners of chart</param>
            <param name="border">Chart border style</param>
            <param name="shadowStyle">Chart shadow style</param>
            <param name="visible">Visibility of chart</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChart.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChart.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChart.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChart.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewSatate with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChart.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChart.BarWidthPercent">
            <summary>
            Determines the width of bars.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChart.BarOverlapPercent">
            <summary>
            Determines how much of the bar's area is overlapped in multiple bar charts.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChart.TextQuality">
            <summary>
            Specifies the quality at which text in chart is rendered.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChart.ImageQuality">
            <summary>
            Specifies the quality at which chart image is rendered.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChart.Corners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChart.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChart.Figure">
            <summary>
            Specifies the figure property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChart.Visible">
            <summary>
            Gets visibility of chart
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChart.Position">
            <summary>
            Gets positions
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChart.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleChartDataTable">
            <summary>
            DataTable appearance settings
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleChartDataTable.styleChartDataTableFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleChartDataTable.styleChartDataTableTextProperties">
            <summary>
            Specifies the text properties
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleChartDataTable.styleChartDataTableCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleChartDataTable.styleChartDataTableParent">
            <summary>
            Style parent object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.#ctor">
            <summary>
            Creates a new instance of StyleChartDataTable class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.#ctor(Telerik.Charting.ChartDataTable)">
            <summary>
            Creates a new instance of StyleChartDataTable class.
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.#ctor(Telerik.Charting.Styles.Dimensions,Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position,Telerik.Charting.Styles.TextProperties,Telerik.Charting.Styles.StyleBorder,Telerik.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates a new instance of StyleChartDataTable class.
            </summary>
            <param name="dimensions">DataTable's dimensions</param>
            <param name="fillStyle">DataTable's fillStyle</param>
            <param name="position">DataTable's position</param>
            <param name="textProperties">DataTable's textProperties</param>
            <param name="border">DataTable's border</param>
            <param name="shadowStyle">DataTable's shadowStyle</param>
            <param name="visible">DataTable's visiblity</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.SaveDimensions">
            <summary>
            Save DataTable's dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.SetAutoLayoutDefaults">
            <summary>
            Save DataTable's dimensions and positions for auto layout
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.RestoreDimensions">
            <summary>
            Restore dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.RestoreInitialValues">
            <summary>
            Restore margins
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleChartDataTable.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.Visible">
            <summary>
            Specifies DataTable visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.CellWidth">
            <summary>
            Specifies data table cell width
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.CellHeight">
            <summary>
            Specifies data table cell height
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.RenderType">
            <summary>
            Specifies data table rendering type
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.DrawHorizontalLines">
            <summary>
            Should horizontal lines be rendered
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.DrawVerticalLines">
            <summary>
            Should vertical lines be rendered
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.DrawLines">
            <summary>
            Hide/show all lines
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.TextVerticalAlign">
            <summary>
            Specifies text vertical alignment
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.TextHorizontalAlign">
            <summary>
            Specifies text horizontal alignment
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.Figure">
            <summary>
            Specifies the figure property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.AutoTextWrap">
            <summary>
            Specifies text wrap property for texts in Data Table
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleChartDataTable.TextProperties">
            <summary>
            Specifies the text properties
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ChartGridLineLayoutMode">
            <summary>
            Specifies RadChart's styles for the grid lines layout.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartGridLineLayoutMode.Normal">
            <summary>
            Sets normal grid lines.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.ChartGridLineLayoutMode.Expanded">
            <summary>
            Sets expanded grid lines.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleGridLine">
            <summary>
            Grid line specific style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleGridLine.ShouldRender(System.Boolean)">
            <summary>
            Checks whether grid line be rendered or not
            </summary>
            <param name="axisVisible"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleGridLine.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleGridLine.HideWithAxis">
            <summary>
            Should grid lines be hidden with axis or not
            </summary>
            <remarks>Default value is true</remarks>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleGridLine.Width">
            <summary>
            Gets or sets the width of the grid line.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleGridLine.PenStyle">
            <summary>
            Specifies the pen style used for grid lines' drawing.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleGridLine.Color">
            <summary>
            Specifies the color of the grid lines.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleGridLineHidden.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleGridLineHidden.Visible">
            <summary>
            Gets and sets grid lines' visibility
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleGridLineMajor.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleGridLineMajorXAxis.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleGridLineMajorXAxis.PenStyle">
            <summary>
            Specifies the pen style used for grid lines' drawing.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleLabel">
            <summary>
            Base label appearance style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleLabel.styleLabelCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleLabel.styleLabelFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleLabel.styleLabelIsSet">
            <summary>
            Specifies that style has container object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.#ctor(System.Object)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="containerObject">Style container element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.#ctor">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.#ctor(Telerik.Charting.Styles.FillStyle)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.#ctor(Telerik.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="position">Label's position</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.#ctor(Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Label's position</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.#ctor(Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position,Telerik.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Label's position</param>
            <param name="dimensions">Label's dimensions</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.#ctor(Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Corners,Telerik.Charting.Styles.Position,Telerik.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="corners">Corners of label</param>
            <param name="position">Label's position</param>
            <param name="dimensions">Label's dimensions</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.#ctor(Telerik.Charting.Styles.LabelItemsCompositionTypes,Telerik.Charting.Styles.Dimensions,System.String,Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position,System.Single,Telerik.Charting.Styles.Corners,Telerik.Charting.Styles.StyleBorder,Telerik.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="compositionType">CompositionType to specify textblock and marker positions</param>
            <param name="dimensions">Label's dimensions</param>
            <param name="figure">Label's figure</param>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Label's position</param>
            <param name="rotationAngle">Rotation angle</param>
            <param name="corners">Corners of label</param>
            <param name="border">Label's border</param>
            <param name="shadowStyle">Shadow style of label</param>
            <param name="visible">Label's visibility</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.SaveDimensions">
            <summary>
            Copy dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.RestoreDimensions">
            <summary>
            Restore saved dimensions value
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.RestoreInitialValues">
            <summary>
            Restore margins initial value
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.SetAutoLayoutDefaults">
            <summary>
            Save dimensions and positions for autolayout
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabel.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabel.Corners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabel.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabel.Figure">
            <summary>
            Specifies the figure property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabel.RotationAngle">
            <summary>
            Specifies the rotation angle property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabel.CompositionType">
            <summary>
            Specifies the label's items composition type
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabel.Visible">
            <summary>
            Specifies tha label's visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabel.IsSet">
            <summary>
            Specifies that style has container object
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabel.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Property value</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelHidden.#ctor(System.Object)">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelHidden.#ctor">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelHidden.#ctor(Telerik.Charting.Styles.FillStyle)">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelHidden.#ctor(Telerik.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
            <param name="position">Label's position</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelHidden.#ctor(Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Label's position</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelHidden.#ctor(Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position,Telerik.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Label's position</param>
            <param name="dimensions">Label's dimensions</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelHidden.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabelHidden.Visible">
            <summary>
            Specifies tha label's visibility
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleExtendedLabel.styleExtendedLabelItemAppearance">
            <summary>
            Specifies label item's style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleExtendedLabel.styleExtendedLabelItemMarkerAppearance">
            <summary>
            Specifies label item's marker's style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleExtendedLabel.styleExtendedLabelItemTextAppearance">
            <summary>
            Specifies label item's textblock's style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Charting.ChartSeries)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="series">Container element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.#ctor">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Charting.Styles.FillStyle)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="fillStyle">FillStyle of label</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="position">Position of label</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Position of label</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position,Telerik.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Position of label</param>
            <param name="dimensions">Label's dimensions</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Charting.Styles.LabelItemsCompositionTypes,Telerik.Charting.Styles.Dimensions,System.String,Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Overflow,Telerik.Charting.Styles.Position,System.Single,Telerik.Charting.Styles.Corners,Telerik.Charting.Styles.StyleBorder,Telerik.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="compositionType">Composition type of label items</param>
            <param name="dimensions">Label's dimensions</param>
            <param name="figure">Label's figure</param>
            <param name="fillStyle">Label's fillstyle settings</param>
            <param name="overflow">Layout of label items</param>
            <param name="position">Label's position</param>
            <param name="rotationAngle">Label's rotation angle</param>
            <param name="corners">Label's corners</param>
            <param name="border">Label's border</param>
            <param name="shadowStyle">Label's shadow style</param>
            <param name="visible">Label's visibility</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.Finalize">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.Reset">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.Dispose(System.Boolean)">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Dispose all elements</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleExtendedLabel.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleExtendedLabel.Location">
            <summary>
            Specifies label location (InsidePlotArea, OutsidePlotArea)
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleExtendedLabel.ItemAppearance">
            <summary>
            Specifies item label's style
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleExtendedLabel.ItemTextAppearance">
            <summary>
            Specifies item label's text's style
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleExtendedLabel.ItemMarkerAppearance">
            <summary>
            Specifies item label's marker's style
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleExtendedLabel.Overflow">
            <summary>
            Specifies the behavior when overflow occurred
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleExtendedLabel.GroupNameFormat">
            <summary>
            Specifies the series names format shown in Legend when data grouping being used and names are digits.
            </summary>
            <remarks>Supported format strings as "#VALUE" / "#NAME"</remarks>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleSeriesItemLabel">
            <summary>
            Series item appearance style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeriesItemLabel.styleSeriesItemLabelLabelConnectorStyle">
            <summary>
            Style of connector line
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeriesItemLabel.styleSeriesItemLabelIsSet">
            <summary>
            Specifies that style has container object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemLabel.#ctor">
            <summary>
            Creates new instance of StyleSeriesItemLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemLabel.#ctor(Telerik.Charting.ChartSeries)">
            <summary>
            Creates new instance of StyleSeriesItemLabel class.
            </summary>
            <param name="series">Style container element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemLabel.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemLabel.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemLabel.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemLabel.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemLabel.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItemLabel.Distance">
            <summary>
            Label distance from series when LabelLocation equals Auto
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItemLabel.Visible">
            <summary>
            Specifies labels' visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItemLabel.LabelConnectorStyle">
            <summary>
            Gets label's connector's style
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItemLabel.LabelLocation">
            <summary>
            Specifies label's layout
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItemLabel.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeriesItemLabel.ItemLabelLocation.Inside">
            <summary>
            Inside item
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeriesItemLabel.ItemLabelLocation.Outside">
            <summary>
            Outside item
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeriesItemLabel.ItemLabelLocation.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.LabelLocation.InsidePlotArea">
            <summary>
            Inside PlotArea location
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.LabelLocation.OutsidePlotArea">
            <summary>
            Outside PlotArea location
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleLabelLegend">
            <summary>
            Legend appearance style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelLegend.#ctor">
            <summary>
            Creates new instance of StyleLabelLegend class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelLegend.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelLegend.SetAutoLayoutDefaults">
            <summary>
            Save dimensions and positions for AutoLayout
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabelLegend.Figure">
            <summary>
            Gets label's figure
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabelLegend.Overflow">
            <summary>
            Specifies label's overflow
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleAxisLabel">
            <summary>
            Axis label style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxisLabel.#ctor">
            <summary>
            Creates new instance of StyleAxisLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxisLabel.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleYAxisLabel">
            <summary>
            Axis label style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleYAxisLabel.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleYAxisLabel.RotationAngle">
            <summary>
            Specifies label's rotation angle
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleLabelTitle">
            <summary>
            Chart title style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelTitle.#ctor">
            <summary>
            Creates new instance of StyleLabelTitle class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelTitle.#ctor(Telerik.Charting.Chart)">
            <summary>
            Creates new instance of StyleLabelTitle class.
            </summary>
            <param name="chart">Style container object</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelTitle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelTitle.SetAutoLayoutDefaults">
            <summary>
            Save dimensions and positions for AutoLayout
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleLabelEmptySeriesMessage">
            <summary>
            Empty series message style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelEmptySeriesMessage.#ctor">
            <summary>
            Creates new instance of StyleLabelEmptySeriesMessage class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleLabelEmptySeriesMessage.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleLabelEmptySeriesMessage.Visible">
            <summary>
            Specifies label' visibility
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleMarkedZone">
            <summary>
            Marked zone. Used to mark the values ranges at the plot area.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleMarkedZone.styleMarkedZoneFillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkedZone.#ctor">
            <summary>
            Creates a new instance of StyleMarkedZoneclass.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkedZone.#ctor(Telerik.Charting.Styles.FillStyleMarkedZones,Telerik.Charting.Styles.StyleBorder,Telerik.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates a new instance of StyleMarkedZoneclass.
            </summary>
            <param name="fillStyle">FillStyle of Marked Zone</param>
            <param name="border">Marked Zone's border</param>
            <param name="shadowStyle">Marked Zone's shadow style</param>
            <param name="visible">Visibility of Marked Zone</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkedZone.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkedZone.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkedZone.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkedZone.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarkedZone.FillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarkedZone.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Get property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleMarker">
            <summary>
            Base marker's style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleMarker.styleMarkerCorners">
            <summary>
            Specifies the corners of background rectangle 
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleMarker.styleMarkerFillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.#ctor(System.Object)">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
            <param name="containerObject">Style container object</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.#ctor">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.#ctor(System.String)">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
            <param name="figureType">Marker's figure name</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.#ctor(System.String,System.Int32)">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
            <param name="figureType">Marker's figure name</param>
            <param name="pointSize">Width and height of marker</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.#ctor(System.String,Telerik.Charting.Styles.Dimensions,Telerik.Charting.Styles.FillStyle)">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
            <param name="figureType">Marker's figure name</param>
            <param name="dimensions">Dimensions of marker</param>
            <param name="fillStyle">Marker's fillstyle settings</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.#ctor(Telerik.Charting.Styles.Dimensions,System.String,Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position,System.Single,Telerik.Charting.Styles.Corners,Telerik.Charting.Styles.StyleBorder,Telerik.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
            <param name="dimensions">Dimensions of marker</param>
            <param name="figure">Marker's figure name</param>
            <param name="fillStyle">Marker's fillstyle settings</param>
            <param name="position">Marker's positions</param>
            <param name="rotationAngle">Marker's rotation angle</param>
            <param name="corners">Corners of marker</param>
            <param name="border">Border of marker</param>
            <param name="shadowStyle">Marker's shadow style</param>
            <param name="visible">Marker's visibility</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.Equals(System.Object)">
            <summary>
            Comparing of two objects
            </summary>
            <param name="obj">Object to compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarker.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarker.Visible">
            <summary>
            Specifies marker's visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarker.Corners">
            <summary>
            Specifies the corners of background rectangle 
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarker.FillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarker.RotationAngle">
            <summary>
            Specifies the Rotation angle
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarker.Figure">
            <summary>
            Specifies the Figure property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarker.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleMarkerSeriesPoint">
            <summary>
            Specific series point markers style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkerSeriesPoint.#ctor(Telerik.Charting.ChartSeries,System.String)">
            <summary>
            Creates a new instance of StyleMarkerSeriesPoint class.
            </summary>
            <param name="series">Series that is style container object</param>
            <param name="subPropertyName"></param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkerSeriesPoint.#ctor">
            <summary>
            Creates a new instance of StyleMarkerSeriesPoint class.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarkerSeriesPoint.Position">
            <summary>
             Specifies marker's positions
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarkerSeriesPoint.Visible">
            <summary>
            Specifies marker's visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarkerSeriesPoint.Figure">
            <summary>
            Specifies Figure 
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleMarkerLegend">
            <summary>
            Specific series point markers style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkerLegend.#ctor">
            <summary>
            Creates a new instance of StyleMarkerLegend class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkerLegend.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarkerLegend.Figure">
            <summary>
            Specifies marker's figure
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarkerLegend.Visible">
            <summary>
            Specifies marker's visibility
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleMarkerEmptyValue">
            <summary>
            Specific empty point marker style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkerEmptyValue.#ctor">
            <summary>
            Creates a new instance of StyleMarkerEmptyValue class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkerEmptyValue.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarkerEmptyValue.Visible">
            <summary>
            Specifies marker's visibility
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarkerEmptyValue.Figure">
            <summary>
            Specifies marker's figure
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleMarkerPositionNone">
            <summary>
            Specific empty point marker style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkerPositionNone.#ctor">
            <summary>
            Creates a new instance of StyleMarkerPositionNone class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleMarkerPositionNone.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleMarkerPositionNone.Visible">
            <summary>
            Specifies marker's visibility
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StylePlotArea">
            <summary>
            Plot area's appearance
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StylePlotArea.stylePlotAreaParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StylePlotArea.stylePlotAreaCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StylePlotArea.stylePlotAreaFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StylePlotArea.autoLayoutMargins">
            <summary>
            Margins for auto layout
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.#ctor">
            <summary>
            Creates a new instance of StylePlotArea class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.#ctor(Telerik.Charting.Styles.Dimensions,Telerik.Charting.Styles.FillStylePlotArea,Telerik.Charting.Styles.Position,System.String,Telerik.Charting.Styles.Corners,Telerik.Charting.Styles.StyleBorder,Telerik.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates a new instance of StylePlotArea class.
            </summary>
            <param name="dimensions">Dimensions of PlotArea</param>
            <param name="fillStyle">FillStyle settings</param>
            <param name="position">PlotArea's position</param>
            <param name="palette">Palette used in PlotArea</param>
            <param name="corners">PlotArea's corners</param>
            <param name="border">Border of PlotArea</param>
            <param name="shadowStyle">PlotArea's shadow style</param>
            <param name="visible">PlotArea's visibility</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.SetAutoLayoutDefaults">
            <summary>
            Save dimensions for auto layout
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.SaveDimensions">
            <summary>
            Save dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.RestoreDimensions">
            <summary>
            Restore previous saved dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.RestoreDimensions(System.Boolean)">
            <summary>
            Restore previous saved dimensions
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.RestoreAutoLayoutMargins">
            <summary>
            Restore previous saved margins
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.Clone">
            <summary>
            Cloned this object
            </summary>
            <returns>New instance of StylePlotArea class with the same fields as this one</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StylePlotArea.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StylePlotArea.PlotArea">
            <summary>
            Specifies parent element
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StylePlotArea.Corners">
            <summary>
            Specifies the corners for background rectangle
            </summary>    
        </member>
        <member name="P:Telerik.Charting.Styles.StylePlotArea.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StylePlotArea.Figure">
            <summary>
            Specifies the figure property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StylePlotArea.SeriesPalette">
            <summary>
            Specifies the series palette
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StylePlotArea.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleSeries">
            <summary>
            Series appearance
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeries.DEFAULT_BUBBLE_SIZE">
            <summary>
            Default size of bubbles
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeries.DEFAULT_DISPLAY_MODE">
            <summary>
            Default series legend display mode
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeries.styleSeriesCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeries.styleSeriesFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeries.styleSeriesLabelAppearance">
            <summary>
            Default series items labels style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeries.styleSeriesTextAppearance">
            <summary>
            Default series item labels' text style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeries.styleSeriesPointAppearance">
            <summary>
            Point marks style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeries.styleSeriesLineSeriesAppearance">
            <summary>
            Line, Spline, Bezier series line style
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeries.styleSeriesEmptyValue">
            <summary>
            Style of empty values
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeries.styleSeriesParent">
            <summary>
            Parent series element
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeries.styleSeriesPointDimentions">
            <summary>
            Dimensions of points in Point series
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeries.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeries.#ctor(Telerik.Charting.ChartSeries)">
            <summary>
            Constructor for Series's style
            </summary>
            <param name="series">Parent series element</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeries.#ctor">
            <summary>
            Creates new instance of StyleSeries class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeries.#ctor(Telerik.Charting.Styles.FillStyleSeries,Telerik.Charting.Styles.StyleSeriesItemLabel,Telerik.Charting.Styles.StyleMarkerSeriesPoint,Telerik.Charting.Styles.Corners,Telerik.Charting.Styles.StyleBorder,Telerik.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates new instance of StyleSeries class.
            </summary>
            <param name="fillStyle">FillStyle of series</param>
            <param name="styleSeriesLabel">Series default labels' settings</param>
            <param name="stylePointMarker">Style of Point marker</param>
            <param name="corners">Items' corners</param>
            <param name="border">Border of series</param>
            <param name="shadowStyle">Series' shadow style</param>
            <param name="visible">Visibility of series</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeries.Finalize">
            <summary>
            Dispose this object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeries.Clone">
            <summary>
            Cloned this object
            </summary>
            <returns>New instance of StyleSeries class with the same fields as this one</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeries.Dispose">
            <summary>
            Dispose this object
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeries.Dispose(System.Boolean)">
            <summary>
            Dispose this object
            </summary>
            <param name="disposing">Dispose all related elements</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeries.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeries.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeries.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.BarWidthPercent">
            <summary>
            Determines the width of bars.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.Corners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.PointShape">
            <summary>
            Specifies the shape for point series
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.PointDimentions">
            <summary>
            Specifies the dimensions of points in point series
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.PointRotationAngle">
            <summary>
            Specifies the Rotation angle
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.LegendDisplayMode">
            <summary>
            Legend visualization mode
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.ShowLabels">
            <summary>
            Specifies whether the item labels should be shown or not.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.ShowLabelConnectors">
            <summary>
            Specifies whether a line should be drawn between the label and the item.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.StartAngle">
            <summary>
            Gets or sets the start angle of the pie. Zero angle is identical with the X axis direction.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.DiameterScale">
            <summary>
            Gets or sets the pie's diameter length according to the size of the plot area.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.ExplodePercent">
            <summary>
            Gets or sets the explode percent of the exploded items.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.CenterXOffset">
            <summary>
            Specifies the x offset of the pie center.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.CenterYOffset">
            <summary>
            Specifies the y offset of the pie center.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.BubbleSize">
            <summary>
            Default bubble size
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.LabelAppearance">
            <summary>
            Gets or sets the common settings for the series items labels
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.LineSeriesAppearance">
            <summary>
            Line, Spline, Bezier series line style
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.PointMark">
            <summary>
            Series points appearance
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.TextAppearance">
            <summary>
            Gets or sets the common text settings for the series items
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.EmptyValue">
            <summary>
            Empty value point mark 
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.Border">
            <summary>
            Specifies the border
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeries.Visible">
            <summary>
            Specifies visibility of series 
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleSeriesItem">
            <summary>
            Series item appearance
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeriesItem.styleSeriesItemFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeriesItem.styleSeriesItemCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleSeriesItem.styleSeriesItemPointDimentions">
            <summary>
            Dimensions of points in Point series
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItem.#ctor(Telerik.Charting.ChartSeries)">
            <summary>
             Creates new instance of StyleSeriesItem class.
            </summary>
            <param name="series">Style container object</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItem.#ctor">
            <summary>
            Creates new instance of StyleSeriesItem class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItem.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItem.Clone">
            <summary>
            Cloned this object
            </summary>
            <returns>New instance of StyleSeriesItem class with the same fields as this one</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItem.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItem.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItem.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItem.Shadow">
            <summary>
            Specifies item's shadow
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItem.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItem.Exploded">
            <summary>
            Exploded of item in Pie series
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItem.Corners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItem.PointShape">
            <summary>
            Specifies the figure property for point series
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItem.PointRotationAngle">
            <summary>
            Specifies the Rotation angle
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItem.PointDimentions">
            <summary>
            Specifies the dimensions of points in point series
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleTextBlock">
            <summary>
            Text block appearance
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleTextBlock.styleTextBlockCorners">
            <summary>
            Specifies the corners of background rectangle 
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleTextBlock.styleTextBlockFillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleTextBlock.styleTextBlockRotationAngle">
            <summary>
            Specifies the Rotation angle
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleTextBlock.styleTextBlockTextProperties">
            <summary>
            Specifies the Text properties
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleTextBlock.styleTextBlockOverflow">
            <summary>
            Specifiers the overflow behavior
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.StyleTextBlock.styleTextBlockStringFormat">
            <summary>
            Text string formatting properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.ShouldSerializeMaxLength">
            <summary>
            Should the MaxLength property be serialized or not
            </summary>
            <returns>True if should be serialized</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.ResetMaxLength">
            <summary>
            Sets the default value for a MaxLength property
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.#ctor(Telerik.Charting.Styles.FillStyle)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.#ctor(Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
            <param name="position">Position settings</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.#ctor(Telerik.Charting.Styles.TextProperties)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="textProperties">Text appearance settings</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.#ctor(Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.TextProperties)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
            <param name="textProperties">Text appearance settings</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.#ctor(Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position,Telerik.Charting.Styles.TextProperties)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
            <param name="position">Position settings</param>
            <param name="textProperties">Text appearance settings</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.#ctor(Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position,Telerik.Charting.Styles.TextProperties,Telerik.Charting.Styles.Dimensions)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
            <param name="position">Position settings</param>
            <param name="textProperties">Text appearance settings</param>
            <param name="dimensions">Dimensions</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.#ctor(Telerik.Charting.Styles.Dimensions,Telerik.Charting.Styles.FillStyle,Telerik.Charting.Styles.Position,System.Single,Telerik.Charting.Styles.TextProperties,Telerik.Charting.Styles.Corners,Telerik.Charting.Styles.StyleBorder,Telerik.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
            <param name="position">Position settings</param>
            <param name="textProperties">Text appearance settings</param>
            <param name="dimensions">Dimensions</param>
            <param name="rotationAngle">Rotation angle</param>
            <param name="corners">Corners appearance</param>
            <param name="border">Border settings</param>
            <param name="shadowStyle">Shadow settings</param>
            <param name="visible">Visibility settings</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.Finalize">
            <summary>
            Destroys the class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.SetStringFormat">
            <summary>
            Sets the text alignment accordingly to the AlignedPosition property value
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.Clone">
            <summary>
            Creates the object's clone
            </summary>
            <returns>Clone</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.Dispose">
            <summary>
            Destroys the class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.Dispose(System.Boolean)">
            <summary>
            Destroys the class instance
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.LoadViewState(System.Object)">
            <summary>
            Loads class settings from a view state
            </summary>
            <param name="savedState">ViewState to load from</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlock.SaveViewState">
            <summary>
            Saves class data to a view state
            </summary>
            <returns>Saved view state</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTextBlock.MaxLength">
            <summary>
            Max number of visible characters. Rest will be truncated
            <remarks>Full string will be added to parent label's ActiveRegion.Tooltip</remarks>
            </summary>
        </member>
        <member name="E:Telerik.Charting.Styles.StyleTextBlock.MaxLengthChanged">
            <summary>
            MaxLength property changed event
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTextBlock.Corners">
            <summary>
            Specifies the corners of background rectangle 
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTextBlock.Overflow">
            <summary>
            Specifiers the overflow behavior
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTextBlock.FillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTextBlock.Figure">
            <summary>
            Specifies the Figure property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTextBlock.TextProperties">
            <summary>
            Specifies the Text properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTextBlock.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets the property value by its name
            </summary>
            <param name="name">Name of the property. String</param>
            <returns>Object</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTextBlock.AutoTextWrap">
            <summary>
            Gets or sets the automatic text wrapping functionality switch
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTextBlock.StringFormat">
            <summary>
            Gets the string format
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleSeriesItemTextBlock">
            <summary>
            Series item label text block's appearance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemTextBlock.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemTextBlock.#ctor(Telerik.Charting.ChartSeries)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="series">Chart series</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemTextBlock.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemTextBlock.ShouldSerializeMaxLength">
            <summary>
            Gets should the MaxLength value be serialized
            </summary>
            <returns>True if can be serialized, overwise returns false</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleSeriesItemTextBlock.ResetMaxLength">
            <summary>
            Sets the default value
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleSeriesItemTextBlock.AutoTextWrap">
            <summary>
            AutoTextWrap override. Gets always false, because it is unsupported by a StyleSeriesItemTextBlock
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleAxisItemText">
            <summary>
            Axis item label text block's appearance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxisItemText.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxisItemText.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxisItemText.ShouldSerializeMaxLength">
            <summary>
            Gets should the MaxLength value be serialized
            </summary>
            <returns>True if can be serialized, overwise returns false</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleAxisItemText.ResetMaxLength">
            <summary>
            Sets the default value
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleTextBlockTitle">
            <summary>
            Title text block's appearance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlockTitle.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlockTitle.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleTextBlockError">
            <summary>
            Error text block's appearance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlockError.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlockError.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleTextBlockHidden">
            <summary>
            Hidden text block's default appearance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlockHidden.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTextBlockHidden.Visible">
            <summary>
            Visibility. False by default
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleTextBlockAxisLabel">
            <summary>
            Hidden text block's default appearance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlockAxisLabel.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTextBlockAxisLabel.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.MinorTickCount">
            <summary>
            Minor ticks count between major ticks
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.MinorTickCount.None">
            <summary>
            Zero ticks
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.MinorTickCount.One">
            <summary>
            One tick between major ticks
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.MinorTickCount.Three">
            <summary>
            Three ticks between major ticks
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.MinorTickCount.Eight">
            <summary>
            Eight ticks between major ticks
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleTick">
            <summary>
            Base axis ticks appearance settings
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTick.#ctor">
            <summary>
            Creates the new class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTick.#ctor(System.Int32)">
            <summary>
            Creates the new class instance
            </summary>
            <param name="length">Tick length in pixels</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTick.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates the new class instance
            </summary>
            <param name="length">Tick length in pixels</param>
            <param name="visible">Tick visibility</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTick.#ctor(System.Boolean,System.Int32,System.Drawing.Color)">
            <summary>
            Creates the new class instance
            </summary>
            <param name="length">Tick length in pixels</param>
            <param name="visible">Tick visibility</param>
            <param name="color">Tick line color</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTick.Reset">
            <summary>
            Sets the default values for a class properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTick.Length">
            <summary>
            Specifies the Length of tick
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTick.Color">
            <summary>
            Tick line color
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTick.Width">
            <summary>
            Tick line width
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTick.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets the property by its name
            </summary>
            <param name="name">Property name. String</param>
            <returns>Object or null</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleTickMinor">
            <summary>
            Minor ticks style
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTickMinor.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTickMinor.#ctor(Telerik.Charting.Styles.MinorTickCount)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="count">Minor ticks count</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTickMinor.#ctor(System.Boolean)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="visible">Visibility value</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTickMinor.#ctor(System.Boolean,System.Int32,Telerik.Charting.Styles.MinorTickCount)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="visible">Minor tick visibility</param>
            <param name="length">Minor tick length</param>
            <param name="count">Minor ticks count between two major ticks</param>
        </member>
        <member name="M:Telerik.Charting.Styles.StyleTickMinor.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTickMinor.MinorTickCount">
            <summary>
            Minor ticks count between the two major ticks
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTickMinor.Length">
            <summary>
            Specifies the Length of tick
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.StyleTickMinor.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets the property value by its name
            </summary>
            <param name="name">Name of the property</param>
            <returns>Object or null</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.StyleTickMajor">
            <summary>
            Major ticks visual style
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.TextDirection">
            <summary>
            Specifies the text rendering direction
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TextDirection.RightToLeft">
            <summary>
            Assign the right to left text direction
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TextDirection.LeftToRight">
            <summary>
            Assign the left to right text direction
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TextDirection.TopToBottom">
            <summary>
            Assign the left to right top to bottom text direction
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TextDirection.BottomToTop">
            <summary>
            Assign the left to right bottom to top text direction
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.TextProperties">
            <summary>
            Base text appearance settings class (Font, Color)
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.TextProperties.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.TextProperties.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="color">Text color</param>
        </member>
        <member name="M:Telerik.Charting.Styles.TextProperties.#ctor(System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="color">Text color</param>
            <param name="font">Text font</param>
        </member>
        <member name="M:Telerik.Charting.Styles.TextProperties.#ctor(System.Drawing.Color,System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="color">Text color</param>
            <param name="familyName">Font family</param>
            <param name="emSize">Font size in EM</param>
            <param name="fontStyle">Font style</param>
            <param name="grUnit">Graphics measurement unit</param>
        </member>
        <member name="M:Telerik.Charting.Styles.TextProperties.Finalize">
            <summary>
            Destroys the class instance
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TextProperties.textPropertiesContainerObject">
            <summary>
            Class instance container
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.TextProperties.Reset">
            <summary>
            Sets the default values
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.TextProperties.Clone">
            <summary>
            Creates an object clone
            </summary>
            <returns>object</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.TextProperties.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current System.Object.
            </summary>
            <param name="obj">The System.Object to compare with the current System.Object</param>
            <returns>true if the specified System.Object is equal to the current System.Object;
                otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.TextProperties.GetHashCode">
            <summary>
            Serves as a hash function for a TextProperties type. 
            </summary>
            <returns>A hash code for the current class instance</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.TextProperties.Dispose">
            <summary>
            Destroys the class instance
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.TextProperties.Color">
            <summary>
            Specifies the text color property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.TextProperties.Font">
            <summary>
            Specifies the text font properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.TextProperties.Item(Telerik.Charting.Styles.StyleProperties)">
            <summary>
            Gets the property by its name
            </summary>
            <param name="name">Property name. String</param>
            <returns>Object</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.TextPropertiesTitle">
            <summary>
            Default Title's text properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.TextPropertiesTitle.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.TextPropertiesTitle.Font">
            <summary>
            Specifies the text font properties
            </summary>
            <remarks>Default value is Verdana, 15pt</remarks>
        </member>
        <member name="T:Telerik.Charting.Styles.TextPropertiesError">
            <summary>
            Errors text properties 
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.TextPropertiesError.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.TextPropertiesError.Color">
            <summary>
            Specifies the text color property
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.TextPropertiesError.Font">
            <summary>
            Specifies the text font properties
            </summary>
            <remarks>Default value is Verdana, 10pt, style=Bold</remarks>
        </member>
        <member name="T:Telerik.Charting.Styles.TextPropertiesAxisItem">
            <summary>
            Axis item label text properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.TextPropertiesAxisItem.Reset">
            <summary>
            Sets default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.TextPropertiesAxisItem.Color">
            <summary>
            Specifies the text color property
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.TextPropertiesAxisLabel">
            <summary>
            Axis item label text properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.TextPropertiesAxisLabel.Reset">
            <summary>
            Sets default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.TextPropertiesAxisLabel.Color">
            <summary>
            Specifies the text color property
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.TextPropertiesSeriesItem">
            <summary>
            Series item label text properties
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.TextPropertiesSeriesItem.Reset">
            <summary>
            Sets default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.TextPropertiesSeriesItem.Color">
            <summary>
            Specifies the text color property
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.TickLocation">
            <summary>
            Specifies the axis Ticks location relatively to plot area
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TickLocation.Inside">
            <summary>
            Inside of plot area
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TickLocation.Outside">
            <summary>
            Outside of plot area (default value)
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.TickLocation.Cross">
            <summary>
            Tick line crosses the axis line
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.ListConverter">
            <summary>
            Provides a type converter to convert IList objects to and from a different representations
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.ListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks the possibility to convert from a different object type
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">The type to convert from</param>
            <returns>True if conversion is possible</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.Styles.ListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.Styles.ListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" -->
        <member name="M:Telerik.Charting.Styles.ListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <param name="destinationObj">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.DoubleConverter2">
            <summary>
            Provides a unified way of converting Double type values to other types, as well
                as for accessing standard values and sub properties.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.DoubleConverter2.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks the possibility to convert from a different object type
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">The type to convert from</param>
            <returns>True if conversion is possible</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.Styles.DoubleConverter2.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" -->
        <member name="M:Telerik.Charting.Styles.DoubleConverter2.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <param name="destinationObj">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.MarginsConverter">
            <summary>
            Provides a unified way of converting ChartMargins type values to other types, as well
            as for accessing standard values and sub properties.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks the possibility to convert from a different object type
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">The type to convert from</param>
            <returns>True if conversion is possible</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the ChartMargins, using the specified
                context and culture information.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">Current culture settings</param>
            <param name="sourceObj">The System.Object to convert.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <param name="destinationObj">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the type that this MarginsConverter
                is associated with, using the specified context, given a set of property
                values for the object.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="propertyValues">An System.Collections.IDictionary of new property values.</param>
            <returns>An System.Object representing the given System.Collections.IDictionary, or
                null if the object cannot be created. </returns>
        </member>
        <member name="M:Telerik.Charting.Styles.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
             to create a new value, using the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.MarginsConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.MarginsConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the
            value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">An System.Object that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type System.Attribute that is used as a filter.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection with the properties
             that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.PaddingsConverter">
            <summary>
            Provides a unified way of converting ChartMargins type values to other types, as well
            as for accessing standard values and sub properties.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.PaddingsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks the possibility to convert from a different object type
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">The type to convert from</param>
            <returns>True if conversion is possible</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.PaddingsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the ChartPaddings, using the specified
            context and culture information.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">Current culture settings</param>
            <param name="sourceObj">The System.Object to convert.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.PaddingsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <param name="destinationObj">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.PaddingsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the type that this PaddingsConverter
            is associated with, using the specified context, given a set of property
            values for the object.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="propertyValues">An System.Collections.IDictionary of new property values.</param>
            <returns>An System.Object representing the given System.Collections.IDictionary, or
                null if the object cannot be created. </returns>
        </member>
        <member name="M:Telerik.Charting.Styles.PaddingsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
             to create a new value, using the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.PaddingsConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.PaddingsConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the
            value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">An System.Object that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type System.Attribute that is used as a filter.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection with the properties
             that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.UnitConverter">
            <summary>
            Provides a unified way of converting Units type values to other types, as well
            as for accessing standard values and sub properties.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.UnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks the possibility to convert from a different object type
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">The type to convert from</param>
            <returns>True if conversion is possible</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Charting.Styles.UnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" -->
        <member name="M:Telerik.Charting.Styles.UnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the Unit type, using the specified
            context and culture information.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">Current culture settings</param>
            <param name="sourceObj">The System.Object to convert.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.UnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <param name="destinationObj">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="T:Telerik.Charting.Styles.UnitType">
            <summary>
            Specifies the unit of measurement.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.UnitType.Pixel">
            <summary>
            Measurement is in pixels.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.UnitType.Percentage">
            <summary>
            Measurement is a percentage relative to the parent element.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Styles.Unit">
            <summary>
            Represents a length measurement.
            </summary>
        </member>
        <member name="F:Telerik.Charting.Styles.Unit.Empty">
            <summary>
            Represents an empty Unit. This field is read-only.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.op_Inequality(Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>
            Compares two Unit objects to determine whether they are not equal.
            </summary>
            <param name="left">The Unit on the left side of the operator.</param>
            <param name="right">The Unit on the right side of the operator.</param>
            <returns>true if the Unit objects are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.op_Equality(Telerik.Charting.Styles.Unit,Telerik.Charting.Styles.Unit)">
            <summary>
            Compares two Unit objects to determine whether they are equal.
            </summary>
            <param name="left">The Unit on the left side of the operator.</param>
            <param name="right">The Unit on the right side of the operator.</param>
            <returns>true if both Unit objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.op_Implicit(System.Single)~Telerik.Charting.Styles.Unit">
            <summary>
            Implicitly creates a Unit of type Pixel from the specified float.
            </summary>
            <param name="n">A float that represents the length of the Unit.</param>
            <returns>A Unit of type Pixel that represents the specified by the n parameter.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.Parse(System.String)">
            <summary>
            Converts the specified string to a Unit.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>A Unit that represents the specified string.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.Pixel(System.Single)">
            <summary>
            Creates a Unit of type Pixel from the specified 32-bit signed integer.
            </summary>
            <param name="n">A 32-bit signed integer that represents the length of the Unit.</param>
            <returns>A Unit of type Pixel that represents the length specified by the n parameter.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.Percentage(System.Double)">
            <summary>
            Creates a Unit of type Percentage from the specified double-precision floating-point number.
            </summary>
            <param name="n">A double-precision floating-point number that represents the length of the Unit</param>
            <returns>A Unit of type Percentage that represents the length specified by the double-precision floating-point number.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.GetStringFromType(Telerik.Charting.Styles.UnitType)">
            <summary>
            Gets the string representation of the Unit type
            </summary>
            <param name="type">Unit type value to get string of</param>
            <returns>System.String with unit type value</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.GetTypeFromString(System.String)">
            <summary>
            Gets the UnitType by its string representation
            </summary>
            <param name="value">Unit type string</param>
            <returns>UnitType</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.#ctor">
            <summary>
            Creates a class instance
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.#ctor(Telerik.Charting.Styles.UnitType)">
            <summary>
            Creates a class instance
            </summary>
            <param name="type">UnitType specifies the target Unit type</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the Unit with the specified double precision floating point number.
            </summary>
            <param name="value">A double precision floating point number that represents the length of the Unit in pixels.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the Unit with the specified double precision floating point number.
            </summary>
            <param name="value">A float precision floating point number that represents the length of the Unit in pixels.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Unit with the specified 32-bit signed integer.
            </summary>
            <param name="value">A 32-bit signed integer that represents the length of the Unit in pixels.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.#ctor(System.Int32,Telerik.Charting.Styles.UnitType)">
            <summary>
            Initializes a new instance of the Unit with the specified 32-bit signed integer and the target type
            </summary>
            <param name="value">A 32-bit signed integer that represents the length of the Unit in pixels.</param>
            <param name="type">Unit type</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.#ctor(System.Double,Telerik.Charting.Styles.UnitType)">
            <summary>
            Initializes a new instance of the Unit with the specified double precision floating point number and the target type
            </summary>
            <param name="value">A double precision floating point number that represents the length of the Unit in pixels.</param>
            <param name="type">Unit type</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.#ctor(System.Single,Telerik.Charting.Styles.UnitType)">
            <summary>
            Initializes a new instance of the Unit with the specified double precision floating point number and the target type.
            </summary>
            <param name="value">A float precision floating point number that represents the length of the Unit in pixels.</param>
            <param name="type">Unit type (Pixel / Percentage) </param>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Unit with the specified length.
            </summary>
            <param name="value">A string that represents the length of the Unit.</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the Unit with the specified length.
            </summary>
            <param name="value">A string that represents the length of the Unit.</param>
            <param name="culture">CultureInfo</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.#ctor(System.String,System.Globalization.CultureInfo,Telerik.Charting.Styles.UnitType)">
            <summary>
            Initializes a new instance of the Unit with the specified length.
            </summary>
            <param name="value">A string that represents the length of the Unit.</param>
            <param name="culture">CultureInfo</param>
            <param name="defaultType">Unit type</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.GetHashCode">
            <summary>
            Returns a hash code for this Unit.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.Equals(System.Object)">
            <summary>
            Compares this Unit with the specified object.
            </summary>
            <param name="obj">The specified object for comparison.</param>
            <returns> true if the Unit that this method is called from is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.CalculatePixelValue(System.Single)">
            <summary>
            Gets the pixels equivalent of the Unit.Value
            </summary>
            <param name="from">The parent elements dimension to get the percents of</param>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.CalculatePixelValue">
            <summary>
            Gets the pixels equivalent of the Unit.Value
            </summary>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.Clone">
            <summary>
            Creates a Unit clone
            </summary>
            <returns>New Unit class instance </returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.ToString">
            <summary>
            Base ToString override
            </summary>
            <returns>String representation of the Unit instance</returns>
        </member>
        <member name="M:Telerik.Charting.Styles.Unit.ToString(System.Globalization.CultureInfo)">
            <summary>
            Base ToString override
            </summary>
            <param name="culture">CultureInfo</param>
            <returns>String representation of the Unit instance</returns>
        </member>
        <member name="P:Telerik.Charting.Styles.Unit.IsEmpty">
            <summary>
            Gets whether Unit is empty
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Unit.PixelValue">
            <summary>
            The unit length in Pixels
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Unit.Type">
            <summary>
            Gets or sets the unit type of the Unit.
            </summary>
        </member>
        <member name="P:Telerik.Charting.Styles.Unit.Value">
            <summary>
            Gets or sets the length of the Unit.
            </summary>
        </member>
    </members>
</doc>
