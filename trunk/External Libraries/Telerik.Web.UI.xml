<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Web.UI</name>
    </assembly>
    <members>
        <member name="T:Telerik.Web.UI.RadDataBoundControl">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.IControlResolver">
            <summary>
            Describes an object that can be used to resolve references to a control by its ID
            </summary>
        </member>
        <member name="M:Telerik.Web.IControlResolver.ResolveControl(System.String)">
            <summary>
            Resolves a reference to a control by its ID
            </summary>
            <param name="controlId"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.OnPreRender(System.EventArgs)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.RegisterScriptControl">
            <summary>
            Registers the control with the ScriptManager
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.RegisterCssReferences">
            <summary>
            Registers the CSS references
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.LoadClientState(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Loads the client state data
            </summary>
            <param name="clientState"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.SaveClientState">
            <summary>
            Saves the client state data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.RenderClientStateField(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.Render(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.RenderContents(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.GetEmbeddedSkinNames">
            <summary>
            Returns the names of all embedded skins. Used by Telerik.Web.Examples.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Executed when post data is loaded from the request
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDataBoundControl.RaisePostDataChangedEvent">
            <summary>
            Executed when post data changes should invoke a chagned event
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDataBoundControl.Skin">
            <summary>Gets or sets the skin name for the control user interface.</summary>
            <value>A string containing the skin name for the control user interface. The default is string.Empty.</value>
            <remarks>
            <para>
            If this property is not set, the control will render using the skin named "Default".
            If EnableEmbeddedSkins is set to false, the control will not render skin.
            </para>
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.RadDataBoundControl.IsSkinSet">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDataBoundControl.EnableEmbeddedScripts">
            <summary>
            Gets or sets the value, indicating whether to render script references to the embedded scripts or not.
            </summary>
            <remarks>
            <para>
            If EnableEmbeddedScripts is set to false you will have to register the needed Scripts files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDataBoundControl.EnableEmbeddedSkins">
            <summary>Gets or sets the value, indicating whether to render links to the embedded skins or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedSkins is set to false you will have to register the needed CSS files by hand.
            </para>
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.RadDataBoundControl.EnableEmbeddedBaseStylesheet">
            <summary>Gets or sets the value, indicating whether to render the link to the embedded base stylesheet of the control or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedBaseStylesheet is set to false you will have to register the needed control base CSS file by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDataBoundControl.RuntimeSkin">
            <summary>
            Gets the real skin name for the control user interface. If Skin is not set, returns
            "Default", otherwise returns Skin.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDataBoundControl.EnableAjaxSkinRendering">
            <summary>Gets or sets the value, indicating whether to render the skin CSS files during Ajax requests</summary>
            <remarks>
            <para>
            If EnableAjaxSkinRendering is set to false you will have to register the needed control base CSS file by hand when adding/showing the control with Ajax.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDataBoundControl.ClientStateFieldID">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadDataBoundControl.CssClassFormatString">
            <summary>
            The CssClass property will now be used instead of the former Skin 
            and will be modified in AddAttributesToRender()
            </summary>
            <example>
            protected override string CssClassFormatString
            {
            	get
            	{
            		return "RadDock RadDock_{0} rdWTitle rdWFooter";
            	}
            }
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadDataBoundControl.DefaultCssClass">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadDataBoundControl.ScriptManager">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.SingleTemplateContainer">
             <summary>
             Base control used to contain a template. Ensures that if the template
             has been instantiated or the Controls collection has been accessed
             the template cannot be set again.
             </summary>
             <example>
             1) Into an existing WebControl add a readonly property and 
             a member for the template container
             
             private SingleTemplateContainer _contentContainer;
             
            	[Browsable(false)]
            	public SingleTemplateContainer ContentContainer
            	{
            		get
            		{
            			EnsureChildControls();
            			return _contentContainer;
            		}
            	}
             
             2) Override CreateChildControls() and instantiate the SingleTemplateContainer.
             The parameter is a reference to the instantiating control (used when throwing exceptions).
             
             protected override void CreateChildControls()
            	{
            		base.CreateChildControls();
            
            		_contentContainer = new SingleTemplateContainer(this);
            		_contentContainer.ID = "Content";
            		Controls.Add(_contentContainer);
            	}
             
             3) Add read/write property for the template. You will need the TemplateContainer
             attribute in case if you override SingleTemplateContainer in order to add 
             properties, accessible during the databinding.
             
             //[TemplateContainer(typeof(SingleTemplateContainer))]
            	[PersistenceMode(PersistenceMode.InnerProperty)]
            	[TemplateInstance(TemplateInstance.Single)]
            	[Browsable(false)]
            	public ITemplate ContentTemplate
            	{
            		get
            		{
            			EnsureChildControls();
            			return ContentContainer.Template;
            		}
            		set
            		{
            			EnsureChildControls();
            			ContentContainer.Template = value;
            		}
            	}
            
             </example>
        </member>
        <member name="M:Telerik.Web.UI.SingleTemplateContainer.#ctor(System.Web.UI.Control)">
            <summary>
            Instantiates a new instance of SingleTemplateContainer.
            </summary>
            <param name="parentRadControl">
            The control which contains the template. This parameter is used when
            SingleTemplateContainer throws exceptions.
            </param>
        </member>
        <member name="F:Telerik.Web.SkinRegistrar.cssLinkFormat">
            <summary>
            cssLinkFormat is used when registering css during ajax requests or when the page header is not runat="server".
            </summary>
        </member>
        <member name="F:Telerik.Web.SkinRegistrar.copyCssScript">
            <summary>
            this script is optimized in order to decrease the response size. If you change it,
            please change the full commented version below as well.
            </summary>
        </member>
        <member name="M:Telerik.Web.SkinRegistrar.GetRuntimeSkin(Telerik.Web.ISkinnableControl)">
            <summary>
            Returns the skin that should be applied to the control.
            </summary>
        </member>
        <member name="M:Telerik.Web.SkinRegistrar.GetGlobalSkin(Telerik.Web.ISkinnableControl)">
            <summary>
            Returns the web.config value which specifies the application-wide Skin setting.
            </summary>
            <returns>
            Telerik.[ShortControlName].Skin or Telerik.Skin, depending on which value was set.
            </returns>
        </member>
        <member name="M:Telerik.Web.SkinRegistrar.RegisterCssReferences(Telerik.Web.ISkinnableControl)">
            <summary>
            Registers the common skin CSS file and the CSS files, associated with the selected skin.
            </summary>
        </member>
        <member name="M:Telerik.Web.SkinRegistrar.RegisterCssReference(System.Web.UI.Page,System.Web.UI.Control,System.String)">
            <summary>
            Registers a Css file reference on the page
            </summary>
            <param name="_page">reference to the page</param>
            <param name="_control">reference to the control</param>
            <param name="_url">the css file url</param>
        </member>
        <member name="M:Telerik.Web.SkinRegistrar.GetEmbeddedSkinAttributes(Telerik.Web.ISkinnableControl,System.Type)">
            <summary>
            Returns the attributes for the common skin CSS file and the CSS files, associated with the selected skin.
            </summary>
        </member>
        <member name="M:Telerik.Web.SkinRegistrar.GetAllEmbeddedSkinAttributes(System.Type)">
            <summary>
            Returns the attributes for all embedded skins.
            </summary>
        </member>
        <member name="M:Telerik.Web.SkinRegistrar.GetEmbeddedSkinNames(System.Type)">
            <summary>
            Returns the names of all embedded skins. The common skin attribute is not included!
            </summary>
        </member>
        <member name="T:Telerik.Web.ClientPropertyNameAttribute">
            <summary>
            Allows the mapping of a property declared in managed code to a property
            declared in client script.  For example, if the client script property is named "handle" and you
            prefer the name on the TargetProperties object to be "Handle", you would apply this attribute with the value "handle."
            </summary>
        </member>
        <member name="M:Telerik.Web.ClientPropertyNameAttribute.#ctor(System.String)">
            <summary>
            Creates an instance of the ClientPropertyNameAttribute and initializes
            the PropertyName value.
            </summary>
            <param name="propertyName">The name of the property in client script that you wish to map to.</param>
        </member>
        <member name="P:Telerik.Web.ClientPropertyNameAttribute.PropertyName">
            <summary>
            The name of the property in client script code that you wish to map to.
            </summary>
        </member>
        <member name="T:Telerik.Web.ClientScriptResourceAttribute">
            <summary>
            Associates a client script resource with an extender class.
            This allows the extender to find it's associated script and what
            names and prefixes with which to reference it.
            </summary>
        </member>
        <member name="M:Telerik.Web.ClientScriptResourceAttribute.#ctor(System.String)">
            <summary>
            Called from other constructors to set the prefix and the name.
            </summary>
            <param name="componentType">The name given to the class in the Web.TypeDescriptor.addType call</param>        
        </member>
        <member name="M:Telerik.Web.ClientScriptResourceAttribute.#ctor(System.String,System.Type,System.String)">
            <summary>
            Associates a client script resource with the class.
            </summary>
            <param name="componentType">The name given to the class in the Web.TypeDescriptor.addType call</param>
            <param name="baseType">A Type that lives in the same folder as the script file</param>
            <param name="resourceName">The name of the script file itself (e.g. 'foo.cs')</param>
        </member>
        <member name="M:Telerik.Web.ClientScriptResourceAttribute.#ctor(System.String,System.String)">
            <summary>
            Associates a client script resource with the class.
            </summary>
            <param name="componentType">The name given to the class in the Web.TypeDescriptor.addType call</param>
            <param name="fullResourceName">The name of the script resource, e.g. 'ControlLibrary1.FooExtender.Foo.js'</param>       
        </member>
        <member name="P:Telerik.Web.ClientScriptResourceAttribute.ComponentType">
            <summary>
            The component type name to use when referencing the component class in XML. If
            the XML reference is "&lt;myns:Foo/&gt;", the component type is "Foo".
            </summary>
        </member>
        <member name="P:Telerik.Web.ClientScriptResourceAttribute.ResourcePath">
            <summary>
            This is the path to the resource in the assembly.  This is usually defined as
            [default namespace].[Folder name].FileName.  In a project called "ControlLibrary1", a
            JScript file called Foo.js in the "Script" subdirectory would be named "ControlLibrary1.Script.Foo.js" by default.
            </summary>
        </member>
        <member name="T:Telerik.Web.ComponentReferenceAttribute">
            <summary>
            Signifies that this property references a ScriptComponent
            </summary>
        </member>
        <member name="T:Telerik.Web.BehaviorBase">
            <summary>
            The AnimationScripts class is used to load all of the animation support for the AJAX
            Control Toolkit.  To use any of the animations you find in Animations.js, simply include
            the attribute [RequiredScript(typeof(AnimationScripts))] on your extender.
            </summary>
        </member>
        <member name="T:Telerik.Web.PopupBehavior">
            <summary>
            Repository of old "Atlas" code that we're waiting to have integrated into the new Microsoft Ajax Library
            </summary>
        </member>
        <member name="T:Telerik.Web.ElementReferenceAttribute">
            <summary>
            Specifies this property is an element reference and should be converted during serialization.
            The default (e.g. cases without this attribute) will generate the element's ID
            </summary>
        </member>
        <member name="M:Telerik.Web.ElementReferenceAttribute.#ctor">
            <summary>
            Constructs a new ElementReferenceAttribute
            </summary>
        </member>
        <member name="T:Telerik.Web.ClientControlEventAttribute">
            <summary>
            Signifies that this Property should be exposed as a client-side event reference
            </summary>
        </member>
        <member name="M:Telerik.Web.ClientControlEventAttribute.#ctor">
            <summary>
            Initializes a new ClientControlEventAttribute
            </summary>
        </member>
        <member name="M:Telerik.Web.ClientControlEventAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new ClientControlEventAttribute
            </summary>
            <param name="isScriptEvent"></param>
        </member>
        <member name="M:Telerik.Web.ClientControlEventAttribute.Equals(System.Object)">
            <summary>
            Tests for object equality
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ClientControlEventAttribute.GetHashCode">
            <summary>
            Gets a hash code for this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ClientControlEventAttribute.IsDefaultAttribute">
            <summary>
            Gets whether this is the default value for this attribute
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Web.ClientControlEventAttribute.IsScriptEvent">
            <summary>
            Whether this is a valid ScriptEvent
            </summary>
        </member>
        <member name="T:Telerik.Web.ClientControlMethodAttribute">
            <summary>
            Signifies that this method should be exposed as a client callback 
            </summary>
        </member>
        <member name="M:Telerik.Web.ClientControlMethodAttribute.#ctor">
            <summary>
            Initializes a new ClientControlMethodAttribute
            </summary>
        </member>
        <member name="M:Telerik.Web.ClientControlMethodAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new ClientControlMethodAttribute
            </summary>
            <param name="isScriptMethod"></param>
        </member>
        <member name="M:Telerik.Web.ClientControlMethodAttribute.Equals(System.Object)">
            <summary>
            Tests for object equality
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ClientControlMethodAttribute.GetHashCode">
            <summary>
            Gets a hash code for this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ClientControlMethodAttribute.IsDefaultAttribute">
            <summary>
            Gets whether this is the default value for this attribute
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Web.ClientControlMethodAttribute.IsScriptMethod">
            <summary>
            Whether this is a valid ScriptMethod
            </summary>
        </member>
        <member name="T:Telerik.Web.ClientControlPropertyAttribute">
            <summary>
            Signifies that this property is to be emitted as a client script property
            </summary>
        </member>
        <member name="M:Telerik.Web.ClientControlPropertyAttribute.#ctor">
            <summary>
            Initializes a new ClientControlPropertyAttribute
            </summary>
        </member>
        <member name="M:Telerik.Web.ClientControlPropertyAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new ClientControlPropertyAttribute
            </summary>
            <param name="isScriptProperty"></param>
        </member>
        <member name="M:Telerik.Web.ClientControlPropertyAttribute.Equals(System.Object)">
            <summary>
            Tests for object equality
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ClientControlPropertyAttribute.GetHashCode">
            <summary>
            Gets a hash code for this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ClientControlPropertyAttribute.IsDefaultAttribute">
            <summary>
            Gets whether this is the default value for this attribute
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Web.ClientControlPropertyAttribute.IsScriptProperty">
            <summary>
            Whether this property should be exposed to the client
            </summary>
        </member>
        <member name="T:Telerik.Web.IClientStateManager">
            <summary>
            Describes an object which supports ClientState
            </summary>
        </member>
        <member name="M:Telerik.Web.IClientStateManager.LoadClientState(System.String)">
            <summary>
            Loads the client state for the object
            </summary>
            <param name="clientState"></param>
        </member>
        <member name="M:Telerik.Web.IClientStateManager.SaveClientState">
            <summary>
            Saves the client state for the object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Web.IClientStateManager.SupportsClientState">
            <summary>
            Whether ClientState is supported by the object instance
            </summary>
        </member>
        <member name="T:Telerik.Web.PropertyCategory">
            <summary>
            Defines the common property categories' names
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadWebControl">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.OnPreRender(System.EventArgs)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.RegisterScriptControl">
            <summary>
            Registers the control with the ScriptManager
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.RegisterCssReferences">
            <summary>
            Registers the CSS references
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.LoadClientState(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Loads the client state data
            </summary>
            <param name="clientState"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.SaveClientState">
            <summary>
            Saves the client state data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.RenderClientStateField(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.Render(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.RenderContents(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.GetEmbeddedSkinNames">
            <summary>
            Returns the names of all embedded skins. Used by Telerik.Web.Examples.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Executed when post data is loaded from the request
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadWebControl.RaisePostDataChangedEvent">
            <summary>
            Executed when post data changes should invoke a chagned event
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWebControl.Skin">
            <summary>Gets or sets the skin name for the control user interface.</summary>
            <value>A string containing the skin name for the control user interface. The default is string.Empty.</value>
            <remarks>
            <para>
            If this property is not set, the control will render using the skin named "Default".
            If EnableEmbeddedSkins is set to false, the control will not render skin.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadWebControl.IsSkinSet">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWebControl.EnableEmbeddedScripts">
            <summary>
            Gets or sets the value, indicating whether to render script references to the embedded scripts or not.
            </summary>
            <remarks>
            <para>
            If EnableEmbeddedScripts is set to false you will have to register the needed Scripts files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadWebControl.EnableEmbeddedSkins">
            <summary>Gets or sets the value, indicating whether to render links to the embedded skins or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedSkins is set to false you will have to register the needed CSS files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadWebControl.EnableEmbeddedBaseStylesheet">
            <summary>Gets or sets the value, indicating whether to render the link to the embedded base stylesheet of the control or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedBaseStylesheet is set to false you will have to register the needed control base CSS file by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadWebControl.RuntimeSkin">
            <summary>
            Gets the real skin name for the control user interface. If Skin is not set, returns
            "Default", otherwise returns Skin.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWebControl.EnableAjaxSkinRendering">
            <summary>Gets or sets the value, indicating whether to render the skin CSS files during Ajax requests</summary>
            <remarks>
            <para>
            If EnableAjaxSkinRendering is set to false you will have to register the needed control base CSS file by hand when adding/showing the control with Ajax.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadWebControl.ClientStateFieldID">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadWebControl.CssClassFormatString">
            <summary>
            The CssClass property will now be used instead of the former Skin 
            and will be modified in AddAttributesToRender()
            </summary>
            <example>
            protected override string CssClassFormatString
            {
            	get
            	{
            		return "RadDock RadDock_{0} rdWTitle rdWFooter";
            	}
            }
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadWebControl.ScriptManager">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.RequiredPropertyAttribute">
            <summary>
            The presence of this attribute on a property of a subclass of
            TargetControlPropertiesBase indicates that the property value is
            required and the control can not be used without it. Absence of a
            required property value causes an exception to be thrown during
            creation of the control.
            </summary>
        </member>
        <member name="M:Telerik.Web.RequiredPropertyAttribute.#ctor">
            <summary>
            Constructs a new RequiredPropertyAttribute
            </summary>
        </member>
        <member name="T:Telerik.Web.ScriptObjectBuilder">
            <summary>
            Gets the script references for a type
            </summary>
        </member>
        <member name="M:Telerik.Web.ScriptObjectBuilder.DescribeComponent(System.Object,System.Web.UI.ScriptComponentDescriptor,System.Web.UI.IUrlResolutionService,Telerik.Web.IControlResolver)">
            <summary>
            Describes an object to a ScriptComponentDescriptor based on its reflected properties and methods
            </summary>
            <param name="instance">The object to be described</param>
            <param name="descriptor">The script descriptor to fill</param>
            <param name="urlResolver">The object used to resolve urls</param>
            <param name="controlResolver">The object used to resolve control references</param>
        </member>
        <member name="M:Telerik.Web.ScriptObjectBuilder.GetScriptReferences(System.Type)">
            <summary>
            Gets the script references for a type
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ScriptObjectBuilder.GetScriptReferences(System.Type,System.Boolean)">
            <summary>
            Gets the script references for a type
            </summary>
            <param name="type"></param>
            <param name="ignoreStartingTypeReferences"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ScriptObjectBuilder.GetCssReferences(System.Web.UI.Control)">
            <summary>
            Gets the embedded css file references for a type
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ScriptObjectBuilder.RegisterCssReferences(System.Web.UI.Control)">
            <summary>
            Register's the Css references for this control
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Telerik.Web.ScriptObjectBuilder.ExecuteCallbackMethod(System.Web.UI.Control,System.String)">
            <summary>
            Executes a callback capable method on a control
            </summary>
            <param name="control"></param>
            <param name="callbackArgument"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ScriptObjectBuilder.ScriptReferencesFromResourceEntries(System.Collections.Generic.IList{Telerik.Web.ScriptObjectBuilder.ResourceEntry})">
            <summary>
            ScriptReference objects aren't immutable.  The AJAX core adds context to them, so we cant' reuse them.
            Therefore, we track only ReferenceEntries internally and then convert them to NEW ScriptReference objects on-demand.        
            </summary>
            <param name="entries"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ScriptObjectBuilder.GetScriptReferencesInternal(System.Type,System.Collections.Generic.Stack{System.Type})">
            <summary>
            Gets the script references for a type and walks the type's dependencies with circular-reference checking
            </summary>
            <param name="type"></param>
            <param name="typeReferenceStack"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.ScriptObjectBuilder.GetCssReferences(System.Web.UI.Control,System.Type,System.Collections.Generic.Stack{System.Type})">
            <summary>
            Gets the css references for a type and walks the type's dependencies with circular-reference checking
            </summary>
            <param name="control"></param>
            <param name="type"></param>
            <param name="typeReferenceStack"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Web.UI.DockCloseCommand">
            <summary>
            Represents the Close command item in a RadDock control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DockCommand">
            <summary>
            Represents a custom command item in a RadDock control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockCommand.#ctor">
            <summary>
            Initializes a new instance of the DockCommand class
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockCommand.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the DockCommand class with the specified 
            clientTypeName, cssClass, name, text and autoPostBack
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockCommand.CreateElement">
            <summary>
            Creates an HtmlAnchor control with applied CssClass and Title
            </summary>
            <returns>An HtmlAnchor control</returns>
        </member>
        <member name="M:Telerik.Web.UI.DockCommand.GetCssClass">
            <summary>
            Returns the value of the CssClass property. This method should be overriden
            in multistate commands, such as DockToggleCommand, to return one of the 
            CssClass and AlternateCssClass properties, depending on the command state.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockCommand.GetText">
            <summary>
            Returns the value of the Text property. This method should be overriden
            in multistate commands, such as DockToggleCommand, to return one of the 
            Text and AlternateText properties, depending on the command state.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockCommand.ClientTypeName">
            <summary>
            Specifies the name of the type of the client object, which 
            will be instantiated when the command is initialized for the first time.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockCommand.Name">
            <summary>
            Specifies the name of the command. The value of this property is used 
            to determine on the server which command was clicked on the client.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockCommand.Text">
            <summary>
            Specifies the text, which will be displayed as tooltip when the user
            hovers the mouse cursor over the command button.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockCommand.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether a postback to the server 
            automatically occurs when the user drags the RadDock control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockCommand.OnClientCommand">
            <summary>
            Gets or sets the client-side script that executes when the Command event is raised
            on the client.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockCommand.CssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class rendered by the Command item
            on the client.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockCloseCommand.#ctor">
            <summary>
            Initializes a new instance of the DockCloseCommand class
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockCloseCommand.Text">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockCloseCommand.CssClass">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockCloseCommand.Name">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.DockCommandCollection">
            <summary>
            A collection of DockCommand objects in a RadDock control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockCommandCollection.Add(Telerik.Web.UI.DockCommand)">
            <summary>
            Appends a DockCommand to the end of the collection
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockCommandCollection.Insert(System.Int32,Telerik.Web.UI.DockCommand)">
            <summary>
            Inserts a DockCommand to a given index in the collection
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DockCommandEventArgs">
            <summary>
            Provides data for the DockCommand event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockCommandEventArgs.Command">
            <summary>
            Gets the DockCommand item which initiated the event.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DockCommandEventHandler">
            <summary>
            Represents the method that handles a DockCommand event
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">A DockCommandEventArgs that contains the event data</param>
        </member>
        <member name="T:Telerik.Web.UI.DockExpandCollapseCommand">
            <summary>
            Represents the ExpandCollapse command item in a RadDock control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DockToggleCommand">
            <summary>
            Represents a two state command item in a RadDock control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockToggleCommand.#ctor">
            <summary>
            Initializes a new instance of the DockToggleCommand class
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockToggleCommand.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the DockToggleCommand class with the specified 
            clientTypeName, cssClass, alternateCssClass, name, text, alternateText and autoPostBack
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockToggleCommand.GetCssClass">
            <summary>
            Returns the value of the CssClass property if the value of the State 
            property is Primary, otherwise AlternateCssClass.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockToggleCommand.GetText">
            <summary>
            Returns the value of the Text property if the value of the State property is
            Primary, otherwise AlternateText.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockToggleCommand.State">
            <summary>
            Gets or sets the initial state of the command item. If the value of this property
            is Primary, the values of the Text and CssClass properties will be used initially,
            otherwise the command will use AlternateText and AlternateCssClass.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockToggleCommand.AlternateCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class rendered by the Command item
            on the client when State is Alternate.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockToggleCommand.AlternateText">
            <summary>
            Specifies the text, which will be displayed as tooltip when the user
            hovers the mouse cursor over the command button when State is Alternate.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockExpandCollapseCommand.#ctor">
            <summary>
            Initializes a new instance of the DockExpandCollapseCommand class
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockExpandCollapseCommand.State">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockExpandCollapseCommand.Text">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockExpandCollapseCommand.AlternateText">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockExpandCollapseCommand.CssClass">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockExpandCollapseCommand.AlternateCssClass">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockExpandCollapseCommand.Name">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.DockState">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.DockState.ToString">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.DockState.Deserialize(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.DockState.#ctor">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.DockZoneID">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Width">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.ExpandedHeight">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Height">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Index">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Top">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Left">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Closed">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Resizable">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Collapsed">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Pinned">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.UniqueName">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Tag">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Title">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockState.Text">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.IDockLayout">
            <summary>
            Implements methods, needed by RadDock or RadDockZone to register with
            a control which will take care of the dock positions.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.IDockLayout.RegisterDock(Telerik.Web.UI.RadDock)">
            <summary>
            Each dock will use this method in its OnInit event to register
            with the IDockLayout. This is needed in order the layout to 
            be able to manage the dock position, set on the client.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.IDockLayout.UnRegisterDock(Telerik.Web.UI.RadDock)">
            <summary>
            Each dock will use this method in its OnUnload event to unregister
            with the IDockLayout. This is needed in order the layout to 
            be able to manage the dock state properly.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.IDockLayout.RegisterDockZone(Telerik.Web.UI.RadDockZone)">
            <summary>
            Each zone will use this method in its OnInit event to register
            with the IDockLayout. This is needed in order the layout to 
            be able to manage the dock positions, set on the client.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.IDockLayout.UnRegisterDockZone(Telerik.Web.UI.RadDockZone)">
            <summary>
            Each zone will use this method in its OnUnload event to unregister
            with the IDockLayout.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.IDockLayout.SetDockParent(Telerik.Web.UI.RadDock,System.String)">
            <summary>
            Docks the RadDock control inside a child zone with ID=newParentClientID
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadDock">
            <summary>
            RadDock is a control, which enables the developers to move, dock, 
            expand/collapse any DHTML/ASP.NET content
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.OnDockPositionChanged(Telerik.Web.UI.DockPositionChangedEventArgs)">
            <summary>
            Raises the DockPositionChanged event.
            </summary>
            <remarks>
            This method notifies the server control that it should perform actions to
            ensure that it should be docked in the specified RadDockZone on the client.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.OnCommand(Telerik.Web.UI.DockCommandEventArgs)">
            <summary>
            Raises the Command event and allows you to handle the Command event directly.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.Dock(System.String)">
            <summary>
            Docks the RadDock control in the zone with ClientID equal to dockZoneID.
            </summary>
            <remarks>
            The RadDock control should be placed into a RadDockLayout in order this 
            method to work. It is not necessary the layout to be direct parent of the 
            RadDock control.
            </remarks>
            <param name="dockZoneID">The ClientID of the RadDockZone control, where
            the control should be docked.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.Dock(Telerik.Web.UI.RadDockZone)">
            <summary>
            Docks the RadDock control in the specified RadDockZone.
            </summary>
            <param name="dockZone">The RadDockZone control where the control should be docked.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.Undock">
            <summary>
            Removes the RadDock control from its parent RadDockZone.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.GetUniqueName">
            <summary>
            Returns the unique name for the dock, based on the UniqueName and
            the ID properties.
            </summary>
            <returns>
            A string, containing the UniqueName property of the dock, or its 
            ID, if the UniqueName property is not set.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.GetState">
            <summary>
            Returns a DockState object, containing data about the current state
            of the RadDock control.
            </summary>
            <returns>A DockState object, containing data about the current state
            of the RadDock control. This object could be passed to ApplyState()
            method.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.ApplyState(Telerik.Web.UI.DockState)">
            <summary>
            Applies the data from the supplied DockState object.
            </summary>
            <param name="state">
            A DockState object, containing data about the state, which should
            be applied on the RadDock control.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.OnInit(System.EventArgs)">
            <summary>
            Overriden. Handles the Init event. Inherited from WebControl.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.CreateChildControls">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.LoadClientState(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.OnPreRender(System.EventArgs)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.Render(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.AddStyleAttributes(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.CreateControlStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDock.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.AutoPostBack">
            <summary>
            Gets or sets a value, indicating whether the control will initiate postback
            when it is docked/undocked or its position changes.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Closed">
            <summary>
            Gets or sets a value, indicating whether the control is closed (style="display:none;").
            </summary>
            <remarks>
            When the value of this property is true, the control will be hidden, but its HTML will 
            be rendered on the page
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.CloseText">
            <summary>
            Gets or sets the tooltip of the CloseCommand when the corresponding 
            property was not explicitly set on the command object.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Collapsed">
            <summary>
            Gets or sets a value, indicating whether the control is collapsed.
            </summary>
            <remarks>
            When the value of this property is true, the content area of the control 
            will not be visible.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.CollapseText">
            <summary>
            Gets or sets the tooltip of the ExpandCollapseCommand when the dock
            is not collapsed and the corresponding property was not explicitly set 
            on the command object.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Commands">
            <summary>
            Gets a collection of DockCommand objects representing the individual commands within the control titlebar.
            </summary>
            <value>
            A DockCommandCollection that contains a collection of DockCommand objects representing the individual commands within the control titlebar.
            </value>
            <remarks>
            Use the Commands collection to programmatically control the commands buttons within the control titlebar. 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.CommandsAutoPostBack">
            <summary>
            Gets or sets a value, indicating whether the control will initiate postback
            when its command items are clicked.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.ContentContainer">
            <summary>
            Gets the control, where the ContentTemplate will be instantiated in.
            </summary>
            <remarks>
            You can use this property to programmatically add controls to the content area. If you add controls
            to the ContentContainer the Text property will be ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.ContentTemplate">
            <summary>
            Gets or sets the System.Web.UI.ITemplate that contains the controls which will be 
            placed in the control content area.
            </summary>
            <remarks>
            You cannot set this property twice, or when you added controls to the ContentContainer. If you set
            ContentTemplate the Text property will be ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.DefaultCommands">
            <summary>
            Gets or sets the value, defining the commands which will appear
            in the RadDock titlebar when the commands collection is not modified.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.DockHandle">
            <summary>
            Gets or sets the value, defining the behavior of the control titlebar and grips.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.DockMode">
            <summary>
            Gets or sets a value, indicating whether the control could be left undocked.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.DockZoneID">
            <summary>
            Gets the ClientID of the RadDockZone, where the control is docked. When the control is undocked, 
            this property returns string.Empty.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.EnableDrag">
            <summary>
            Gets or sets a value, indicating whether the control could be dragged.
            </summary>
            <remarks>
            When the value of this property is true, the control could be dragged with the mouse
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.ExpandText">
            <summary>
            Gets or sets the tooltip of the ExpandCollapseCommand when the dock
            is collapsed and the corresponding property was not explicitly set 
            on the command object.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.ForbiddenZones">
            <summary>
            Specifies the UniqueNames of the RadDockZone controls, where
            the RadDock control will not be allowed to dock.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Height">
            <summary>
            Gets or sets the height of the RadDock control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.ExpandedHeight">
            <summary>
            Gets or sets the expanded height of the RadDock control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Index">
            <summary>
            Gets the position of the RadDock control in its parent zone. If undocked returns -1.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.LayoutID">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Left">
            <summary>
            Gets or sets the horizontal position of the RadDock control in pixels. This 
            property is ignored when the RadDock control is docked into a RadDockZone.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.OnClientCommand">
            <summary>
            Gets or sets the client-side script that executes when a RadDock Command event is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.OnClientDragStart">
            <summary>
            Gets or sets the client-side script that executes when a RadDock DragStart event is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.OnClientDragEnd">
            <summary>
            Gets or sets the client-side script that executes when a RadDock DragEnd event is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.OnClientDrag">
            <summary>
            Gets or sets the client-side script that executes when a RadDock Drag event is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.OnClientDockPositionChanged">
            <summary>
            Gets or sets the client-side script that executes when the RadDock control changes its position
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.OnClientDockPositionChanging">
            <summary>
            Gets or sets the client-side script that executes when the RadDock control is dropped on to a zone
            before it changes its position
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.OnClientInitialize">
            <summary>
            Gets or sets the client-side script that executes after the RadDock client-side obect initializes
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.OnClientResizeStart">
            <summary>
            Gets or sets the client-side script that executes when a RadDock ResizeStart event is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.OnClientResizeEnd">
            <summary>
            Gets or sets the client-side script that executes when a RadDock ResizeEnd event is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Resizable">
            <summary>
            Gets or sets a value, indicating whether the control is resizable.
            </summary>
            <remarks>
            When the value of this property is true, the control will be resizable 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Pinned">
            <summary>
            Gets or sets a value, indicating whether the control is pinned.
            </summary>
            <remarks>
            When the value of this property is true, the control will retain its position
            if the page scrolled.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.PinText">
            <summary>
            Gets or sets the tooltip of the PinUnpinCommand when the dock
            is not pinned and the corresponding property was not explicitly set 
            on the command object.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Tag">
            <summary>
            Gets or sets the additional data, which could be saved in the DockState.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Text">
            <summary>
            Gets or sets the text which will appear in the control content area. If the ContentTemplate
            or the ContentContainer contain any controls, the value of this property is ignored.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Title">
            <summary>
            Gets or sets the text which will appear in the control titlebar area. If the TitlebarTemplate
            or the TitlebarContainer contain any controls, the value of this property is ignored.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.TitlebarContainer">
            <summary>
            Gets the control, where the TitlebarTemplate will be instantiated in.
            </summary>
            <remarks>
            You can use this property to programmatically add controls to the titlebar. If you add controls
            to the TitlebarContainer the Title property will be ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.TitlebarTemplate">
            <summary>
            Gets or sets the System.Web.UI.ITemplate that contains the controls which will be 
            placed in the control titlebar.
            </summary>
            <remarks>
            You cannot set this property twice, or when you added controls to the TitlebarContainer. If you set
            TitlebarTemplate the Title property will be ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Top">
            <summary>
            Gets or sets the vertical position of the RadDock control in pixels. This 
            property is ignored when the RadDock control is docked into a RadDockZone.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.UniqueName">
            <summary>
            Gets or sets the unique name of the control, which allows the parent RadDockLayout to
            automatically manage its position. If this property is not set, the control ID will be
            used instead. RadDockLayout will throw an exception if it finds two RadDock controls with
            the same UniqueName.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.UnpinText">
            <summary>
            Gets or sets the tooltip of the PinUnpinCommand when the dock
            is pinned and the corresponding property was not explicitly set 
            on the command object.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.Width">
            <summary>
            Gets or sets the width of the RadDock control
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadDock.DockPositionChanged">
            <summary>
            Occurs when the control is docked in another RadDockZone, or its
            in its current zone position was changed.
            </summary>
            <remarks>
            Notifies the server control to perform the needed actions to ensure that
            it should be docked in the specified RadDockZone on the client.
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadDock.Command">
            <summary>
            Occurs when a command is clicked.
            </summary>
            <remarks>
            The event handler receives an argument of type DockCommandEventArgs containing
            data related to this event.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.TagKey">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadDock.CssClassFormatString">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.RadDockLayout">
            <summary>
            Workflow:
            1). OnInit - ensure that the framework will call TrackViewState, LoadViewState and SaveViewState.
            	We expect that all child docks will be created here.
            2). TrackViewState - raise LoadDockLayout event in order to let the developer to supply 
            	the initial parents of the registered docks, because the docks could be created with 
            	different parents than needed.
            2a). LoadViewState - loads and applies the dock parents from the ViewState in order to persist
            	the dock positions between the page postbacks.
            3). LoadPostData - returns true to ensure that RaisePostDataChangedEvent()
            3a). Dock_DockZoneChanged - this event is raised by each dock in its LoadPostData method.
            	We handle this event and store the pair UniqueName/NewDockZoneID in the _clientPositions
            	Dictionary. This Dictionary will be used in #4.
            4). RaisePostDataChangedEvent - sets the parents of the registered docks according their
            	positions, set on the client. These positions are stored in the _clientPositions Dictionary.
            5). OnLoad, other events, such as Click, Command, etc. If you create a dock here it will be
            	rendered on the page, but if it is not recreated in the next OnInit, it will not persist
            	its position, set on the client!
            6). SaveViewState - stores the dock parents in the ViewState in order to persist their positions
            	between the page postbacks. 
            7). Page_SaveStateComplete - raises the SaveDockLayout event to let the developer to save
            	the state in a database or other storage medium.
            Note: The dock parents will be stored in the ViewState if StoreLayoutInViewState is set 
            to true (default). Otherwise the developer should take care of the dock positions when the page
            is posted back.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.OnInit(System.EventArgs)">
            <summary>
            Overriden. Handles the Init event. Inherited from Control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.Page_InitComplete(System.Object,System.EventArgs)">
            <summary>
            The docks must be already created. We will apply their order
            and if there is a state information, we will apply it.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.LoadViewState(System.Object)">
            <summary>
            We will apply the dock positions saved in the ViewState here.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.OnPreRender(System.EventArgs)">
            <summary>
            Overridden. Raises the PreRender event
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.SaveViewState">
            <summary>
            We will loop through all registered docks and will retrieve their
            positions and state. Those positions will be saved in the ViewState
            if StoreLayoutInViewState is true.
            </summary>
            <returns>base.SaveViewState()</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.SetRegisteredDockParents(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Reorders the docks in the control tree, according the supplied parameters.
            </summary>
            <remarks>
            This method will check for uniqueness of the UniqueNames of the registered docks. If
            there are two docks with equal unique names an exception will be thrown.
            </remarks>
            <param name="parents">A Dictionary, containing UniqueName/DockZoneID pairs.</param>
            <param name="indices">A Dictionary, containing UniqueName/Index pairs.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.SetDockParent(Telerik.Web.UI.RadDock,System.String)">
            <summary>
            Docks the dock to a zone with ClientID = newParentClientID.
            </summary>
            <param name="dock">The dock which should be docked.</param>
            <param name="newParentClientID">The ClientID of the new parent.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.GetRegisteredDocksParents">
            <summary>
            Cycles through all registered docks and retrieves their parents. The Dictionary
            returned by this method could be passed to SetRegisteredDockParents().
            </summary>
            <returns>
            A dictionary, containing UniqueName/DockZoneID pairs.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.GetRegisteredDocksIndices">
            <summary>
            Cycles through all registered docks and retrieves their indices. The Dictionary
            returned by this method could be passed to SetRegisteredDockParents().
            </summary>
            <returns>
            A dictionary, containing UniqueName/Index pairs.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.GetRegisteredDocksState(System.Boolean)">
            <summary>
            Cycles through all registered docks and retrieves their state, depending
            on the omitClosedDocks parameter and the value of the Closed property of 
            each RadDock control. The List returned by this method could be used to 
            recreate the docks when the user visits the page again.
            </summary>
            <returns>
            A List, containing UniqueName/DockState pairs.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.GetRegisteredDocksState">
            <summary>
            Cycles through all registered docks and retrieves their state. The List
            returned by this method could be used to recreate the docks when the user
            visits the page again.
            </summary>
            <returns>
            A List, containing UniqueName/DockState pairs.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.OnLoadDockLayout(Telerik.Web.UI.DockLayoutEventArgs)">
            <summary>
            Raises the LoadDockLayout event
            </summary>
            <param name="e">A DockLayoutEventArgs that contains the event data</param>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.OnSaveDockLayout(Telerik.Web.UI.DockLayoutEventArgs)">
            <summary>
            Raises the SaveDockLayout event
            </summary>
            <param name="e">A DockLayoutEventArgs that contains the event data</param>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.EnsureUniqueName(Telerik.Web.UI.RadDock,System.Collections.Generic.List{System.String})">
            <summary>
            Ensures that the dock has unique UniqueName or ID properties to its
            RadDockLayout. If the UniqueName or the ID are not unique, throws an
            exception.
            </summary>
            <returns>
            A string, containing the UniqueName property of the dock, or its 
            ID if the UniqueName property is not set. Got from the RadDock.GetUniqueName().
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.Telerik#Web#UI#IDockLayout#RegisterDock(Telerik.Web.UI.RadDock)">
            <summary>
            Each dock will use this method in its OnInit event to register
            with the RadDockLayout. This is needed in order the layout to 
            be able to manage the dock position, set on the client.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.Telerik#Web#UI#IDockLayout#RegisterDockZone(Telerik.Web.UI.RadDockZone)">
            <summary>
            Each zone will use this method in its OnInit event to register
            with the RadDockLayout. This is needed in order the layout to 
            be able to manage the dock positions, set on the client.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.Telerik#Web#UI#IDockLayout#SetDockParent(Telerik.Web.UI.RadDock,System.String)">
            <summary>
            Docks the dock to a zone with ClientID = newParentClientID.
            </summary>
            <param name="dock">The dock which should be docked.</param>
            <param name="newParentClientID">The ClientID of the new parent.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.Telerik#Web#UI#IDockLayout#UnRegisterDock(Telerik.Web.UI.RadDock)">
            <summary>
            Each dock will use this method in its OnUnload event to unregister
            with the IDockLayout. This is needed in order the layout to 
            be able to manage the dock state properly.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.Telerik#Web#UI#IDockLayout#UnRegisterDockZone(Telerik.Web.UI.RadDockZone)">
            <summary>
            Each zone will use this method in its OnUnload event to unregister
            with the IDockLayout.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.RadDockLayout._clientPositions">
            <summary>
            Each dock will store its position on the client in the DockZoneChanged event.
            In RaisePostDataChangedEvent() RadDockLayout will reorganize the docks according
            this information.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.RadDockLayout._registeredDocks">
            <summary>
            All docks, which are direct or indirect children of the RadDockLayout
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.RadDockLayout._registeredZones">
            <summary>
            All zones, which are direct or indirect children of the RadDockLayout
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDockLayout.GetEmbeddedSkinNames">
            <summary>
            Returns the names of all embedded skins. Used by Telerik.Web.Examples.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDockLayout.RegisteredDocks">
            <summary>
            Returns all registered docks with this RadDockLayout control.
            </summary>
            <returns>
            Returns a read only collection containing all registered docks.
            </returns>
        </member>
        <member name="P:Telerik.Web.UI.RadDockLayout.RegisteredZones">
            <summary>
            Returns all registered zones with this RadDockLayout control.
            </summary>
            <returns>
            Returns a read only collection containing all registered zones.
            </returns>
        </member>
        <member name="E:Telerik.Web.UI.RadDockLayout.LoadDockLayout">
            <summary>
            RadDockLayout will raise the LoadDockLayout event in order to retrieve the parents
            which will be automatically applied on the registered docks. The client
            positions will be applied in a later stage of the lifecycle.
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadDockLayout.SaveDockLayout">
            <summary>
            RadDockLayout will raise this event to let the developer to save
            the parents of the registered docks in a database or other storage
            medium. These parents can be later supplied to the LoadDockLayout event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDockLayout.StoredPositions">
            <summary>
            This is the container where we will store the dock positions, set on the client.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDockLayout.StoredIndices">
            <summary>
            This is the container where we will store the dock positions, set on the client.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDockLayout.StoreLayoutInViewState">
            <summary>
            By default RadDockLayout will store the positions of its inner docks in
            the ViewState. If you want to store the positions in other storage medium
            such as a database, or the Session, set this property to false. Setting this 
            property to false will also minimize the ViewState usage.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDockLayout.Skin">
            <summary>Gets or sets the skin name for the child controls' user interface.</summary>
            <value>A string containing the skin name for the control user interface. The 
            default is string.Empty.</value>
            <remarks>
            <para>
            If this property is set, RadDockLayout will set the Skin and EnableEmbeddedSkins properties
            of each child RadDock and RadDockZone, unless their Skin property is not explicitly set.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDockLayout.IsSkinSet">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDockLayout.EnableEmbeddedSkins">
            <summary>Gets or sets the value, indicating whether to render links to the embedded skins or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedSkins is set to false you will have to register the needed CSS files by hand.
            </para>
            <para>
            If the Skin property is set, RadDockLayout will set the Skin and EnableEmbeddedSkins properties
            of each child RadDock and RadDockZone, unless their Skin property is not explicitly set.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDockLayout.EnableEmbeddedBaseStylesheet">
            <summary>Gets or sets the value, indicating whether to render the link to the embedded base stylesheet of the control or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedBaseStylesheet is set to false you will have to register the needed control base CSS file by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDockLayout.EnableAjaxSkinRendering">
            <summary>Gets or sets the value, indicating whether to render the skin CSS files during Ajax requests</summary>
            <remarks>
            <para>
            If EnableAjaxSkinRendering is set to false you will have to register the needed control base CSS file by hand when adding/showing the control with Ajax.
            </para>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadDockZone">
            <summary>
            RadDockZone is a control which represents a virtual placeholder, where
            RadDock controls could be docked.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDockZone.GetUniqueName">
            <summary>
            Returns the unique name for the dock, based on the UniqueName and
            the ID properties.
            </summary>
            <returns>
            A string, containing the UniqueName property of the dock, or its 
            ID, if the UniqueName property is not set.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadDockZone.AddedControl(System.Web.UI.Control,System.Int32)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDockZone.RemovedControl(System.Web.UI.Control)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDockZone.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDockZone.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDockZone.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDockZone.OnInit(System.EventArgs)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadDockZone.OnPreRender(System.EventArgs)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadDockZone.Controls">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadDockZone.TagKey">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadDockZone.CssClassFormatString">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadDockZone.FitDocks">
            <summary>
            Gets or sets a value, indicating whether the control will set the size
            of the docked RadDock controls to 100% depending the control Orientation.
            </summary>
            <remarks>
            When Orientation is Horizontal, the Height of the docked RadDock controls
            will become 100%, otherwise the Width will become 100%.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDockZone.HighlightedCssClass">
            <summary>
            Gets or sets a css class name, which will be applied when the RadDockZone is highlighted.
            If this property is not set, the control will not have a highlighted style.
            </summary>       
        </member>
        <member name="P:Telerik.Web.UI.RadDockZone.UniqueName">
            <summary>
            Gets or sets the unique name of the control. If this property is not set, the control ID will be
            used instead. RadDockLayout will throw an exception if it finds two RadDockZone controls with
            the same UniqueName.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDockZone.Orientation">
            <summary>
            Gets or sets a value that specifies the dimension in which docked RadDock controls are arranged
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDockZone.MinWidth">
            <summary>
            Gets or sets the minimum width of the RadDockZone control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDockZone.MinHeight">
            <summary>
            Gets or sets the minimum height of the RadDockZone control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDockZone.LayoutID">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.RadSlider">
            <summary>
            Telerik RadSlider is a flexible UI component that allows users to select a value from a defined range using a smooth or step-based slider.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ControlItemContainer.AddProperty(System.Web.UI.ScriptComponentDescriptor,System.String,System.Object,System.Object)">
            <summary>
            Adds the property to the ScriptComponentDescriptor, if it's value is different from the given default.
            </summary>
            <param name="descriptor">The descriptor to add the property to.</param>
            <param name="name">The property name.</param>
            <param name="value">The current value of the property.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Telerik.Web.UI.ControlItemContainer.GetXml">
            <summary>
            	Gets an XML string representing the state of the control. All child items and their properties are serialized in this
            	string.
            </summary>
            <returns>
            	A String representing the state of the control - child items, properties etc.
            </returns>
            <remarks>
            	Use the GetXml method to get the XML state of the control. You can cache it and then restore it using
            	the <see cref="M:Telerik.Web.UI.ControlItemContainer.LoadXml(System.String)">LoadXml</see> method.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.ControlItemContainer.LoadXml(System.String)">
            <summary>
            	Loads the control from an XML string.
            </summary>
            <param name="xml">
            	The string representing the XML from which the control will be populated.
            </param>
            <remarks>
            	Use the LoadXml method to populate the control from an XML string. You can use it along the <see cref="M:Telerik.Web.UI.ControlItemContainer.GetXml">GetXml</see>
            	method to implement caching.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.ControlItemContainer.ValidationGroup">
            <summary>
            	Gets or sets the name of the validation group to which this validation
                control belongs.
            </summary>
            <value>
            The name of the validation group to which this validation control belongs. The
            default is an empty string (""), which indicates that this property is not set.
            </value>
            <remarks>
                This property works only when <see cref="P:Telerik.Web.UI.ControlItemContainer.CausesValidation">CausesValidation</see>
                is set to true.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.ControlItemContainer.PostBackUrl">
            <summary>
             <para>Gets or sets the URL of the page to post to from the current page when a tab
                from the tabstrip is clicked.</para>
            </summary>
            <value>
            The URL of the Web page to post to from the current page when a tab from the
            tabstrip control is clicked. The default value is an empty string (""), which causes
            the page to post back to itself.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.ControlItemContainer.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when an item within
            the control is selected.
            </summary>
            <value>
            	<strong>true</strong> if validation is performed when an item is selected;
            otherwise, <b>false</b>. The default value is <b>true</b>.
            </value>
            <remarks>
            	<para>By default, page validation is performed when an item is selected. Page
                validation determines whether the input controls associated with a validation
                control on the page all pass the validation rules specified by the validation
                control. You can specify or determine whether validation is performed on both the
                client and the server when an item is clicked by using the <b>CausesValidation</b>
                property. To prevent validation from being performed, set the
                <b>CausesValidation</b> property to <b>false</b>.</para>
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadSlider.OnValueChanged(System.EventArgs)">
            <summary>
            Gets or sets a value indicating the server-side event handler that is called 
            when the value of the slider has been changed.
            </summary>
            <value>
            A string specifying the name of the server-side event handler that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnValueChanged</strong>
            		<font color="black">event handler that is called 
            when the value of the slider has been changed.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadSlider object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnValueChanged</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadSlider ID="RadSlider1"<br/>
                         runat= "server"<br/>
            			<strong>OnValueChanged="OnValueChanged"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadSlider&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadSlider.ClearSelection">
            <summary>
            	<para>Clears out the list selection and sets the <strong>Selected</strong> property
                of all items to false.</para>
            </summary>
            <remarks><para>Use this method to reset the control so that no items are selected.</para></remarks>
            <example>
            	<code lang="VB" title="[New Example]">
            RadComboBox1.ClearSelection()
                </code>
            	<code lang="CS" title="[New Example]">
            RadComboBox1.ClearSelection();
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadSlider.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriterTag"></see>. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"></see> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="F:Telerik.Web.UI.RadSlider.originalEnabled">
            <summary>
            The Enabled property is reset in AddAttributesToRender in order
            to avoid setting disabled attribute in the control tag (this is
            the default behavior). This property has the real value of the 
            Enabled property in that moment.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.Value">
            <summary>
            Get/Set the value of the slider
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.SelectionStart">
            <summary>
            Get/Set the SelectionStart of the slider
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.SelectionEnd">
            <summary>
            Get/Set the SelectionEnd of the slider
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.IsSelectionRangeEnabled">
            <summary>
            Get/Set the IsSelectionRangeEnabled of the slider
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.IsDirectionReversed">
            <summary>
            Get/Set the IsDirectionReversed of the slider
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.LiveDrag">
            <summary>
            Get/Set the LiveDrag of the slider
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.ItemType">
            <summary>
            Get/Set the ItemType of the slider items
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.TrackPosition">
            <summary>
            Get/Set the TrackPosition of the slider track
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.Orientation">
            <summary>
            Get/Set orientation of the slider
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.SlideStep">
            <summary>
            Get/Set the step with which the slider value will change
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.SmallChange">
            <summary>
            Get/Set the step with which the slider value will change
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.ClickOffset">
            <summary>
            Get/Set the delta with which the value will change 
            when user click on the track
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.LargeChange">
            <summary>
            Get/Set the delta with which the value will change 
            when user click on the track
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.AnimationDuration">
            <summary>
            Get/Set the length of the animation
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.Length">
            <summary>
            Get/Set the length of the slider including the decrease and increase handles.
            </summary>
            <remarks>
            If the slider is horizontal the width will be set, otherwise the height will be set.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.Width">
            <summary>
            Get/Set the Width of the slider including the decrease and increase handles.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.Height">
            <summary>
            Get/Set the Height of the slider including the decrease and increase handles.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.AutoPostBack">
            <summary>
            True to cause a postback on value change.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.MinimumValue">
            <summary>
            Get/Set the min value of the slider
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.MaximumValue">
            <summary>
            Get/Set the max value of the slider
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.TrackMouseWheel">
            <summary>
            Enable/Disable whether the mouse wheel should be handled
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.ShowDragHandle">
            <summary>
            Show/Hide the drag handle
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.ShowDecreaseHandle">
            <summary>
            Show/Hide the decrease handle
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.ShowIncreaseHandle">
            <summary>
            Show/Hide the increase handle
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.DecreaseText">
            <summary>
            Gets or sets the text for the decrease handle
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.IncreaseText">
            <summary>
            Gets or sets the text for the increase handle
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.DragText">
            <summary>
            Gets or sets the text for the increase handle
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.OnClientLoaded">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadSlider</strong> control is initialized.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientLoaded</strong>
            		<font color="black">client-side event handler is called when the <strong>RadSlider</strong>
                is initialized.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadSlider object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientLoaded</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnSliderLoadHandler(sender, args)<br/>
                         {<br/>
                         var slider = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadSlider ID="RadSlider1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientLoaded="OnSliderLoadHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadSlider&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.OnClientSlideStart">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called before
            the sliding is started.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientSlideStart</strong>
            		<font color="black">client-side event handler is called before
            the sliding is started.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadSlider object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientSlideStart</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnSlideBeginHandler(sender, args)<br/>
                         {<br/>
                         var slider = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadSlider ID="RadSlider1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientSlideStart="OnSlideBeginHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadSlider&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.OnClientSlide">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called 
            while the handle is being slided.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientSlide</strong>
            		<font color="black">client-side event handler that is called 
            while the handle is being slided.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadSlider object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientSlide</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnSlidingHandler(sender, args)<br/>
                         {<br/>
                         var slider = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadSlider ID="RadSlider1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientSlide="OnSlidingHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadSlider&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.OnClientSlideEnd">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called 
            when slide has ended.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientSlideEnd</strong>
            		<font color="black">client-side event handler that is called 
            when slide has ended.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadSlider object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientSlideEnd</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnSlideHandler(sender, args)<br/>
                         {<br/>
                         var slider = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadSlider ID="RadSlider1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientSlideEnd="OnSlideHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadSlider&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.OnClientValueChange">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called 
            when the value of the slider has been changed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientValueChange</strong>
            		<font color="black">client-side event handler that is called 
            when the value of the slider has been changed.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadSlider object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientValueChange</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnValueChangeHandler(sender, args)<br/>
                         {<br/>
                         var slider = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadSlider ID="RadSlider1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientValueChange="OnValueChangeHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadSlider&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.OnClientBeforeValueChange">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called 
            just before the value of the slider changes.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientBeforeValueChange</strong>
            		<font color="black">client-side event handler that is called 
            just before the value of the slider changes.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadSlider object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientBeforeValueChange</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientBeforeValueChange(sender, args)<br/>
                         {<br/>
                         var slider = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadSlider ID="RadSlider1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientBeforeValueChange="OnClientBeforeValueChange"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadSlider&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSlider.Items">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see> object that contains the items of the current RadSlider control.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see> that contains the items of the current RadSlider control. By default
            	the collection is empty (RadSlider is a numeric slider).
            </value>
            <remarks>
            	Use the <b>Items</b> property to access the child items of RadSlider
            You can add, remove or modify items from the <b>Items</b> collection.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SplitterItem.Index">
            <summary>
            This property is being used internally by the <strong>RadSplitter</strong> control.
            Setting it may lead to unpredictable results.
            </summary>
            <remarks>
                The <strong>Index</strong> property is used internally.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.MinWidth">
            <summary>
            Sets/gets the min width to which the pane can be resized
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.MaxWidth">
            <summary>
            Sets/gets the max width to which the pane can be resized
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.MinHeight">
            <summary>
            Sets/gets the min height to which the pane can be resized
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.MaxHeight">
            <summary>
            Sets/gets the max height to which the pane can be resized
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.Scrolling">
            <summary>
            Sets/gets whether the content of the pane will get a scrollbars when it exceeds the pane area size
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.OnClientCollapsed">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadPane</strong> is collapsed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientCollapsed</strong>
            		<font color="black">client-side event handler is called when the <strong>RadPane</strong>
                is collapsed.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>paneObj</strong> (the
                    instance of the RadPane).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientCollapsed</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientCollapsedHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.paneObj.ID);<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadPane ID="RadPane1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientCollapsed="OnClientCollapsedHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadPane&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.OnClientBeforeCollapse">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called before
            the <strong>RadPane</strong> is collapsed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientBeforeCollapse</strong>
            		<font color="black">client-side event handler is called before the <strong>RadPane</strong>
                is collapsed.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>paneObj</strong> (the
                    instance of the RadPane).</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientBeforeCollapse</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientBeforeCollapseHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.paneObj.ID);<br/>
            			 return true;//false to cancel the event<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadPane ID="RadPane1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientBeforeCollapse="OnClientBeforeCollapseHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadPane&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.OnClientExpanded">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadPane</strong> is expanded.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientExpanded</strong>
            		<font color="black">client-side event handler is called when the <strong>RadPane</strong>
                is expanded.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>paneObj</strong> (the
                    instance of the RadPane).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientExpanded</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientExpandedHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.paneObj.ID);<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadPane ID="RadPane1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientExpanded="OnClientExpandedHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadPane&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.OnClientBeforeExpand">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called before
            the <strong>RadPane</strong> is expanded.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientBeforeExpand</strong>
            		<font color="black">client-side event handler is called before the <strong>RadPane</strong>
                is expanded.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>paneObj</strong> (the
                    instance of the RadPane).</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientBeforeExpand</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientBeforeExpandHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.paneObj.ID);<br/>
            			 return true;//false to cancel the event<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadPane ID="RadPane1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientBeforeExpand="OnClientBeforeExpandHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadPane&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.OnClientResized">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadPane</strong> is resized.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientResized</strong>
            		<font color="black">client-side event handler is called when the <strong>RadPane</strong>
                is resized.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with the following properties:
             			<list type="bullet">
            				<item><strong>paneObj</strong> - the pane object that has been resized</item>
            				<item><strong>oldWidth</strong> - the width of the pane before the resize</item>
            				<item><strong>oldHeight</strong> - the height of the pane before the resize</item>
            				<item><strong>newWidth</strong> - the current pane width</item>
            				<item><strong>newHeight</strong> - the current pane height</item>
            			</list>
                    </item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientResized</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientResizedHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.paneObj.ID);<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadPane ID="RadPane1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientResized="OnClientResizedHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadPane&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.OnClientBeforeResize">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called before
            the <strong>RadPane</strong> is resized.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientBeforeResize</strong>
            		<font color="black">client-side event handler is called before the <strong>RadPane</strong>
                is resized.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with the following properties:
             			<list type="bullet">
            				<item><strong>paneObj</strong> - the pane object that will be resized</item>
            				<item><strong>delta</strong> - the delta with which the pane will be resized</item>
            				<item><strong>direction</strong> - the direction in which the pane will be resized. You can use the Telerik.Web.UI.SplitterDirection hash to check the direction. The 2 possible values are : Forward and Backward</item>
            			</list>
                    </item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientBeforeResize</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientBeforeResizeHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.paneObj.ID);<br/>
            			 return true;//false to cancel the event<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadPane ID="RadPane1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientBeforeResize="OnClientBeforeResizeHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadPane&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.SplitterPaneBase.PersistScrollPosition">
            <summary>
            Sets/gets whether the scrolls position will be persisted acrosss postbacks
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadPane.GetExpandedSize">
            <summary>
            Get the expanded Size of the pane, when the pane is collapsed. 
            In case the Orientation of the splitter is Vertical, returns the expanded Height, otherwise, the expanded Width. 
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadPane.SetExpandedSize(System.Web.UI.WebControls.Unit)">
            <summary>
            Set the expanded Size of the pane, when the pane is collapsed. 
            In case the Orientation of the splitter is Vertical, sets the expanded Height, otherwise, the expanded Width. 
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadPane.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadPane.RenderContents(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadPane.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadPane.Collapsed">
            <summary>
            Sets/gets whether the pane is collapsed
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPane.Locked">
            <summary>
            Sets/gets whether the pane is locked
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPane.ContentUrl">
            <summary>
            The URL of the page to load inside the pane.
            </summary>
            <remarks>
            Use the <strong>ContentUrl</strong> property if you want to load external page 
            into the pane content area.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPane.Width">
            <summary>
            Get/Set the Width of the pane.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPane.Height">
            <summary>
            Get/Set the Height of the pane.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPane.Splitter">
            <summary>
            Reference to the parent Splitter object
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadSlidingPane.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadSlidingPane.RenderContents(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadSlidingPane.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.MinHeight">
            <summary>
            Sets/gets the min height to which the pane can be resized
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.Height">
            <summary>
            Sets/gets the height of the sliding pane
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.MinWidth">
            <summary>
            Sets/gets the min width to which the pane can be resized
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.Width">
            <summary>
            Sets/gets the width of the sliding pane
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.EnableResize">
            <summary>
            Sets/gets whether the resize bar will be active
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.IconUrl">
            <summary>
            Gets or sets the path to an image to display for the item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.TabView">
            <summary>
            Sets/gets way the tab of the pane is rendered
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.EnableDock">
            <summary>
            Sets/gets whether the pane can be docked
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.Title">
            <summary>
            The title that will be displayed when the pane is docked/docked
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.ResizeText">
            <summary>
            Gets or sets the text for resize bar
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.UndockText">
            <summary>
            Gets or sets the text for undock image
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.DockText">
            <summary>
            Gets or sets the text for dock image
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.CollapseText">
            <summary>
            Gets or sets the text for collapse image
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.OnClientDocked">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadSlidingPane</strong> is docked.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientDocked</strong>
            		<font color="black">client-side event handler is called when the <strong>RadSlidingPane</strong>
                is docked.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>paneObj</strong> (the
                    instance of the RadSlidingPane).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientDocked</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientDockedHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.paneObj.ID);<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadSlidingPane ID="RadSlidingPane1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientDocked="OnClientDockedHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadSlidingPane&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.OnClientUndocked">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadSlidingPane</strong> is undocked.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientUndocked</strong>
            		<font color="black">client-side event handler is called when the <strong>RadSlidingPane</strong>
                is docked.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>paneObj</strong> (the
                    instance of the RadSlidingPane).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientUndocked</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientUndockedHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.paneObj.ID);<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadSlidingPane ID="RadSlidingPane1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientUndocked="OnClientUndockedHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadSlidingPane&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.OnClientBeforeDock">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called before
            the <strong>RadSlidingPane</strong> is docked.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientBeforeDock</strong>
            		<font color="black">client-side event handler is called before the <strong>RadSlidingPane</strong>
                is docked.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with the following properties:
             			<list type="bullet">
            				<item><strong>paneObj</strong> - the pane object that will be docked</item>
            			</list>
                    </item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientBeforeDock</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientBeforeDockHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.paneObj.ID);<br/>
            			 return true;//false to cancel the event<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadSlidingPane ID="RadSlidingPane1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientBeforeDock="OnClientBeforeDockHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadSlidingPane&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.OnClientBeforeUndock">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called before
            the <strong>RadSlidingPane</strong> is undocked.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientBeforeUndock</strong>
            		<font color="black">client-side event handler is called before the <strong>RadSlidingPane</strong>
                is undocked.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with the following properties:
             			<list type="bullet">
            				<item><strong>paneObj</strong> - the pane object that will be undocked</item>
            			</list>
                    </item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientBeforeUndock</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientBeforeUndockHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.paneObj.ID);<br/>
            			 return true;//false to cancel the event<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadSlidingPane ID="RadSlidingPane1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientBeforeUndock="OnClientBeforeUndockHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadSlidingPane&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingPane.SlidingZone">
            <summary>
            Reference to the parent SlidingZone object
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SplitterItemsContainer.Items">
            <summary>
            Gets the collection of child items in the <strong>RadSplitter</strong>
            control.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.SplitterItemsCollection">SplitterItemsCollection</see> that represents the children within
                the <strong>RadSplitter</strong> control. The default is empty collection.
            </value>
            <remarks>
            Use this property to retrieve the child items of the <strong>RadSplitter</strong>
            control. You can also use it to programmatically add or remove items.
            </remarks>
            <example>
                The following example demonstrates how to programmatically add items. 
                <code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                if (!Page.IsPostBack)
                {
                    RadPane pane1 = new RadPane();
                    RadSplitter1.Items.Add(pane1);
             
                    RadSplitbar splitBar1 = new RadSplitBar();
                    RadSplitter1.Items.Add(splitBar1);
                
                    RadPane pane2 = new RadPane();
                    RadSplitter1.Items.Add(pane2);
                }
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                If Not Page.IsPostBack Then
                    Dim pane1 As RadPane = New RadPane()
                    RadSplitter1.Items.Add(pane1)
             
                    Dim splitBar1 As RadSplitbar = New RadSplitBar()
                    RadSplitter1.Items.Add(splitBar1)
             
                    Dim pane2 As RadPane = New RadPane()
                    RadSplitter1.Items.Add(pane2)
            
                End If
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadSlidingZone.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadSlidingZone.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadSlidingZone.RenderContents(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadSlidingZone.RenderPanes(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingZone.Height">
            <summary>
            Sets/gets the height of the sliding zone
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingZone.Width">
            <summary>
            Sets/gets the width of the sliding zone
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingZone.ClickToOpen">
            <summary>
            Sets/gets whether the pane should be clicked in order to open
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingZone.DockedPaneId">
            <summary>
            Sets/gets the id of the pane that is will be displayed docked
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingZone.ExpandedPaneId">
            <summary>
            Sets/gets the id of the pane that is will be expanded
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingZone.SlideDirection">
            <summary>
            Sets/gets the direction in which the panes will slide
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingZone.ResizeStep">
            <summary>
            Sets/gets the step in px in which the resize bar will be moved when dragged.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingZone.SlideDuration">
            <summary>
            Sets/gets the duration of the slide animation in milliseconds.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingZone.OnClientLoaded">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadSlidingZone</strong> control is initialized.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientLoaded</strong>
            		<font color="black">client-side event handler is called when the <strong>RadSlidingZone</strong>
                is initialized.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>slidingZoneObj</strong> (the
                    instance of the RadSlidingZone object).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientLoaded</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnSlidingZoneLoadHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.slidingZoneObj.ID);<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadSlidingZone ID="RadSlidingZone1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientLoaded="OnSlidingZoneLoadHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadSlidingZone&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSlidingZone.Splitter">
            <summary>
            Reference to the parent Splitter object
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadSplitBar.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadSplitBar.RenderCollapseBars(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadSplitBar.RenderContents(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadSplitBar.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitBar.CollapseMode">
            <summary>
            Sets/gets the collapse mode of the splitbar
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitBar.EnableResize">
            <summary>
            Sets/gets whether the resize bar will be active
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitBar.ResizeStep">
            <summary>
            Sets/gets the step in px in which the resize bar will be moved when dragged.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitBar.Splitter">
            <summary>
            Reference to the parent Splitter object
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitBar.CollapseExpandPaneText">
            <summary>
            Gets or sets the text for collapse bar images
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.SplitBarCollapseMode">
            <summary>
            Specifies the collapse mode of a splitbar
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SplitBarCollapseMode.None">
            <summary>
            No collapse is available
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitBarCollapseMode.Forward">
            <summary>
            Forward collapse availalbe only
            </summary>
            <value>2</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitBarCollapseMode.Backward">
            <summary>
            Backward collapse availalbe only
            </summary>
            <value>3</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitBarCollapseMode.Both">
            <summary>
            Both - forward and backward collapse available
            </summary>
            <value>4</value>
        </member>
        <member name="T:Telerik.Web.UI.RadSplitter">
            <summary>
            telerik RadSplitter is a flexible UI component for ASP.NET applications which allows users to manage effectively the content size and layout.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadSplitter.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadSplitter.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadSplitter.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadSplitter.RenderContents(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.HeightOffset">
            <summary>
            Sets/gets the pixels that should be substracted from the splitter height when its height is defined in percent
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.FullScreenMode">
            <summary>
            Resize the splitter in 100% of the page
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.VisibleDuringInit">
            <summary>
            Whether the Splitter should be visible during its initialization or not
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.Height">
            <summary>
            Sets/gets the height of the splitter
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.Width">
            <summary>
            Sets/gets the width of the splitter
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.LiveResize">
            <summary>
            Sets/gets whether the rendering of the splitter panes is previewed during the resize
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.ResizeWithBrowserWindow">
            <summary>
            Sets/gets whether the splitter will be resized when the browser window is resized. The Width or Height properties should be defined in percent.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.ResizeWithParentPane">
            <summary>
            Sets/gets whether the splitter will resize when the parent pane is resized
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.Orientation">
            <summary>
            Specify the orientation of the panes inside the splitter
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.ResizeMode">
            <summary>
            Set/Get the way the panes are resized
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.BorderSize">
            <summary>
            Set/Get size of the splitter border
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.PanesBorderSize">
            <summary>
            Set/Get size of the splitter panes border
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.SplitBarsSize">
            <summary>
            Set/Get size of the split bars - in pixels
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.OnClientLoaded">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadSplitter</strong> control is initialized.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientLoaded</strong>
            		<font color="black">client-side event handler is called when the <strong>RadSplitter</strong>
                is initialized.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>splitterObj</strong> (the
                    instance of the RadSplitter object).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientLoaded</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnSplitterLoadHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.splitterObj.ID);<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadSplitter ID="RadSplitter1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientLoaded="OnSplitterLoadHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadSplitter&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.OnClientResized">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadSplitter</strong> is resized.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientResized</strong>
            		<font color="black">client-side event handler is called when the <strong>RadSplitter</strong>
                is resized.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with the following properties:
             			<list type="bullet">
            				<item><strong>splitterObj</strong> - the splitter object that has been resized</item>
            				<item><strong>oldWidth</strong> - the width of the splitter before the resize</item>
            				<item><strong>oldHeight</strong> - the height of the splitter before the resize</item>
            				<item><strong>newWidth</strong> - the current splitter width</item>
            				<item><strong>newHeight</strong> - the current splitter height</item>
            			</list>
                    </item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientResized</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientResizedHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.splitterObj.ID);<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadSplitter ID="RadSplitter1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientResized="OnClientResizedHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadSplitter&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSplitter.OnClientBeforeResize">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called before
            the <strong>RadSplitter</strong> is resized.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientBeforeResize</strong>
            		<font color="black">client-side event handler is called before the <strong>RadSplitter</strong>
                is resized.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>event</strong>, the event object;</item>
            		<item><strong>eventArgs</strong> with the following properties:
             			<list type="bullet">
            				<item><strong>splitterObj</strong> - the splitter object that will be resized</item>
            				<item><strong>newWidth</strong> - the new width that will be applied to the <strong>RadSplitter</strong> object</item>
            				<item><strong>newHeight</strong> - the new height that will be applied to the <strong>RadSplitter</strong> object</item>
            			</list>
                    </item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientBeforeResize</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientBeforeResizeHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.splitterObj.ID);<br/>
            			 return true;//false to cancel the event<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radspl:RadSplitter ID="RadSplitter1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientBeforeResize="OnClientBeforeResizeHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radspl:RadSplitter&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.SplitterCollapseDirection">
            <summary>
            Specifies the collapse direction options of the splitter bar
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SplitterCollapseDirection.Forward">
            <summary>
            On collapse the current pane is collapsed
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitterCollapseDirection.Backward">
            <summary>
            On collapse the next pane is resized
            </summary>
            <value>2</value>
        </member>
        <member name="T:Telerik.Web.UI.SplitterItemsCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.SplitterItem">SplitterItem</see> objects in a
                <see cref="T:Telerik.Web.UI.RadSplitter">RadSplitter</see> control.
            </summary>
            <remarks>
            	<para>The <strong>SplitterItemsCollection</strong> class represents a collection of
                <strong>SplitterItem</strong> objects. The <strong>SplitterItem</strong> objects in turn represent 
                panes items within a <strong>RadSplitter</strong> control.</para>
            	<list type="bullet">
            		<item>
                        Use the <see cref="P:Telerik.Web.UI.SplitterItemsCollection.Item(System.Int32)">indexer</see> to programmatically retrieve a
                        single SplitterItem from the collection, using array notation.
                    </item>
            		<item>
                        Use the <strong>Count</strong> property to determine the total
                        number of panes in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)">Add</see> method to add panes in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)">Remove</see> method to remove panes from the
                        collection.
                    </item>
            	</list>
            </remarks>
            <moduleiscollection/>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.#ctor(Telerik.Web.UI.SplitterItemsContainer)">
            <summary>Initializes a new instance of the <strong>SplitterItemsCollection</strong> class.</summary>
            <remarks>Use the constructor to create a new <strong>SplitterItemsCollection</strong> class.</remarks>
            <param name="container">The container of the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.Add(Telerik.Web.UI.SplitterItem)">
            <summary>Appends a <see cref="T:Telerik.Web.UI.SplitterItem">SplitterItem</see> to the end of the collection.</summary>
            <example>
            	<para>The following example demonstrates how to programmatically add items in a
                <strong>RadSplitter</strong> control.</para>
            	<code lang="CS">
            RadPane pane = new RadPane();
             
            RadMenu1.Panes.Add(pane);
                </code>
            	<code lang="VB">
            Dim pane As RadPane = New RadPane()
             
            RadMenu1.Panes.Add(pane)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.Add(System.Web.UI.Control)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.Insert(System.Int32,Telerik.Web.UI.SplitterItem)">
            <summary>
                Inserts the specified <see cref="T:Telerik.Web.UI.SplitterItem">SplitterItem</see> in the collection at the specified
                index location.
            </summary>
            <remarks>
            Use the <b>Insert</b> method to add a <strong>SplitterItem</strong> to the collection at
            the index specified by the <i>index</i> parameter.
            </remarks>
            <param name="index">The location in the collection to insert the <strong>SplitterItem</strong>.</param>
            <param name="item">The <strong>SplitterItem</strong> to add to the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.AddAt(System.Int32,System.Web.UI.Control)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.IndexOf(Telerik.Web.UI.SplitterItem)">
            <summary>
                Determines the index value that represents the position of the specified
                <paramref name="item">SplitterItem</paramref> in the collection.
            </summary>
            <returns>
            The zero-based index position of the specified <strong>SplitterItem</strong> in the
            collection.
            </returns>
            <remarks>
            Use the <b>IndexOf</b> method to determine the index value of the
            <strong>SplitterItem</strong> specified by the <i>item</i> parameter in the collection. If an item
            with this criteria is not found in the collection, -1 is returned.
            </remarks>
            <param name="item">A <strong>SplitterItem</strong> to search for in the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.IndexOf(System.Web.UI.Control)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.Contains(Telerik.Web.UI.SplitterItem)">
            <summary>
                Determines whether the collection contains the specified
                <paramref name="item">SplitterItem</paramref>.
            </summary>
            <returns>
            	<strong>true</strong> if the collection contains the specified item; otherwise,
            <b>false</b>.
            </returns>
            <remarks>
            Use the <b>Contains</b> method to determine whether the <strong>SplitterItem</strong>
            specified by the <i>item</i> parameter is in the collection.
            </remarks>
            <param name="item">A SplitterItem to search for in the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.Contains(System.Web.UI.Control)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.Remove(Telerik.Web.UI.SplitterItem)">
            <summary>Removes the specified <paramref name="item">SplitterItem</paramref> from the collection.</summary>
            <remarks>
            Use the <b>Remove</b> method to remove a <strong>SplitterItem</strong> from the
            collection.
            </remarks>
            <example>
                The following example demonstrates how to programmatically remove a SplitterItem from a
                <strong>RadSplitter</strong> control. 
                <code lang="CS">
            RadPane pane = RadSplitter1.GetPaneById("pane1");
            if (pane != null)
            {
                RadSplitter1.Panes.Remove(pane);
            }
                </code>
            	<code lang="VB">
            Dim pane As RadPane = RadSplitter1.GetPaneById("pane1")
            If Not pane Is Nothing Then
                RadSplitter1.Panes.Remove(pane)
            End If
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.Remove(System.Web.UI.Control)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.RemoveAt(System.Int32)">
            <summary>Removes the <see cref="T:Telerik.Web.UI.SplitterItem">SplitterItem</see> at the specified index from the collection.</summary>
            <remarks>
            	<para>Use the <b>RemoveAt</b> method to remove the <strong>SplitterItem</strong> at the
                specified index from the collection.</para>
            </remarks>
            <param name="index">The index of the <strong>SplitterItem</strong> to remove.</param>
        </member>
        <member name="M:Telerik.Web.UI.SplitterItemsCollection.Clear">
            <summary>Removes all items from the collection.</summary>
            <remarks>
                Use the <strong>Clear</strong> method to remove all items from the collection. The
                <strong>Count</strong> property is set to 0.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SplitterItemsCollection.Item(System.Int32)">
            <summary>
            	<para>
                    Gets a <see cref="T:Telerik.Web.UI.SplitterItem">SplitterItem</see> at the specified index in the collection.
                </para>
            </summary>
            <remarks>
            	<para>Use this indexer to get a <strong>SplitterItem</strong> from the collection at the
                specified index, using array notation.</para>
            </remarks>
            <param name="index">
            The zero-based index of the <strong>SplitterItem</strong> to retrieve from the
            collection.
            </param>		
        </member>
        <member name="T:Telerik.Web.UI.SplitterPaneScrolling">
            <summary>
            Specifies the scrolling options for the RadPane object
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SplitterPaneScrolling.Both">
            <summary>
            Both X and Y scrolls are displayed
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitterPaneScrolling.X">
            <summary>
            Only the scroll on X dimension is displayed
            </summary>
            <value>2</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitterPaneScrolling.Y">
            <summary>
            Only the scroll on Y dimension is displayed
            </summary>
            <value>3</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitterPaneScrolling.None">
            <summary>
            No scrolls are displayed
            </summary>
            <value>1</value>
        </member>
        <member name="T:Telerik.Web.UI.SplitterResizeMode">
            <summary>
            Specifies resize mode options for the RadSplitter object
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SplitterResizeMode.AdjacentPane">
            <summary>
            On resize of a pane the adjacent pane is resized also
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitterResizeMode.Proportional">
            <summary>
            On resize of a pane the other panes are resize proportionaly
            </summary>
            <value>2</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitterResizeMode.EndPane">
            <summary>
            On resize of a pane the end pane in the splitter is resized also
            </summary>
            <value>3</value>
        </member>
        <member name="T:Telerik.Web.UI.SplitterSlideDirection">
            <summary>
            Specifies the available directions for the slide panes
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SplitterSlideDirection.Right">
            <summary>
            Slide panes are sliding from left to right
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitterSlideDirection.Left">
            <summary>
            Slide panes are sliding from right to left
            </summary>
            <value>2</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitterSlideDirection.Top">
            <summary>
            Slide panes are sliding from top to bottom
            </summary>
            <value>3</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitterSlideDirection.Bottom">
            <summary>
            Slide panes are sliding from bottom to top
            </summary>
            <value>4</value>
        </member>
        <member name="T:Telerik.Web.UI.SplitterSlidePaneTabView">
            <summary>
            Specifies views of the pane tab
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SplitterSlidePaneTabView.TextAndImage">
            <summary>
            Pane tab is displayed using its Title and Icon
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitterSlidePaneTabView.TextOnly">
            <summary>
            Pane tab is displayed using only its Title
            </summary>
            <value>2</value>
        </member>
        <member name="F:Telerik.Web.UI.SplitterSlidePaneTabView.ImageOnly">
            <summary>
            Pane tab is displayed using only its Icon
            </summary>
            <value>3</value>
        </member>
        <member name="T:Telerik.Web.UI.ObjectWithState">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.AjaxUpdatedControl">
            <summary>
            This class holds a reference to a single updated control and the loading panel to
            display.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.AjaxUpdatedControl.#ctor(System.String,System.String)">
            <summary>
            A constructor of AjaxUpdatedControl which takes the control to be updated and the
            id of the loading panel to display as parameters.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.AjaxUpdatedControl.#ctor">
            <summary>The default constructor of the AjaxUpdatedControl class.</summary>
        </member>
        <member name="P:Telerik.Web.UI.AjaxUpdatedControl.ControlID">
            <summary>The ID of the web control that is to be updated.</summary>
        </member>
        <member name="P:Telerik.Web.UI.AjaxUpdatedControl.LoadingPanelID">
            <summary>
            The ID of the RadAjaxLoadingPanel to be displayed during the update of the
            control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.AjaxUpdatedControlsCollection">
            <summary>A collection of the controls that are updated by the AjaxManager.</summary>
        </member>
        <member name="M:Telerik.Web.UI.AjaxUpdatedControlsCollection.Add(Telerik.Web.UI.AjaxUpdatedControl)">
            <summary>Adds an item to the collection</summary>
        </member>
        <member name="M:Telerik.Web.UI.AjaxUpdatedControlsCollection.Remove(Telerik.Web.UI.AjaxUpdatedControl)">
            <summary>Removes the specified item from the collection</summary>
        </member>
        <member name="M:Telerik.Web.UI.AjaxUpdatedControlsCollection.Contains(Telerik.Web.UI.AjaxUpdatedControl)">
            <summary>Checks wether the collection contains the specified item.</summary>
        </member>
        <member name="M:Telerik.Web.UI.AjaxUpdatedControlsCollection.IndexOf(Telerik.Web.UI.AjaxUpdatedControl)">
            <summary>Gets the index of the specified item in the collection.</summary>
        </member>
        <member name="M:Telerik.Web.UI.AjaxUpdatedControlsCollection.Insert(System.Int32,Telerik.Web.UI.AjaxUpdatedControl)">
            <summary>Inserts an item at the specified index in the collection.</summary>
        </member>
        <member name="P:Telerik.Web.UI.AjaxUpdatedControlsCollection.Item(System.Int32)">
            <summary>The default indexer of the collection.</summary>
        </member>
        <member name="T:Telerik.Web.UI.AjaxSetting">
            <summary>
            Represents a single AjaxManager setting - a mapping between a control that
            initiates an AJAX request and a collection of controls to be updated by the
            operation.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.AjaxSetting.#ctor">
            <summary>Default constructor for the AjaxSetting class.</summary>
        </member>
        <member name="M:Telerik.Web.UI.AjaxSetting.#ctor(System.String)">
            <summary>
            A constructor for AjaxSetting taking the ClientID of the control initiating the
            AJAX request.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.AjaxSetting.AjaxControlID">
            <summary>
            This field holds the control id of the control that can initiate an
            AJAX request.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.AjaxSetting.EventName">
            <summary>Corresponds to the EventName property of the internally created AsyncPostBackTrigger.</summary>
        </member>
        <member name="P:Telerik.Web.UI.AjaxSetting.UpdatedControls">
            <summary>A collection of controls that will be updated by the AjaxManager</summary>
        </member>
        <member name="T:Telerik.Web.UI.AjaxSettingsCollection">
            <summary>
            Summary description for ConfiguredControls.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.AjaxSettingsCollection.#ctor">
            <summary>The default constructor for AjaxSettingsCollection class.</summary>
        </member>
        <member name="M:Telerik.Web.UI.AjaxSettingsCollection.AddAjaxSetting(System.Web.UI.Control,System.Web.UI.Control)">
            <summary>
            This method adds a new AjaxSetting to the collection by building one from its
            parameters.
            </summary>
            <param name="ajaxifiedControl">The web control to be ajaxified (the initiator of the AJAX request)</param>
            <param name="updatedControl">The web control that has to be updated.</param>
        </member>
        <member name="M:Telerik.Web.UI.AjaxSettingsCollection.Add(Telerik.Web.UI.AjaxSetting)">
            <summary>Adds an item to the collection.</summary>
            <param name="ajaxSetting">An instance of <see cref="T:Telerik.Web.UI.AjaxSetting">AjaxSetting</see> to be added.</param>
        </member>
        <member name="M:Telerik.Web.UI.AjaxSettingsCollection.Remove(Telerik.Web.UI.AjaxSetting)">
            <summary>Removes an item from the collection.</summary>
            <param name="ajaxSetting">An instance of <see cref="T:Telerik.Web.UI.AjaxSetting">AjaxSetting</see> to be removed</param>
        </member>
        <member name="M:Telerik.Web.UI.AjaxSettingsCollection.Contains(Telerik.Web.UI.AjaxSetting)">
            <summary>Checks wether the item is present in the collection.</summary>
            <param name="ajaxSetting">An instance of <see cref="T:Telerik.Web.UI.AjaxSetting">AjaxSetting</see></param>
        </member>
        <member name="M:Telerik.Web.UI.AjaxSettingsCollection.IndexOf(Telerik.Web.UI.AjaxSetting)">
            <summary>Determines the index of the specified item.</summary>
            <param name="ajaxSetting">An instance of <see cref="T:Telerik.Web.UI.AjaxSetting">AjaxSetting</see></param>
        </member>
        <member name="M:Telerik.Web.UI.AjaxSettingsCollection.Insert(System.Int32,Telerik.Web.UI.AjaxSetting)">
            <summary>Inserts an item at the specificed index in the collection.</summary>
            <param name="index">An instance of <see cref="T:Telerik.Web.UI.AjaxSetting">AjaxSetting</see></param>
        </member>
        <member name="P:Telerik.Web.UI.AjaxSettingsCollection.Item(System.Int32)">
            <summary>Default indexer for the collection.</summary>
        </member>
        <member name="M:Telerik.Web.UI.RadAjaxControl.Redirect(System.String)">
            <summary>Redirects the page to another location.</summary>
            <returns>None.</returns>
            <remarks>
            This method is usually used in the AJAX event handler instead of
            Response.Redirect(). It provides the only way to redirect to a page which does not
            contain any AJAX control at all.
            </remarks>
            <example>
                The following code redirects from a button's click event handler. Note the control
                should be ajaxified in order redirection to work.
                <code lang="CS" title="Redirect(C#)">
            private void Button1_Click(object sender, System.EventArgs e)
            {
                RadAjaxManager1.Redirect("support.aspx");
            }
                </code>
            	<code lang="VB" title="Redirect(VB)">
            Private Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click
            RadAjaxManager1.Redirect("support.aspx")
            End Sub 'Button1_Click
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadAjaxControl.Alert(System.String)">
            <summary>Displays an alert message at client-side.</summary>
            <returns>None.</returns>
            <remarks>
            	<para>This is the easiest way to show a message, generated from the server, on the
            client in a message box.</para>
            	<para><strong>Note:</strong> Special characteres are not escaped.</para>
            </remarks>
            <example>
                The following example illustrates a sample usage of the <strong>Alert</strong>
                method. 
                <code lang="CS" title="Alert(C#)">
            private void Button1_Click(object sender, System.EventArgs e)
            {
            if (!UserAccessAllowed(UserProfile))
            {
            RadAjaxManager1.Alert("You are not allowed to access this user control!");
            }
            else
            {
            LoadSecretControl();
            }
            }
                </code>
            	<code lang="VB" title="Alert(VB)">
            Private Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click
            If Not UserAccessAllowed(UserProfile) Then
            RadAjaxManager1.Alert("You are not allowed to access this user control!")
            Else
            LoadSecretControl()
            End If
            End Sub 'Button1_Click
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadAjaxControl.GetAjaxEventReference(System.String)">
            <summary>
            Gets client side code which raises an AjaxRequest event in either AJAX Manager or
            AJAX Panel.
            </summary>
            <example>
            	<code lang="CS" title="GetAjaxEventReference">
            private void Page_Load(object sender, System.EventArgs e)
            {
                // Create a generic AJAX Request when the button is clicked.
                // "return false" to prevent postbacks
                Button1.Attributes["onclick"] = RadAjaxPanel1.GetAjaxEventReference("argument...") + " return false;"; 
                // Generic requests can be fired on both AJAX Manager and AJAX Panel
                Button1.Attributes["onclick"] = RadAjaxManager1.GetAjaxEventReference("argument...") + " return false;"; 
            }
                </code>
            	<code lang="VB" title="GetAjaxRequestReference">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Page.Load
                ' Create a generic AJAX Request When the button Is clicked.
                ' "return false" To prevent postbacks
                Button1.Attributes["onclick"] = RadAjaxPanel1.GetAjaxEventReference("argument...") &amp; " return false;"
                ' Generic requests can be fired On both AJAX Manager And AJAX Panel
                Button1.Attributes["onclick"] = RadAjaxManager1.GetAjaxEventReference("argument...") &amp; " return false;"
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadAjaxControl.FocusControl(System.Web.UI.Control)">
            <summary>
            Sets focus to the specified web control after the AJAX Request is
            finished.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadAjaxControl.FocusControl(System.String)">
            <summary>
            Sets focus to the specified web control after the AJAX Request is
            finished.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxControl.EnableEmbeddedScripts">
            <summary>
            Gets or sets the value, indicating whether to render script references to the embedded scripts or not.
            </summary>
            <remarks>
            <para>
            If EnableEmbeddedScripts is set to false you will have to register the needed Scripts files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxControl.EnableHistory">
            <summary>
            Enables browser back/forward buttons state (browser history).
            Please, review the RadAjax "Changes and backwards compatibility" - "Back and Forward buttons" article for more info.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxControl.RequestQueueSize">
            <summary>
            By design ASP.NET AJAX Framework cancels the ongoing ajax request if you try to initiate another one prior to receiving the response for the first request. 
            By setting the RequestQueueSize property to a value greater than zero, you are enabling the queuing mechanism of RadAjax 
            that will allow you to complete the ongoing request and then initiate the pending requests in the control queue.
            </summary>
            <remarks>
            If the queue is full (queue size equals RequestQueueSize), an attempt for new ajax request will be discarded.
            </remarks>
            <value>
            The default value is 0 (queuing disabled).
            </value>
        </member>
        <member name="T:Telerik.Web.UI.AjaxLoadingPanelBackgroundPosition">
            <summary>
            This enumeration defines the possible positions of the RadAjaxLoadingPanel background
            image. This property matters only if the Skin property is set. The default value is Center.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadAjaxLoadingPanel.RegisterCssReferences">
            <summary>
            Registers the CSS references
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadAjaxLoadingPanel.GetEmbeddedSkinNames">
            <summary>
            Returns the names of all embedded skins. Used by Telerik.Web.Examples.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadAjaxLoadingPanel.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.EnableEmbeddedScripts">
            <summary>
            Gets or sets the value, indicating whether to render script references to the embedded scripts or not.
            </summary>
            <remarks>
            <para>
            If EnableEmbeddedScripts is set to false you will have to register the needed Scripts files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.ScriptManager">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.Transparency">
            <summary>
            Gets or sets transparency in percentage. Default value is 0 percents.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.EnableSkinTransparency">
            <summary>
            Defines whether the transparency set in the skin will be applied.
            Default value is True.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.ZIndex">
            <summary>
            Gets or sets the z-index of the loading panel. Default value is 90,000.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.BackgroundPosition">
            <summary>
            Gets or sets the position of the skin background image. Default value is center.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.IsSticky">
            <summary>
            	<para>The <strong>IsSticky</strong> property of the Loading Panel controls where
                the panel will appear during the AJAX request. If this property is set to
                <strong>true</strong>, the panel will appear where you have placed it on your
                webform. If this property is set to <strong>false</strong>, the Loading panel will
                appear on the place of the updated control(s).</para>
            	<para>By default this property is set to <strong>false</strong>.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.InitialDelayTime">
            <summary>
            Gets or sets a value specifying the delay in milliseconds, after which the
            <strong>RadAjaxLoadingPanel</strong> will be shown. If the request returns before this time,
            the <strong>RadAjaxLoadingPanel</strong> will not be shown.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.MinDisplayTime">
            <summary>
            Gets or sets a value that specifies the minimum time in milliseconds that the
            <strong>RadAjaxLoadingPanel</strong> will last. The control will not be updated before this
            period has passed even if the request returns. This will ensure more smoother interface
            for your page.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.Skin">
            <summary>Gets or sets the skin name for the control user interface.</summary>
            <value>A string containing the skin name for the control user interface. The default is string.Empty.</value>
            <remarks>
            <para>
            If this property is not set, the control will not use any skin (backwards compatibility)
            If EnableEmbeddedSkins is set to false, the control will not register a skin CSS file automatically.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.IsSkinSet">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.EnableEmbeddedSkins">
            <summary>Gets or sets the value, indicating whether to render links to the embedded skins or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedSkins is set to false you will have to register the needed CSS files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.EnableEmbeddedBaseStylesheet">
            <summary>Gets or sets the value, indicating whether to render the link to the embedded base stylesheet of the control or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedBaseStylesheet is set to false you will have to register the needed control base CSS file by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.RuntimeSkin">
            <summary>
            Gets the real skin name for the control user interface. If Skin is not set, returns
            an empty string, otherwise returns Skin.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxLoadingPanel.EnableAjaxSkinRendering">
            <summary>Gets or sets the value, indicating whether to render the skin CSS files during Ajax requests</summary>
            <remarks>
            <para>
            If EnableAjaxSkinRendering is set to false you will have to register the needed control base CSS file by hand when adding/showing the control with Ajax.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.TabIndex">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.Enabled">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.AccessKey">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.BackColor">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.BorderColor">
            <exclude/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.CssClass">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.BorderStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.BorderWidth">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.Font">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.ForeColor">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.ToolTip">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.Width">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxManager.Height">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.RadAjaxPage">
            <summary>
            This class is required as a base class for any page that hosts a 
            RadAjaxManager control and runs under Medium trust privileges.
            </summary>
            <remarks>Inheriting from RadAjaxPage is not required if you run under Full trust.</remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxPanel.Wrap">
            <summary>
            This property specifies the layout of the AjaxPanel. When this is set to FALSE,
            the AjaxPanel contents will not be wrapped to a new line no matter how wide the control
            is.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxPanel.HorizontalAlign">
            <summary>
            This property specifies the horizontal alignment of the RadAjaxPanel
            contents.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadAjaxPanel.BackImageUrl">
            <summary>
            This property specifies the image that should be displayed as background in the
            AjaxPanel. If left blank, no background image is applied.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection">
            <summary>
            Summary description for CalendarDayCollection.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.IClientData">
            <summary>
            IClientData is used to provide a standard way of generating data output from a component,
            which will be processed and streamed thereafter to the client.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.IClientData.GetClientData">
            <summary>
            gets the data that is required on the client. The returned ArrayList should be processed
            further and serialized as clientside array of values.
            </summary>
            <returns>ArrayList with the properties to serialize to the client.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.Add(Telerik.Web.UI.RadCalendarDay)">
            <summary>
            Adds a RadCalendarDay object to the collection of CalendarDays.
            </summary>
            <param name="inputItem">The RadCalendarDay object to add to the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.IndexOf(System.Object)">
            <summary>
            Returns a zero based index of a RadCalendarDay object depending on the passed index.
            </summary>
            <param name="inputItem">The zero-based index, RadCalendarDay object or the date represented by  the searched RadCalendarDay object.</param>
            <returns>A zero based index of the RadCalendarDay object in the collection, or -1 if the RadCalendarDay object is not found.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.Insert(System.Int32,Telerik.Web.UI.RadCalendarDay)">
            <summary>
            Adds a RadCalendarDay object in the collection at the specified index.
            </summary>
            <param name="insertIndex">The index after which the RadCalendarDay object is inserted.</param>
            <param name="inputItem">The RadCalendarDay object to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.Remove(Telerik.Web.UI.RadCalendarDay)">
            <summary>
            Deletes a RadCalendarDay object from the collection.
            </summary>
            <param name="inputItem">The RadCalendarDay object to remove.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.RemoveAt(System.Int32)">
            <summary>
            Deletes the RadCalendarDay object from the collection at the specified index.
            </summary>
            <param name="index">The index in collection at which the RadCalendarDay object will be deleted.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.Clear">
            <summary>
            Removes all RadCalendarDay objects in the collection of CalendarDays.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.Contains(Telerik.Web.UI.RadCalendarDay)">
            <summary>
            Checks whether a specific RadCalendarDay object is in the collection of CalendarDays.
            </summary>
            <param name="inputItem">The RadCalendarDay object to search.</param>
            <returns>True if the RadCalendarDay is found, false otherwise.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.Reverse" -->
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.ToArray">
            <summary>
            Copies the elements of CalendarDayCollection to a new
            <see cref="T:System.Array"/> of <see cref="T:Telerik.Web.UI.RadCalendarDay"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Telerik.Web.UI.RadCalendarDay"/>
            elements containing copies of the elements of the <see cref="T:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.Sort" -->
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.Sort(System.Collections.IComparer)">
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)" -->
        <member name="P:Telerik.Web.UI.Calendar.Collections.CalendarDayCollection.Item(System.Object)">
            <summary>
            Returns a RadCalendarDay object depending on the passed index.
            Only integer and string indexes are valid.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.Collections.CalendarDayTemplateCollection">
            <summary>
            Summary description for DayTemplatess.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection">
            <summary>
            Summary description for CalendarViewCollection.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.Add(Telerik.Web.UI.Calendar.View.CalendarView)">
            <summary>
            Adds a CalendarView object to the collection of CalendarDays.
            </summary>
            <param name="inputItem">The CalendarView object to add to the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.IndexOf(System.Object)">
            <summary>
            Returns a zero based index of a CalendarView object depending on the passed index.
            </summary>
            <param name="inputItem">The zero-based index, CalendarView object or the date represented by  the searched CalendarView object.</param>
            <returns>A zero based index of the CalendarView object in the collection, or -1 if the CalendarView object is not found.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.Insert(System.Int32,Telerik.Web.UI.Calendar.View.CalendarView)">
            <summary>
            Adds a CalendarView object in the collection at the specified index.
            </summary>
            <param name="insertIndex">The index after which the CalendarView object is inserted.</param>
            <param name="inputItem">The CalendarView object to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.Remove(Telerik.Web.UI.Calendar.View.CalendarView)">
            <summary>
            Deletes a CalendarView object from the collection.
            </summary>
            <param name="inputItem">The CalendarView object to remove.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.RemoveAt(System.Int32)">
            <summary>
            Deletes the CalendarView object from the collection at the specified index.
            </summary>
            <param name="index">The index in collection at which the CalendarView object will be deleted.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.Clear">
            <summary>
            Removes all CalendarView objects in the collection of CalendarDays.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.Contains(Telerik.Web.UI.Calendar.View.CalendarView)">
            <summary>
            Checks whether a specific CalendarView object is in the collection of CalendarDays.
            </summary>
            <param name="inputItem">The CalendarView object to search.</param>
            <returns>True if the CalendarView is found, false otherwise.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.Reverse" -->
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.ToArray">
            <summary>
            Copies the elements of CalendarViewCollection to a new
            <see cref="T:System.Array"/> of <see cref="T:Telerik.Web.UI.Calendar.View.CalendarView"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Telerik.Web.UI.Calendar.View.CalendarView"/>
            elements containing copies of the elements of the <see cref="T:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.Sort" -->
        <member name="M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.Sort(System.Collections.IComparer)">
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)" -->
        <member name="P:Telerik.Web.UI.Calendar.Collections.CalendarViewCollection.Item(System.Object)">
            <summary>
            Returns a CalendarView object depending on the passed index.
            Only integer and string indexes are valid.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.Add(Telerik.Web.UI.RadDate)">
            <summary>
            Adds a DateTime object to the collection of CalendarDays.
            </summary>
            <param name="inputItem">The RadDate object to add to the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.IndexOf(System.Object)">
            <summary>
            Returns a zero based index of a DateTime object depending on the passed index.
            </summary>
            <param name="inputItem">The zero-based index, DateTime object or the date represented by  the searched DateTime object.</param>
            <returns>A zero based index of the DateTime object in the collection, or -1 if the DateTime object is not found.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.Insert(System.Int32,Telerik.Web.UI.RadDate)">
            <summary>
            Adds a DateTime object in the collection at the specified index.
            </summary>
            <param name="insertIndex">The index after which the DateTime object is inserted.</param>
            <param name="inputItem">The DateTime object to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.Remove(Telerik.Web.UI.RadDate)">
            <summary>
            Deletes a DateTime object from the collection.
            </summary>
            <param name="inputItem">The DateTime object to remove.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.RemoveAt(System.Int32)">
            <summary>
            Deletes the DateTime object from the collection at the specified index.
            </summary>
            <param name="index">The index in collection at which the DateTime object will be deleted.</param>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.Clear">
            <summary>
            Removes all DateTime objects in the collection of CalendarDays.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.Contains(Telerik.Web.UI.RadDate)">
            <summary>
            Checks whether a specific DateTime object is in the collection of CalendarDays.
            </summary>
            <param name="inputItem">The DateTime object to search.</param>
            <returns>True if the DateTime is found, false otherwise.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.Reverse" -->
        <member name="M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.ToArray">
            <summary>
            Copies the elements of DateTimeCollection to a new
            <see cref="T:System.Array"/> of <see cref="T:System.DateTime"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:System.DateTime"/>
            elements containing copies of the elements of the <see cref="T:Telerik.Web.UI.Calendar.Collections.DateTimeCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.Sort" -->
        <member name="M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.Sort(System.Collections.IComparer)">
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)" -->
        <member name="P:Telerik.Web.UI.Calendar.Collections.DateTimeCollection.Item(System.Object)">
            <summary>
            Returns a DateTime object depending on the passed index.
            Only integer and string indexes are valid.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.Utils.Constants">
            <summary>
            Summary description for Constants.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DatePickingCalendar">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Calendar.Persistence.PropertiesControl">
            <summary>
            Base class based on the PropertyBag implementation, which descends from WebControl class.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.Persistence.PropertiesControl._ObjectProperties">
            <summary>
            Implements the PropertyBag class that is the foundation for building Telerik RadCalendar and
            handles properties values.Used by the ViewState mechanism also.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadCalendar.CreateChildControls">
            <summary>
            Create controls from template, fill ContentPanes and add them to Controls collection.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadCalendar.ResetTemplates">
            <summary>
            	<para>This method supports the Telerik RadCalendar infrastructure and
                is not intended to be used directly from your code.</para>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadCalendar.FindControlRecursive(System.String,System.Web.UI.ControlCollection)">
            <summary>
            Recursively searches for a control with the specified id in the passed controls collection.
            </summary>
            <param name="controlID">The id of the control to look for.</param>
            <param name="controlsCollection">The current Controls collection to search in.</param>
            <returns>The found control or null if nothing was found.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadCalendar.FindControl(System.String)">
            <summary>
            When using templates, their content is instantiated and "lives" inside the
               <a href="RadCalendar~Telerik.Web.UI.RadCalendar~Controls.html">Controls
               collection</a> of RadCalendar class. To access the controls instantiated from the
               templates they must be found using this method (RadCalendar implements
               INamingContainer interface).
            </summary>
            <returns>Reference to the found control or null if no control was found.</returns>
            <param name="id">The ID of the searched control.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadCalendar.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous page request that was saved by the <see cref="M:Telerik.Web.UI.RadCalendar.SaveViewState">SaveViewState</see> method.
            </summary>
            <param name="savedState">The saved view state.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadCalendar.SaveViewState">
            <summary>
            Saves any server control view-state changes that have occurred since the time the page was posted back to the server.
            </summary>
            <returns>The saved view state.</returns>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FastNavigationSettings">
            <summary>
            Gets or sets the
            <a href="RadCalendar~Telerik.Web.UI.MonthYearFastNavigationSettings.html">MonthYearFastNavigationSettings</a>
            object whose inner properties can be used to modify the fast Month/Year client
            navigation settings.
            </summary>
            <value><see cref="T:Telerik.Web.UI.MonthYearFastNavigationSettings">MonthYearFastNavigationSettings</see></value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.IsDesignMode">
            <summary>
            Returns whether RadCalendar is currently in design mode.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.ImagesPath">
            <summary>Gets or sets default path for the grid images when EnableEmbeddedSkins is set to false.</summary>
            <value>A string containing the path for the grid images. The default is string.Empty.</value>
            <remarks>
            <para>
            
            </para>
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.CssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class rendered by the Web server
            control on the client.
            </summary>
            <value>
            The CSS class rendered by the Web server control on the client. The default is
            <strong>calendarWrapper_[skin name]</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.CalendarDayTemplates">
            <summary>
            Gets or sets a collection of type
            <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.Collections.CalendarDayTemplateCollection.html">
            CalendarDayTemplateCollection</a> which stores the created templates to use with
            <a href="RadCalendar~Telerik.Web.UI.RadCalendar.html">RadCalendar</a>. All of the
            items are represented by
            <a href="RadCalendar~Telerik.Web.UI.DayTemplate.html">DayTemplate</a>
            instances.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.ClientEvents">
            <summary>
            Gets the instance of
            <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.Clientside.CalendarClientEvents.html">
            CalendarClientEvents</a> class which defines the JavaScript functions (client-side
            event handlers) that are invoked when specific client-side events are raised.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.EnableRepeatableDaysOnClient">
            <summary>
            Gets or sets whether the repeatable days logic should be supported on the client
            (effective for client calendar - with set property
            <a href="RadCalendar~Telerik.Web.UI.RadCalendar~AutoPostBack.html">AutoPostBack</a>="false").
            </summary>
            <value>
            	<strong>true</strong>, if the repeatable days logic should be supported on the
            client; otherwise, <strong>false</strong>. The default value is
            <strong>true</strong>.
            </value>
            <remarks>
            The <strong>EnableRepeatableDaysOnClient</strong> property has effect over the
            logic of the recurring events to the calendar. It should be true, if you wants the
            repeatable days to be supported by a calendar with AutoPostBack="false". If you are not
            using repeatable days or/and client calendar, you can improve the calendar performance
            by setting it to false.
            </remarks>
            <seealso cref="P:Telerik.Web.UI.RadCalendar.SpecialDays">SpecialDays Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.CellDayFormat">
            <summary>
            Gets or sets the format string that will be applied to the dates presented in the
            calendar area.
            </summary>
            <remarks>
            For additional details see <a href="DateFormat.html">Date Format Pattern</a>
            topic
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.SingleViewRows">
            <summary>
            Gets or sets the the count of rows to be displayed by a single
            <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.CalendarView.html">CalendarView</a>.
            </summary>
            <remarks>
            If the calendar represents a multi view, this property applies to the child views
            inside the multi view.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.SingleViewColumns">
            <summary>
            Gets or sets the the count of columns to be displayed by a single
            <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.CalendarView.html">CalendarView</a>.
            </summary>
            <remarks>
            If the calendar represents a multi view, this property applies to the child views
            inside the multi view.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.SingleViewWidth">
            <summary>
            Gets or sets the Width applied to a single
            <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.CalendarView.html">CalendarView</a>.
            </summary>
            <remarks>
            If the calendar represents a multi view, this property applies to the child views
            inside the multi view.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.SingleViewHeight">
            <summary>
            Gets or sets the Height applied to a single
            <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.CalendarView.html">CalendarView</a>.
            </summary>
            <remarks>
            If the calendar represents a multi view, this property applies to the child views
            inside the multi view.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.MonthLayout">
            <summary>
            	<para>Gets or sets the predefined pairs of rows and columns, so that the product of
                the two values is exactly 42, which guarantees valid calendar layout. It is applied
                on a single view level to every
                <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.MonthView.html">MonthView</a>
                instance in the calendar.</para>
            </summary>
            <remarks>
            	<para>The following values are applicable and defined in the MonthLayout
                enumeration:<br/>
            		<br/>
                Layout_7columns_x_6rows - horizontal layout<br/>
            		<br/>
                Layout_14columns_x_3rows - horizontal layout<br/>
            		<br/>
                Layout_21columns_x_2rows - horizontal layout<br/>
            		<br/>
                Layout_7rows_x_6columns - vertical layout, required when
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~UseDaysAsSelectors.html">UseDaysAsSelectors</a>
                is true and
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~Orientation.html">Orientation</a>
                is set to
                <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.Enumerations.Orientation.html">
                RenderInColumns</a>.<br/>
            		<br/>
                Layout_14rows_x_3columns - vertical layout, required when
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~UseDaysAsSelectors.html">UseDaysAsSelectors</a>
                is true and
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~Orientation.html">Orientation</a>
                is set to
                <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.Enumerations.Orientation.html">
                RenderInColumns</a>.<br/>
            		<br/>
                Layout_21rows_x_2columns - vertical layout, required when
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~UseDaysAsSelectors.html">UseDaysAsSelectors</a>
                is true and
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~Orientation.html">Orientation</a>
                is set to
                <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.Enumerations.Orientation.html">
                RenderInColumns</a>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.CellAlign">
            <summary>
            	<para>Gets or sets the horizontal alignment of the date cells content inside the
                calendar area.</para>
            	<para>The HorizontalAlign enumeration is defined in
                <strong>System.Web.UI.WebControls</strong></para>
            </summary>
            <remarks>
            	<list type="table">
            		<listheader>
            			<term>
            				<para align="left">Member name</para>
            			</term>
            			<description>
            				<para align="left">Description</para>
            			</description>
            		</listheader>
            		<item>
            			<term>
            				<para align="left"><b>Center</b></para>
            			</term>
            			<description>The contents of a container are centered.</description>
            		</item>
            		<item>
            			<term><b>Justify</b></term>
            			<description>The contents of a container are uniformly spread out and
                        aligned with both the left and right margins.</description>
            		</item>
            		<item>
            			<term><b>Left</b></term>
            			<description>The contents of a container are left justified.</description>
            		</item>
            		<item>
            			<term><b>NotSet</b></term>
            			<description>The horizontal alignment is not set.</description>
            		</item>
            		<item>
            			<term><b>Right</b></term>
            			<description>The contents of a container are right justified.</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.CellVAlign">
            <summary>
            	<para>Gets or sets the vertical alignment of the date cells content inside the
                calendar area.</para>
            	<para>The VerticalAlign enumeration is defined in
                <strong>System.Web.UI.WebControls</strong></para>
            </summary>
            <remarks>
            	<list type="table">
            		<listheader>
            			<term>Member name</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term><b>Bottom</b></term>
            			<description>Text or object is aligned with the bottom of the enclosing
                        control.</description>
            		</item>
            		<item>
            			<term><b>Middle</b></term>
            			<description>Text or object is aligned with the center of the enclosing
                        control.</description>
            		</item>
            		<item>
            			<term><b>NotSet</b></term>
            			<description>Vertical alignment is not set.</description>
            		</item>
            		<item>
            			<term><b>Top</b></term>
            			<description>Text or object is aligned with the top of the enclosing
                        control.</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.MultiViewRows">
            <summary>
            Gets or sets the the count of rows to be displayed by a multi month
            <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.CalendarView.html">CalendarView</a>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.MultiViewColumns">
            <summary>
            Gets or sets the the count of columns to be displayed by a multi month
            <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.CalendarView.html">CalendarView</a>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.RangeMaxDate">
            <summary>
            Gets or sets the maximum date valid for selection by
            Telerik RadCalendar. Must be interpreted as the Higher bound of the valid
            dates range available for selection. Telerik RadCalendar will not allow
            navigation or selection past this date.
            </summary>
            <remarks>
            This property has a default value of <font size="1"><strong>12/30/2099</strong>
            (Gregorian calendar date).</font>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.RangeMinDate">
            <summary>
            Gets or sets the minimal date valid for selection by
            Telerik RadCalendar. Must be interpreted as the Lower bound of the valid
            dates range available for selection. Telerik RadCalendar will not allow
            navigation or selection prior to this date.
            </summary>
            <remarks>
            This property has a default value of <font size="1"><strong>1/1/1980</strong>
            (Gregorian calendar date).</font>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FirstDayOfWeek">
            <summary>
            	<para>Specifies the day to display as the first day of the week on the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar.html">RadCalendar</a>
                control.</para>
            	<para>The FirstDayOfWeek enumeration can be found in
                <strong>System.Web.UI.WebControls</strong> Namespace.</para>
            </summary>
            <remarks>
            	<para>The <b>FirstDayOfWeek</b> enumeration represents the values that specify
                which day to display as the first day of the week on the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar.html">RadCalendar</a>
                control.</para>
            	<list type="table">
            		<listheader>
            			<term>Member name</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term><b>Default</b></term>
            			<description>The first day of the week is specified by the system
                        settings.</description>
            		</item>
            		<item>
            			<term><b>Friday</b></term>
            			<description>The first day of the week is Friday.</description>
            		</item>
            		<item>
            			<term><b>Monday</b></term>
            			<description>The first day of the week is Monday.</description>
            		</item>
            		<item>
            			<term><b>Saturday</b></term>
            			<description>The first day of the week is Saturday.</description>
            		</item>
            		<item>
            			<term><b>Sunday</b></term>
            			<description>The first day of the week is Sunday.</description>
            		</item>
            		<item>
            			<term><b>Thursday</b></term>
            			<description>The first day of the week is Thursday.</description>
            		</item>
            		<item>
            			<term><b>Tuesday</b></term>
            			<description>The first day of the week is Tuesday.</description>
            		</item>
            		<item>
            			<term><b>Wednesday</b></term>
            			<description>The first day of the week is Wednesday.</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.SelectedDate">
            <summary>
            Sets or returns the currently selected date. The default value is the value of
            <strong>System.DateTime.MinValue</strong>.
            </summary>
            <remarks>
            	<para>Use the <b>SelectedDate</b> property to determine the selected date on the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar.html">RadCalendar</a>
                control.</para>
            	<para>The <b>SelectedDate</b> property and the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~SelectedDates.html">SelectedDates</a>
                collection are closely related. When the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~EnableMultiSelect.html">EnableMultiSelect</a>
                property is set to <b>false</b>, a mode that allows only a single date selection,
                <b>SelectedDate</b> and <b>SelectedDates[0]</b> have the same value and
                <b>SelectedDates.Count</b> equals 1. When the <b>EnableMultiSelect</b> property is
                set to <b>true</b>, mode that allows multiple date selections, <b>SelectedDate</b>
                and <b>SelectedDates[0]</b> have the same value.</para>
            	<para>The <b>SelectedDate</b> property is set using a System.DateTime
                object.</para>
            	<para>When the user selects a date on the <strong>RadCalendar</strong> control, the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~SelectionChanged_EV.html">SelectionChanged</a>
                event is raised. The <b>SelectedDate</b> property is updated to the selected date.
                The <b>SelectedDates</b> collection is also updated to contain just this
                date.</para>
            	<blockquote class="dtBlock">
            		<b class="le">Note</b> Both the <b>SelectedDate</b> property and the
                    <b>SelectedDates</b> collection are updated before the <b>SelectionChanged</b>
                    event is raised. You can override the date selection by using the
                    <strong>OnSelectionChanged</strong> event handler to manually set the
                    <b>SelectedDate</b> property. The <b>SelectionChanged</b> event does not get
                    raised when this property is programmatically set.
                </blockquote>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FocusedDate">
            <summary>
            Gets or sets the value that is used by
            <a href="RadCalendar~Telerik.Web.UI.RadCalendar.html">RadCalendar</a> to determine
            the viewable area displayed .
            </summary>
            <remarks>
            	<para>By default, the <strong>FocusedDate</strong> property returns the current
                system date when in runtime, and in design mode defaults to
                <strong>System.DateTime.MinValue.</strong> When the <strong>FocusedDate</strong> is
                set, from that point, the value returned by the <strong>FocusedDate</strong>
                property is the one the user sets.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FocusedDateRow">
            <summary>
            Gets or sets the row index where the
            <a href="RadCalendar~Telerik.Web.UI.RadCalendar~FocusedDate.html">FocusedDate</a>
            (and the month view it belongs to) will be positioned inside a multi view area.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FocusedDateColumn">
            <summary>
            Gets or sets the column index where the
            <a href="RadCalendar~Telerik.Web.UI.RadCalendar~FocusedDate.html">FocusedDate</a>
            (and the month view it belongs to) will be positioned inside a multi view area.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.SelectedDates">
            <summary>
            Gets a collection of
            <a href="RadCalendar~Telerik.Web.UI.RadDate.html">RadDate</a> objects (that
            encapsulate values of type <strong>System.DateTime</strong>) that represent the
            selected dates on the <strong>RadCalendar</strong> control.
            </summary>
            <value>
            A
            <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.Collections.DateTimeCollection.html">
            DateTimeCollection</a> that contains a collection of
            <a href="RadCalendar~Telerik.Web.UI.RadDate.html">RadDate</a> objects (that
            encapsulate values of type <strong>System.DateTime</strong>) representing the selected
            dates on the <strong>RadCalendar</strong> control. The default value is an empty
            <b>DateTimeCollection</b>.
            </value>
            <remarks>
            	<para>Use the <b>SelectedDates</b> collection to determine the currently selected
                dates on the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar.html">RadCalendar</a>
                control.</para>
            	<para>The
                <a href="frlrfsystemwebuiwebcontrolscalendarclassselecteddatetopic.htm">SelectedDate</a>
                property and the <b>SelectedDates</b> collection are closely related. When the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~EnableMultiSelect.html">EnableMultiSelect</a>
                property is set to <b>false</b>, a mode that allows only a single date selection,
                <b>SelectedDate</b> and <b>SelectedDates[0]</b> have the same value and
                <b>SelectedDates.Count</b> equals 1. When the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~EnableMultiSelect.html">EnableMultiSelect</a>
                property is set to <b>true</b>, mode that allows multiple date selections,
                <b>SelectedDate</b> and <b>SelectedDates[0]</b> have the same value.</para>
            	<para>The <b>SelectedDates</b> property stores a collection of
                <a href="RadCalendar~Telerik.Web.UI.RadDate.html">RadDate</a> objects (that
                encapsulate values of type <strong>System.DateTime</strong>).</para>
            	<para>When the user selects a date or date range (for example with the column or
                rows selectors) on the <strong>RadCalendar</strong> control, the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~SelectionChanged_EV.html">SelectionChanged</a>
                event is raised. The selected dates are added to the <b>SelectedDates</b>
                collection, accumulating with previously selected dates. The range of dates are not
                sorted by default. The <strong>SelectedDate</strong> property is also updated to
                contain the first date in the <b>SelectedDates</b> collection.</para>
            	<para>You can also use the <b>SelectedDates</b> collection to programmatically
                select dates on the <b>Calendar</b> control. Use the
                <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.Collections.DateTimeCollection~Add.html">
                Add</a>,
                <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.Collections.DateTimeCollection~Remove.html">
                Remove</a>,
                <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.Collections.DateTimeCollection~Clear.html">
                Clear</a>, and
                <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.Collections.DateTimeCollection~SelectRange.html">
                SelectRange</a> methods to programmatically manipulate the selected dates in the
                <b>SelectedDates</b> collection.</para>
            	<blockquote class="dtBlock">
            		<b class="le">Note</b> Both the <b>SelectedDate</b> property and the
                    <b>SelectedDates</b> collection are updated before the <b>SelectionChanged</b>
                    event is raised.You can override the dates selection by using the
                    <strong>OnSelectionChanged</strong> event handler to manually set the
                    <b>SelectedDates</b> collection. The <b>SelectionChanged</b> event is not
                    raised when this collection is programmatically set.
                </blockquote>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FastNavigationStep">
            <summary>
            Gets or sets an integer value representing the number of
            <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.CalendarView.html">CalendarView</a>
            views that will be scrolled when the user clicks on a fast navigation link.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.DayNameFormat">
            <summary>
            Specifies the display formats for the days of the week used as selectors by
            <strong>RadCalendar</strong>.
            </summary>
            <remarks>
            	<para>Use the <b>DayNameFormat</b> property to specify the name format for the days
                of the week. This property is set with one of the <strong>DayNameFormat</strong>
                enumeration values. You can specify whether the days of the week are displayed as
                the full name, short (abbreviated) name, first letter of the day, or first two
                letters of the day.</para>
            	<para>The <b>DayNameFormat</b> enumeration represents the display formats for the
                days of the week used as selectors by <strong>RadCalendar</strong>.</para>
            	<list type="table">
            		<listheader>
            			<term>Member name</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term><b>FirstLetter</b></term>
            			<description>The days of the week displayed with just the first letter. For
                        example, <strong>T</strong>.</description>
            		</item>
            		<item>
            			<term><b>FirstTwoLetters</b></term>
            			<description>The days of the week displayed with just the first two
                        letters. For example, <strong>Tu</strong>.</description>
            		</item>
            		<item>
            			<term><b>Full</b></term>
            			<description>The days of the week displayed in full format. For example,
                        <strong>Tuesday</strong>.</description>
            		</item>
            		<item>
            			<term><b>Short</b></term>
            			<description>The days of the week displayed in abbreviated format. For
                        example, <strong>Tues</strong>.</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.DateTimeFormat">
            <summary>
            Gets or sets a <strong>DateTimeFormatInfo</strong> instance that defines the
            culturally appropriate format of displaying dates and times as specified by the default
            culture.
            </summary>
            <remarks>
            	<para>A <strong>DateTimeFormatInfo</strong> can be created only for the invariant
                culture or for specific cultures, not for neutral cultures.</para>
            	<para>The cultures are generally grouped into three sets: the invariant culture,
                the neutral cultures, and the specific cultures.</para>
            	<para>The invariant culture is culture-insensitive. You can specify the invariant
                culture by name using an empty string ("") or by its culture identifier 0x007F.
                <strong>InvariantCulture</strong> retrieves an instance of the invariant culture.
                It is associated with the English language but not with any country/region. It can
                be used in almost any method in the Globalization namespace that requires a
                culture. If a security decision depends on a string comparison or a case-change
                operation, use the <b>InvariantCulture</b> to ensure that the behavior will be
                consistent regardless of the culture settings of the system. However, the invariant
                culture must be used only by processes that require culture-independent results,
                such as system services; otherwise, it produces results that might be
                linguistically incorrect or culturally inappropriate.</para>
            	<para>A neutral culture is a culture that is associated with a language but not
                with a country/region. A specific culture is a culture that is associated with a
                language and a country/region. For example, "fr" is a neutral culture and "fr-FR"
                is a specific culture. Note that "zh-CHS" (Simplified Chinese) and "zh-CHT"
                (Traditional Chinese) are neutral cultures.</para>
            	<para>The user might choose to override some of the values associated with the
                current culture of Windows through Regional and Language Options (or Regional
                Options or Regional Settings) in Control Panel. For example, the user might choose
                to display the date in a different format or to use a currency other than the
                default for the culture.</para>
            	<para>If <strong>UseUserOverride</strong> is <b>true</b> and the specified culture
                matches the current culture of Windows, the <strong>CultureInfo</strong> uses those
                overrides, including user settings for the properties of the
                <b>DateTimeFormatInfo</b> instance returned by the <b>DateTimeFormat</b> property,
                the properties of the <strong>NumberFormatInfo</strong> instance returned by the
                <strong>NumberFormat</strong> property, and the properties of the
                <strong>CompareInfo</strong> instance returned by the <strong>CompareInfo</strong>
                property. If the user settings are incompatible with the culture associated with
                the <b>CultureInfo</b> (for example, if the selected calendar is not one of the
                <strong>OptionalCalendars</strong> ), the results of the methods and the values of
                the properties are undefined.<br/>
            		<br/>
            		<strong>Note:</strong> In this version of <strong>RadCalendar</strong> the
                <strong>NumberFormatInfo</strong> instance returned by the
                <strong>NumberFormat</strong> property is not taken into account.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.CultureInfo">
            <summary>
            	<para>Gets or sets the <strong>CultureInfo</strong> instance that represents
                information about the culture of this <strong>RadCalendar</strong> object.</para>
            	<para>A <b>CultureInfo</b> class describes information about the culture of this
                RadCalendar instance including the names of the culture, the writing system, and
                the calendar used, as well as access to culture-specific objects that provide
                methods for common operations, such as formatting dates and sorting strings.</para>
            </summary>
            <remarks>
            	<para>The culture names follow the RFC 1766 standard in the format
                "&lt;languagecode2&gt;-&lt;country/regioncode2&gt;", where &lt;languagecode2&gt; is
                a lowercase two-letter code derived from ISO 639-1 and &lt;country/regioncode2&gt;
                is an uppercase two-letter code derived from ISO 3166. For example, U.S. English is
                "en-US". In cases where a two-letter language code is not available, the
                three-letter code derived from ISO 639-2 is used; for example, the three-letter
                code "div" is used for cultures that use the Dhivehi language. Some culture names
                have suffixes that specify the script; for example, "-Cyrl" specifies the Cyrillic
                script, "-Latn" specifies the Latin script.</para>
            	<para>The following predefined <b>CultureInfo</b> names and identifiers are
                accepted and used by this class and other classes in the System.Globalization
                namespace.</para>
            	<table cellspacing="0">
            		<tbody>
            			<tr valign="top">
            				<th width="32%">Culture Name</th>
            				<th width="34%">Culture Identifier</th>
            				<th width="34%">Language-Country/Region</th>
            			</tr>
            			<tr valign="top">
            				<td width="32%">"" (empty string)</td>
            				<td width="34%">0x007F</td>
            				<td width="34%">invariant culture</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">af</td>
            				<td width="34%">0x0036</td>
            				<td width="34%">Afrikaans</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">af-ZA</td>
            				<td width="34%">0x0436</td>
            				<td width="34%">Afrikaans - South Africa</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sq</td>
            				<td width="34%">0x001C</td>
            				<td width="34%">Albanian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sq-AL</td>
            				<td width="34%">0x041C</td>
            				<td width="34%">Albanian - Albania</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar</td>
            				<td width="34%">0x0001</td>
            				<td width="34%">Arabic</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-DZ</td>
            				<td width="34%">0x1401</td>
            				<td width="34%">Arabic - Algeria</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-BH</td>
            				<td width="34%">0x3C01</td>
            				<td width="34%">Arabic - Bahrain</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-EG</td>
            				<td width="34%">0x0C01</td>
            				<td width="34%">Arabic - Egypt</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-IQ</td>
            				<td width="34%">0x0801</td>
            				<td width="34%">Arabic - Iraq</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-JO</td>
            				<td width="34%">0x2C01</td>
            				<td width="34%">Arabic - Jordan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-KW</td>
            				<td width="34%">0x3401</td>
            				<td width="34%">Arabic - Kuwait</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-LB</td>
            				<td width="34%">0x3001</td>
            				<td width="34%">Arabic - Lebanon</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-LY</td>
            				<td width="34%">0x1001</td>
            				<td width="34%">Arabic - Libya</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-MA</td>
            				<td width="34%">0x1801</td>
            				<td width="34%">Arabic - Morocco</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-OM</td>
            				<td width="34%">0x2001</td>
            				<td width="34%">Arabic - Oman</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-QA</td>
            				<td width="34%">0x4001</td>
            				<td width="34%">Arabic - Qatar</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-SA</td>
            				<td width="34%">0x0401</td>
            				<td width="34%">Arabic - Saudi Arabia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-SY</td>
            				<td width="34%">0x2801</td>
            				<td width="34%">Arabic - Syria</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-TN</td>
            				<td width="34%">0x1C01</td>
            				<td width="34%">Arabic - Tunisia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-AE</td>
            				<td width="34%">0x3801</td>
            				<td width="34%">Arabic - United Arab Emirates</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ar-YE</td>
            				<td width="34%">0x2401</td>
            				<td width="34%">Arabic - Yemen</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">hy</td>
            				<td width="34%">0x002B</td>
            				<td width="34%">Armenian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">hy-AM</td>
            				<td width="34%">0x042B</td>
            				<td width="34%">Armenian - Armenia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">az</td>
            				<td width="34%">0x002C</td>
            				<td width="34%">Azeri</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">az-AZ-Cyrl</td>
            				<td width="34%">0x082C</td>
            				<td width="34%">Azeri (Cyrillic) - Azerbaijan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">az-AZ-Latn</td>
            				<td width="34%">0x042C</td>
            				<td width="34%">Azeri (Latin) - Azerbaijan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">eu</td>
            				<td width="34%">0x002D</td>
            				<td width="34%">Basque</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">eu-ES</td>
            				<td width="34%">0x042D</td>
            				<td width="34%">Basque - Basque</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">be</td>
            				<td width="34%">0x0023</td>
            				<td width="34%">Belarusian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">be-BY</td>
            				<td width="34%">0x0423</td>
            				<td width="34%">Belarusian - Belarus</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">bg</td>
            				<td width="34%">0x0002</td>
            				<td width="34%">Bulgarian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">bg-BG</td>
            				<td width="34%">0x0402</td>
            				<td width="34%">Bulgarian - Bulgaria</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ca</td>
            				<td width="34%">0x0003</td>
            				<td width="34%">Catalan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ca-ES</td>
            				<td width="34%">0x0403</td>
            				<td width="34%">Catalan - Catalan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">zh-HK</td>
            				<td width="34%">0x0C04</td>
            				<td width="34%">Chinese - Hong Kong SAR</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">zh-MO</td>
            				<td width="34%">0x1404</td>
            				<td width="34%">Chinese - Macau SAR</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">zh-CN</td>
            				<td width="34%">0x0804</td>
            				<td width="34%">Chinese - China</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">zh-CHS</td>
            				<td width="34%">0x0004</td>
            				<td width="34%">Chinese (Simplified)</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">zh-SG</td>
            				<td width="34%">0x1004</td>
            				<td width="34%">Chinese - Singapore</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">zh-TW</td>
            				<td width="34%">0x0404</td>
            				<td width="34%">Chinese - Taiwan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">zh-CHT</td>
            				<td width="34%">0x7C04</td>
            				<td width="34%">Chinese (Traditional)</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">hr</td>
            				<td width="34%">0x001A</td>
            				<td width="34%">Croatian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">hr-HR</td>
            				<td width="34%">0x041A</td>
            				<td width="34%">Croatian - Croatia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">cs</td>
            				<td width="34%">0x0005</td>
            				<td width="34%">Czech</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">cs-CZ</td>
            				<td width="34%">0x0405</td>
            				<td width="34%">Czech - Czech Republic</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">da</td>
            				<td width="34%">0x0006</td>
            				<td width="34%">Danish</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">da-DK</td>
            				<td width="34%">0x0406</td>
            				<td width="34%">Danish - Denmark</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">div</td>
            				<td width="34%">0x0065</td>
            				<td width="34%">Dhivehi</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">div-MV</td>
            				<td width="34%">0x0465</td>
            				<td width="34%">Dhivehi - Maldives</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">nl</td>
            				<td width="34%">0x0013</td>
            				<td width="34%">Dutch</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">nl-BE</td>
            				<td width="34%">0x0813</td>
            				<td width="34%">Dutch - Belgium</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">nl-NL</td>
            				<td width="34%">0x0413</td>
            				<td width="34%">Dutch - The Netherlands</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en</td>
            				<td width="34%">0x0009</td>
            				<td width="34%">English</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-AU</td>
            				<td width="34%">0x0C09</td>
            				<td width="34%">English - Australia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-BZ</td>
            				<td width="34%">0x2809</td>
            				<td width="34%">English - Belize</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-CA</td>
            				<td width="34%">0x1009</td>
            				<td width="34%">English - Canada</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-CB</td>
            				<td width="34%">0x2409</td>
            				<td width="34%">English - Caribbean</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-IE</td>
            				<td width="34%">0x1809</td>
            				<td width="34%">English - Ireland</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-JM</td>
            				<td width="34%">0x2009</td>
            				<td width="34%">English - Jamaica</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-NZ</td>
            				<td width="34%">0x1409</td>
            				<td width="34%">English - New Zealand</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-PH</td>
            				<td width="34%">0x3409</td>
            				<td width="34%">English - Philippines</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-ZA</td>
            				<td width="34%">0x1C09</td>
            				<td width="34%">English - South Africa</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-TT</td>
            				<td width="34%">0x2C09</td>
            				<td width="34%">English - Trinidad and Tobago</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-GB</td>
            				<td width="34%">0x0809</td>
            				<td width="34%">English - United Kingdom</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-US</td>
            				<td width="34%">0x0409</td>
            				<td width="34%">English - United States</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">en-ZW</td>
            				<td width="34%">0x3009</td>
            				<td width="34%">English - Zimbabwe</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">et</td>
            				<td width="34%">0x0025</td>
            				<td width="34%">Estonian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">et-EE</td>
            				<td width="34%">0x0425</td>
            				<td width="34%">Estonian - Estonia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fo</td>
            				<td width="34%">0x0038</td>
            				<td width="34%">Faroese</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fo-FO</td>
            				<td width="34%">0x0438</td>
            				<td width="34%">Faroese - Faroe Islands</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fa</td>
            				<td width="34%">0x0029</td>
            				<td width="34%">Farsi</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fa-IR</td>
            				<td width="34%">0x0429</td>
            				<td width="34%">Farsi - Iran</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fi</td>
            				<td width="34%">0x000B</td>
            				<td width="34%">Finnish</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fi-FI</td>
            				<td width="34%">0x040B</td>
            				<td width="34%">Finnish - Finland</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fr</td>
            				<td width="34%">0x000C</td>
            				<td width="34%">French</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fr-BE</td>
            				<td width="34%">0x080C</td>
            				<td width="34%">French - Belgium</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fr-CA</td>
            				<td width="34%">0x0C0C</td>
            				<td width="34%">French - Canada</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fr-FR</td>
            				<td width="34%">0x040C</td>
            				<td width="34%">French - France</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fr-LU</td>
            				<td width="34%">0x140C</td>
            				<td width="34%">French - Luxembourg</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fr-MC</td>
            				<td width="34%">0x180C</td>
            				<td width="34%">French - Monaco</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">fr-CH</td>
            				<td width="34%">0x100C</td>
            				<td width="34%">French - Switzerland</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">gl</td>
            				<td width="34%">0x0056</td>
            				<td width="34%">Galician</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">gl-ES</td>
            				<td width="34%">0x0456</td>
            				<td width="34%">Galician - Galician</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ka</td>
            				<td width="34%">0x0037</td>
            				<td width="34%">Georgian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ka-GE</td>
            				<td width="34%">0x0437</td>
            				<td width="34%">Georgian - Georgia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">de</td>
            				<td width="34%">0x0007</td>
            				<td width="34%">German</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">de-AT</td>
            				<td width="34%">0x0C07</td>
            				<td width="34%">German - Austria</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">de-DE</td>
            				<td width="34%">0x0407</td>
            				<td width="34%">German - Germany</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">de-LI</td>
            				<td width="34%">0x1407</td>
            				<td width="34%">German - Liechtenstein</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">de-LU</td>
            				<td width="34%">0x1007</td>
            				<td width="34%">German - Luxembourg</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">de-CH</td>
            				<td width="34%">0x0807</td>
            				<td width="34%">German - Switzerland</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">el</td>
            				<td width="34%">0x0008</td>
            				<td width="34%">Greek</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">el-GR</td>
            				<td width="34%">0x0408</td>
            				<td width="34%">Greek - Greece</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">gu</td>
            				<td width="34%">0x0047</td>
            				<td width="34%">Gujarati</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">gu-IN</td>
            				<td width="34%">0x0447</td>
            				<td width="34%">Gujarati - India</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">he</td>
            				<td width="34%">0x000D</td>
            				<td width="34%">Hebrew</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">he-IL</td>
            				<td width="34%">0x040D</td>
            				<td width="34%">Hebrew - Israel</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">hi</td>
            				<td width="34%">0x0039</td>
            				<td width="34%">Hindi</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">hi-IN</td>
            				<td width="34%">0x0439</td>
            				<td width="34%">Hindi - India</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">hu</td>
            				<td width="34%">0x000E</td>
            				<td width="34%">Hungarian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">hu-HU</td>
            				<td width="34%">0x040E</td>
            				<td width="34%">Hungarian - Hungary</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">is</td>
            				<td width="34%">0x000F</td>
            				<td width="34%">Icelandic</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">is-IS</td>
            				<td width="34%">0x040F</td>
            				<td width="34%">Icelandic - Iceland</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">id</td>
            				<td width="34%">0x0021</td>
            				<td width="34%">Indonesian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">id-ID</td>
            				<td width="34%">0x0421</td>
            				<td width="34%">Indonesian - Indonesia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">it</td>
            				<td width="34%">0x0010</td>
            				<td width="34%">Italian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">it-IT</td>
            				<td width="34%">0x0410</td>
            				<td width="34%">Italian - Italy</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">it-CH</td>
            				<td width="34%">0x0810</td>
            				<td width="34%">Italian - Switzerland</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ja</td>
            				<td width="34%">0x0011</td>
            				<td width="34%">Japanese</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ja-JP</td>
            				<td width="34%">0x0411</td>
            				<td width="34%">Japanese - Japan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">kn</td>
            				<td width="34%">0x004B</td>
            				<td width="34%">Kannada</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">kn-IN</td>
            				<td width="34%">0x044B</td>
            				<td width="34%">Kannada - India</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">kk</td>
            				<td width="34%">0x003F</td>
            				<td width="34%">Kazakh</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">kk-KZ</td>
            				<td width="34%">0x043F</td>
            				<td width="34%">Kazakh - Kazakhstan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">kok</td>
            				<td width="34%">0x0057</td>
            				<td width="34%">Konkani</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">kok-IN</td>
            				<td width="34%">0x0457</td>
            				<td width="34%">Konkani - India</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ko</td>
            				<td width="34%">0x0012</td>
            				<td width="34%">Korean</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ko-KR</td>
            				<td width="34%">0x0412</td>
            				<td width="34%">Korean - Korea</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ky</td>
            				<td width="34%">0x0040</td>
            				<td width="34%">Kyrgyz</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ky-KZ</td>
            				<td width="34%">0x0440</td>
            				<td width="34%">Kyrgyz - Kazakhstan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">lv</td>
            				<td width="34%">0x0026</td>
            				<td width="34%">Latvian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">lv-LV</td>
            				<td width="34%">0x0426</td>
            				<td width="34%">Latvian - Latvia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">lt</td>
            				<td width="34%">0x0027</td>
            				<td width="34%">Lithuanian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">lt-LT</td>
            				<td width="34%">0x0427</td>
            				<td width="34%">Lithuanian - Lithuania</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">mk</td>
            				<td width="34%">0x002F</td>
            				<td width="34%">Macedonian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">mk-MK</td>
            				<td width="34%">0x042F</td>
            				<td width="34%">Macedonian - FYROM</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ms</td>
            				<td width="34%">0x003E</td>
            				<td width="34%">Malay</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ms-BN</td>
            				<td width="34%">0x083E</td>
            				<td width="34%">Malay - Brunei</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ms-MY</td>
            				<td width="34%">0x043E</td>
            				<td width="34%">Malay - Malaysia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">mr</td>
            				<td width="34%">0x004E</td>
            				<td width="34%">Marathi</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">mr-IN</td>
            				<td width="34%">0x044E</td>
            				<td width="34%">Marathi - India</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">mn</td>
            				<td width="34%">0x0050</td>
            				<td width="34%">Mongolian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">mn-MN</td>
            				<td width="34%">0x0450</td>
            				<td width="34%">Mongolian - Mongolia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">no</td>
            				<td width="34%">0x0014</td>
            				<td width="34%">Norwegian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">nb-NO</td>
            				<td width="34%">0x0414</td>
            				<td width="34%">Norwegian (Bokmål) - Norway</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">nn-NO</td>
            				<td width="34%">0x0814</td>
            				<td width="34%">Norwegian (Nynorsk) - Norway</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">pl</td>
            				<td width="34%">0x0015</td>
            				<td width="34%">Polish</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">pl-PL</td>
            				<td width="34%">0x0415</td>
            				<td width="34%">Polish - Poland</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">pt</td>
            				<td width="34%">0x0016</td>
            				<td width="34%">Portuguese</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">pt-BR</td>
            				<td width="34%">0x0416</td>
            				<td width="34%">Portuguese - Brazil</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">pt-PT</td>
            				<td width="34%">0x0816</td>
            				<td width="34%">Portuguese - Portugal</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">pa</td>
            				<td width="34%">0x0046</td>
            				<td width="34%">Punjabi</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">pa-IN</td>
            				<td width="34%">0x0446</td>
            				<td width="34%">Punjabi - India</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ro</td>
            				<td width="34%">0x0018</td>
            				<td width="34%">Romanian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ro-RO</td>
            				<td width="34%">0x0418</td>
            				<td width="34%">Romanian - Romania</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ru</td>
            				<td width="34%">0x0019</td>
            				<td width="34%">Russian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ru-RU</td>
            				<td width="34%">0x0419</td>
            				<td width="34%">Russian - Russia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sa</td>
            				<td width="34%">0x004F</td>
            				<td width="34%">Sanskrit</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sa-IN</td>
            				<td width="34%">0x044F</td>
            				<td width="34%">Sanskrit - India</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sr-SP-Cyrl</td>
            				<td width="34%">0x0C1A</td>
            				<td width="34%">Serbian (Cyrillic) - Serbia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sr-SP-Latn</td>
            				<td width="34%">0x081A</td>
            				<td width="34%">Serbian (Latin) - Serbia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sk</td>
            				<td width="34%">0x001B</td>
            				<td width="34%">Slovak</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sk-SK</td>
            				<td width="34%">0x041B</td>
            				<td width="34%">Slovak - Slovakia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sl</td>
            				<td width="34%">0x0024</td>
            				<td width="34%">Slovenian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sl-SI</td>
            				<td width="34%">0x0424</td>
            				<td width="34%">Slovenian - Slovenia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es</td>
            				<td width="34%">0x000A</td>
            				<td width="34%">Spanish</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-AR</td>
            				<td width="34%">0x2C0A</td>
            				<td width="34%">Spanish - Argentina</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-BO</td>
            				<td width="34%">0x400A</td>
            				<td width="34%">Spanish - Bolivia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-CL</td>
            				<td width="34%">0x340A</td>
            				<td width="34%">Spanish - Chile</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-CO</td>
            				<td width="34%">0x240A</td>
            				<td width="34%">Spanish - Colombia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-CR</td>
            				<td width="34%">0x140A</td>
            				<td width="34%">Spanish - Costa Rica</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-DO</td>
            				<td width="34%">0x1C0A</td>
            				<td width="34%">Spanish - Dominican Republic</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-EC</td>
            				<td width="34%">0x300A</td>
            				<td width="34%">Spanish - Ecuador</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-SV</td>
            				<td width="34%">0x440A</td>
            				<td width="34%">Spanish - El Salvador</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-GT</td>
            				<td width="34%">0x100A</td>
            				<td width="34%">Spanish - Guatemala</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-HN</td>
            				<td width="34%">0x480A</td>
            				<td width="34%">Spanish - Honduras</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-MX</td>
            				<td width="34%">0x080A</td>
            				<td width="34%">Spanish - Mexico</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-NI</td>
            				<td width="34%">0x4C0A</td>
            				<td width="34%">Spanish - Nicaragua</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-PA</td>
            				<td width="34%">0x180A</td>
            				<td width="34%">Spanish - Panama</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-PY</td>
            				<td width="34%">0x3C0A</td>
            				<td width="34%">Spanish - Paraguay</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-PE</td>
            				<td width="34%">0x280A</td>
            				<td width="34%">Spanish - Peru</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-PR</td>
            				<td width="34%">0x500A</td>
            				<td width="34%">Spanish - Puerto Rico</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-ES</td>
            				<td width="34%">0x0C0A</td>
            				<td width="34%">Spanish - Spain</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-UY</td>
            				<td width="34%">0x380A</td>
            				<td width="34%">Spanish - Uruguay</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">es-VE</td>
            				<td width="34%">0x200A</td>
            				<td width="34%">Spanish - Venezuela</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sw</td>
            				<td width="34%">0x0041</td>
            				<td width="34%">Swahili</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sw-KE</td>
            				<td width="34%">0x0441</td>
            				<td width="34%">Swahili - Kenya</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sv</td>
            				<td width="34%">0x001D</td>
            				<td width="34%">Swedish</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sv-FI</td>
            				<td width="34%">0x081D</td>
            				<td width="34%">Swedish - Finland</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">sv-SE</td>
            				<td width="34%">0x041D</td>
            				<td width="34%">Swedish - Sweden</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">syr</td>
            				<td width="34%">0x005A</td>
            				<td width="34%">Syriac</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">syr-SY</td>
            				<td width="34%">0x045A</td>
            				<td width="34%">Syriac - Syria</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ta</td>
            				<td width="34%">0x0049</td>
            				<td width="34%">Tamil</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ta-IN</td>
            				<td width="34%">0x0449</td>
            				<td width="34%">Tamil - India</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">tt</td>
            				<td width="34%">0x0044</td>
            				<td width="34%">Tatar</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">tt-RU</td>
            				<td width="34%">0x0444</td>
            				<td width="34%">Tatar - Russia</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">te</td>
            				<td width="34%">0x004A</td>
            				<td width="34%">Telugu</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">te-IN</td>
            				<td width="34%">0x044A</td>
            				<td width="34%">Telugu - India</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">th</td>
            				<td width="34%">0x001E</td>
            				<td width="34%">Thai</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">th-TH</td>
            				<td width="34%">0x041E</td>
            				<td width="34%">Thai - Thailand</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">tr</td>
            				<td width="34%">0x001F</td>
            				<td width="34%">Turkish</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">tr-TR</td>
            				<td width="34%">0x041F</td>
            				<td width="34%">Turkish - Turkey</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">uk</td>
            				<td width="34%">0x0022</td>
            				<td width="34%">Ukrainian</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">uk-UA</td>
            				<td width="34%">0x0422</td>
            				<td width="34%">Ukrainian - Ukraine</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ur</td>
            				<td width="34%">0x0020</td>
            				<td width="34%">Urdu</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">ur-PK</td>
            				<td width="34%">0x0420</td>
            				<td width="34%">Urdu - Pakistan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">uz</td>
            				<td width="34%">0x0043</td>
            				<td width="34%">Uzbek</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">uz-UZ-Cyrl</td>
            				<td width="34%">0x0843</td>
            				<td width="34%">Uzbek (Cyrillic) - Uzbekistan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">uz-UZ-Latn</td>
            				<td width="34%">0x0443</td>
            				<td width="34%">Uzbek (Latin) - Uzbekistan</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">vi</td>
            				<td width="34%">0x002A</td>
            				<td width="34%">Vietnamese</td>
            			</tr>
            			<tr valign="top">
            				<td width="32%">vi-VN</td>
            				<td width="34%">0x042A</td>
            				<td width="34%">Vietnamese - Vietnam</td>
            			</tr>
            		</tbody>
            	</table>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.Calendar">
            <summary>
            Gets the default <strong>System.Globalization.Calendar</strong> instance as
            specified by the default culture.
            </summary>
            <remarks>
            	<para>A calendar divides time into measures, such as weeks, months, and years. The
                number, length, and start of the divisions vary in each calendar.</para>
            	<para>Any moment in time can be represented as a set of numeric values using a
                particular calendar. For example, the last vernal equinox occurred at (0.0, 0, 46,
                8, 20, 3, 1999) in the Gregorian calendar. An implementation of <b>Calendar</b> can
                map any <strong>DateTime</strong> value to a similar set of numeric values, and
                <b>DateTime</b> can map such sets of numeric values to a textual representation
                using information from <b>Calendar</b> and <strong>DateTimeFormatInfo</strong>. The
                textual representation can be culture-sensitive (for example, "8:46 AM March 20th
                1999 AD" for the en-US culture) or culture-insensitive (for example,
                "1999-03-20T08:46:00" in ISO 8601 format).</para>
            	<para>A <b>Calendar</b> implementation can define one or more eras. The
                <b>Calendar</b> class identifies the eras as enumerated integers where the current
                era (<strong>CurrentEra</strong>) has the value 0.</para>
            	<para>In order to make up for the difference between the calendar year and the
                actual time that the earth rotates around the sun or the actual time that the moon
                rotates around the earth, a leap year has a different number of days than a
                standard calendar year. Each <b>Calendar</b> implementation defines leap years
                differently.</para>
            	<para>For consistency, the first unit in each interval (for example, the first
                month) is assigned the value 1.</para>
            	<para>The <strong>System.Globalization</strong> namespace includes the following
                <b>Calendar</b> implementations: <strong>GregorianCalendar</strong>,
                <strong>HebrewCalendar</strong>, <strong>HijriCalendar</strong>,
                <strong>JapaneseCalendar</strong>, <strong>JulianCalendar</strong>,
                <strong>KoreanCalendar</strong>, <strong>TaiwanCalendar</strong>, and
                <strong>ThaiBuddhistCalendar</strong>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.PresentationType">
            <summary>
            Gets or sets the default type used by <strong>RadCalendar</strong> to handle its
            layout, and how will react to user interaction.
            </summary>
            <remarks>
            	<list type="table">
            		<listheader>
            			<term>Member</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term><strong>Interactive</strong></term>
            			<description>Interactive - user is allowed to select dates, navigate,
                        etc.</description>
            		</item>
            		<item>
            			<term><strong>Preview</strong></term>
            			<description>Preview - does not allow user interaction, for presentation
                        purposes only.</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.Orientation">
            <summary>
            Gets or sets the orientation (rendering direction) of the calendar component.
            Default value is <strong>RenderInRows</strong>.
            </summary>
            <remarks>
            	<list type="table">
            		<listheader>
            			<term>Member</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term><strong>RenderInRows</strong></term>
            			<description>Renders the calendar data row after row.</description>
            		</item>
            		<item>
            			<term><strong>RenderInColumns</strong></term>
            			<description>RenderInColumns - Renders the calendar data column after
                        column.</description>
            		</item>
            		<item>
            			<term><strong>None</strong></term>
            			<description>Enforces fallback to the default Orientation for
                        Telerik RadCalendar.</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether a postback to the server automatically occurs when the user interacts with the control.
            </summary>
            <remarks>
            Setting this property to true will make Telerik RadCalendar postback to the server 
            on date selection or when navigating to a different month.
            </remarks>
            <value>
            The default value is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.ShowDayCellToolTips">
            <summary>
            Gets or sets a value indicating whether a tooltips for day cells should be rendered.
            </summary>
            <remarks>
            Setting this property to false will force Telerik RadCalendar to not render day cell tooltips 
            </remarks>
            <value>
            The default value is <strong>true</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.NavigationSummary">
            <summary>
            Gets or sets a value for navigation controls summary.
            </summary>
            <remarks>
            Setting this property to empty string will force Telerik RadCalendar to not render summary attribute 
            </remarks>
            <value>
            The default value is <strong>"title and navigation"</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.CalendarSummary">
            <summary>
            Gets or sets a value for RadCalendar summary.
            </summary>
            <remarks>
            Setting this property to empty string will force Telerik RadCalendar to not render summary attribute 
            </remarks>
            <value>
            The default value is <strong>"Calendar"</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.HeaderTemplate">
            <summary>
            Gets or sets the <strong>System.Web.UI.ITemplate</strong> that defines how the
            header section of the <strong>RadCalendar</strong> control is displayed.
            </summary>
            <remarks>
            	<para>Header section of the <strong>RadCalendar</strong> control is displayed under
                the title section and above the main calendar area (the section that displays the
                dates information).</para>
            	<para>Use this property to create a template that controls how the header section
                of a <strong>RadCalendar</strong> control is displayed.</para>
            	<blockquote class="dtBlock">
            		<b class="le">CAUTION</b> This control can be used to display user input, which
                    might include malicious client script. Check any information that is sent from
                    a client for executable script, SQL statements, or other code before displaying
                    it in your application. ASP.NET provides an input request validation feature to
                    block script and HTML in user input. Validation server controls are also
                    provided to assess user input. For more information, see <strong>Validation
                    Server Controls</strong> in <strong>MSDN</strong><font color="black">.</font>
            	</blockquote>
            </remarks>
            <value>The default value is a null reference (<b>Nothing</b> in Visual Basic).</value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FooterTemplate">
            <value>The default value is a null reference (<b>Nothing</b> in Visual Basic).</value>
            <summary>
            Gets or sets the <strong>System.Web.UI.ITemplate</strong> that defines how the
            footer section of the <strong>RadCalendar</strong> control is displayed.
            </summary>
            <remarks>
            	<para>Footer section of the <strong>RadCalendar</strong> control is displayed under
                the main calendar area (the section that displays the dates information).</para>
            	<para>Use this property to create a template that controls how the footer section
                of a <strong>RadCalendar</strong> control is displayed.</para>
            	<blockquote class="dtBlock">
            		<b class="le">CAUTION</b> This control can be used to display user input, which
                    might include malicious client script. Check any information that is sent from
                    a client for executable script, SQL statements, or other code before displaying
                    it in your application. ASP.NET provides an input request validation feature to
                    block script and HTML in user input. Validation server controls are also
                    provided to assess user input. For more information, see <strong>Validation
                    Server Controls</strong> in <strong>MSDN</strong><font color="black">.</font>
            	</blockquote>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.EnableNavigation">
            <summary>
            Gets or sets whether the navigation controls in the title section will be
            displayed.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.EnableMonthYearFastNavigation">
            <summary>
            Gets or sets whether the month/year fast navigation controls in the title section will be
            enabled.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.NavigationPrevText">
            <summary>
                Gets or sets the text displayed for the previous month navigation control. Will be
                applied only if there is no image set (see
                <see cref="P:Telerik.Web.UI.RadCalendar.NavigationPrevImage">NavigationPrevImage</see>).
            </summary>
            <remarks>
            	<para>Use the <em>NavigationPrevText</em> property to provide custom text for the
                previous month navigation element in the title section of
                <strong>RadCalendar</strong>.</para>
            	<para><strong>Note</strong> that the <em>NavigationPrevImage</em> has priority and
                its value should be set to an empty string in order to be applied the
                <em>NavigationPrevText</em> value.</para>
            	<div>
            		<list type="table">
            			<item>
            				<term><img src="images/hs-tip.gif"/></term>
            				<description>
            					<para>This property does not automatically encode to HTML. You need
                                to convert special characters to the appropriate HTML value, unless
                                you want the characters to be treated as HTML. For example, to
                                explicitly display the greater than symbol (&gt;), you must use the
                                value <strong>&amp;gt;</strong>.</para>
            				</description>
            			</item>
            		</list>
            	</div>
            	<para>Because this property does not automatically encode to HTML, it is possible
                to specify an HTML tag for the <em>NavigationPrevText</em> property. For example,
                if you want to display an image for the next month navigation control, you can set
                this property to an expression that contains an <strong>&lt;img&gt;</strong>
                element. However note that
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~NavigationPrevImage.html">NavigationPrevImage</a>
                property is available for this type of functionality.</para>
            	<para>This property applies only if the <strong>EnableNavigation</strong> property
                is set to <strong>true</strong>.</para>
            </remarks>
            <value>
            The text displayed for the <strong>CalendarView</strong> previous month
            navigation cell. The default value is <b>"&amp;lt;"</b>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.NavigationNextText">
            <summary>
                Gets or sets the text displayed for the next month navigation control. Will be
                applied if there is no image set (see
                <see cref="P:Telerik.Web.UI.RadCalendar.NavigationNextImage">NavigationNextImage</see>).
            </summary>
            <value>
            The text displayed for the <strong>CalendarView</strong> next month navigation
            cell. The default value is <b>"&amp;gt;"</b>.
            </value>
            <remarks>
            	<para>Use the <em>NavigationNextText</em> property to provide custom text for the
                next month navigation element in the title section of
                <strong>RadCalendar</strong>.</para>
            	<para><strong>Note</strong> that the <em>NavigationNextImage</em> has priority and
                its value should be set to an empty string in order to be applied the
                <em>NavigationNextText</em> value.</para>
            	<div>
            		<list type="table">
            			<item>
            				<term><img src="images/hs-tip.gif"/></term>
            				<description>
            					<para>This property does not automatically encode to HTML. You need
                                to convert special characters to the appropriate HTML value, unless
                                you want the characters to be treated as HTML. For example, to
                                explicitly display the greater than symbol (&gt;), you must use the
                                value <strong>&amp;gt;</strong>.</para>
            				</description>
            			</item>
            		</list>
            	</div>
            	<para>Because this property does not automatically encode to HTML, it is possible
                to specify an HTML tag for the <em>NavigationNextText</em> property. For example,
                if you want to display an image for the next month navigation control, you can set
                this property to an expression that contains an <strong>&lt;img&gt;</strong>
                element. However note that
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~NavigationNextImage.html">NavigationNextImage</a>
                property is available for this type of functionality.</para>
            	<para>This property applies only if the <strong>EnableNavigation</strong> property
                is set to <strong>true</strong>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FastNavigationPrevText">
            <summary>
                Gets or sets the text displayed for the fast navigation previous month control.
                Will be applied if there is no image set (see
                <see cref="P:Telerik.Web.UI.RadCalendar.FastNavigationPrevImage">FastNavigationPrevImage</see>).
            </summary>
            <value>
            The text displayed for the <strong>CalendarView</strong> selection element in the
            fast navigation previous month cell. The default value is
            <b>"&amp;lt;&amp;lt;"</b>.
            </value>
            <remarks>
            	<para>Use the <em>FastNavigationPrevText</em> property to provide custom text for
                the next month navigation element in the title section of
                <strong>RadCalendar</strong>.</para>
            	<para><strong>Note</strong> that the <em>FastNavigationPrevImage</em> has priority
                and its value should be set to an empty string in order to be applied the
                <em>FastNavigationPrevText</em> value.</para>
            	<div>
            		<list type="table">
            			<item>
            				<term><img src="images/hs-tip.gif"/></term>
            				<description>
            					<para>This property does not automatically encode to HTML. You need
                                to convert special characters to the appropriate HTML value, unless
                                you want the characters to be treated as HTML. For example, to
                                explicitly display the greater than symbol (&gt;), you must use the
                                value <strong>&amp;gt;</strong>.</para>
            				</description>
            			</item>
            		</list>
            	</div>
            	<para>Because this property does not automatically encode to HTML, it is possible
                to specify an HTML tag for the <em>FastNavigationPrevText</em> property. For
                example, if you want to display an image for the next month navigation control, you
                can set this property to an expression that contains an
                <strong>&lt;img&gt;</strong> element. However note that
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~FastNavigationPrevImage.html">FastNavigationPrevImage</a>
                property is available for this type of functionality.</para>
            	<para>This property applies only if the <strong>EnableNavigation</strong> property
                is set to <strong>true</strong>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FastNavigationNextText">
            <summary>
                Gets or sets the text displayed for the fast navigation next month control. Will be
                applied if there is no image set (see
                <see cref="P:Telerik.Web.UI.RadCalendar.FastNavigationNextImage">FastNavigationNextImage</see>).
            </summary>
            <value>
            The text displayed for the <strong>CalendarView</strong> selection element in the
            fast navigation next month cell. The default value is <b>"&amp;gt;&amp;gt;"</b>.
            </value>
            <remarks>
            	<para>Use the <em>FastNavigationNextText</em> property to provide custom text for
                the next month navigation element in the title section of
                <strong>RadCalendar</strong>.</para>
            	<para><strong>Note</strong> that the <em>FastNavigationNextImage</em> has priority
                and its value should be set to an empty string in order to be applied the
                <em>FastNavigationNextText</em> value.</para>
            	<div>
            		<list type="table">
            			<item>
            				<term><img src="images/hs-tip.gif"/></term>
            				<description>
            					<para>This property does not automatically encode to HTML. You need
                                to convert special characters to the appropriate HTML value, unless
                                you want the characters to be treated as HTML. For example, to
                                explicitly display the greater than symbol (&gt;), you must use the
                                value <strong>&amp;gt;</strong>.</para>
            				</description>
            			</item>
            		</list>
            	</div>
            	<para>Because this property does not automatically encode to HTML, it is possible
                to specify an HTML tag for the <em>FastNavigationNextText</em> property. For
                example, if you want to display an image for the next month navigation control, you
                can set this property to an expression that contains an
                <strong>&lt;img&gt;</strong> element. However note that
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~FastNavigationNextImage.html">FastNavigationNextImage</a>
                property is available for this type of functionality.</para>
            	<para>This property applies only if the <strong>EnableNavigation</strong> property
                is set to <strong>true</strong>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.NavigationPrevImage">
            <summary>
            Gets or sets name of the image that is displayed for the previous month navigation control.
            </summary>
            <remarks>
            	<para>When using this property, the whole image URL is generated using also the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~ImagesBaseDir.html">ImagesBaseDir</a>
                (if no skin is applied) or the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~SkinsPath.html">SkinPath</a>
                (if skin is applied) properties values.</para>
            	<para><br/>
                Example when skin is <strong>NOT</strong> defined:<br/>
            		<strong>ImagesBaseDir</strong> = "Img/"<br/>
            		<strong>RowSelectorImage</strong> = "nav.gif"<br/>
            		<strong>complete image URL</strong> : "Img/nav.gif"</para>
            	<para>Example when skin is defined:<br/>
            		<strong>SkinPath</strong> = "RadControls/Calendar/Skins/"<br/>
            		<strong>RowSelectorImage</strong> = "nav.gif"<br/>
            		<strong>complete image URL</strong> : "RadControls/Calendar/Skins/nav.gif"</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.NavigationNextImage">
            <summary>
            Gets or sets the name of the image that is displayed for the next month navigation control.
            </summary>
            <remarks>
            	<para>When using this property, the whole image URL is generated using also the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~ImagesBaseDir.html">ImagesBaseDir</a>
                (if no skin is applied) or the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~SkinsPath.html">SkinPath</a>
                (if skin is applied) properties values.</para>
            	<para><br/>
                Example when skin is <strong>NOT</strong> defined:<br/>
            		<strong>ImagesBaseDir</strong> = "Img/"<br/>
            		<strong>RowSelectorImage</strong> = "nav.gif"<br/>
            		<strong>complete image URL</strong> : "Img/nav.gif"</para>
            	<para>Example when skin is defined:<br/>
            		<strong>SkinPath</strong> = "RadControls/Calendar/Skins/"<br/>
            		<strong>RowSelectorImage</strong> = "nav.gif"<br/>
            		<strong>complete image URL</strong> : "RadControls/Calendar/Skins/nav.gif"</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FastNavigationPrevImage">
            <summary>
            Gets or sets the name of the image that is displayed for the previous month fast
            navigation control.
            </summary>
            <remarks>
            	<para>When using this property, the whole image URL is generated using also the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~ImagesBaseDir.html">ImagesBaseDir</a>
                (if no skin is applied) or the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~SkinsPath.html">SkinPath</a>
                (if skin is applied) properties values.</para>
            	<para><br/>
                Example when skin is <strong>NOT</strong> defined:<br/>
            		<strong>ImagesBaseDir</strong> = "Img/"<br/>
            		<strong>RowSelectorImage</strong> = "nav.gif"<br/>
            		<strong>complete image URL</strong> : "Img/nav.gif"</para>
            	<para>Example when skin is defined:<br/>
            		<strong>SkinPath</strong> = "RadControls/Calendar/Skins/"<br/>
            		<strong>RowSelectorImage</strong> = "nav.gif"<br/>
            		<strong>complete image URL</strong> : "RadControls/Calendar/Skins/nav.gif"</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FastNavigationNextImage">
            <summary>
            Gets or sets the name of the image that is displayed for the next month fast
            navigation control.
            </summary>
            <remarks>
            	<para>When using this property, the whole image URL is generated using also the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~ImagesBaseDir.html">ImagesBaseDir</a>
                (if no skin is applied) or the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~SkinsPath.html">SkinPath</a>
                (if skin is applied) properties values.</para>
            	<para><br/>
                Example when skin is <strong>NOT</strong> defined:<br/>
            		<strong>ImagesBaseDir</strong> = "Img/"<br/>
            		<strong>RowSelectorImage</strong> = "nav.gif"<br/>
            		<strong>complete image URL</strong> : "Img/nav.gif"</para>
            	<para>Example when skin is defined:<br/>
            		<strong>SkinPath</strong> = "RadControls/Calendar/Skins/"<br/>
            		<strong>RowSelectorImage</strong> = "nav.gif"<br/>
            		<strong>complete image URL</strong> : "RadControls/Calendar/Skins/nav.gif"</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.NavigationPrevToolTip">
            <summary>
            Gets or sets the text displayed as a tooltip for the previous month navigation control.
            </summary>
            <remarks>
            Use the <em>NavigationPrevToolTip</em> property to provide custom text for the
            tooltip of the previous month navigation element in the title section of
            <strong>RadCalendar</strong>.
            </remarks>
            <value>
            The tooltip text displayed for the <strong>CalendarView</strong> previous month
            navigation cell. The default value is <b>"&amp;lt;"</b>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.NavigationNextToolTip">
            <summary>
            Gets or sets the text displayed as a tooltip for the next month navigation control.
            </summary>
            <value>
            The tooltip text displayed for the <strong>CalendarView</strong> next month
            navigation cell. The default value is <b>"&amp;gt;"</b>.
            </value>
            <remarks>
            Use the <em>NavigationNextToolTip</em> property to provide custom text for the
            tooltip of the next month navigation element in the title section of
            <strong>RadCalendar</strong>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FastNavigationPrevToolTip">
            <summary>
            Gets or sets the text displayed as a tooltip for the fast navigation previous
            month control.
            </summary>
            <remarks>
            Use the <em>FastNavigationPrevToolTip</em> property to provide custom text for
            the tooltip of the fast navigation previous month element in the title section of
            <strong>RadCalendar</strong>.
            </remarks>
            <value>
            The tooltip text displayed for the <strong>CalendarView</strong> fast navigation
            previous month cell. The default value is <b>"&amp;lt;&amp;lt;"</b>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FastNavigationNextToolTip">
            <summary>
            Gets or sets the text displayed as a tooltip for the fast navigation next month
            control.
            </summary>
            <remarks>
            Use the <em>FastNavigationNextToolTip</em> property to provide custom text for
            the tooltip of the fast navigation next month element in the title section of
            <strong>RadCalendar</strong>.
            </remarks>
            <value>
            The tooltip text displayed for the <strong>CalendarView</strong> fast navigation
            next month cell. The default value is <b>"&amp;gt;&amp;gt;"</b>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.NavigationCellSpacing">
            <summary>
            Gets or sets the cell spacing that is applied to the title table.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.NavigationCellPadding">
            <summary>
            Gets or sets the cell padding that is applied to the title table.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.TitleAlign">
            <summary>
            	<para>Gets or sets the horizontal alignment of the calendar title.</para>
            	<para>The HorizontalAlign enumeration is defined in
                <strong>System.Web.UI.WebControls</strong></para>
            </summary>
            <remarks>
            	<list type="table">
            		<listheader>
            			<term>
            				<para align="left">Member name</para>
            			</term>
            			<description>
            				<para align="left">Description</para>
            			</description>
            		</listheader>
            		<item>
            			<term>
            				<para align="left"><b>Center</b></para>
            			</term>
            			<description>The contents of a container are centered.</description>
            		</item>
            		<item>
            			<term><b>Justify</b></term>
            			<description>The contents of a container are uniformly spread out and
                        aligned with both the left and right margins.</description>
            		</item>
            		<item>
            			<term><b>Left</b></term>
            			<description>The contents of a container are left justified.</description>
            		</item>
            		<item>
            			<term><b>NotSet</b></term>
            			<description>The horizontal alignment is not set.</description>
            		</item>
            		<item>
            			<term><b>Right</b></term>
            			<description>The contents of a container are right justified.</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.TitleFormat">
            <summary>Gets or sets the format string that is applied to the calendar title.</summary>
            <remarks>
            	<para>The <i>property</i> should contain either a format specifier character or a
                custom format pattern. For more information, see the summary page for
                <strong>System.Globalization.DateTimeFormatInfo</strong>.</para>
            	<para>By default this <em>property</em> uses formatting string of
                '<font size="2"><strong>MMMM yyyy</strong>'. Valid formats are all supported by the .NET
                Framework.</font></para>
            	<para><font size="2">Example:</font></para>
            	<ul class="noindent">
            		<li>"d" is the standard short date pattern.</li>
            		<li>"%d" returns the day of the month; "%d" is a custom pattern.</li>
            		<li>"d " returns the day of the month followed by a white-space character; "d "
                    is a custom pattern.</li>
            	</ul>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.DayCellToolTipFormat">
            <summary>Gets or sets the format string that is applied to the days cells tooltip.</summary>
            <remarks>
            	<para>The <i>property</i> should contain either a format specifier character or a
                custom format pattern. For more information, see the summary page for
                <strong>System.Globalization.DateTimeFormatInfo</strong>.</para>
            	<para>By default this <em>property</em> uses formatting string of
                '<font size="2"><strong>dddd, MMMM dd, yyyy</strong>'. Valid formats are all supported by the .NET
                Framework.</font></para>
            	<para><font size="2">Example:</font></para>
            	<ul class="noindent">
            		<li>"d" is the standard short date pattern.</li>
            		<li>"%d" returns the day of the month; "%d" is a custom pattern.</li>
            		<li>"d " returns the day of the month followed by a white-space character; "d "
                    is a custom pattern.</li>
            	</ul>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.DateRangeSeparator">
            <summary>
            Gets or sets the separator string that will be put between start and end months in a multi view title.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.CssFile">
            <summary>
            Gets or sets the name of the file containing the CSS definition used by RadCalendar. Use "~/" (tilde) as a substitution of the web-application root directory.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.DefaultCellPadding">
            <summary>
            Gets or sets the cell padding of the table where are rendered the calendar days.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.DefaultCellSpacing">
            <summary>
            Gets or sets the cell spacing of the table where are rendered the calendar days.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.SpecialDays">
            <summary>
            A collection of special days in the calendar to which may be applied specific formatting.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Calendar/Examples/Functionality/SpecialDays/DefaultCS.aspx">SpecialDays online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.DayStyle">
            <summary>
            Gets the style properties for the days in the displayed month.
            </summary>
            <value>
            A TableItemStyle that contains the style properties for the days in the displayed month.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.WeekendDayStyle">
            <summary>
            Gets the style properties for the weekend dates on the Calendar control.
            </summary>
            <value>
            A TableItemStyle that contains the style properties for the weekend dates on the Calendar.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.CalendarTableStyle">
            <summary>
            Gets the style properties for the Calendar table container.
            </summary>
            <value>
            A TableItemStyle that contains the style properties for the Calendar table container.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.OtherMonthDayStyle">
            <summary>
            Gets the style properties for the days on the Calendar control that are not in the displayed month.
            </summary>
            <value>
            A TableItemStyle that contains the style properties for the days on the Calendar control that are not in the displayed month. 
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.OutOfRangeDayStyle">
            <summary>
            Gets the style properties for the days on the Calendar control that are out of the valid range for selection.
            </summary>
            <value>
            A TableItemStyle that contains the style properties for the days on the Calendar control that are out of the valid range for selection.
            </value> 
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.DisabledDayStyle">
            <summary>
            Gets the style properties for the disabled dates.
            </summary>
            <value>
            A TableItemStyle that contains the style properties for the disabled dates.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.SelectedDayStyle">
            <summary>
            Gets the style properties for the selected dates.
            </summary>
            <value>
            A TableItemStyle that contains the style properties for the selected dates.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.DayOverStyle">
            <summary>
            Gets the style properties applied when hovering over the Calendar days.
            </summary>
            <value>
            A TableItemStyle that contains the style properties applied when hovering over the Calendar days.
            </value> 
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.TitleStyle">
            <summary>
            Gets the style properties of the title heading for the Calendar control.
            </summary>
            <value>
            A TableItemStyle that contains the style properties of the title heading for the Calendar.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.HeaderStyle">
            <summary>
            Gets the style properties for the row and column headers.
            </summary>
            <value>
            A TableItemStyle that contains the style properties for the row and column headers.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.FastNavigationStyle">
            <summary>Gets the style properties for the Month/Year fast navigation.</summary>
            <value>
            A TableItemStyle that contains the style properties for the the Month/Year fast
            navigation.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.ViewSelectorStyle">
            <summary>
            Gets the style properties for the view selector cell.
            </summary>
            <value>
            A TableItemStyle that contains the style properties for the view selector cell.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.CalendarView">
            <summary>
            	<para>Exposes the top instance of <strong>CalendarView</strong> or its derived
                types.</para>
            	<para>Every <strong>CalendarView</strong> class handles the real calculation and
                rendering of <strong>RadCalendar</strong>'s calendric information. The
                <strong>CalendarView</strong> has the
                <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.CalendarView~ChildViews.html">
                ChildViews</a> collection which contains all the sub views in case of multi view
                setup.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.ShowColumnHeaders">
            <summary>Gets or sets whether the column headers will appear on the calendar.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.ShowRowHeaders">
            <summary>Gets or sets whether the row headers will appear on the calendar.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.EnableViewSelector">
            <summary>
            Gets or sets whether a selector for the entire <strong>CalendarView</strong> (
            <strong>MonthView</strong> ) will appear on the calendar.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.ShowOtherMonthsDays">
            <summary>
            Gets or sets whether the month matrix, when rendered will show days from other (previous or next)
            months or will render only blank cells.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.UseColumnHeadersAsSelectors">
            <summary>
            When the
            <a href="RadCalendar~Telerik.Web.UI.RadCalendar~ShowColumnHeaders.html">ShowColumnHeaders</a>
            and/or
            <a href="RadCalendar~Telerik.Web.UI.RadCalendar~ShowRowHeaders.html">ShowRowHeaders</a>
            properties are set to true, the <strong>UseColumnHeadersAsSelectors</strong> property specifies
            whether to use the days of the week, which overrides the used text/image header if
            any.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.UseRowHeadersAsSelectors">
            <summary>
            When the
            <a href="RadCalendar~Telerik.Web.UI.RadCalendar~EnableColumnSelectors.html">ShowColumnHeaders</a>
            and/or
            <a href="RadCalendar~Telerik.Web.UI.RadCalendar~EnableRowSelectors.html">ShowRowHeaders</a>
            properties are set to true, the <strong>UseRowHeadersAsSelectors</strong> property
            specifies whether to use the number of the week, which overrides the used text/image
            selector if any.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.RowHeaderText">
            <remarks>
            	<para>Use the <strong>RowHeaderText</strong> property to provide custom text for
                the <strong>CalendarView</strong> complete row header element.</para>
            	<div>
            		<list type="table">
            			<item>
            				<term><img src="images/hs-tip.gif"/></term>
            				<description>
            					<para>This property does not automatically encode to HTML. You need
                                to convert special characters to the appropriate HTML value, unless
                                you want the characters to be treated as HTML. For example, to
                                explicitly display the greater than symbol (&gt;), you must use the
                                value <strong>&amp;gt;</strong>.</para>
            				</description>
            			</item>
            		</list>
            	</div>
            	<para>Because this property does not automatically encode to HTML, it is possible
                to specify an HTML tag for the <strong>RowHeaderText</strong> property. For
                example, if you want to display an image for the next month navigation control, you
                can set this property to an expression that contains an
                <strong>&lt;img&gt;</strong> element.</para>
            	<para>This property applies only if the <strong>ShowRowsHeaders</strong>
                property is set to <strong>true</strong>.</para>
            </remarks>
            <value>
            The text displayed for the <strong>CalendarView</strong> header element. The default value is <b>""</b>.
            </value>
            <summary>
            Gets or sets the text displayed for the row header element.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.RowHeaderImage">
            <value>
            The image displayed for the <strong>CalendarView</strong> row header element. The default value is <b>""</b>.
            </value>
            <summary>
            Gets or sets the image displayed for the row header element.
            </summary>
            <remarks>
            	<para>This property applies only if the <strong>ShowRowHeaders</strong> property is
                set to <strong>true</strong>. If <strong>RowHeaderText</strong> is set too, its
                value is set as an alternative text to the image of the row header.</para>
            	<para>When using this property, the whole image URL is generated using also the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~ImagesBaseDir.html">ImagesBaseDir</a>
                value.</para>
            	<para>Example:<br/>
            		<strong>ShowRowHeaders</strong> = "true"<br/>
            		<strong>ImagesBaseDir</strong> = "Img/"<br/>
            		<strong>RowHeaderImage</strong> = "selector.gif"<br/>
            		<strong>complete image URL</strong> : "Img/selector.gif"</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.ColumnHeaderText">
            <remarks>
            	<para>Use the <strong>ColumnHeaderText</strong> property to provide custom text
                for the <strong>CalendarView</strong> complete column header element.</para>
            	<div>
            		<list type="table">
            			<item>
            				<term><img src="images/hs-tip.gif"/></term>
            				<description>
            					<para>This property does not automatically encode to HTML. You need
                                to convert special characters to the appropriate HTML value, unless
                                you want the characters to be treated as HTML. For example, to
                                explicitly display the greater than symbol (&gt;), you must use the
                                value <strong>&amp;gt;</strong>.</para>
            				</description>
            			</item>
            		</list>
            	</div>
            	<para>Because this property does not automatically encode to HTML, it is possible
                to specify an HTML tag for the <strong>ColumnHeaderText</strong> property. For
                example, if you want to display an image for the next month navigation control, you
                can set this property to an expression that contains an
                <strong>&lt;img&gt;</strong> element.</para>
            	<para>This property applies only if the <strong>ShowColumnHeaders</strong>
                property is set to <strong>true</strong>.</para>
            </remarks>
            <value>
            The text displayed for the <strong>CalendarView</strong> column header element. The default value is <b>""</b>.
            </value>
            <summary>
            Gets or sets the text displayed for the column header element.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.ColumnHeaderImage">
            <value>
            The image displayed for the <strong>CalendarView</strong> column header element in the
            header cells. The default value is <b>""</b>.
            </value>
            <summary>
            Gets or sets the image displayed for the column header element.
            </summary>
            <remarks>
            	<para>This property applies only if the <strong>ShowColumnHeaders</strong> property
                is set to <strong>true</strong>. If <strong>ColumnHeaderText</strong> is set too,
                its value is set as an alternative text to the image of the column header.</para>
            	<para>When using this property, the whole image URL is generated using also the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~ImagesBaseDir.html">ImagesBaseDir</a>
                value.</para>
            	<para>Example:</para>
            	<para><strong>ShowColumnHeaders</strong>="true"<br/>
            		<strong>ImagesBaseDir</strong> = "Img/"<br/>
            		<strong>ColumnHeaderImage</strong> = "selector.gif"<br/>
            		<strong>complete image URL</strong> : "Img/selector.gif"</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.ViewSelectorText">
            <summary>
            	<para>Gets or sets the text displayed for the complete
                <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.CalendarView.html">CalendarView</a>
                selection element in the view selector cell.</para>
            </summary>
            <value>
            The text displayed for the <strong>CalendarView</strong> selection element in the
            selector cell. The default value is <b>""</b>.
            </value>
            <remarks>
            	<para>Use the <strong>ViewSelectorText</strong> property to provide custom text for
                the <strong>CalendarView</strong> complete selection element in the selector
                cell.</para>
            	<div>
            		<list type="table">
            			<item>
            				<term><img src="images/hs-tip.gif"/></term>
            				<description>
            					<para>This property does not automatically encode to HTML. You need
                                to convert special characters to the appropriate HTML value, unless
                                you want the characters to be treated as HTML. For example, to
                                explicitly display the greater than symbol (&gt;), you must use the
                                value <strong>&amp;gt;</strong>.</para>
            				</description>
            			</item>
            		</list>
            	</div>
            	<para>Because this property does not automatically encode to HTML, it is possible
                to specify an HTML tag for the <strong>ViewSelectorText</strong> property. For
                example, if you want to display an image for the next month navigation control, you
                can set this property to an expression that contains an
                <strong>&lt;img&gt;</strong> element.</para>
            	<para>This property applies only if the <strong>EnableViewSelector</strong>
                property is set to <strong>true</strong>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.ViewSelectorImage">
            <summary>
            	<para>Gets or sets the image displayed for the complete
                <a href="RadCalendar~Telerik.Web.UI.Base.Calendar.CalendarView.html">CalendarView</a>
                selection element in the view selector cell.</para>
            </summary>
            <value>
            The image displayed for the <strong>CalendarView</strong> selection element in
            the selector cell. The default value is <b>""</b>.
            </value>
            <remarks>
            	<para>When using this property, the whole image URL is generated using also the
                <a href="RadCalendar~Telerik.Web.UI.RadCalendar~ImagesBaseDir.html">ImagesBaseDir</a>
                value.</para>
            	<para>Example:<br/>
            		<strong>ImagesBaseDir</strong> = "Img/"<br/>
            		<strong>ViewSelectorImage</strong> = "selector.gif"<br/>
            		<strong>complete image URL</strong> : "Img/selector.gif"</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.EnableMultiSelect">
            <summary>
            Allows the selection of multiple dates. If not set, only a single date is selected, and if any dates
            are all ready selected, they are cleared.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.EnableNavigationAnimation">
            <summary>
            Enables the animation shown when the calendar navigates to a different view.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendar.Skin">
            <summary>
            Gets or sets the name of the skin used. All skins reside in the location set by
            the <a href="RadCalendar~Telerik.Web.UI.RadCalendar~SkinsPath.html">SkinsPath
            Property</a>.
            </summary>
            <remarks>
            For additional information please refer to the
            <a href="GeneralSettings.html">Visual Settings</a> topic in this manual.
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadCalendar.DayRender">
            <summary>
            	<em>DayRender</em> event is fired after the generation of every calendar cell
            object and just before it gets rendered to the client. It is the last place where
            changes to the already constructed calendar cells can be made.
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadCalendar.HeaderCellRender">
            <summary>
            	<em>HeadeCellRender</em> event is fired after the generation of every calendar header cell
            object and just before it gets rendered to the client. It is the preferred place where
            changes to the constructed calendar header cells can be made.
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadCalendar.SelectionChanged">
            <summary>
            	<em>SelectionChanged</em> event is fired when a new date is added or removed from
            the
            <a href="RadCalendar~Telerik.Web.UI.RadCalendar~SelectedDates.html">SelectedDates</a>
            collection.
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadCalendar.DefaultViewChanged">
            <summary>
            	<em>DefaultViewChanged</em> event is fired a a navigation to a different date
            range occurred. Generally this is done by using the normal navigation buttons or the
            fast date navigation popup that allows "jumping" to a specified date.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadDateInput">
            <summary>
            A control which ensures the date entered by the user is verified and
            accurate.
            </summary>
            <example>
                The following example demonstrates how to dynamically add
                <see cref="!:Telerik.WebControls.RadDateInput">RadDateInput</see> to the page. 
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e) 
            { 
                RadDateInput dateInput = new RadDateInput();
                dateInput.ID = "dateInput";
                dateInput.Format = "d"; //Short date format
                dateInput.Culture = new CultureInfo("en-US");
                dateInput.SelectedDate = DateTime.Now;
                
                DateInputPlaceholder.Controls.Add(dateInput);
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                Dim dateInput As New RadDateInput()
                dateInput.ID = "dateInput"
                dateInput.Format = "d" 'Short Date Format
                dateInput.Culture = New CultureInfo("en-US")
                dateInput.SelectedDate = DateTime.Now
                
                DateInputPlaceholder.Controls.Add(dateInput)
            End Sub
                </code>
            </example>
            <remarks>
                You need to set the <see cref="P:Telerik.Web.UI.RadDateInput.DateFormat">DateFormat Property</see> to specify the
                relevant format for the date. You can also specify the culture information by
                setting the <see cref="P:Telerik.Web.UI.RadDateInput.Culture">Culture Property</see>.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadInputControl.Focus">
            <summary>Sets input focus to a RadInput.</summary>
            <remarks>
            	<para>Use the Focus method to set the initial focus of the Web page to the
                RadInput. The page will be opened in the browser with the control
                selected.</para>
            	<para>The Focus method causes a call to the page focus script to be emitted on the
                rendered page. If the page does not contain a control with an HTML ID attribute
                that matches the control that the Focus method was invoked on, then page focus will
                not be set. An example where this can occur is when you set the focus on a user
                control instead of setting the focus on a child control of the user control. In
                this scenario, you can use the FindControl method to find the child control of the
                user control and invoke its Focus method.</para>
            </remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="M:Telerik.Web.UI.RadInputControl.RegisterScriptControl">
            <summary>
            Registers the control with the ScriptManager
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadInputControl.ChildrenCreated">
            <summary>
            	Occurs after all child controls of the RadDateInput control have been created.
            	You can customize the control there, and add additional child controls.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.Label">
            <summary>
            Gets or sets the text of the <label>tag rendered along with RadInput
            control.</label>
            </summary>
            <value>
            A string used as a label for the control. The default value is empty string
            ("").
            </value>
            <remarks>
            If the value of this property has not been set, a tag will not be rendered. Keep
            in mind that accessibility standards require labels for all input controls.
            </remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
            <example>
            	<para>The following code example demonstrates how to use the Label property:</para>
            	<pre>
            &lt;/%@ Page Language="C#" AutoEventWireup="True" /%&gt;  <br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;  <br/>
            
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>
            &lt;head&gt;<br/>
                &lt;title&gt;RadTextBox Example &lt;/title&gt;<br/>
            		<br/>    &lt;script runat="server"&gt;<br/>
            		<br/>
            		<br/>        protected void RadTextBox1_TextChanged(object sender, EventArgs e)<br/>
                    {<br/>            this.RadTextBox1.Label = this.RadTextBox1.Text;<br/>        }<br/>&lt;/script&gt;<br/>
            		<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>
                        RadTextBox Example<br/>        &lt;/h3&gt;<br/>
                    &lt;radI:RadTextBox ID="RadTextBox1" AutoPostBack="true" EmptyMessage="Type Here" Label="Default Label: " runat="server" OnTextChanged="RadTextBox1_TextChanged"&gt;<br/>
                    &lt;/radI:RadTextBox&gt;<br/>
            		<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.LabelCssClass">
            <summary>
            Gets or sets the CSS class applied to the tag rendered along with RadInput
            control.
            </summary>
            <value>
            A string used specifying the CSS class of the label of the control. The default
            value is empty string ("").
            </value>
            <remarks><para>This property is applicable only if the Label property has been set.</para></remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether an automatic post back to the server
            occurs whenever the user presses the ENTER or the TAB key while in the RadInput
            control.
            </summary>
            <remarks>
            Use the AutoPostBack property to specify whether an automatic post back to the
            server will occur whenever the user presses the ENTER or the TAB key while in the
            RadInput control.
            </remarks>
            <value>
            true if an automatic postback occurs whenever the user presses the ENTER or the
            TAB key while in the RadInput control; otherwise, false. The default is
            false.
            </value>
            <example>
            	<para>The following code example demonstrates how to use the AutoPostBack property
                to automatically display the sum of the values entered in the RadTextBoxes when the
                user presses the ENTER or the TAB key.</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" AutoEventWireup="True" /%&gt;  <br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;  <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>    &lt;title&gt;RadTextBox Example &lt;/title&gt;<br/>
            		<br/>    &lt;script runat="server"&gt;<br/>
            		<br/>      protected void Page_Load(Object sender, EventArgs e)<br/>      {<br/>         int Answer;<br/>
            		<br/>         // Due to a timing issue with when page validation occurs, call the<br/>
                     // Validate method to ensure that the values on the page are valid.<br/>         Page.Validate();<br/>
            		<br/>         // Add the values in the text boxes if the page is valid.<br/>         if(Page.IsValid)<br/>         {<br/>            Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text);<br/>
            		<br/>            AnswerMessage.Text = Answer.ToString();<br/>         }<br/>
            		<br/>      }<br/>    &lt;/script&gt;<br/>
            		<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>            RadTextBox Example<br/>
                    &lt;/h3&gt;<br/>        &lt;table&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/>                    Enter integer values into the text boxes.<br/>
                                &lt;br /&gt;<br/>                    The two values are automatically added<br/>                    &lt;br /&gt;<br/>                    when you tab out of the text boxes.<br/>
                                &lt;br /&gt;<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/>
            		<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>                &lt;td&gt;<br/>
                                &lt;radI:RadTextBox ID="Value1" Columns="2" MaxLength="3" AutoPostBack="True" Text="1" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>
                                +<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    &lt;radI:RadTextBox ID="Value2" Columns="2" MaxLength="3" AutoPostBack="True" Text="1" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    =<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    &lt;asp:Label ID="AnswerMessage" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="2"&gt;<br/>
                                &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"<br/>                        ErrorMessage="Please enter a value.&lt;br /&gt;" EnableClientScript="False" Display="Dynamic"<br/>
                                    runat="server" /&gt;<br/>                    &lt;asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    EnableClientScript="False" Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                            &lt;td colspan="2"&gt;<br/>                    &lt;asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" EnableClientScript="False" Display="Dynamic"<br/>                        runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2" Type="Integer"<br/>                        MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    EnableClientScript="False" Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    &amp;nbsp<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>
                &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;<br/>
            	</pre>
            	<para>[Visual Basic]</para>
            	<pre>
            &lt;/%@ Page Language="VB" AutoEventWireup="True" /%&gt;<br/><br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/><br/>&lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>    &lt;title&gt;RadTextBox Example &lt;/title&gt;<br/><br/>    &lt;script runat="server"&gt;<br/><br/>
                  Protected Sub Page_Load(sender As Object, e As EventArgs)<br/><br/>         Dim Answer As Integer<br/><br/>         ' Due to a timing issue with when page validation occurs, call the<br/>         ' Validate method to ensure that the values on the page are valid.<br/>
                     Page.Validate()<br/><br/>         ' Add the values in the text boxes if the page is valid.<br/>         If Page.IsValid Then<br/><br/>            Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text)<br/><br/>
                        AnswerMessage.Text = Answer.ToString()<br/><br/>         End If<br/><br/>      End Sub<br/>    &lt;/script&gt;<br/><br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>
                        RadTextBox Example<br/>        &lt;/h3&gt;<br/>        &lt;table&gt;<br/>            &lt;tr&gt;<br/>
                            &lt;td colspan="5"&gt;<br/>                    Enter Integer values into the text boxes.<br/>
                                &lt;br /&gt;<br/>                    The two values are automatically added<br/>
                                &lt;br /&gt;<br/>                    When you tab out of the text boxes.<br/>
                                &lt;br /&gt;<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>
                        &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/><br/>                &lt;/td&gt;<br/>
                        &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>                &lt;td&gt;<br/>
                                &lt;radI:RadTextBox ID="Value1" Columns="2" MaxLength="3" AutoPostBack="True" Text="1" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    +<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>
                                &lt;radI:RadTextBox ID="Value2" Columns="2" MaxLength="3" AutoPostBack="True" Text="1" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    =<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &lt;asp:Label ID="AnswerMessage" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="2"&gt;<br/>
                                &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" EnableClientScript="False" Display="Dynamic"<br/>
                                    runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    EnableClientScript="False" Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                            &lt;td colspan="2"&gt;<br/>
                                &lt;asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" EnableClientScript="False" Display="Dynamic"<br/>
                                    runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    EnableClientScript="False" Display="Dynamic" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    &amp;nbsp<br/>                &lt;/td&gt;<br/>
                        &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when the
            RadInput control is set to validate when a postback occurs.
            </summary>
            <value>
            true if validation is performed when the RadInput control is set to validate
            when a postback occurs; otherwise, false. The default value is false.
            </value>
            <remarks>
            	<para>Use the CausesValidation property to determine whether validation is
                performed on both the client and the server when a RadInput control is set to
                validate when a postback occurs. Page validation determines whether the input
                controls associated with a validation control on the page all pass the validation
                rules specified by the validation control.</para>
            	<para>By default, a RadInput control does not cause page validation when the
                control loses focus. To set the RadInput control to validate when a postback
                occurs, set the CausesValidation property to true and the AutoPostBack property to
                true.</para>
            	<para>When the value of the CausesValidation property is set to true, you can also
                use the ValidationGroup property to specify the name of the validation group for
                which the RadInput control causes validation.</para>
            	<para>This property cannot be set by themes or style sheet themes.</para>
            </remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.MaxLength">
            <summary>Gets or sets the maximum number of characters allowed in the text box.</summary>
            <value>
            The maximum number of characters allowed in the text box. The default is 0, which
            indicates that the property is not set.
            </value>
            <remarks>
            Use the MaxLength property to limit the number of characters that can be entered
            in the RadInput control. This property cannot be set by themes or style sheet
            themes. For more information, see ThemeableAttribute and Introduction to ASP.NET
            Themes.
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the MaxLength property to
                limit the number of characters allowed in the RadTextBox control to 3. This example
                has a RadTextBox that accepts user input, which is a potential security threat. By
                default, ASP.NET Web pages validate that user input does not include script or HTML
                elements.</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" AutoEventWireup="True" /%&gt;  <br/>
            &lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;  <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>
                &lt;title&gt;RadTextBox Example &lt;/title&gt;<br/>
            		<br/>    &lt;script runat="server"&gt;<br/>
            		<br/>        protected void AddButton_Click(Object sender, EventArgs e)<br/>        {<br/>
                        int Answer;<br/>
            		<br/>            Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text);<br/>
            		<br/>            AnswerMessage.Text = Answer.ToString();<br/>
            		<br/>        }<br/>
            		<br/>    &lt;/script&gt;<br/>
            		<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>
                    &lt;h3&gt;<br/>            RadTextBox Example<br/>        &lt;/h3&gt;<br/>        &lt;table&gt;<br/>
                        &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/>                    Enter integer values into the text boxes.<br/>
                                &lt;br /&gt;<br/>                    Click the Add button to add the two values.<br/>
                                &lt;br /&gt;<br/>                    Click the Reset button to reset the text boxes.<br/>
                            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/>
            
            		<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>
                            &lt;td&gt;<br/>
                                &lt;radI:RadTextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    +<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &lt;radI:RadTextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    =<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &lt;asp:Label ID="AnswerMessage" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                        &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="2"&gt;<br/>
                                &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td colspan="2"&gt;<br/>
                                &lt;asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>
                                &amp;nbsp<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>
                            &lt;td colspan="4"&gt;<br/>                    &lt;asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>
            		<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;<br/>
            	</pre>
            	<para>[Visual Basic]</para>
            	<pre>
            &lt;/%@ Page Language="VB" AutoEventWireup="True" /%&gt;<br/><br/>
            &lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/>
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>
            &lt;html&gt;<br/>&lt;head&gt;<br/>    &lt;title&gt;RadTextBox Example &lt;/title&gt;<br/><br/>    &lt;script runat="server"&gt;<br/><br/>
                  Protected Sub AddButton_Click(sender As Object, e As EventArgs)<br/><br/>         Dim Answer As Integer<br/><br/>
                     Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text)<br/><br/>         AnswerMessage.Text = Answer.ToString()<br/>
            <br/>      End Sub<br/><br/>    &lt;/script&gt;<br/><br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>
                    &lt;h3&gt;<br/>            RadTextBox Example<br/>        &lt;/h3&gt;<br/>        &lt;table&gt;<br/>            &lt;tr&gt;<br/>
                            &lt;td colspan="5"&gt;<br/>                    Enter Integer values into the text boxes.<br/>
                                &lt;br /&gt;<br/>                    Click the Add button To add the two values.<br/> 
                               &lt;br /&gt;<br/>                    Click the Reset button To reset the text boxes.<br/>
                            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/><br/>
                            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>                &lt;td&gt;<br/>
                                &lt;radI:RadTextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    +<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &lt;radI:RadTextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    =<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &lt;asp:Label ID="AnswerMessage" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="2"&gt;<br/>
                                &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                            &lt;td colspan="2"&gt;<br/>
                                &lt;asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &amp;nbsp<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>
                        &lt;tr align="center"&gt;<br/>                &lt;td colspan="4"&gt;<br/>
                                &lt;asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/><br/>                &lt;/td&gt;<br/>
                        &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the contents of the RadInput control
            can be changed.
            </summary>
            <value>
            true if the contents of the RadInput control cannot be changed; otherwise,
            false. The default value is false.
            </value>
            <remarks>
            Use the ReadOnly property to specify whether the contents of the RadInput
            control can be changed. Setting this property to true will prevent users from entering
            a value or changing the existing value. Note that the user of the RadInput control
            cannot change this property; only the developer can. The Text value of a RadInput
            control with the ReadOnly property set to true is sent to the server when a postback
            occurs, but the server does no processing for a read-only RadInput. This prevents a
            malicious user from changing a Text value that is read-only. The value of the Text
            property is preserved in the view state between postbacks unless modified by
            server-side code. This property cannot be set by themes or style sheet themes.
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the ReadOnly property to
                prevent any changes to the text displayed in the RadTextBox control. This example
                has a RadTextBox that accepts user input, which is a potential security threat. By
                default, ASP.NET Web pages validate that user input does not include script or HTML
                elements.</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" AutoEventWireup="True" /%&gt;  <br/>
            &lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;  <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>
                &lt;title&gt;MultiLine TextBox Example &lt;/title&gt;<br/>
            		<br/>    &lt;script runat="server"&gt;<br/>        protected void SubmitButton_Click(Object sender, EventArgs e)<br/>
                    {<br/>
            		<br/>            Message.Text = "Thank you for your comment: &lt;br /&gt;" + Comment.Text;<br/>
            		<br/>        }<br/>
            		<br/>        protected void Check_Change(Object sender, EventArgs e)<br/>        {<br/>
            		<br/>            Comment.Wrap = WrapCheckBox.Checked;<br/>            Comment.ReadOnly = ReadOnlyCheckBox.Checked;<br/>
            		<br/>        }<br/>
            		<br/>    &lt;/script&gt;<br/>
            		<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>
                        MultiLine TextBox Example<br/>        &lt;/h3&gt;<br/>        Please enter a comment and click the submit button.<br/>
                    &lt;br /&gt;<br/>        &lt;br /&gt;<br/>
                    &lt;radI:RadTextBox ID="Comment" TextMode="MultiLine" Columns="50" Rows="5" runat="server" /&gt;<br/>
                    &lt;br /&gt;<br/>        &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Comment"<br/>
                        ErrorMessage="Please enter a comment.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                    &lt;asp:CheckBox ID="WrapCheckBox" Text="Wrap Text" Checked="True" AutoPostBack="True"<br/>
                        OnCheckedChanged="Check_Change" runat="server" /&gt;<br/>
            		<br/>        &lt;asp:CheckBox ID="ReadOnlyCheckBox" Text="ReadOnly" Checked="False" AutoPostBack="True"<br/>
                        OnCheckedChanged="Check_Change" runat="server" /&gt;<br/>
            		<br/>        &lt;asp:Button ID="SubmitButton" Text="Submit" OnClick="SubmitButton_Click" runat="server" /&gt;<br/>
                    &lt;hr /&gt;<br/>        &lt;asp:Label ID="Message" runat="server" /&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>
            &lt;/html&gt;
                </pre>
            	<para>[Visual Basic]</para>
            	<pre>
            &lt;/%@ Page Language="VB" AutoEventWireup="True" /%&gt;  <br/>
            &lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;  <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>
                &lt;title&gt;MultiLine RadTextBox Example &lt;/title&gt;<br/>
            		<br/>    &lt;script runat="server"&gt;<br/>
            		<br/>      Protected Sub SubmitButton_Click(sender As Object, e As EventArgs )<br/>
            		<br/>         Message.Text = "Thank you for your comment: &lt;br /&gt;" + Comment.Text<br/>
            		<br/>      End Sub<br/>
            		<br/>      Protected Sub Check_Change(sender As Object, e As EventArgs )<br/>
            		<br/>         Comment.Wrap = WrapCheckBox.Checked<br/>         Comment.ReadOnly = ReadOnlyCheckBox.Checked<br/>
            		<br/>      End Sub<br/>
            		<br/>    &lt;/script&gt;<br/>
            		<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>
                        MultiLine RadTextBox Example<br/>        &lt;/h3&gt;<br/>        Please enter a comment and click the submit button.<br/>
                    &lt;br /&gt;<br/>        &lt;br /&gt;<br/>
                    &lt;radI:RadTextBox ID="Comment" TextMode="MultiLine" Columns="50" Rows="5" runat="server" /&gt;<br/>
                    &lt;br /&gt;<br/>        &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Comment"<br/>
                        ErrorMessage="Please enter a comment.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                    &lt;asp:CheckBox ID="WrapCheckBox" Text="Wrap Text" Checked="True" AutoPostBack="True"<br/>
                        OnCheckedChanged="Check_Change" runat="server" /&gt;<br/>
            		<br/>        &lt;asp:CheckBox ID="ReadOnlyCheckBox" Text="ReadOnly" Checked="False" AutoPostBack="True"<br/>
                        OnCheckedChanged="Check_Change" runat="server" /&gt;<br/>
            		<br/>        &lt;asp:Button ID="SubmitButton" Text="Submit" OnClick="SubmitButton_Click" runat="server" /&gt;<br/>
                    &lt;hr /&gt;<br/>        &lt;asp:Label ID="Message" runat="server" /&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>
            &lt;/html&gt;
                </pre>
            </example>
            <notes>
            This example has a text box that accepts user input, which is a potential
            security threat. By default, ASP.NET Web pages validate that user input does not
            include script or HTML elements.
            </notes>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.EmptyMessage">
            <summary>Gets or sets a value message shown when the control is empty.</summary>
            <value>
            A string specifying the empty message. The default value is empty string.
            ("").
            </value>
            <remarks>
            Shown when the control is empty and loses focus. You can set the empty message
            text through EmptyMessage property.
            </remarks>
            <example>
            	<para>The following code example demonstrates how to set an empty message in code
                behind:</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;  <br/>
            &lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;  <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>
            		<br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;<br/>&lt;head runat="server"&gt;<br/>
                &lt;title&gt;Untitled Page&lt;/title&gt;<br/>    &lt;script runat="server"&gt;    <br/>
                    protected void Button1_Click(object sender, EventArgs e)<br/>        {<br/>
                        RadNumericTextBox1.EmptyMessage = RadNumericTextBox1.Text;<br/>            RadNumericTextBox1.Text = String.Empty;            <br/>
                    }<br/>&lt;/script&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>
                    &lt;radI:RadTextBox EmptyMessage="Type Here" ID="RadNumericTextBox1" runat="server"&gt;<br/>
                    &lt;/radI:RadTextBox&gt;<br/>
                    &lt;asp:Button ID="Button1" runat="server" Text="Set Empty Message" OnClick="Button1_Click" /&gt;<br/>
                &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;<br/>
            	</pre>
            	<para>[Visual Basic]</para>
            	<pre>
            &lt;/%@ Page Language="VB" /%&gt;<br/>
            &lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/>
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>
            <br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;<br/>&lt;head id="Head1" runat="server"&gt;<br/>
                &lt;title&gt;Untitled Page&lt;/title&gt;<br/>    &lt;script runat="server"&gt;<br/>
                Protected Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click<br/>
                        RadNumericTextBox1.EmptyMessage = RadNumericTextBox1.Text<br/>            RadNumericTextBox1.Text = String.Empty<br/>
                End Sub<br/>    &lt;/script&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>
                    &lt;radI:RadTextBox EmptyMessage="Type Here" ID="RadNumericTextBox1" runat="server"&gt;<br/>
                    &lt;/radI:RadTextBox&gt;<br/>        &lt;asp:Button ID="Button1" runat="server" Text="Set Empty Message" /&gt;<br/>
                &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.SelectionOnFocus">
            <summary>Gets or sets the selection on focus options for the RadInput control</summary>
            <value>
            	<para>A Telerik.WebControls.SelectionOnFocus object that represents the selection on
                focus in RadInput control. The default value is "None".</para>
            	<list type="bullet">
            		<item>None</item>
            		<item>CaretToBeginning</item>
            		<item>CaretToEnd</item>
            		<item>SelectAll</item>
            	</list>
            </value>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
            <remarks>
            	<para>Use this property to provide selection on focus of RadInput control. You
                can set one of the following values:</para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to set the SelectionOnFocus property
                from DropDownList:</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;  <br/>
            &lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;  <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>
            		<br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;<br/>&lt;head id="Head1" runat="server"&gt;<br/>
                &lt;title&gt;RadTextBox selection&lt;/title&gt;<br/>    &lt;script runat="server"&gt;<br/>
                protected void DropDownList1_SelectedIndexChanged(object sender, EventArgs e)<br/>    {<br/>
                    if (DropDownList1.SelectedValue == "CaretToBeginning")<br/>        {<br/>
                        this.RadTextBox1.SelectionOnFocus = Telerik.WebControls.SelectionOnFocus.CaretToBeginning;<br/>
                    }<br/>        else if (DropDownList1.SelectedValue == "CaretToEnd")<br/>        {<br/>
                        this.RadTextBox1.SelectionOnFocus = Telerik.WebControls.SelectionOnFocus.CaretToEnd;<br/>
                    }<br/>        else if (DropDownList1.SelectedValue == "SelectAll")<br/>        {<br/>
                        this.RadTextBox1.SelectionOnFocus = Telerik.WebControls.SelectionOnFocus.SelectAll;<br/>
                    }<br/>    }<br/>    &lt;/script&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>
                &lt;form id="form1" runat="server"&gt;<br/>    &lt;div&gt;<br/>
                    &lt;radI:RadTextBox SelectionOnFocus="CaretToBeginning" ID="RadTextBox1" runat="server"&gt;&lt;/radI:RadTextBox&gt;<br/>
                    &lt;br /&gt;<br/>
                    &lt;asp:DropDownList AutoPostBack="true" ID="DropDownList1" runat="server" OnSelectedIndexChanged="DropDownList1_SelectedIndexChanged"&gt;<br/>
                        &lt;asp:ListItem Text="CaretToBeginning"&gt;CaretToBeginning&lt;/asp:ListItem&gt;<br/>
                        &lt;asp:ListItem Text="CaretToEnd"&gt;CaretToEnd&lt;/asp:ListItem&gt;<br/>
                        &lt;asp:ListItem Text="SelectAll"&gt;SelectAll&lt;/asp:ListItem&gt;<br/>
                    &lt;/asp:DropDownList&gt;&lt;/div&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.InvalidStyleDuration">
            <summary>
            The InvalidStyleDuration property is used to determine how long (in milliseconds)
            the control will display its invalid style when incorrect data is entered.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.ClientEvents">
            <summary>
            Gets or sets an instance of the Telerik.WebControls.InputClientEvents class which defines 
            the JavaScript functions (client-side event handlers) that are invoked when specific client-side events are raised.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.ShowButton">
            <summary>
            Gets or sets a value indicating whether the button is displayed in the
            RadInput control.
            </summary>
            <value>
            true if the button is displayed; otherwise, false. The default value is true,
            however this property is only examined when the ButtonTemplate property is not a null
            reference (Nothing in Visual Basic).
            </value>
            <remarks>
            	<para>Use the ShowButton property to specify whether the button is displayed in the
                RadInput control.</para>
            	<para>The contents of the button are controlled by the ButtonTemplate
                property.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the ShowButton property to
                display the button in the RadInput control.</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;    <br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;    <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt; <br/>
            
            		<br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt; <br/>&lt;head id="Head1" runat="server"&gt; <br/>
                &lt;title&gt;Untitled Page&lt;/title&gt; <br/>
                &lt;script language="javascript" type="text/javascript"&gt; <br/>    function Click(sender) <br/>    { <br/>
                    alert("click"); <br/>    } <br/>    &lt;/script&gt; <br/>&lt;/head&gt; <br/>&lt;body&gt; <br/>
                &lt;form id="form1" runat="server"&gt; <br/>
                    &lt;radI:RadTextBox ShowButton="true" ID="RadNumericTextBox1" runat="server"&gt; <br/>
                        &lt;ClientEvents OnButtonClick="Click" /&gt; <br/>            &lt;ButtonTemplate&gt; <br/>
                            &lt;input type="button" value="click here"  /&gt; <br/>            &lt;/ButtonTemplate&gt; <br/>
                    &lt;/radI:RadTextBox&gt; <br/>    &lt;/form&gt; <br/>&lt;/body&gt; <br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.ButtonsPosition">
            <summary>
            Gets or sets a value that indicates whether the button should be positioned left or right of the RadInput box.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.Text">
            <summary>Gets or sets the text content of the RadInput control.</summary>
            <value>
            The text displayed in the RadInput control. The default is an empty string
            ("").
            </value>
            <remarks>
            	<para>Use the Text property to specify or determine the text displayed in the
                RadInput control. To limit the number of characters accepted by the control, set
                the MaxLength property. If you want to prevent the text from being modified, set
                the ReadOnly property.</para>
            	<para>The value of this property, when set, can be saved automatically to a
                resource file by using a designer tool.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the Text property to
                specify the text displayed in the RadTextBox control.</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" AutoEventWireup="True" /%&gt;  <br/>
            &lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;  <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>
                &lt;title&gt;RadTextBox Example &lt;/title&gt;<br/>
            		<br/>    &lt;script runat="server"&gt;<br/>
            		<br/>
            		<br/>        protected void AddButton_Click(object sender, EventArgs e)<br/>        {<br/> 
                       int Answer;<br/>
            		<br/>            Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text);<br/>
            		<br/>            AnswerMessage.Text = Answer.ToString();<br/>        }<br/>&lt;/script&gt;<br/>
            		<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>
                        RadTextBox Example<br/>        &lt;/h3&gt;<br/>        &lt;table&gt;<br/>            &lt;tr&gt;<br/>
                            &lt;td colspan="5"&gt;<br/>                    Enter integer values into the text boxes.<br/>
                                &lt;br /&gt;<br/>                    Click the Add button to add the two values.<br/>
                                &lt;br /&gt;<br/>                    Click the Reset button to reset the text boxes.<br/>
                            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/>
            		<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>
                            &lt;td&gt;<br/>                    &lt;radI:RadTextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    +<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &lt;radI:RadTextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    =<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &lt;asp:Label ID="AnswerMessage" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="2"&gt;<br/>
                                &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                            &lt;td colspan="2"&gt;<br/>
                                &lt;asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>
                                &amp;nbsp<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>
                            &lt;td colspan="4"&gt;<br/>
                                &lt;asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>
            		<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>
            &lt;/html&gt;
                </pre>
            	<para>[Visual Basic]</para>
            	<pre>
            &lt;/%@ Page Language="VB" AutoEventWireup="True" /%&gt;<br/><br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/>
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>
                &lt;title&gt;RadTextBox Example &lt;/title&gt;<br/><br/>    &lt;script runat="server"&gt;<br/><br/>
                  Protected Sub AddButton_Click(sender As Object, e As EventArgs)<br/><br/>         Dim Answer As Integer<br/><br/>
                     Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text)<br/><br/>
                     AnswerMessage.Text = Answer.ToString()<br/><br/>      End Sub<br/><br/>    &lt;/script&gt;<br/><br/>&lt;/head&gt;<br/>
            &lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>            RadTextBox Example<br/>
                    &lt;/h3&gt;<br/>        &lt;table&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/> 
                               Enter Integer values into the text boxes.<br/>                    &lt;br /&gt;<br/>
                                Click the Add button To add the two values.<br/>                    &lt;br /&gt;<br/>
                                Click the Reset button To reset the text boxes.<br/>                &lt;/td&gt;<br/>
                        &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/><br/>                &lt;/td&gt;<br/>
                        &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>                &lt;td&gt;<br/>
                                &lt;radI:RadTextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    +<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &lt;radI:RadTextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    =<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &lt;asp:Label ID="AnswerMessage" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                        &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="2"&gt;<br/>
                                &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                            &lt;td colspan="2"&gt;<br/>
                                &lt;asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    &amp;nbsp<br/>
                            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>                &lt;td colspan="4"&gt;<br/>
                                &lt;asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server" /&gt;<br/>
                            &lt;/td&gt;<br/>
                            &lt;td&gt;<br/><br/>                &lt;/td&gt;<br/>
                        &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.ValidationGroup">
            <summary>
            Gets or sets the group of controls for which the ra.a.d.input control causes
            validation when it posts back to the server.
            </summary>
            <value>
            The group of controls for which the RadInput control causes validation when it
            posts back to the server. The default value is an empty string ("").
            </value>
            <remarks>
            	<para>Validation groups allow you to assign validation controls on a page to a
                specific category. Each validation group can be validated independently from other
                validation groups on the page. Use the ValidationGroup property to specify the name
                of the validation group for which the RadInput control causes validation when it
                posts back to the server.</para>
            	<para>This property has an effect only when the CausesValidation property is set to
                true. When you specify a value for the ValidationGroup property, only the
                validation controls that are part of the specified group are validated when the
                RadInput control posts back to the server. If you do not specify a value for
                this property and the CausesValidation property is set to true, all validation
                controls on the page that are not assigned to a validation group are validated when
                the control posts back to the server.</para>
            	<para>This property cannot be set by themes or style sheet themes.</para>
            </remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.EmptyMessageStyle">
            <summary>
            	<para>Gets the style properties for RadInput when when the control is
                empty.</para>
            </summary>
            <value>
            A Telerik.WebControls.TextBoxStyle object that represents the style properties
            for RadInput control. The default value is an empty TextBoxStyle object.
            </value>
            <example>
            	<para>The following code example demonstrates how to set EmptyMessageStyle
                property:</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;    <br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;   <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt; <br/>
            		<br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt; <br/>&lt;head runat="server"&gt; <br/>    &lt;title&gt;Untitled Page&lt;/title&gt; <br/>
            &lt;/head&gt; <br/>&lt;body&gt; <br/>    &lt;form id="form1" runat="server"&gt; <br/>
                    &lt;radI:RadTextBox EmptyMessage="EmptyMessage" ID="RadNumericTextBox1" runat="server"&gt; <br/>
                        &lt;EnabledStyle BackColor="red" /&gt; <br/>            &lt;EmptyMessageStyle BackColor="AliceBlue" /&gt; <br/>
                        &lt;FocusedStyle BackColor="yellow" /&gt; <br/>            &lt;HoveredStyle BackColor="blue" /&gt; <br/>
                    &lt;/radI:RadTextBox&gt; <br/>    &lt;/form&gt; <br/>&lt;/body&gt; <br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
            <remarks>
            	<para>Use this property to provide a custom style for the empty message state of
                RadInput control. Common style attributes that can be adjusted include
                foreground color, background color, font, and alignment within the RadInput.
                Providing a different style enhances the appearance of the RadInput
                control.</para>
            	<para>Empty message style properties in the RadInput control are inherited from
                one style property to another through a hierarchy. For example, if you specify a
                red font for the EnabledStyle property, all other style properties in the
                RadInput control will also have a red font. This allows you to provide a common
                appearance for the control by setting a single style property. You can override the
                inherited style settings for an item style property that is higher in the hierarchy
                by setting its style properties. For example, you can specify a blue font for the
                FocusedStyle property, overriding the red font specified in the EnabledStyle
                property.</para>
            	<para>To specify a custom style, place the &lt;EmptyMessageStyle&gt; tags between
                the opening and closing tags of the RadInput control. You can then list the
                style attributes within the opening &lt;EmptyMessageStyle&gt; tag.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.FocusedStyle">
            <summary>Gets the style properties for focused RadInput control.</summary>
            <value>
            A Telerik.WebControls.TextBoxStyle object that represents the style properties
            for focused RadInput control. The default value is an empty TextBoxStyle
            object.
            </value>
            <example>
            	<para>The following code example demonstrates how to set FocusedStyle
                property:</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;    <br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;    <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt; <br/>
            		<br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt; <br/>&lt;head runat="server"&gt; <br/>
                &lt;title&gt;Untitled Page&lt;/title&gt; <br/>&lt;/head&gt; <br/>&lt;body&gt; <br/>
                &lt;form id="form1" runat="server"&gt; <br/>
                    &lt;radI:RadTextBox EmptyMessage="EmptyMessage" ID="RadNumericTextBox1" runat="server"&gt; <br/>
                        &lt;EnabledStyle BackColor="red" /&gt; <br/>            &lt;EmptyMessageStyle BackColor="AliceBlue" /&gt; <br/>
                        &lt;FocusedStyle BackColor="yellow" /&gt; <br/>            &lt;HoveredStyle BackColor="blue" /&gt; <br/>
                    &lt;/radI:RadTextBox&gt; <br/>    &lt;/form&gt; <br/>&lt;/body&gt; <br/>&lt;/html&gt;
                </pre>
            </example>
            <remarks>
            	<para>Use this property to provide a custom style for the focused RadInput
                control. Common style attributes that can be adjusted include foreground color,
                background color, font, and alignment within the RadInput. Providing a different
                style enhances the appearance of the RadInput control.</para>
            	<para>Focused style properties in the RadInput control are inherited from one
                style property to another through a hierarchy. For example, if you specify a red
                font for the EnabledStyle property, all other style properties in the RadInput
                control will also have a red font. This allows you to provide a common appearance
                for the control by setting a single style property. You can override the inherited
                style settings for an item style property that is higher in the hierarchy by
                setting its style properties. For example, you can specify a blue font for the
                FocusedStyle property, overriding the red font specified in the EnabledStyle
                property.</para>
            	<para>To specify a custom style, place the &lt;FocusedStyle&gt; tags between the
                opening and closing tags of the RadInput control. You can then list the style
                attributes within the opening &lt;FocusedStyle&gt; tag.</para>
            </remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.DisabledStyle">
            <summary>Gets the style properties for disabled RadInput control.</summary>
            <value>
            A Telerik.WebControls.TextBoxStyle object that represents the style properties
            for disabled RadInput control. The default value is an empty TextBoxStyle
            object.
            </value>
            <example>
            	<para>The following code example demonstrates how to set
                <strong>DisabledStyle</strong> property:</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;      <br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;      <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;  <br/>
            		<br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;  <br/>&lt;head runat="server"&gt;  <br/>    &lt;title&gt;Untitled Page&lt;/title&gt;  <br/>
            &lt;/head&gt;  <br/>&lt;body&gt;  <br/>    &lt;form id="form1" runat="server"&gt;  <br/>
                    &lt;radI:RadTextBox EmptyMessage="EmptyMessage" ID="RadNumericTextBox1" runat="server"&gt;  <br/>
                        &lt;EnabledStyle BackColor="red" /&gt;  <br/>            &lt;EmptyMessageStyle BackColor="AliceBlue" /&gt;  <br/>
                        &lt;FocusedStyle BackColor="yellow" /&gt;  <br/>            &lt;HoveredStyle BackColor="blue" /&gt;  <br/>
                    &lt;/radI:RadTextBox&gt;  <br/>    &lt;/form&gt;  <br/>&lt;/body&gt;  <br/>&lt;/html&gt;
                </pre>
            </example>
            <remarks>
            	<para>Use this property to provide a custom style for the disabled RadInput
                control. Common style attributes that can be adjusted include foreground color,
                background color, font, and alignment within the RadInput. Providing a different
                style enhances the appearance of the RadInput control.</para>
            	<para>Disabled style properties in the RadInput control are inherited from one
                style property to another through a hierarchy. For example, if you specify a red
                font for the EnabledStyle property, all other style properties in the RadInput
                control will also have a red font. This allows you to provide a common appearance
                for the control by setting a single style property. You can override the inherited
                style settings for an item style property that is higher in the hierarchy by
                setting its style properties. For example, you can specify a blue font for the
                DisabledStyle property, overriding the red font specified in the EnabledStyle
                property.</para>
            	<para>To specify a custom style, place the &lt;DisabledStyle&gt; tags between the
                opening and closing tags of the RadInput control. You can then list the style
                attributes within the opening &lt;DisabledStyle&gt; tag.</para>
            </remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.InvalidStyle">
            <summary>Gets the style properties for invalid state of RadInput control.</summary>
            <value>
            A Telerik.WebControls.TextBoxStyle object that represents the style properties
            for invalid RadInput control. The default value is an empty TextBoxStyle
            object.
            </value>
            <example>
            	<para>The following code example demonstrates how to set InvalidStyle
                property:</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;      <br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;      <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;  <br/>
            		<br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;  <br/>&lt;head runat="server"&gt;  <br/>    &lt;title&gt;Untitled Page&lt;/title&gt;  <br/>
            &lt;/head&gt;  <br/>&lt;body&gt;  <br/>    &lt;form id="form1" runat="server"&gt;  <br/>
                    &lt;radI:RadTextBox EmptyMessage="EmptyMessage" ID="RadNumericTextBox1" runat="server"&gt;  <br/>
                        &lt;EnabledStyle BackColor="red" /&gt;  <br/>            &lt;EmptyMessageStyle BackColor="AliceBlue" /&gt;  <br/>
                        &lt;FocusedStyle BackColor="yellow" /&gt;  <br/>            &lt;HoveredStyle BackColor="blue" /&gt;  <br/>        &lt;/radI:RadTextBox&gt;  <br/>
                &lt;/form&gt;  <br/>&lt;/body&gt;  <br/>&lt;/html&gt;<br/>
            	</pre>
            </example>
            <remarks>
            	<para>Use this property to provide a custom style for the invalid state RadInput
                control. Common style attributes that can be adjusted include foreground color,
                background color, font, and alignment within the RadInput. Providing a different
                style enhances the appearance of the RadInput control.</para>
            	<para>Enabled style properties in the RadInput control are inherited from one
                style property to another through a hierarchy. For example, if you specify a red
                font for the EnabledStyle property, all other style properties in the RadInput
                control will also have a red font. This allows you to provide a common appearance
                for the control by setting a single style property. You can override the inherited
                style settings for an item style property that is higher in the hierarchy by
                setting its style properties. For example, you can specify a blue font for the
                InvalidStyle property, overriding the red font specified in the EnabledStyle
                property.</para>
            	<para>To specify a custom style, place the &lt;InvalidStyle&gt; tags between the
                opening and closing tags of the RadInput control. You can then list the style
                attributes within the opening &lt;InvalidStyle&gt; tag.</para>
            </remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.HoveredStyle">
            <summary>Gets the style properties for hovered RadInput control.</summary>
            <value>
            A Telerik.WebControls.TextBoxStyle object that represents the style properties
            for hovered RadInput control. The default value is an empty TextBoxStyle
            object.
            </value>
            <example>
            	<para>The following code example demonstrates how to set HoveredStyle
                property:</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;     <br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;     <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt; <br/>
            		<br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt; <br/>&lt;head runat="server"&gt; <br/>
                &lt;title&gt;Untitled Page&lt;/title&gt; <br/>&lt;/head&gt; <br/>&lt;body&gt; <br/>    &lt;form id="form1" runat="server"&gt; <br/>
                    &lt;radI:RadTextBox EmptyMessage="EmptyMessage" ID="RadNumericTextBox1" runat="server"&gt; <br/>
                        &lt;EnabledStyle BackColor="red" /&gt; <br/>            &lt;EmptyMessageStyle BackColor="AliceBlue" /&gt; <br/>
                        &lt;FocusedStyle BackColor="yellow" /&gt; <br/>            &lt;HoveredStyle BackColor="blue" /&gt; <br/>
                    &lt;/radI:RadTextBox&gt; <br/>    &lt;/form&gt; <br/>&lt;/body&gt; <br/>&lt;/html&gt;
            </pre>
            </example>
            <remarks>
            	<para>Use this property to provide a custom style for the hovered RadInput
                control. Common style attributes that can be adjusted include foreground color,
                background color, font, and alignment within the RadInput. Providing a different
                style enhances the appearance of the RadInput control.</para>
            	<para>Hovered style properties in the RadInput control are inherited from one
                style property to another through a hierarchy. For example, if you specify a red
                font for the EnabledStyle property, all other style properties in the RadInput
                control will also have a red font. This allows you to provide a common appearance
                for the control by setting a single style property. You can override the inherited
                style settings for an item style property that is higher in the hierarchy by
                setting its style properties. For example, you can specify a blue font for the
                HoveredStyle property, overriding the red font specified in the EnabledStyle
                property.</para>
            	<para>To specify a custom style, place the &lt;HoveredStyle&gt; tags between the
                opening and closing tags of the RadInput control. You can then list the style
                attributes within the opening &lt;HoveredStyle&gt; tag.</para>
            </remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.EnabledStyle">
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
            <summary>Gets the style properties for enabled RadInput control.</summary>
            <value>
            A Telerik.WebControls.TextBoxStyle object that represents the style properties
            for enabled RadInput control. The default value is an empty TextBoxStyle
            object.
            </value>
            <remarks>
            	<para>Use this property to provide a custom style for the enabled RadInput
                control. Common style attributes that can be adjusted include foreground color,
                background color, font, and alignment within the RadInput. Providing a different
                style enhances the appearance of the RadInput control.</para>
            	<para>Enabled style properties in the RadInput control are inherited from one
                style property to another through a hierarchy. For example, if you specify a red
                font for the EnabledStyle property, all other style properties in the RadInput
                control will also have a red font. This allows you to provide a common appearance
                for the control by setting a single style property. You can override the inherited
                style settings for an item style property that is higher in the hierarchy by
                setting its style properties. For example, you can specify a blue font for the
                FocusedStyle property, overriding the red font specified in the EnabledStyle
                property.</para>
            	<para>To specify a custom style, place the &lt;EnabledStyle&gt; tags between the
                opening and closing tags of the RadInput control. You can then list the style
                attributes within the opening &lt;EnabledStyle&gt; tag.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to set EnabledStyle
                property:</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;    <br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;    <br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt; <br/>
            		<br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt; <br/>&lt;head runat="server"&gt; <br/>    &lt;title&gt;Untitled Page&lt;/title&gt; <br/>&lt;/head&gt; <br/>
            &lt;body&gt; <br/>    &lt;form id="form1" runat="server"&gt; <br/>
                    &lt;radI:RadTextBox EmptyMessage="EmptyMessage" ID="RadNumericTextBox1" runat="server"&gt; <br/>
                        &lt;EnabledStyle BackColor="red" /&gt; <br/>            &lt;EmptyMessageStyle BackColor="AliceBlue" /&gt; <br/>
                        &lt;FocusedStyle BackColor="yellow" /&gt; <br/>            &lt;HoveredStyle BackColor="blue" /&gt; <br/>
                    &lt;/radI:RadTextBox&gt; <br/>    &lt;/form&gt; <br/>&lt;/body&gt; <br/>&lt;/html&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadInputControl.ButtonContainer">
            <summary>Gets control that contains the buttons of RadInput control</summary>
            <remarks>The ShowButton or ShowSpinButton properties must be set to true</remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="M:Telerik.Web.UI.RadDateInput.Clear">
            <summary>
            Clears the selected date of the RadDateInput control and displays a blank date.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.ShortYearCenturyEnd">
            <summary>
            Gets or sets a value that indicates the end of the century that is used to interpret 
            the year value when a short year (single-digit or two-digit year) is entered in the input.
            </summary>
            <value>
            The year when the century ends. Default is 2029.
            </value>
            <remarks>
            Having a value of 2029 indicates that a short year will be interpreted as a year between 1930 and 2029. 
            For example 55 will be interpreted as 1955 but 12 -- as 2012 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.ShortYearCenturyStart">
            <summary>
            Gets a value that indicates the start of the century that is used to interpret 
            the year value when a short year (single-digit or two-digit year) is entered in the input.
            </summary>
            <value>
            The year when the century starts. Default is 2029.
            </value>
            <remarks>
            Having a value of 2029 indicates that a short year will be interpreted as a year between 1930 and 2029. 
            For example 55 will be interpreted as 1955 but 12 -- as 2012 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.DisplayDateFormat">
            <summary>
            	<para>Gets or sets the display date format used by
                <strong>RadDateInput</strong>.(Visible when the control is not on focus.)</para>
            </summary>
            <remarks>
            You can examine <see cref="T:System.Globalization.DateTimeFormatInfo">DateTimeFormatInfo</see> class for a list of all
            available format characters and patterns.
            </remarks>
            <example>
            	<code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            {
                RadDateInput1.DisplayDateFormat = "M/d/yyyy"; //Short date pattern. The same as "d".
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                RadDateInput1.DisplayDateFormat = "M/d/yyyy" 'Short date pattern. The same as "d".
            End Sub
                </code>
            </example>
            <value>
            	<para>A string specifying the display date format used by RadDateInput. The default
                value is "d" (short date format). If the <strong>DisplayDateFormat</strong> is left
                blank, the <strong>DateFormat</strong> will be used both for editing and
                display.</para>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.DateFormat">
            <summary>
            Gets or sets the date and time format used by
            <strong>RadDateInput</strong>.
            </summary>
            <value>
            A string specifying the date format used by <strong>RadDateInput</strong>. The
            default value is "d" (short date format).
            </value>
            <example>
            	<code lang="CS" title="[New Example]">
            private void Page_Load(object sender, System.EventArgs e)
            {
                RadDateInput1.DateFormat = "M/d/yyyy"; //Short date pattern. The same as "d".
            }
                </code>
            	<code lang="VB" title="[New Example]">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                RadDateInput1.DateFormat = "M/d/yyyy" 'Short date pattern. The same as "d".
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.SelectedDate">
            <summary>Gets or sets the date content of <strong>RadDateInput</strong>.</summary>
            <value>
                A <see cref="T:System.DateTime">DateTime</see> object that represents the selected
                date. The default value is <see cref="P:Telerik.Web.UI.RadDateInput.MinDate">MinDate</see>.
            </value>
            <example>
                The following example demonstrates how to use the <strong>SelectedDate</strong>
                property to set the content of <strong>RadDateInput</strong>.
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            {
                RadDateInput1.SelectedDate = DateTime.Now;
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                RadDateInput1.SelectedDate = DateTime.Now
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.DbSelectedDate">
            <summary>
            Gets or sets the date content of <strong>RadDateInput</strong> in a
            database-friendly way.
            </summary>
            <value>
                A <see cref="T:System.DateTime">DateTime</see> object that represents the selected
                date. The default value is <see cref="P:Telerik.Web.UI.RadDateInput.MinDate">MinDate</see>.
            </value>
            <example>
                The following example demonstrates how to use the <strong>SelectedDate</strong>
                property to set the content of RadDateInput. 
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            {
                RadDateInput1.DbSelectedDate = tableRow["BirthDate"];
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                RadDateInput1.DbSelectedDate = tableRow("BirthDate")
            End Sub
                </code>
            </example>
            <remarks>
            This property behaves exactly like the <strong>SelectedDate</strong> property.
            The only difference is that it will not throw an exception if the new value is null or
            DBNull. Setting a null value will revert the selected date to the MinDate value.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.Culture">
            <summary>
            Gets or sets the culture used by <strong>RadDateInput</strong> to format the
            date.
            </summary>
            <value>
                A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object that
                represents the current culture used. The default value is
                <strong>System.Threading.Thread.CurrentThread.CurrentUICulture</strong>.
            </value>
            <example>
                The following example demonstrates how to use the <strong>Culture</strong>
                property. 
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            {
                RadDateInput1.Culture = new CultureInfo("en-US");
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                RadDateInput1.Culture = New CultureInfo("en-US")
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.ValidationDate">
            <summary>
            This property is used by the <strong>RadDateInput</strong>'s internals only. It
            is subject to change in the future versions. Please do not use.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.MinDate">
            <summary>
            Gets or sets the smallest date value allowed by
            <strong>RadDateInput</strong>.
            </summary>
            <value>
                A <see cref="T:System.DateTime">DateTime</see> object that represents the smallest
                date value by <strong>RadDateInput</strong>. The default value is 1/1/1980.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.MaxDate">
            <summary>
            Gets or sets the largest date value allowed by
            <strong>RadDateInput</strong>.
            </summary>
            <value>
                A <see cref="T:System.DateTime">DateTime</see> object that represents the largest
                date value allowed by <strong>RadDateInput</strong>. The default value is
                <em>12/31/2099</em>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.IsEmpty">
            <summary>Used to determine if <strong>RadDateInput</strong> is empty.</summary>
            <value>
            	<strong>true</strong> if the date is empty; otherwise <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadDateInput.OnClientDateChanged">
            <summary>
            Gets or sets the JavaScript event handler fired whenever the date of
            <strong>RadDateInput</strong> changes.
            </summary>
            <value>
            A string specifying the name of the JavaScript event handling routine. The
            default value is empty string ("").
            </value>
            <remarks>
                The event handler function is called with 2 parameters: 
                <list type="bullet">
            		<item>A reference to the <strong>RadDateInput</strong> object, which triggered
                    the event;</item>
            		<item>
                        An event arguments object that contains the following properties: 
                        <ul>
            				<li><strong>OldDate</strong> - The old date of the
                            <strong>RadDateInput</strong></li>
            				<li><strong>NewDate</strong> - The new date of the
                            <strong>RadDateInput</strong></li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
            	<para>This example demonstrates the usage of the
                <strong>OnClientDateChanged</strong> property.</para>
            	<pre>
            &lt;script type="text/javascript&amp;quot&gt;<br/>function onDateChange(dateInput, args)<br/>{<br/>     alert("New date:" + args.NewDate);<br/>} <br/>&lt;/script&gt;<br/>
            		<br/>&lt;radI:RadDateInput<br/>      ID="RadDateInput1"<br/>      runat="server"<br/>      OnClientDateChanged="onDateChange"&gt;<br/>&lt;/radI:RadDateInput&gt;
                </pre>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.AutoPostBackControl">
            <summary>
            Summary description for AutoPostBackControl.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.AutoPostBackControl.None">
            <summary>
            Without AutoPostBack 
            </summary>
            <value>0</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.AutoPostBackControl.Both">
            <summary>
            Automatically postback to the server after the Date or Time is modified.
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.AutoPostBackControl.TimeView">
            <summary>
            Automatically postback to the server after the Time is modified.
            </summary>
            <value>2</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.AutoPostBackControl.Calendar">
            <summary>
            Automatically postback to the server after the Date is modified.
            </summary>
            <value>3</value>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.ClientsideCalendarType">
            <summary>
            Internal enumeration used by the component
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.HeaderType">
            <summary>Specifies the type of a selector sell.</summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.HeaderType.Row">
            <summary>
            Rendered as the first cell in a row. When clicked if UseRowHeadersAsSelectors is true, 
            it will select the entire row.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.HeaderType.Column">
            <summary>
            Rendered as the first cell in a column. When clicked if UseColumnHeadersAsSelectors is true, 
            it will select the entire column.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.HeaderType.View">
            <summary>
            Rendered in the top left corner of the calendar view. When clicked if EnableViewSelector is true, 
            it will select the entire view.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.MonthLayout">
            <summary>
            Summary description for MonthLayout.
            Layout_7columns_x_6rows  - horizontal layout
            Layout_14columns_x_3rows - horizontal layout     
            Layout_21columns_x_2rows - horizontal layout
            Layout_7rows_x_6columns  - vertical layout, required when UseColumnHeadersAsSelectors is true and Orientation is set to RenderInColumns.
            Layout_14rows_x_3columns - vertical layout, required when UseColumnHeadersAsSelectors is true and Orientation is set to RenderInColumns.
            Layout_21rows_x_2columns - vertical layout, required when UseColumnHeadersAsSelectors is true and Orientation is set to RenderInColumns.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.MonthLayout.Layout_7columns_x_6rows">
            <summary>
            Allows the calendar to display the days in a 7  by 6 matrix.
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.MonthLayout.Layout_14columns_x_3rows">
            <summary>
            Alows the calendar to display the days in a 14 by 3 matrix.
            </summary>
            <value>2</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.MonthLayout.Layout_21columns_x_2rows">
            <summary>
            Allows the calendar to display the days in a 21 by 2 matrix.
            </summary>
            <value>4</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.MonthLayout.Layout_7rows_x_6columns">
            <summary>
            Allows the calendar to display the days in a 7  by 6 matrix, required when UseColumnHeadersAsSelectors is true and Orientation is set to RenderInColumns.
            </summary>
            <value>8</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.MonthLayout.Layout_14rows_x_3columns">
            <summary>
            Allows the calendar to display the days in a 14 by 3 matrix, required when UseColumnHeadersAsSelectors is true and Orientation is set to RenderInColumns.
            </summary>
            <value>16</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.MonthLayout.Layout_21rows_x_2columns">
            <summary>
            Allows the calendar to display the days in a 21 by 2 matrix, required when UseColumnHeadersAsSelectors is true and Orientation is set to RenderInColumns.
            </summary>
            <value>32</value>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.Orientation">
            <summary>
            Summary description for Orientation.
            RenderInRows - Renders the calendar data row after row.
            RenderInColumns - Renders the calendar data column after column.
            None - Enforces fallback to the default Orientation for Telerik RadCalendar.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.Orientation.RenderInRows">
            <summary>
            Renders the calendar data row after row.
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.Orientation.RenderInColumns">
            <summary>
            RenderInColumns - Renders the calendar data column after column.
            </summary>
            <value>3</value>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.PresentationType">
            <summary>
            Describes how <strong>RadCalendar</strong> will handle its layout, and how will
            react to user interaction. Interactive - user is allowed to select dates, navigate,
            etc. Preview - does not allow user interaction, for presentation purposes only.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.PresentationType.Interactive">
            <summary>
            Interactive - user is allowed to select dates, navigate, etc.
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.PresentationType.Preview">
            <summary>
            Preview - does not allow user interaction, for presentation purposes only.
            </summary>
            <value>2</value>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.RecurringEvents">
            <summary>
            Summary description for RecurringEvents.
            DayInMonth - Only the day part of the date is taken into account. That gives the ability to serve events repeated every month on the same day.
            DayAndMonth - The month and the day part of the date is taken into account. That gives the ability to serve events repeated in a specific month on the same day.
            Today - gives the ability to control the visual appearace of today's date.
            None - Default value, means that the day in question is a single point event, no recurrences.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.RecurringEvents.DayInMonth">
            <summary>
            Only the day part of the date is taken into account. That gives the ability to serve events repeated every month on the same day.
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.RecurringEvents.DayAndMonth">
            <summary>
            The month and the day part of the date are taken into account. That gives the ability to serve events repeated in a specific month on the same day.
            </summary>
            <value>2</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.RecurringEvents.Week">
            <summary>
            The week day is taken into account. That gives the ability to serve events repeated in a specific day of the week.
            </summary>
            <value>4</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.RecurringEvents.WeekAndMonth">
            <summary>
            The week day and the month are taken into account. That gives the ability to serve events repeated in a specific week day in a specific month.
            </summary>
            <value>8</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.RecurringEvents.Today">
            <summary>
             Gives the ability to control the visual appearace of today's date.
            </summary>
            <value>16</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.RecurringEvents.WeekDayWeekNumberAndMonth">
            <summary>
            The week number, the weekday (Mon, Tue, etc.) and the month are taken into account. That gives the ability to serve public holiday events
            repeated each year (e.g. Martin Luther King Jr. Day is observed on the third Monday of January each year 
            so you would specify as a date Jan 21st, 2008 (or Jan 19th, 2009 -- it would have the same effect).
            </summary>
            <value>32</value>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.RecurringEvents.None">
            <summary>
            Default value, means that the day in question is a single point event, no recurrence.
            </summary>
            <value>64</value>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.SelectorType">
            <summary>Specifies the type of a selector sell.</summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.SelectorType.Row">
            <summary>
            Rendered as the first cell in a row. When clicked, it will select the entire
            row.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.SelectorType.Column">
            <summary>
            Rendered as the first cell in a column. When clicked, it will select the entire
            column.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Calendar.SelectorType.View">
            <summary>
            Rendered in the top left corner of the calendar view. When clicked, it will
            select the entire view.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.CalendarClientEvents">
            <summary>
            Defines the JavaScript functions (client-side event handlers) that are invoked
            when specific client-side event is raised.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.Persistence.PropertiesObject">
            <summary>
            This class implements the PropertyBag "enabled" base object class, from which all other
            classes in Telerik RadCalendar descend, excluding those that are descendents of PropertiesControl.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.CalendarClientEvents.OnInit">
            <summary>
            Event fired after the RadCalendar client object has been completely initialized.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.CalendarClientEvents.OnLoad">
            <summary>
            The event is fired immediately after the page onload event. 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.CalendarClientEvents.OnDateSelecting">
            <summary>
            Event fired when a valid date is being selected. 
            Return false to cancel selection.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.CalendarClientEvents.OnDateSelected">
            <summary>
            Event fired after a valid date has been selected. Can be used in combination with 
            OnDateClick for maximum convenience. This event can be used to conditionally process the 
            selected date or any related event with it on the client.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.CalendarClientEvents.OnDateClick">
            <summary>
            Event fired when a calendar cell, representing a date is clicked. This event is not the same as 
            OnDateSelected. One can have an OnDateClick event for a disabled or read only calendar 
            cell which does not allow.s OnDateSelected event to be fired.
            This event can be used to conditionally process some information/event based on the clicked
            date.
            Return false to cancel the click event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.CalendarClientEvents.OnRowHeaderClick">
            <summary>
            Event fired when a calendar row header is clicked. This event is not the same as 
            OnDateClick. One can have an OnRowHeaderClick event for a disabled or read only calendar 
            cell which does not allow to select calendar dates.
            This event can be used to conditionally process some information/event based on the clicked
            row header.
            Return false to cancel the click event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.CalendarClientEvents.OnColumnHeaderClick">
            <summary>
            Event fired when a calendar column header is clicked. This event is not the same as 
            OnDateClick. One can have an OnColumnHeaderClick event for a disabled or read only calendar 
            cell which does not allow selection of calendar dates.
            This event can be used to conditionally process some information/event based on the clicked
            column header.
            Return false to cancel the click event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.CalendarClientEvents.OnViewSelectorClick">
            <summary>
            Event fired when a calendar view selector is clicked. This event is not the same as 
            OnDateClick. One can have an OnViewSelectorClick event for a disabled or read only calendar 
            cell which does not allow selection of calendar cell.
            This event can be used to conditionally process some information/event based on the clicked
            view selector.
            Return false to cancel the click event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.CalendarClientEvents.OnCalendarViewChanging">
            <summary>
            Event fired when the calendar view is about to change.
            Return false to cancel the event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.CalendarClientEvents.OnCalendarViewChanged">
            <summary>
            Event fired when the calendar view has changed. Generally
            the event is raised as a result of using the built-in navigation controls. Event is
            raised before the results are rendered, so that custom logic could be executed, and the
            change could be prevented if necessary. There is no way to find whether the operation
            was accomplished successfully. This event can be used to preprocess some conditions or
            visual styles/content before the final rendering of the calendar. Return false to
            cancel the event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.CalendarClientEvents.OnDayRender">
            <summary>
            Event fired for every calendar day cell when the calendar is rendered as a result of a client-side navigation (i.e. only in OperationType="Client"). 
            This event mimics the server-side DayRender event -- gives final control over the output of a specific calendar cell.
            This event can be used to apply final changes to the output (content and visial styles) just before the content is displayed.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.DatePickerClientEvents">
            <summary>
            Summary description for DatePickerClientEvents.
            </summary>
            
        </member>
        <member name="P:Telerik.Web.UI.Calendar.DatePickerClientEvents.OnDateSelected">
            <summary>
                Gets or sets the name of the client-side event handler that is executed whenever
                the selected date of the datepicker is changed.
            </summary>
            <example>
            	<pre>
            [ASPX/ASCX]
            </pre>
            	<pre>
            &lt;script type="text/javascript" &gt;<br/>function DatePicker_OnDateSelected(pickerInstance, args)<br/>{<br/>    alert("The picker date has been chanded from " + args.OldDate + " to " + args.NewDate);<br/>}     <br/>&lt;/script&gt;<br/>&lt;radCln:RadDatePicker ID="RadDatePicker1" runat="server" &gt;<br/>    &lt;ClientEvents OnDateSelected="DatePicker_OnDateSelected" /&gt;<br/>&lt;/radCln:RadDatePicker&gt;   
            </pre>
            </example>
            <exclude/>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.DatePickerClientEvents.OnPopupOpening">
            <summary>
            Gets or sets the name of the client-side event handler that is executed prior to
            opening the calendar popup and its synchronizing with the DateInput value.
            </summary>
            <remarks>
            	<para>There can be some conditions you do want not to open the calendar popup on
                click of the popup button. Then you should cancel the event either by <em>return
                false;</em> or set its argument <em>args.CancelOpen = true;</em></para>
            	<pre>
            &lt;script type="text/javascript"&gt;<br/>function Opening(sender, args)<br/>{<br/>    args.CancelOpen = true;<br/>    //or<br/>    return false;<br/>}<br/>&lt;/script&gt;<br/>&lt;radCln:RadDatePicker ID="RadDatePicker1" runat="server"&gt;<br/>    &lt;ClientEvents OnPopupOpening="Opening"/&gt;<br/>&lt;/radCln:RadDatePicker&gt;
                </pre>
            	<para>Set the <em>args.CancelSynchronize = true;</em> to override the default
                DatePicker behavior of synchronizing the date in the DateInput and Calendar
                controls. This is useful for focusing the Calendar control on a date different from
                the DateInput one.</para>
            	<pre>
            &lt;script type="text/javascript"&gt;<br/>function Opening(sender, args)<br/>{<br/>    args.CancelCalendarSynchronize = true;<br/>    sender.Calendar.NavigateToDate([2006,12,19]);<br/>}<br/>&lt;/script&gt;<br/>&lt;radCln:RadDatePicker ID="RadDatePicker1" runat="server" &gt;<br/>    &lt;ClientEvents OnPopupOpening="Opening"/&gt;<br/>&lt;/radCln:RadDatePicker&gt;
            </pre>
            </remarks>
            <example>
            	<pre>
            [ASPX/ASCX]        
            </pre>
            	<pre>
            &lt;script type="text/javascript"&gt;<br/>function OnPopupOpening(datepickerInstance, args)<br/>{<br/>   ......<br/>}<br/>&lt;/script&gt;<br/><br/>&lt;radcln:RadDatePicker ID="RadDatePicker1" runat="server"&gt;<br/>   &lt;ClientEvents OnPopupOpening="OnPopupOpening" /&gt;<br/>&lt;/radcln:RadDatePicker&gt;
            </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.DatePickerClientEvents.OnPopupClosing">
            <summary>
            Gets or sets the name of the client-side event handler that is executed prior to
            closing the calendar popup.
            </summary>
            <example>
            	<pre>
            [ASPX/ASCX]        
            </pre>
            	<pre>
            &lt;script type="text/javascript"&gt;<br/>function OnPopupClosing(datepickerInstance, args)<br/>{<br/>   ......<br/>}<br/>&lt;/script&gt;<br/><br/>&lt;radcln:RadDatePicker ID="RadDatePicker1" runat="server"&gt;<br/>   &lt;ClientEvents OnPopupClosing="OnPopupClosing" /&gt;<br/>&lt;/radcln:RadDatePicker&gt;
            </pre>
            </example>
            <remarks>
            	<para>There can be some conditions you do want not to close the calendar popup on
                click over it. Then you should cancel the event either by <em>return false;</em> or
                set its argument <em>args.CancelClose = true;</em></para>
            	<pre>
            &lt;script type="text/javascript"&gt;<br/>function Closing(sender, args)<br/>{<br/>    args.CancelClose = true;<br/>    //or<br/>    return false;<br/>}<br/>&lt;/script&gt;<br/>&lt;radCln:RadDatePicker ID="RadDatePicker1" runat="server"&gt;<br/>    &lt;ClientEvents OnPopupClosing="Closing"/&gt;<br/>&lt;/radCln:RadDatePicker&gt;   
            </pre>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.DayRenderEventArgs">
            <summary>
            Arguments class used with the DayRender event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.DayRenderEventArgs.Cell">
            <summary>
            Gets a reference to the TableCell object that represents the specified day to render.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.DayRenderEventArgs.Day">
            <summary>
            Gets a reference to the RadCalendarDay object that represents the specified day to render.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.DayRenderEventArgs.View">
            <summary>
            Gets a reference to the MonthView object that represents the current View, corresponding to the specified day to render.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.DefaultViewChangedEventArgs">
            <summary>
            Arguments class used when the DefaultViewChanged event is fired.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.DefaultViewChangedEventArgs.OldView">
            <summary>
            Gets the CalendarView instance that was the default one prior to the rise of DefaultViewChanged
            event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.DefaultViewChangedEventArgs.NewView">
            <summary>
            Gets the  new default CalendarView instance set by the DefaultViewChanged event.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.HeaderCellRenderEventArgs">
            <summary>
            Arguments class used with the DayRender event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.HeaderCellRenderEventArgs.Cell">
            <summary>
            Gets a reference to the TableCell object that represents the specified day to render.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.HeaderCellRenderEventArgs.HeaderType">
            <summary>
            Gets a reference to the RadCalendarDay object that represents the specified day to render.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.SelectedDateChangedEventArgs">
            <summary>
            Provides data for the SelectedDateChanged event of the DatePicker control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.SelectedDatesEventArgs">
            <summary>
            Arguments class used when the SelectionChanged event is fired.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.SelectedDatesEventArgs.SelectedDates">
            <summary>
            Gets a reference to the SelectedDates collection, represented by the Telerik RadCalendar component
            that rise the SelectionChanged event.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.MonthYearFastNavigationSettings">
            <summary>
            The MonthYearFastNavigationSettings class can be used to configure RadCalendar's
            client-side fast navigation.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.MonthYearFastNavigationSettings.TodayButtonCaption">
            <summary>Gets or sets the value of the "Today" button caption;</summary>
            <value>
            This property can be used to localize the button caption. The default is
            "Today".
            </value>
        </member>
        <member name="P:Telerik.Web.UI.MonthYearFastNavigationSettings.OkButtonCaption">
            <summary>Gets or sets the value of the "OK" button caption;</summary>
            <value>
            This property can be used to localize the button caption. The default is
            "OK".
            </value>
        </member>
        <member name="P:Telerik.Web.UI.MonthYearFastNavigationSettings.CancelButtonCaption">
            <summary>Gets or sets the value of the "Cancel" button caption;</summary>
            <value>
            This property can be used to localize the button caption. The default is
            "Cancel".
            </value>
        </member>
        <member name="P:Telerik.Web.UI.MonthYearFastNavigationSettings.DateIsOutOfRangeMessage">
            <summary>Gets or sets the value of the "Date is out of range" error message.</summary>
            <value>
            This property can be used to localize the message the user sees when she tries to navigate to a date outside the allowed range. 
            The default is "Date is out of range.".
            </value>
        </member>
        <member name="P:Telerik.Web.UI.MonthYearFastNavigationSettings.EnableTodayButtonSelection">
            <summary>Gets or sets the value indicating whether the Today button should perform date selection or simple navigation.</summary>
            <value>
            The default value is false (i.e. Today button works as a navigation enhancement only).
            </value>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.Persistence.PropertyItem">
            <summary>
            Summary description for PropertyItem.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadDate">
            <summary>
            Wrapper class for System.DateTime, which allows implementing persistable DateTime collections
            like DateTimeCollection.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDate.Date">
            <summary>
            The System.DateTime represented by this RadDate wrapper class.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.CalendarPopupButton">
            <summary>
            The control that toggles the calendar popup.  
            You can customize the appearance by setting the object's properties.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.CalendarPopupButton.ImageUrl">
            <summary>
            Gets or sets the popup button image URL.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.CalendarPopupButton.HoverImageUrl">
            <summary>
            Gets or sets the popup button hover image URL.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDatePicker.ConfigureCalendar">
            <summary>
            Override this method to provide any last minute configuration changes.  Make sure you call the base implementation.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDatePicker.ConfigureDateInput">
            <summary>
            Override this method to provide any last minute configuration changes.  Make sure you call the base implementation.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDatePicker.Clear">
            <summary>
            Clears the selected date of the RadDatePicker control and displays a blank date.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDatePicker.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            IPostBackDataHandler implementation
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.ImagesPath">
            <summary>Gets or sets default path for the grid images when EnableEmbeddedSkins is set to false.</summary>
            <value>A string containing the path for the grid images. The default is string.Empty.</value>
            <remarks>
            <para>
            
            </para>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadDatePicker.ChildrenCreated">
            <summary>
            	Occurs after all child controls of the DatePicker control have been created.
            	You can customize the control there, and add additional child controls.
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadDatePicker.SelectedDateChanged">
            <summary>
            	Occurs when the selected date of the DatePicker changes between posts to the server.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.Calendar">
            <summary>
            Gets the RadCalendar instance of the datepicker control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.DateInput">
            <summary>
            Gets the RadDateInput instance of the datepicker control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.DatePopupButton">
            <summary>
            Gets the DatePopupButton instance of the datepicker control.  
            You can use the object to customize the popup button's appearance and behavior.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether a postback to the server automatically occurs when the user interacts with the control.
            </summary>
            <remarks>
            Setting this property to true will make RadDatePicker postback to the server 
            on date selection through the Calendar or the DateInput components.
            </remarks>
            <value>
            The default value is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.SelectedDate">
            <summary>Gets or sets the date content of RadDatePicker.</summary>
            <value>
                A <see cref="T:System.DateTime">DateTime</see> object that represents the selected
                date. The default value is <see cref="P:Telerik.Web.UI.RadDatePicker.MinDate">MinDate</see>.
            </value>
            <example>
                The following example demonstrates how to use the <strong>SelectedDate</strong>
                property to set the content of RadDatePicker. 
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            {
                RadDatePicker1.SelectedDate = DateTime.Now;
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                RadDatePicker1.SelectedDate = DateTime.Now
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.ValidationDate">
            <summary>
            This property is used by the RadDateInput's internals only. It is subject to
            change in the future versions. Please do not use.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.DbSelectedDate">
            <summary>Gets or sets the date content of RadDatePicker in a database friendly way.</summary>
            <value>
                A <see cref="T:System.DateTime">DateTime</see> object that represents the selected
                date. The default value is null (Nothing in VB).
            </value>
            <example>
                The following example demonstrates how to use the <strong>DbSelectedDate</strong>
                property to set the content of RadDatePicker. 
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            {
                RadDatePicker1.DbSelectedDate = tableRow["BirthDate"];
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                RadDatePicker1.DbSelectedDate = tableRow("BirthDate")
            End Sub
                </code>
            </example>
            <remarks>
            This property behaves exactly like the SelectedDate property. The only difference
            is that it will not throw an exception if the new value is null or DBNull. Setting a
            null value will internally revert the SelectedDate to the null value, i.e. the input value will be empty.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.IsEmpty">
            <summary>
            Used to determine if RadDatePicker is empty.
            </summary>
            <value>
            	<strong>true</strong> if the date is empty; otherwise <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.EnableTyping">
            <summary>
            Enables or disables typing in the date input box.
            </summary>
            <value>
            	<strong>true</strong> if the user should be able to select a date by typing in the date input box; otherwise
            <strong>false</strong>. The default value is <strong>true</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.MinDate">
            <summary>
            Gets or sets the minimal range date for selection.
            Selecting a date earlier or equal to that will not be allowed.
            </summary>
            <remarks>
            This property has a default value of <strong>1/1/1980</strong>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.MaxDate">
            <summary>
            Gets or sets the latest valid date for selection.
            Selecting a date later than that will not be allowed.
            </summary>
            <remarks>
            This property has a default value of <strong>12/31/2099</strong>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.Culture">
            <summary>Gets or sets the culture used by RadDatePicker to format the date.</summary>
            <value>
            A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object that represents the current culture used. The default value is System.Threading.Thread.CurrentThread.CurrentUICulture.
            </value>
            <example>
                The following example demonstrates how to use the <strong>Culture</strong>
                property. 
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            {
                RadDatePicker1.Culture = new CultureInfo("en-US");
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                RadDatePicker1.Culture = New CultureInfo("en-US")
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.SharedCalendarID">
            <summary>
            Gets or sets the ID of the calendar that will be used for picking dates. This
            property allows you to configure several datepickers to use a single RadCalendar
            instance.
            </summary>
            <remarks>
                RadDatePicker will look for the RadCalendar instance in a way similar to how
                ASP.NET validators work. It will not go beyond the current naming container which
                means that you will not be able to configure a calendar that is inside a control in
                another naming container. You can still share a calendar, but you will have to pass
                a direct object reference via the <see cref="P:Telerik.Web.UI.RadDatePicker.SharedCalendar">SharedCalendar</see>
                property.
            </remarks>
            <value>The string ID of the RadCalendar control if set; otherwise String.Empty.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.SharedCalendar">
            <summary>
            Gets or sets the reference to the calendar that will be used for picking dates.
            This property allows you to configure several datepickers to use a single RadCalendar
            instance.
            </summary>
            <value>The RadCalendar instance if set; otherwise <strong>null</strong>;</value>
            <remarks>
            	<para>This property is not accessible from the VS.NET designer and you will have to
                set it from the code-behind. It should be used when the shared calendar instance is
                in another naming container or is created dynamically at runtime.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.FocusedDate">
            <summary>
            Gets or sets the date that the
            <a href="RadCalendar~Telerik.WebControls.RadCalendar.html">Calendar</a> uses for
            focusing itself whenever the
            <a href="RadInput~Telerik.WebControls.RadDateInput.html">RadDateInput</a> component of
            the <a href="RadCalendar~Telerik.WebControls.RadDatePicker.html">RadDatePicker</a> is
            empty.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.Width">
            <summary>
            Gets or sets the width of the datepicker in pixels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDatePicker.ClientEvents">
            <summary>
            Gets or sets an instance of
            <a href="RadCalendar~Telerik.WebControls.Code.DatePickerClientEvents.html">DatePickerClientEvents</a>
            class which defines the JavaScript functions (client-side event handlers) that are
            invoked when specific client-side events are raised.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDateTimePicker.ValidationDate">
            <summary>
            This property is used by the RadDateTimeInput's internals only. It is subject to
            change in the future versions. Please do not use.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDateTimePicker.TimeView">
            <summary>
            Gets the RadTimeView instance of the datetimepicker control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDateTimePicker.TimePopupButton">
            <summary>
            Gets the TimePopupButton instance of the <strong>RadDateTimeView</strong>
            control.
            </summary>
            <remarks>
            You can use the object to customize the popup button's appearance and
            behavior.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDateTimePicker.AutoPostBack">
            <summary>
            	<para>Gets or sets a value indicating whether a postback to the server
                automatically occurs when the user interacts with the control.</para>
            </summary>
            <value>The default value is <strong>false</strong>.</value>
            <remarks>
            Setting this property to true will make RadDateTimePicker postback to the server
            on date selection through the Calendar and Time popups or the DateInput
            components.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDateTimePicker.Culture">
            <summary>
            Gets or sets the culture used by RadDateTimePicker to format the date and time
            value.
            </summary>
            <value>
                A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object that
                represents the current culture used. The default value is
                System.Threading.Thread.CurrentThread.CurrentUICulture.
            </value>
            <example>
                The following example demonstrates how to use the <strong>Culture</strong>
                property.
                <code lang="CS" title="Example 1 (CS)">
            private void Page_Load(object sender, System.EventArgs e)
            {
                RadDateTimePicker1.Culture = new CultureInfo("en-US");
            }
                </code>
            	<code title="Example 2 (VB)">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                RadDateTimePicker1.Culture = New CultureInfo("en-US")
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadDateTimePicker.AutoPostBackControl">
            <summary>
            Gets or sets a value indicating whether a postback to the server automatically
            occurs when the user changes the list selection.
            </summary>
            <value>The default value is None</value>
            <remarks>
            	<para>Set this to Both, TimeView or Calendar if the server needs to capture the
                selection changed event.</para>
                <para>This property is effective only for RadDateTimePicker; for RadTimePicker use the AutoPostBack property.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDateTimePicker.SharedTimeViewID">
            <summary>
            Gets or sets the ID of the timeview that will be used for picking time. This
            property allows you to configure several datetimepickers to use a single RadTimeView
            instance.
            </summary>
            <remarks>
                RadDateTimePicker will look for the RadTimeView instance in a way similar to how
                ASP.NET validators work. It will not go beyond the current naming container which
                means that you will not be able to configure a timeview that is inside a control in
                another naming container. You can still share a timeview, but you will have to pass
                a direct object reference via the <see cref="P:Telerik.Web.UI.RadDateTimePicker.SharedTimeView">SharedTimeView</see>
                property.
            </remarks>
            <value>The string ID of the RadTimeView if set; otherwise String.Empty.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadDateTimePicker.SharedTimeView">
            <summary>
            Gets or sets the reference to the timeview that will be used for picking time.
            This property allows you to configure several datetimepickers to use a single RadTimeView
            instance.
            </summary>
            <value>The RadTimeView instance if set; otherwise <strong>null</strong>;</value>
            <remarks>
            	<para>This property is not accessible from the VS.NET designer and you will have to
                set it from the code-behind. It should be used when the shared timeview instance is
                in another naming container or is created dynamically at runtime.</para>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadDateTimePicker.ItemDataBound">
            <summary>
            Occurs when an item is data bound to the <strong>RadTimeView</strong>
            control.
            </summary>
            <remarks>
            	<para>The <strong>ItemDataBound</strong> event is raised after an item is data
                bound to the <strong>RadTimeView</strong> control. This event provides you with the
                last opportunity to access the data item before it is displayed on the client.
                After this event is raised, the data item is no longer available.</para>
            </remarks>
            <example>
            	<para><font face="Courier New">[ASPX]</font></para>
            	<para><font face="Courier New">&lt;%@ Page Language=<font class="string" color="black">"C#"</font> AutoEventWireup=<font class="string" color="black">"true"</font> CodeFile=<font class="string" color="black">"Default.aspx.cs"</font> Inherits=<font class="string" color="black">"_Default"</font> %&gt;<br/>
            			<br/>
                &lt;%@ Register Assembly=<font class="string" color="black">"RadCalendar.Net2"</font> Namespace=<font class="string" color="black">"Telerik.WebControls"</font> TagPrefix=<font class="string" color="black">"radCln"</font> %&gt;<br/>
            			<br/>
                &lt;!DOCTYPE html <font class="keyword" color="black">PUBLIC</font>
            			<font class="string" color="black">"-//W3C//DTD XHTML 1.0 Transitional//EN"</font>
            			<font class="string" color="black">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</font>&gt;<br/>
            			<br/>
                &lt;html xmlns=<font class="string" color="black">"http://www.w3.org/1999/xhtml"</font> &gt;<br/>
                &lt;head runat=<font class="string" color="black">"server"</font>&gt;<br/>
                 &lt;title&gt;Untitled Page&lt;/title&gt;<br/>
                &lt;/head&gt;<br/>
                &lt;body&gt;<br/>
                 &lt;form id=<font class="string" color="black">"form1"</font>
                runat=<font class="string" color="black">"server"</font>&gt;<br/>
                 &lt;div&gt;<br/>
                 &lt;radCln:RadTimePicker<br/>
                 OnItemDataBound=</font><font color="black"><font face="Courier New"><font class="string">
                "RadTimePicker1_ItemDataBound"</font><br/>
                 ID=<font class="string">"RadTimePicker1"</font><br/>
                 runat=<font class="string">"server"</font>&gt;<br/>
                 &lt;/radCln:RadTimePicker&gt;<br/>
                 &lt;/div&gt;<br/>
                 &lt;/form&gt;<br/>
                &lt;/body&gt;<br/>
                &lt;/html&gt;</font></font></para>
            	<code lang="CS">
            using System;
            using System.Data;
            using System.Configuration;
            using System.Web;
            using System.Web.Security;
            using System.Web.UI;
            using System.Web.UI.WebControls;
            using System.Web.UI.WebControls.WebParts;
            using System.Web.UI.HtmlControls;
             
            public partial class _Default : System.Web.UI.Page
            {
                protected void RadTimePicker1_ItemDataBound(object sender, Telerik.WebControls.Base.Calendar.Events.TimePickerEventArgs e)
                {
                    if (e.Item.ItemType == ListItemType.AlternatingItem)
                    {
                        e.Item.Controls.Add(new LiteralControl("AlternatingItem"));
                    }
                }
            }
                </code>
            	<code lang="VB">
            Imports System
            Imports System.Data
            Imports System.Configuration
            Imports System.Web
            Imports System.Web.Security
            Imports System.Web.UI
            Imports System.Web.UI.WebControls
            Imports System.Web.UI.WebControls.WebParts
            Imports System.Web.UI.HtmlControls
            Public Class _Default
                Inherits System.Web.UI.Page
                
                Protected Sub RadTimePicker1_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.WebControls.Base.Calendar.Events.TimePickerEventArgs)
                    If (e.Item.ItemType = ListItemType.AlternatingItem) Then
                        e.Item.Controls.Add(New LiteralControl("AlternatingItem"))
                    End If
                End Sub
            End Class
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadDateTimePicker.ItemCreated">
            <summary>
            Occurs on the server when an item in the <strong>RadTimeView</strong> control is
            created.
            </summary>
            <remarks>
            	<para>The <strong>ItemCreated</strong> event is raised when an item in the
                <strong>RadTimeView</strong> control is created, both during round-trips and at the
                time data is bound to the control.</para>
            	<para>The <strong>ItemCreated</strong> event is commonly used to control the
                content and appearance of a row in the RadTimeView control.</para>
            </remarks>
            <example>
            	<para><font face="Courier New">The following code example demonstrates how to
                specify and code a handler for the ItemCreated event to set the CSS styles on the
                RadTimeView.</font></para>
            	<para><font face="Courier New"><strong>[ASPX]</strong></font></para>
            	<para><font face="Courier New">&lt;%@ Page Language=<font class="string" color="black">"C#"</font> AutoEventWireup=<font class="string" color="black">"true"</font> CodeFile=<font class="string" color="black">"Default.aspx.cs"</font> Inherits=<font class="string" color="black">"_Default"</font> %&gt;<br/>
            			<br/>
                &lt;%@ Register Assembly=<font class="string" color="black">"RadCalendar.Net2"</font> Namespace=<font class="string" color="black">"Telerik.WebControls"</font> TagPrefix=<font class="string" color="black">"radCln"</font> %&gt;<br/>
            			<br/>
                &lt;!DOCTYPE html <font class="keyword" color="black">PUBLIC</font>
            			<font class="string" color="black">"-//W3C//DTD XHTML 1.0 Transitional//EN"</font>
            			<font class="string" color="black">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</font>&gt;<br/>
            			<br/>
                &lt;html xmlns=<font class="string" color="black">"http://www.w3.org/1999/xhtml"</font> &gt;<br/>
                &lt;head runat=<font class="string" color="black">"server"</font>&gt;<br/>
                 &lt;title&gt;Untitled Page&lt;/title&gt;<br/>
                 &lt;style type=<font class="string" color="black">"text/css"</font>&gt;<br/>
                 .TimeCss<br/>
                 {<br/>
                 background-color: Red;<br/>
                 }<br/>
                 .AlternatingTimeCss<br/>
                 {<br/>
                 background-color: Yellow;<br/>
                 }<br/>
                 &lt;/style&gt;<br/>
                &lt;/head&gt;<br/>
                &lt;body&gt;<br/>
                 &lt;form id=<font class="string" color="black">"form1"</font>
                runat=<font class="string" color="black">"server"</font>&gt;<br/>
                 &lt;div&gt;<br/>
                 &lt;radCln:RadTimePicker<br/>
                 OnItemCreated=</font><font color="black"><font face="Courier New"><font class="string">
                "RadTimePicker1_ItemCreated"</font><br/>
                 ID=<font class="string">"RadTimePicker1"</font><br/>
                 runat=<font class="string">"server"</font>&gt;<br/>
                 &lt;/radCln:RadTimePicker&gt;<br/>
                 &lt;/div&gt;<br/>
                 &lt;/form&gt;<br/>
                &lt;/body&gt;<br/>
                &lt;/html&gt;</font></font></para>
            	<code lang="CS">
               protected void RadTimePicker1_ItemCreated(object sender, Telerik.WebControls.Base.Calendar.Events.TimePickerEventArgs e)
                {
                    if (e.Item.ItemType == ListItemType.Item)
                    {
                        e.Item.CssClass = "TimeCss";
                    }
             
                    if (e.Item.ItemType == ListItemType.AlternatingItem)
                    {
                        e.Item.CssClass = "AlternatingTimeCss";
                    }
                }
                </code>
            	<code lang="VB">
            Protected Sub RadTimePicker1_ItemCreated(sender As Object, e As Telerik.WebControls.Base.Calendar.Events.TimePickerEventArgs)
               If e.Item.ItemType = ListItemType.Item Then
                  e.Item.CssClass = "TimeCss"
               End If
               
               If e.Item.ItemType = ListItemType.AlternatingItem Then
                  e.Item.CssClass = "AlternatingTimeCss"
               End If
            End Sub 'RadTimePicker1_ItemCreated
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimePicker.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether a postback to the server automatically occurs when the user interacts with the control.
            </summary>
            <remarks>
            Setting this property to true will make RadTimePicker postback to the server 
            on time selection through the TimeView or the DateInput components.
            </remarks>
            <value>
            The default value is <strong>false</strong>.
            </value>
        </member>
        <member name="M:Telerik.Web.UI.RadTimeView.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous page request that was saved by the <see cref="M:Telerik.Web.UI.RadTimeView.SaveViewState">SaveViewState</see> method.
            </summary>
            <param name="savedState">The saved view state.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTimeView.SaveViewState">
            <summary>
            Saves any server control view-state changes that have occurred since the time the page was posted back to the server.
            </summary>
            <returns>The saved view state.</returns>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.DataList">
            <summary>Gets a data bound list control that displays items using templates.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.AlternatingTimeTemplate">
            <summary>Gets or sets the template for alternating time cells in the RadTimeView.</summary>
            <remarks>
            	<para>Use the <strong>AlternatingTimeTemplate</strong> property to control the
                contents of alternating items in the <strong>RadTimeView</strong> control. The
                appearance of alternating time cells is controlled by the
                <strong>AlternatingTimeStyle</strong> property.</para>
            	<para>To specify a template for the alternating time cells, place the
                &lt;AlternatingTimeTemplate&gt; tags between the opening and closing tags of the
                <strong>RadTimeView</strong> control. You can then list the contents of the
                template between the opening and closing &lt;AlternatingTimeTemplate&gt;
                tags.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the
                <strong>AlternatingTimeTemplate</strong> property to control the contents of
                alternating items in the <strong>RadTimeView</strong> control.</para>
            	<div class="LanguageSpecific" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap"></td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            	<code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radCln:RadTimePicker
                        ID="RadTimePicker1"
                        runat="server"&gt;
                        &lt;TimeView&gt;
                            &lt;AlternatingTimeTemplate&gt;
                                &lt;input type="button" id="button1" value='&lt;%# DataBinder.Eval(((DataListItem)Container).DataItem, "time", "{0:t}") %&gt;' /&gt;
                            &lt;/AlternatingTimeTemplate&gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.FooterTemplate">
            <summary>
            Gets or sets the template for the footer section of the
            <strong>RadTimeView</strong> control.
            </summary>
            <remarks>
            	<para>To specify a template for the footer section, place the
                &lt;FooterTemplate&gt; tags between the opening and closing tags of the
                <strong>RadTimeView</strong> control. You can then list the contents of the
                template between the opening and closing &lt;FooterTemplate&gt; tags.</para>
            	<para>The ShowFooter property must be set to true for this property to be
                visible.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the
                <strong>FooterTemplate</strong> property to control the contents of the footer
                section of the <strong>RadTimeView</strong> control.</para>
            	<code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radCln:RadTimePicker
                        ID="RadTimePicker1"
                        runat="server"&gt;
                        &lt;TimeView ShowFooter="true"&gt;
                            &lt;FooterTemplate&gt;
                                &lt;asp:Label ID="Label1" runat="server" Text="Footer"&gt;&lt;/asp:Label&gt;
                            &lt;/FooterTemplate&gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.HeaderTemplate">
            <summary>
            Gets or sets the template for the heading section of the RadTimeView
            control.
            </summary>
            <remarks>
            	<para>Use the <strong>HeaderTemplate</strong> property to control the contents of
                the heading section. The appearance of the header section is controlled by the
                <strong>HeaderStyle</strong> property.</para>
            	<para>To specify a template for the heading section, place the
                &lt;HeadingTemplate&gt; tags between the opening and closing tags of the
                <strong>RadTimeView</strong> control. You can then list the contents of the
                template between the opening and closing &lt;HeadingTemplate&gt; tags.</para>
            	<para>The ShowHeader property must be set to true for this property to be
                visible.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the
                <strong>HeaderTemplate</strong> property to control the contents of the heading
                section of the <strong>RadTimeView</strong> control.
                <code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radCln:RadTimePicker
                        ID="RadTimePicker1"
                        runat="server"&gt;
                        &lt;TimeView&gt;
                            &lt;HeaderTemplate&gt;
                                &lt;asp:Label ID="Label1" runat="server" Text="Header"&gt;&lt;/asp:Label&gt;
                            &lt;/HeaderTemplate&gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.TimeTemplate">
            <summary>
            Gets or sets the template for the heading section of the RadTimeView
            control.
            </summary>
            <remarks>
            	<para>Use the <strong>HeaderTemplate</strong> property to control the contents of
                the heading section. The appearance of the header section is controlled by the
                <strong>HeaderStyle</strong> property.</para>
            	<para>To specify a template for the heading section, place the
                &lt;HeadingTemplate&gt; tags between the opening and closing tags of the
                <strong>RadTimeView</strong> control. You can then list the contents of the
                template between the opening and closing &lt;HeadingTemplate&gt; tags.</para>
            	<para>The ShowHeader property must be set to true for this property to be
                visible.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the
                <strong>HeaderTemplate</strong> property to control the contents of the heading
                section of the <strong>RadTimeView</strong> control.
                <code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radCln:RadTimePicker
                        ID="RadTimePicker1"
                        runat="server"&gt;
                        &lt;TimeView&gt;
                            &lt;HeaderTemplate&gt;
                                &lt;asp:Label ID="Label1" runat="server" Text="Header"&gt;&lt;/asp:Label&gt;
                            &lt;/HeaderTemplate&gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.ForeColor">
            <summary>
            Gets or sets the foreground color (typically the color of the text) of the
            <strong>RadTimeView</strong> control.
            </summary>
            <value>
            A System.Drawing.Color that represents the foreground color of the control. The
            default is Color.Empty.
            </value>
            <remarks>
            	<para>Use the <strong>ForeColor</strong> property to specify the foreground color
                of the <strong>RadTimeView</strong> control. The foreground color is usually the
                color of the text. This property will render on browsers earlier than Microsoft
                Internet Explorer version 4.</para>
            	<para>Note: On browsers that do not support styles, this property is rendered as a
                FONT element.</para>
            </remarks>
            <notes>
            On browsers that do not support styles, this property is rendered as a FONT
            element.
            </notes>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.BackColor">
            <summary>
            Gets or sets the background color of the <strong>RadTimeView</strong>
            control.
            </summary>
            <remarks>
            	<para>Use the <strong>BackColor</strong> property to specify the background color
                of the <strong>RadTimeView</strong> control. This property is set using a
                System.Drawing.Color object.</para>
            	<para>In general, only controls that render as a &lt;table&gt; tag can display a
                background color in HTML 3.2, whereas almost any control can in HTML 4.0.</para>
            	<para>For controls that render as a &lt;span&gt; tag (including Label, all
                validation controls, and list controls with their RepeatLayout property set to
                RepeatLayout.Flow), this property will work in Microsoft Internet Explorer version
                5 or later, but not for Microsoft Internet Explorer version 4.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.BorderColor">
            <summary>Gets or sets the border color of the <strong>RadTimeView</strong> control.</summary>
            <remarks>
            Use the <strong>BorderColor</strong> property to specify the border color of the
            <strong>RadTimeView</strong> control. This property is set using a System.Drawing.Color
            object.
            </remarks>
            <value>
            A System.Drawing.Color that represents the border color of the control. The
            default is Color.Empty, which indicates that this property is not set.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.BorderStyle">
            <summary>Gets or sets the border style of the <strong>RadTimeView</strong> control.</summary>
            <value>
            One of the <strong>BorderStyle</strong> enumeration values. The default is
            <strong>NotSet</strong>.
            </value>
            <remarks>
            	<para>Use the <strong>BorderStyle</strong> property to specify the border style for
                the <strong>RadTimeView</strong> control. This property is set using one of the
                <strong>BorderStyle</strong> enumeration values. The following table lists the
                possible values.</para>
            	<para>
            		<list type="table">
            			<item>
            				<term><strong>Border Style</strong></term>
            				<description><strong>Description</strong></description>
            			</item>
            			<item>
            				<term>NotSet</term>
            				<description>The border style is not set.</description>
            			</item>
            			<item>
            				<term>None</term>
            				<description>No border</description>
            			</item>
            			<item>
            				<term>Dotted</term>
            				<description>A dotted line border.</description>
            			</item>
            			<item>
            				<term>Dashed</term>
            				<description>A dashed line border.</description>
            			</item>
            			<item>
            				<term>Solid</term>
            				<description>A solid line border.</description>
            			</item>
            			<item>
            				<term>Double</term>
            				<description>A solid double line border.</description>
            			</item>
            			<item>
            				<term>Groove</term>
            				<description>A grooved border for a sunken border
                            appearance.</description>
            			</item>
            			<item>
            				<term>Ridge</term>
            				<description>A ridged border for a raised border
                            appearance.</description>
            			</item>
            			<item>
            				<term>Inset</term>
            				<description>An inset border for a sunken control
                            appearance.</description>
            			</item>
            		</list>
            	</para>
            	<para>Note: This property will not render on some browsers.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.BorderWidth">
            <summary>Gets or sets the border width of the <strong>RadTimeView</strong> control.</summary>
            <value>
            A Unit that represents the border width of a RadTimeView control. The default
            value is Unit.Empty, which indicates that this property is not set.
            </value>
            <remarks>
            	<para>Use the <strong>BorderWidth</strong> property to specify a border width for a
                control.</para>
            	<para>This property is set with a Unit object. If the Value property of the Unit
                contains a negative number, an exception is thrown.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.CssClass">
            <summary>
            Gets or sets the cascading style sheet (CSS) class rendered by the
            <strong>RadTimeView</strong> on the client.
            </summary>
            <value>
            The CSS class rendered by the <strong>RadTimeView</strong> control on the client.
            The default is String.Empty.
            </value>
            <remarks>
            	<para>Use the CssClass property to specify the CSS class to render on the client
                for the <strong>RadTimeView</strong> control. This property will render on browsers
                for all controls. It will always be rendered as the class attribute, regardless of
                the browser.</para>
            	<para>For example, suppose you have the following <strong>RadTimeVeiw</strong>
                control declaration:</para>
            	<para>&lt;asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" /&gt;</para>
            	<para>The following HTML is rendered on the client for the previous
                <strong>RadTimeView</strong> control declaration:</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.Height">
            <summary>Gets or sets the height of the <strong>RadTimeView</strong> control.</summary>
            <value>
            	<para>A Unit that represents the height of the <strong>RadTimeView</strong>
                control. The default is Empty.</para>
            </value>
            <remarks>
            	<para>Use the <strong>Height</strong> property to specify the height of the
                <strong>RadTimeView</strong> control.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.Width">
            <summary>Gets or sets the width of the <strong>RadTimeView</strong> control.</summary>
            <value>
            A Unit that represents the width of the <strong>RadTimeView</strong> control. The
            default is Empty.
            </value>
            <remarks>
            Use the <strong>Width</strong> property to specify the width of the
            <strong>RadTimeView</strong> control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.Font">
            <summary>
            Gets the font properties associated with the <strong>RadTimeView</strong>
            control.
            </summary>
            <value>A FontInfo that represents the font properties of the Web server control.</value>
            <remarks>
            Use the Font property to specify the font properties of the
            <strong>RadTimeView</strong> control. This property includes subproperties that can be
            accessed declaratively in the form of Property-Subproperty (for example Font-Bold) or
            programmatically in the form of Property.Subproperty (for example Font.Bold).
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.ImagesPath">
            <summary>Gets or sets default path for the grid images when EnableEmbeddedSkins is set to false.</summary>
            <value>A string containing the path for the grid images. The default is string.Empty.</value>
            <remarks>
            <para>
            
            </para>
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.GridLines">
            <summary>
            Gets or sets a value that specifies whether the border between the cells of the
            <strong>RadTimeView</strong> control is displayed.
            </summary>
            <value>
            One of the <strong>GridLines</strong> enumeration values. The default is
            Both.
            </value>
            <requirements>
            Use the <strong>GridLines</strong> property to specify whether the border between
            the cells of the data list control is displayed. This property is set with one of the
            <strong>GridLines</strong> enumeration values.
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.HeaderText">
            <summary>
            Gets or sets the hetader associated with the <strong>RadTimeView</strong>
            control.
            </summary>
            <value>Use <strong>HeaderText</strong> when UseAccessibleHeader is set to true</value>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.CaptionAlign">
            <summary>Gets or sets the alignemt of the associated caption.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.UseAccessibleHeader">
            <summary>
            Indicates that the control should use accessible header cells in its containing
            table control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.Caption">
            <summary>Gets or sets the descriptive caption associated with the control.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.OnClientTimeSelected">
            <summary>
            Occurs on the client when an time sell in the <strong>RadTimeView</strong>
            control is selected.
            </summary>
            <value>The default value is String.Empty</value>
            <example>
            	<para>The following example demonstrates how to attach the
                <strong>OnClientSelectedEvent</strong></para>
            	<code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true"  CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
                &lt;script language="javascript"&gt;
                function ClientTimeSelected(sender, args)
                {   
                    alert(args.oldTime);
                    alert(args.newTime);                
                }
                &lt;/script&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radCln:RadTimePicker  
                        ID="RadTimePicker1" 
                        runat="server"&gt;
                        &lt;TimeView OnClientTimeSelected="ClientTimeSelected"&gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.HorizontalAlign">
            <summary>
            Gets or sets the horizontal alignment of the <strong>RadTimeView</strong>
            control.
            </summary>
            <value>
            One of the <strong>HorizontalAlign</strong> enumeration values. The default is
            <strong>NotSet</strong>.
            </value>
            <remarks>
            Use the <strong>HorizontalAlign</strong> property to specify the horizontal
            alignment of the data list control within its container. This property is set with one
            of the <strong>HorizontalAlign</strong> enumeration values.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.CellPadding">
            <summary>
            Gets or sets the amount of space between the contents of the cell and the cell's
            border.
            </summary>
            <value>
            The distance (in pixels) between the contents of a cell and the cell's border.
            The default is -1, which indicates that this property is not set.
            </value>
            <remarks>
            	<para>Use the <strong>CellPadding</strong> property to control the spacing between
                the contents of a cell and the cell's border. The padding amount specified is added
                to all four sides of a cell.</para>
            	<para>All cells in the same column of a data listing control share the same cell
                width. Therefore, if the content of one cell is longer than the content of other
                cells in the same column, the padding amount is applied to the widest cell. All
                other cells in the column are also set with this cell width.</para>
            	<para>Similarly, all cells in the same row share the same height. The padding
                amount is applied to the height of the tallest cell in the row. All other cells in
                the same row are set with this cell height. Individual cell sizes cannot be
                specified.</para>
            	<para>The value of this property is stored in view state.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.CellSpacing">
            <summary>
            Gets or sets the distance between time cells of the
            <strong>RadTimeView</strong>.
            </summary>
            <value>
            The distance (in pixels) between table cells. The default is -1, which indicates
            that this property is not set.
            </value>
            <remarks>
            	<para>Use the <strong>CellSpacing</strong> property to control the spacing between
                adjacent cells in a data listing control. This spacing is applied both vertically
                and horizontally. The cell spacing is uniform for the entire data list control.
                Individual cell spacing between each row or column cannot be specified.</para>
            	<para>The value of this property is stored in view state.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.Columns">
            <summary>
            Gets or sets the number of columns to display in the <strong>RadTimeView</strong>
            control.
            </summary>
            <remarks>
            Use this property to specify the number of columns that display items in the
            <strong>RadTimeView</strong> control. For example, if you set this property to 5, the
            <strong>RadTimeView</strong> control displays its items in five columns.
            </remarks>
            <example>
                The following code example demonstrates how to use the <strong>Columns</strong>
                property to specify the number of columns to display in the
                <strong>RadTimeView</strong> control.
                <code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true"  CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radCln:RadTimePicker  
                        ID="RadTimePicker1" 
                        runat="server"&gt;
                        &lt;TimeView Columns="5" &gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.ShowFooter">
            <summary>
            	<para>Gets or sets a value indicating whether the footer section is displayed in
                the <strong>RadTimeView</strong> control.</para>
            </summary>
            <value>
            true if the footer section is displayed; otherwise, false. The default value is
            true, however this property is only examined when the <strong>FooterTemplate</strong>
            property is not a null reference (Nothing in Visual Basic).
            </value>
            <remarks>
            	<para>Use the <strong>ShowFooter</strong> property to specify whether the footer
                section is displayed in the <strong>RadTimeView</strong> control.</para>
            	<para>You can control the appearance of the footer section by setting the
                <strong>FooterStyle</strong> property. The contents of the footer section are
                controlled by the <strong>FooterTemplate</strong> property.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the
                <strong>ShowFooter</strong> property to display the footer section in the
                <strong>RadTimeView</strong> control.</para>
            	<code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true"  CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radCln:RadTimePicker  
                        ID="RadTimePicker1" 
                        runat="server"&gt;
                        &lt;TimeView ShowFooter="true" &gt;
                            &lt;FooterTemplate&gt;
                                &lt;asp:Label ID="Label1" runat="server" Text="Hello Footer!"&gt;&lt;/asp:Label&gt;
                            &lt;/FooterTemplate&gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.ShowHeader">
            <summary>
            Gets or sets a value indicating whether the header section is displayed in the
            <strong>RadTimeView</strong> control.
            </summary>
            <value>
            true if the header is displayed; otherwise, false. The default value is true,
            however this property is only examined when the <strong>HeaderTemplate</strong>
            property is not a null reference (Nothing in Visual Basic).
            </value>
            <remarks>
            	<para>Use the <strong>ShowHeader</strong> property to specify whether the header
                section is displayed in the <strong>RadTimeView</strong> control.</para>
            	<para>You can control appearance of the header section by setting the
                <strong>HeaderStyle</strong> property. The contents of the header section are
                controlled by the <strong>HeaderTemplate</strong> property.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the
                <strong>ShowHeader</strong> property to display the header section in the
                <strong>RadTimeView</strong> control.</para>
            	<code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true"  CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radCln:RadTimePicker  
                        ID="RadTimePicker1" 
                        runat="server"&gt;
                        &lt;TimeView ShowHeader="true"&gt;
                            &lt;HeaderTemplate&gt;
                                &lt;asp:Label ID="Label1" runat="server" Text="Hello Header!"&gt;&lt;/asp:Label&gt;
                            &lt;/HeaderTemplate&gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.StartTime">
            <summary>Gets or sets the start time of the control.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.Culture">
            <summary>
            Provides information about a specific culture. The information includes the names
            for the culture, the writing system, the calendar used, and formatting for the
            times.
            </summary>
            <remarks>
            	<para>The <strong>CultureInfo</strong> class renders culture-specific information,
                such as the associated language, sublanguage, country/region, calendar, and
                cultural conventions. This class also provides access to culture-specific instances
                of DateTimeFormatInfo, NumberFormatInfo, CompareInfo, and TextInfo. These objects
                contain the information required for culture-specific operations, such as casing,
                formatting dates and numbers, and comparing strings.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.EndTime">
            <summary>ite</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.Interval">
            <summary>
            Gets or sets the interval between <strong>StartTime</strong> and
            <strong>EndTime</strong>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.TimeFormat">
            <summary>Gets or sets the format of the time.</summary>
            <remarks>
            	<para>A custom Time format string consists of one or more custom Time format
                specifiers, and that format string defines the text representation of a DateTime
                object that is produced by a formatting operation.</para>
            	<para><strong>Custom Time format specifiers.</strong></para>
            	<para>
            		<list type="table">
            			<item>
            				<term>h</term>
            				<description>Represents the hour as a number from 1 through 12, that
                            is, the hour as represented by a 12-hour clock that counts the whole
                            hours since midnight or noon. Consequently, a particular hour after
                            midnight is indistinguishable from the same hour after noon. The hour
                            is not rounded, and a single-digit hour is formatted without a leading
                            zero. For example, given a time of 5:43, this format specifier displays
                            "5". For more information about using a single format specifier, see
                            Using Single Custom Format Specifiers.</description>
            			</item>
            			<item>
            				<term>hh, hh (plus any number of additional "h" specifiers)</term>
            				<description>Represents the hour as a number from 01 through 12, that
                            is, the hour as represented by a 12-hour clock that counts the whole
                            hours since midnight or noon. Consequently, a particular hour after
                            midnight is indistinguishable from the same hour after noon. The hour
                            is not rounded, and a single-digit hour is formatted with a leading
                            zero.</description>
            			</item>
            			<item>
            				<term>H</term>
            				<description>Represents the hour as a number from 0 through 23, that
                            is, the hour as represented by a zero-based 24-hour clock that counts
                            the hours since midnight. A single-digit hour is formatted without a
                            leading zero.</description>
            			</item>
            			<item>
            				<term>HH, HH (plus any number of additional "H" specifiers)</term>
            				<description>Represents the hour as a number from 00 through 23, that
                            is, the hour as represented by a zero-based 24-hour clock that counts
                            the hours since midnight. A single-digit hour is formatted with a
                            leading zero.</description>
            			</item>
            			<item>
            				<term>m</term>
            				<description>Represents the minute as a number from 0 through 59. The
                            minute represents whole minutes passed since the last hour. A
                            single-digit minute is formatted without a leading zero.</description>
            			</item>
            			<item>
            				<term>mm, mm (plus any number of additional "m" specifiers)</term>
            				<description>Represents the minute as a number from 00 through 59. The
                            minute represents whole minutes passed since the last hour. A
                            single-digit minute is formatted with a leading zero.</description>
            			</item>
            			<item>
            				<term>s</term>
            				<description>Represents the seconds as a number from 0 through 59. The
                            second represents whole seconds passed since the last minute. A
                            single-digit second is formatted without a leading zero.</description>
            			</item>
            			<item>
            				<term>ss, ss (plus any number of additional "s" specifiers)</term>
            				<description>Represents the seconds as a number from 00 through 59. The
                            second represents whole seconds passed since the last minute. A
                            single-digit second is formatted with a leading zero.</description>
            			</item>
            			<item>
            				<term>t</term>
            				<description>Represents the first character of the A.M./P.M. designator
                            defined in the current
                            System.Globalization.DateTimeFormatInfo.AMDesignator or
                            System.Globalization.DateTimeFormatInfo.PMDesignator property. The A.M.
                            designator is used if the hour in the time being formatted is less than
                            12; otherwise, the P.M. designator is used.</description>
            			</item>
            			<item>
            				<term>tt, tt (plus any number of additional "t" specifiers)</term>
            				<description>Represents the A.M./P.M. designator as defined in the
                            current System.Globalization.DateTimeFormatInfo.AMDesignator or
                            System.Globalization.DateTimeFormatInfo.PMDesignator property. The A.M.
                            designator is used if the hour in the time being formatted is less than
                            12; otherwise, the P.M. designator is used.</description>
            			</item>
            		</list>
            	</para>
            	<para><br/>
            		<strong>Standard Time Format Specifiers</strong></para>
            	<para>
            		<list type="table">
            			<item>
            				<term>t</term>
            				<description>ShortTimePattern - For example, the custom format string
                            for the invariant culture is "HH:mm".</description>
            			</item>
            			<item>
            				<term>T</term>
            				<description>LongTimePattern - For example, the custom format string
                            for the invariant culture is "HH:mm:ss".</description>
            			</item>
            		</list>
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.TimeStyle">
            <summary>
            Gets the style properties for the time cells in the <strong>RadTimeView</strong>
            control.
            </summary>
            <remarks>
            	<para>Use this property to provide a custom style for the items of the
                <strong>RadTimeView</strong> control. Common style attributes that can be adjusted
                include foreground color, background color, font, and content alignment within the
                cell. Providing a different style enhances the appearance of the
                <strong>RadTimeView</strong> control.</para>
            	<para>If you specify a red font for the <strong>TimeStyle</strong> property, all
                other item style properties in the <strong>RadTimeView</strong> control will also
                have a red font. This allows you to provide a common appearance for the control by
                setting a single item style property. You can override the inherited style settings
                for an item style property that is higher in the hierarchy by setting its style
                properties. For example, you can specify a blue font for the
                <strong>AlternatingTimeStyle</strong> property, overriding the red font specified
                in the <strong>TimeStyle</strong> property.</para>
            	<para>To specify a custom style for the items of the <strong>RadTimeView</strong>
                control, place the &lt;TimeStyle&gt; tags between the opening and closing tags of
                the <strong>RadTimeView</strong> control. You can then list the style attributes
                within the opening &lt;TimeStyle&gt; tag.</para>
            	<para>You can also use the AlternatingTimeStyle property to provide a different
                appearance for the alternating items in the <strong>RadTimeView</strong>
                control.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the <strong>TimeStyle</strong>
                property to specify a different background color for the time cells in the
                <strong>RadTimeView</strong> control.
                <code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;div&gt;
                        &lt;asp:DropDownList AutoPostBack="true" ID="DropDownList1" runat="server" OnSelectedIndexChanged="DropDownList1_SelectedIndexChanged"&gt;
                            &lt;asp:ListItem Text="Select" Value=""&gt;&lt;/asp:ListItem&gt;
                            &lt;asp:ListItem Text="DarkGray" Value="DarkGray"&gt;&lt;/asp:ListItem&gt;
                            &lt;asp:ListItem Text="Khaki" Value="Khaki"&gt;&lt;/asp:ListItem&gt;
                            &lt;asp:ListItem Text="DarkKhaki" Value="DarkKhaki"&gt;&lt;/asp:ListItem&gt;
                        &lt;/asp:DropDownList&gt;
                    &lt;/div&gt;
                    &lt;radCln:RadTimePicker
                        ID="RadTimePicker1"
                        runat="server"&gt;
                        &lt;TimePopupButton ImageUrl="clock.gif" HoverImageUrl="clock.gif" /&gt;
                        &lt;TimeView Skin="None"&gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            	<code title="[New Example]">
            using System;
            using System.Data;
            using System.Configuration;
            using System.Web;
            using System.Web.Security;
            using System.Web.UI;
            using System.Web.UI.WebControls;
            using System.Web.UI.WebControls.WebParts;
            using System.Web.UI.HtmlControls;
             
            public partial class _Default : System.Web.UI.Page
            {
                protected void DropDownList1_SelectedIndexChanged(object sender, EventArgs e)
                {
                    this.RadTimePicker1.TimeView.TimeStyle.BackColor =
                        System.Drawing.Color.FromName(this.DropDownList1.SelectedItem.Value);
                }
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.AlternatingTimeStyle">
            <summary>
            Gets the style properties for alternating time sells in the
            <strong>RadTimeView</strong> control.
            </summary>
            <remarks>
            	<para>Use the <strong>AlternatingTimeStyle</strong> property to provide a custom
                style for the alternating time cells in the <strong>RadTimeView</strong> control.
                Common style attributes that can be adjusted include foreground color, background
                color, font, and content alignment within the cell. Providing a different style
                enhances the appearance of the <strong>RadTimeView</strong> control.</para>
            	<para>If you specify a red font for the <strong>TimeStyle</strong> property, all
                other item style properties in the <strong>RadTimeView</strong> control will also
                have a red font. This allows you to provide a common appearance for the control by
                setting a single item style property. You can override the inherited style settings
                for an item style property that is higher in the hierarchy by setting its style
                properties. For example, you can specify a blue font for the
                <strong>AlternatingTimeStyle</strong> property, overriding the red font specified
                in the <strong>TimeStyle</strong> property.</para>
            	<para>To specify a custom style for the alternating items, place the
                &lt;AlternatingTimeStyle&gt; tags between the opening and closing tags of the
                <strong>RadTimeView</strong> control. You can then list the style attributes within
                the opening &lt;AlternatingTimeStyle&gt; tag.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the
                <strong>AlternatingTimeStyle</strong> property to specify a different background
                color for alternating items in the <strong>RadTimeView</strong> control.
                <code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;div&gt;
                        &lt;asp:DropDownList AutoPostBack="true" ID="DropDownList1" runat="server" OnSelectedIndexChanged="DropDownList1_SelectedIndexChanged"&gt;
                            &lt;asp:ListItem Text="Select" Value=""&gt;&lt;/asp:ListItem&gt;
                            &lt;asp:ListItem Text="DarkGray" Value="DarkGray"&gt;&lt;/asp:ListItem&gt;
                            &lt;asp:ListItem Text="Khaki" Value="Khaki"&gt;&lt;/asp:ListItem&gt;
                            &lt;asp:ListItem Text="DarkKhaki" Value="DarkKhaki"&gt;&lt;/asp:ListItem&gt;
                        &lt;/asp:DropDownList&gt;
                    &lt;/div&gt;
                    &lt;radCln:RadTimePicker
                        ID="RadTimePicker1"
                        runat="server"&gt;
                        &lt;TimePopupButton ImageUrl="clock.gif" HoverImageUrl="clock.gif" /&gt;
                        &lt;TimeView Skin="None"&gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            	<code title="[New Example]">
            using System;
            using System.Data;
            using System.Configuration;
            using System.Web;
            using System.Web.Security;
            using System.Web.UI;
            using System.Web.UI.WebControls;
            using System.Web.UI.WebControls.WebParts;
            using System.Web.UI.HtmlControls;
             
            public partial class _Default : System.Web.UI.Page
            {
                protected void DropDownList1_SelectedIndexChanged(object sender, EventArgs e)
                {
                    this.RadTimePicker1.TimeView.AlternatingTimeStyle.BackColor =
                        System.Drawing.Color.FromName(this.DropDownList1.SelectedItem.Value);
                }
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.HeaderStyle">
            <summary>
            Gets the style properties for the heading section of the
            <strong>RadTimeView</strong> control.
            </summary>
            <remarks>
            	<para>Use this property to provide a custom style for the heading of the
                <strong>RadTimeView</strong> control. Common style attributes that can be adjusted
                include foreground color, background color, font, and content alignment within the
                cell. Providing a different style enhances the appearance of the
                <strong>RadTimeView</strong> control.</para>
            	<para>To specify a custom style for the heading section, place the
                &lt;HeaderStyle&gt; tags between the opening and closing tags of the
                <strong>RadTimeView</strong> control. You can then list the style attributes within
                the opening &lt;HeaderStyle&gt; tag.</para>
            	<para><strong>Note</strong>: The <strong>ShowHeader</strong> property must be set
                to true for this property to be visible.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the <strong>HeaderStyle</strong>
                property to specify a custom background color for the heading section of the
                <strong>RadTimeView</strong> control.
                <code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radCln:RadTimePicker
                        ID="RadTimePicker1"
                        runat="server"&gt;
                        &lt;TimePopupButton ImageUrl="clock.gif" HoverImageUrl="clock.gif" /&gt;
                        &lt;TimeView Skin="None" ShowHeader="true"&gt;
                            &lt;HeaderStyle BackColor="red" /&gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTimeView.FooterStyle">
            <summary>
            Gets the style properties for the footer section of the
            <strong>RadTimeView</strong> control.
            </summary>
            <remarks>
            	<para>Use this property to provide a custom style for the footer section of the
                <strong>radTimeView</strong> control. Common style attributes that can be adjusted
                include foreground color, background color, font, and content alignment within the
                cell. Providing a different style enhances the appearance of the
                <strong>RadTimeView</strong> control.</para>
            	<para>The <strong>FooterStyle</strong> property of the <strong>RadTimeView</strong>
                control inherits the style settings of the ControlStyle property. For example, if
                you specify a red font for the ControlStyle property, the
                <strong>FooterStyle</strong> property will also have a red font. This allows you to
                provide a common appearance for the control by setting a single style property. You
                can override the inherited style settings by setting the
                <strong>FooterStyle</strong> property. For example, you can specify a blue font for
                the <strong>FooterStyle</strong> property, overriding the red font specified in the
                ControlStyle property.</para>
            	<para>To specify a custom style for the footer section, place the
                &lt;FooterStyle&gt; tags between the opening and closing tags of the
                <strong>RadTimeView</strong> control. You can then list the style attributes within
                the opening &lt;FooterStyle&gt; tag.</para>
            	<para><strong>Note</strong>: The <strong>ShowFooter</strong> property must be set
                to true for this property to be visible.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the
                <strong>FooterStyle</strong> property to specify a custom background color for the
                footer section of the <strong>RadTimeView</strong> control.</para>
            	<code title="[New Example]">
            &lt;%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %&gt;
             
            &lt;%@ Register Assembly="RadCalendar.Net2" Namespace="Telerik.WebControls" TagPrefix="radCln" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radCln:RadTimePicker
                        ID="RadTimePicker1"
                        runat="server"&gt;
                        &lt;TimePopupButton ImageUrl="clock.gif" HoverImageUrl="clock.gif" /&gt;
                        &lt;TimeView Skin="None" ShowFooter="true"&gt;
                            &lt;FooterStyle BackColor="Aqua" /&gt;
                        &lt;/TimeView&gt;
                    &lt;/radCln:RadTimePicker&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.TimePopupButton">
            <summary>
            The control that toggles the TimeView popup.  
            You can customize the appearance by setting the object's properties.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.TypeConverters.TemplateListTypeConverter">
            <summary>
            Custom Type convertor that gives enhanced selection abilities for the properties that
            reffer to collections like CalendarDayCollection.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.Utils.JsBuilder">
            <summary>
            Summary description for JsBuilder.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.Utils.Utility">
            <summary>
            Summary description for Utility.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Utils.Utility.ConvertSingleValueToClientString(System.Object)">
            <summary>
            This static member is used translating .NET arrays to JS arrays.
            Acts like a compressor.
            </summary>
            <param name="InputArray">The 1D array to compress</param>
            <returns>The compressed string</returns>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.Utils.Utility.ConvertToServerDateTimeCollection(Telerik.Web.UI.Calendar.Collections.DateTimeCollection,System.String)">
            <summary>
            Converts an input 2D JavaScript array like [[5,10,2005],[6,10,2005],[7,10,2005]] into a DateTimeCollection.
            </summary>
            <param name="dateTimeCollection">The DateTimeCollection that will be filled.</param>
            <param name="inputString">The input string.</param>
        </member>
        <member name="T:Telerik.Web.UI.RadCalendarDay">
            <summary>
            RadCalendarDay represents a object that maps date value to corresponding visual settings.
            Also the object implements Boolean properties that represent the nature of the selected date - 
            whether it is a weekend, disabled or selected in the context of the calendar. Mostly the values
            of those properties are set at runtime when a RadCalendarDay instance is constructed and passed
            to the DayRender event.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.View.RichUITemplateControl">
            <summary>
            Summary description for RichUITemplateControl.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.View.RichUITemplateControl.Reset">
            <summary>
            Reset all properties to their defaults.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Calendar.View.RichUITemplateControl.TemplateID">
            <summary>
            Persists the ID of the template used by this instance of RichUITemplateControl if 
            any. The TemplateID could be used to index the Templates collection and instantiate
            the required template.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendarDay.Date">
            <summary>
            Gets or sets the date represented by this RadCalendarDay.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendarDay.ItemStyle">
            <summary>
            Gets the style properties for the <strong>RadCalendarDay</strong>
            instance.
            </summary>
            <value>
            A TableItemStyle that contains the style properties for the RadCalendarDay instance.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendarDay.IsSelectable">
            <summary>
             Gets or sets a value indicating whether the RadCalendarDay is qualified as available for selection. 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendarDay.IsSelected">
            <summary>
            Gets or sets a value indicating whether the RadCalendarDay is selected
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendarDay.IsDisabled">
            <summary>
            Gets or sets a value indicating whether the RadCalendarDay is disabled
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendarDay.IsToday">
            <summary>
            Gets or sets a value indicating whether the RadCalendarDay represents the current date.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendarDay.Repeatable">
            <summary>
            Gets or sets a value indicating whether the RadCalendarDay settings are repeated/recurring through out the valid
            date range displayed by the calendar.
            </summary>
            <remarks>
            The RecurringEvents enumeration determines which part of the date is handled (day or day and month).
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendarDay.IsWeekend">
            <summary>
            Gets or sets a value indicating whether the RadCalendarDay is mapped to a date that represents a non working
            day/weekend.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCalendarDay.ToolTip">
            <summary>
            Gets or sets the text displayed when the mouse pointer hovers over the calendar day.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.View.CalendarRenderer">
            <summary>
            Summary description for BaseRenderer.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.View.CalendarView">
            <summary>
            Summary description for CalendarView.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Calendar.View.CalendarView.GetClientData">
            <summary>
            Returns an ArrayList of all properties of RadCalendar that are to be exported on the client.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.View.MonthView">
            <summary>
            Summary description for CalendarView.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DayTemplate">
            <summary>
            Descendent of Control, DayTemplate implements an ITemplate wrapper, required for building
            collections of templates like CalendarDayTemplateCollection.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Calendar.View.TemplateContainer">
            <summary>
            This is the control that is used to instantiate any required template.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadChart">
            <summary>
            The class represents the base functionality of the RadChart.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.AddChartSeries(Telerik.Charting.ChartSeries)">
            <summary>
            Adds a new data series to the RadChart's series collection.
            </summary>
            <param name="chartSeries"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.#ctor">
            <summary>
            Creates a new instance of RadChart.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.LoadControlState(System.Object)">
            <summary>
            Restores control-state information from a previous page request that was saved by the SaveControlState() method.
            </summary>
            <param name="savedState">An System.Object that represents the control state to be restored</param>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.SaveControlState">
            <summary>
            Saves any server control state changes that have occurred since the time the page was posted back to the server.
            </summary>
            <returns>Returns the chart control's current state. If there is no state associated
            with the control, this method returns null.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.GetControlState">
            <summary>
            The control-state information
            </summary>
            <returns>Returns the chart control's current state as objects array</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.ClearSkin">
            <summary>
            Resets current chart's skin to default
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.LoadSkin(System.IO.TextWriter)">
            <summary>
            Loads user skin from a TextWriter object
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.SaveToXml">
            <summary>
            Exports current chart's settings into TextWriter object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.SaveToXml(System.String)">
            <summary>
            Saves the chart's state into XML file in the specified by fileName location.
            </summary>
            <param name="fileName">Path to the file</param>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.LoadFromXml(System.String)">
            <summary>
            Loads RadChart's settings and data from external XML file.
            </summary>
            <param name="relativeFileName"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.LoadFromXml(System.IO.TextReader)">
            <summary>
            Loads entire chart settings from a TextWriter object
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.SaveSkin">
            <summary>
            Exports current chart's skin into TextWriter object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.Clear">
            <summary>
            Removes the data series associated with the chart control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.RemoveAllSeries">
            <summary>
            Removes all data series from the series collection without removing axis items.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.RemoveSeriesAt(System.Int32)">
            <summary>
            Removes the data series at the specified index.
            </summary>
            <param name="seriesIndex"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.GetSeries(System.Int32)">
            <summary>
            Gets a reference to the data series object at the specified index.
            </summary>
            <param name="seriesIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.GetSeries(System.String)">
            <summary>
            Gets a reference to the data series object with the specified name.
            </summary>
            <param name="seriesName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.GetSeries(System.Drawing.Color)">
            <summary>
            Gets a reference to the data series object with the specified color.
            </summary>
            <param name="seriesColor"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.CreateSeries(System.String,System.Drawing.Color,System.Drawing.Color,Telerik.Charting.ChartSeriesType)">
            <summary>
            Creates a new chart series and adds it to the series collection.
            </summary>
            <param name="seriesName"></param>
            <param name="mainColor"></param>
            <param name="secondColor"></param>
            <param name="chartSeriesType"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.Save(System.String)">
            <summary>
            Saves the chart with the specified file name.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.Save(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the chart with the specified file name and the specified image format.
            </summary>
            <param name="filename"></param>
            <param name="imageFormat"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.SetDataSourceID(System.String)">
            <summary>
            Changes the DataSourceID property without DataBind method call
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadChart.DataBind">
            <summary>
            Binds a data source to the invoked server control and all its child controls.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.EnableHandlerDetection">
            <summary>
                    Gets or sets a value indicating whether RadChart should automatically check for the 
                ChartHttpHandler existence in the system.web section of the application configuration file.
            </summary>
            <remarks>
                    Set this property to false if you are running your application under IIS7 Integrated Mode 
                and have set the validateIntegratedModeConfiguration flag that does not allow legacy 
                HttpHandler registration under the system.web configuration section.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.HttpHandlerUrl">
            <summary>
                Gets or sets a value indicating the URL to the ChartHttpHandler that is necessary for the correct operation 
            of the RadChart control.
            </summary>
            <value>
                Returns the URL of the ChartHttpHandler. The default value is "ChartImage.axd".
            </value>
            <remarks>
                Generally the default relative value should work as expected and you do not need to modify it manually here; 
            however in some scenarios where url rewriting is involved, the default value might not work out-of-the-box 
            and you can customize it via this property to suit the requirements of your application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.CustomFigures">
            <summary>
            Specifies the custom palettes for chart
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.Chart">
            <summary>
            Chart engine
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.DefaultType">
            <summary>
            Default chart series type
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.AutoLayout">
            <summary>
            Specifies AutoLayout mode to all items on the chart control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.AutoTextWrap">
            <summary>
            Specifies AutoLayout mode to all items on the chart control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.SeriesPalette">
            <summary>
            Specifies the series palette
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.Appearance">
            <summary>
            Chart style
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.SkinsOverrideStyles">
            <summary>
            Should skin override user setting or not
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.DataManager">
            <summary>
            Data management support object
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.Series">
            <summary>
            Collection of the chart's data series.
            </summary>		
        </member>
        <member name="P:Telerik.Web.UI.RadChart.Height">
            <summary>
            Chart height
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.Width">
            <summary>
            Chart width
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.Legend">
            <summary>
            Gets or sets RadChart's legend object.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.PlotArea">
            <summary>
            Specifies the chart's plot area.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.ChartTitle">
            <summary>
            The chart title message.
            </summary>		
        </member>
        <member name="P:Telerik.Web.UI.RadChart.UseSession">
            <summary>
            Enables or disables use of session.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.CreateImageMap">
            <summary>
            Enables or disables use of image maps.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.TempImagesFolder">
            <summary>
            Sets folder for the chart's temp images.
            </summary>		
        </member>
        <member name="P:Telerik.Web.UI.RadChart.ContentFile">
            <summary>
            Gets or sets RadChart's content file path and file name.
            </summary>		
        </member>
        <member name="P:Telerik.Web.UI.RadChart.ChartImageFormat">
            <summary>
            Specifies the image format in which the image is streamed.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.AlternateText">
            <summary>
            The alternate text displayed when the image cannot be shown.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.CustomPalettes">
            <summary>
            Specifies the custom palettes for chart
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.SeriesOrientation">
            <summary>
            Specifies the orientation of chart series on the plot area.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.IntelligentLabelsEnabled">
            <summary>
            Enables / disables Intelligent labels logic for series items labels in all plot areas.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.MapAreaBuilder">
            <exclude/>
            <excludetoc/>
            <summary>Image maps support</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.ClientSettings">
            <summary>
            Client-side settings.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.DataSourceID">
            <summary>
            Gets or sets the ID of the control from which the data-bound control retrieves its list of data items. 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.DataSource">
            <summary>
            The DataSource object
            </summary>
            <remarks>Gets or sets the object from which the chart control retrieves its list of data items</remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.DataMember">
            <summary>
            Gets or sets the name of the list of data that the data-bound control binds to, in cases where the data source contains more than one distinct list of data items.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.DataGroupColumn">
            <summary>
            Gets or sets the name of the DataSource column (member) that will be used to split one column data into several chart Series
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadChart.ScaleEnabled">
            <summary>
            This property supports the RadChart infrastructure and is not intended for public use.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadComboBox">
            <summary>RadComboBox for ASP.NET AJAX is a powerful drop-down list AJAX-based control </summary>
            <remarks>
            	<para>
                   The <b>RadComboBox</b> control supports the following features:
                </para>
            	<list type="bullet">
            		<item>Databinding that allows the control to be populated from various
                    datasources</item>
            		<item>Programmatic access to the <strong>RadComboBox</strong> object model
                    which allows to dynamic creation of comboboxes, populate items, set
                    properties.</item>
            		<item>Customizable appearance through built-in or user-defined skins.</item>
            	</list>
            	<h3>Items</h3>
            	<para>
                    Each item has a <see cref="P:Telerik.Web.UI.RadComboBoxItem.Text">Text</see> and a <see cref="P:Telerik.Web.UI.RadComboBoxItem.Value">Value</see> property. 
            		The value of the <see cref="P:Telerik.Web.UI.RadComboBoxItem.Text">Text</see> property is displayed in the <b>RadComboBox</b> control, 
            		while the <see cref="P:Telerik.Web.UI.RadComboBoxItem.Value">Value</see> property is used to store any additional data about the item, 
            		such as data passed to the postback event associated with the item. 
                </para>
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.RadComboBox.cachedSelectedIndex">
            <summary><para>Gets or sets the index of the selected item in the ComboBox control.</para></summary>
            <remarks>
            Use the <b>SelectedIndex</b> property to programmatically specify or determine
            the index of the selected item from the <strong>combobox</strong> control
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.OnItemDataBound(Telerik.Web.UI.RadComboBoxItemEventArgs)">
            <summary>
            Raises the ItemDataBound event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.OnItemCreated(Telerik.Web.UI.RadComboBoxItemEventArgs)">
            <summary>
            Raises the ItematCreated event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.ClearSelection">
            <summary>
            	<para>Clears out the list selection and sets the <strong>Selected</strong> property
                of all items to false.</para>
            </summary>
            <remarks><para>Use this method to reset the control so that no items are selected.</para></remarks>
            <example>
            	<code lang="VB" title="[New Example]">
            RadComboBox1.ClearSelection()
                </code>
            	<code lang="CS" title="[New Example]">
            RadComboBox1.ClearSelection();
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.RaisePostDataChangedEvent">
            <summary>
            Signals the RadComboBox control to notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event. This allows you to handle the event directly.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.OnSelectedIndexChanged">
            <summary>
            Raises the SelectedIndexChanged event. This allows you to handle the event directly.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.OnItemsRequested(Telerik.Web.UI.RadComboBoxItemsRequestedEventArgs)">
            <summary>
            Raises the ItemRequestEvent event. This allows you to handle the event directly.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.FindItemByText(System.String)">
            <summary>
            Finds the first <strong>RadComboBoxItem</strong> with <strong>Text</strong> that
            matches the given text value.
            </summary>
            <returns>
            	<font size="1">The first <strong>RadComboBoxItem</strong> that matches the
            specified text value.</font>
            </returns>
            <example>
            	<code lang="VB" title="[New Example]">
            Dim item As RadComboBoxItem = RadComboBox1.FindItemByText("New York")
                </code>
            	<code lang="CS" title="[New Example]">
            RadComboBoxItem item = RadComboBox1.FindItemByText("New York");
                </code>
            </example>
            <param name="text">The string to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.FindItemByText(System.String,System.Boolean)">
            <summary>
            Finds the first <strong>RadComboBoxItem</strong> with <strong>Text</strong> that
            matches the given text value.
            </summary>
            <returns>
            	<font size="1">The first <strong>RadComboBoxItem</strong> that matches the
            specified text value.</font>
            </returns>
            <example>
            	<code lang="VB" title="[New Example]">
            Dim item As RadComboBoxItem = RadComboBox1.FindItemByText("New York",true)
                </code>
            	<code lang="CS" title="[New Example]">
            RadComboBoxItem item = RadComboBox1.FindItemByText("New York",true);
                </code>
            </example>
            <param name="text">The string to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.FindItemByValue(System.String)">
            <summary>
            Finds the first <strong>RadComboBoxItem</strong> with <strong>Value</strong> that
            matches the given value.
            </summary>
            <returns>
            	<font size="1">The first <strong>RadComboBoxItem</strong> that matches the
            specified value.</font>
            </returns>
            <example>
            	<code lang="VB" title="[New Example]">
            Dim item As RadComboBoxItem = RadComboBox1.FindItemByValue("1")
                </code>
            	<code lang="CS" title="[New Example]">
            RadComboBoxItem item = RadComboBox1.FindItemByValue("1");
                </code>
            </example>
            <param name="value">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.FindItemByValue(System.String,System.Boolean)">
            <summary>
            Finds the first <strong>RadComboBoxItem</strong> with <strong>Value</strong> that
            matches the given value.
            </summary>
            <returns>
            	<font size="1">The first <strong>RadComboBoxItem</strong> that matches the
            specified value.</font>
            </returns>
            <example>
            	<code lang="VB" title="[New Example]">
            Dim item As RadComboBoxItem = RadComboBox1.FindItemByValue("1", true)
                </code>
            	<code lang="CS" title="[New Example]">
            RadComboBoxItem item = RadComboBox1.FindItemByValue("1", true);
                </code>
            </example>
            <param name="value">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.FindItemIndexByText(System.String)">
            <summary>
            Returns the index of the first <strong>RadComboBoxItem</strong> with
            <strong>Text</strong> that matches the given text value.
            </summary>
            <param name="text">The string to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.FindItemIndexByText(System.String,System.Boolean)">
            <summary>
            Returns the index of the first <strong>RadComboBoxItem</strong> with
            <strong>Text</strong> that matches the given text value.
            </summary>
            <param name="text">The string to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.FindItemIndexByValue(System.String)">
            <summary>
            Returns the index of the first <strong>RadComboBoxItem</strong> with
            <strong>Value</strong> that matches the given value.
            </summary>
            <param name="value">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.FindItemIndexByValue(System.String,System.Boolean)">
            <summary>
            Returns the index of the first <strong>RadComboBoxItem</strong> with
            <strong>Value</strong> that matches the given value.
            </summary>
            <param name="value">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.FindItem(System.Predicate{Telerik.Web.UI.RadComboBoxItem})">
            <summary>
            Returns  the first <strong>RadComboBoxItem</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindItem</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadComboBox1.FindItem(ItemWithEqualsTextAndValue);
            }
            private static bool ItemWithEqualsTextAndValue(RadComboBoxItem item)
            {
                if (item.Text == item.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadComboBox1.FindItem(ItemWithEqualsTextAndValue)
            End Sub
            Private Shared Function ItemWithEqualsTextAndValue(ByVal item As RadComboBoxItem) As Boolean
                If item.Text = item.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
                </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.LoadContentFile(System.String)">
            <summary>
            Loads combobox items from an XML content file.
            </summary>
            <example>
            	<code lang="VB" title="[New Example]">
            RadComboBox1.LoadContentFile("~/myfile.xml")
                </code>
            	<code lang="CS" title="[New Example]">
            RadComboBox1.LoadContentFile("~/myfile.xml");
                </code>
            </example>
            <param name="fileName">The name of the XML file.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.SortItems">
            <summary>Sorts the items in the <strong>RadComboBox</strong>.
            </summary>
            <example>
            <code lang="VB" title="[New Example]">
            RadComboBox1.Sort=RadComboBoxSort.Ascending
            RadComboBox1.SortItems()
            </code>
            <code lang="CS" title="[New Example]">
            RadComboBox1.Sort=RadComboBoxSort.Ascending;
            RadComboBox1.SortItems();
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBox.SortItems(System.Collections.IComparer)">
             <summary>Sorts the items in the <strong>RadComboBox</strong>.</summary>
             <param name="comparer">
             An object from IComparer interface.
             </param>
            
             <example>
             <code lang="VB" title="[New Example]">
             RadComboBox1.Sort=RadComboBoxSort.Ascending
             Dim comparer As MyComparer = New MyComparer()
             RadComboBox1.SortItems(comparer)
             Public Class MyComparer
            Implements IComparer
            
            Public Function Compare(ByVal x As Object, ByVal y As Object) As Integer
            	Dim p1 As New RadComboBoxItem()
            	Dim p2 As New RadComboBoxItem()
            
            	If TypeOf x Is RadComboBoxItem Then
            		p1 = TryCast(x, RadComboBoxItem)
            	Else
            		Throw New ArgumentException("Object is not of type RadComboBoxItem.")
            	End If
            
            	If TypeOf y Is RadComboBoxItem Then
            		p2 = TryCast(y, RadComboBoxItem)
            	Else
            		Throw New ArgumentException("Object is not of type RadComboBoxItem.")
            	End If
            
            	Dim cmp As Integer = 0
            	If p1.ComboBoxParent.Sort = RadComboBoxSort.Ascending Then
            		cmp = [String].Compare(p1.Value, p2.Value, Not p1.ComboBoxParent.SortCaseSensitive)
            	End If
            	If p1.ComboBoxParent.Sort = RadComboBoxSort.Descending Then
            		cmp = [String].Compare(p1.Value, p2.Value, Not p1.ComboBoxParent.SortCaseSensitive) * -1
            	End If
            
            	Return cmp
            End Function
            
            End Class
            
             </code>
             <code lang="CS" title="[New Example]">
             RadComboBox1.Sort=RadComboBoxSort.Ascending;
             MyCoparer comparer = new MyComparer();
             RadComboBox1.SortItems(comparer);
             public class MyComparer : IComparer
            {
            
              public int Compare(object x, object y)
              {
                  RadComboBoxItem p1 = new RadComboBoxItem();
                  RadComboBoxItem p2 = new RadComboBoxItem();
            
                  if (x is RadComboBoxItem)
                     p1 = x as RadComboBoxItem;
                 else
                     throw new ArgumentException("Object is not of type RadComboBoxItem.");
            
                  if (y is RadComboBoxItem)
                    p2 = y as RadComboBoxItem;
                else
                    throw new ArgumentException("Object is not of type RadComboBoxItem.");
            
                 int cmp = 0;
                  if (p1.ComboBoxParent.Sort == RadComboBoxSort.Ascending)
                  {
                      cmp = String.Compare(p1.Value, p2.Value, !p1.ComboBoxParent.SortCaseSensitive);
                  }
                 if (p1.ComboBoxParent.Sort == RadComboBoxSort.Descending)
                 {
                     cmp = String.Compare(p1.Value, p2.Value, !p1.ComboBoxParent.SortCaseSensitive) * -1;
                  }
            
                  return cmp;
             }
            
            }
                 </code>
             </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ClientChanges">
             <summary>
            		Gets a list of all client-side changes (adding an item, removing an item, changing an item's property) which have occurred.
             </summary>
             <value>
            		A list of <see cref="T:Telerik.Web.UI.ClientOperation`1"/> objects which represent all client-side changes the user has performed. 
            		By default the ClientChanges property returns empty list. Client-changes are recorded if and only if the client-side
            		methods trackChanges()/commitChanges() have been invoked.
             </value>
             <remarks>
            		You can use the ClientChanges property to respond to client-side modifications such as
            		<list type="bullet">
            			<item>adding a new item</item>
            			<item>removing existing item</item>
            			<item>clearing the children of an item or the control itself</item>
            			<item>changing a property of the item</item>
            		</list>
            		The ClientChanges property is available in the first postback (ajax) request after the client-side modifications
            		have taken place. After this moment the property will return empty list.
             </remarks>
             <example>
            		The following example demonstrates how to use the ClientChanges property
            		<code lang="CS">
            		foreach (ClientOperation&lt;RadComboBoxItem&gt; operation in RadToolBar1.ClientChanges)
            		{
            			RadComboBoxItem item = operation.Item;
            
            			switch (operation.Type)
            			{
            				case ClientOperationType.Insert:
            					//An item has been inserted - operation.Item contains the inserted item
            				break;
            				case ClientOperationType.Remove:
            					//An item has been inserted - operation.Item contains the removed item. 
                             //Keep in mind the item has been removed from the combobox.
            				break;
            				case ClientOperationType.Update:
            					UpdateClientOperation&lt;RadComboBoxItem&gt; update = operation as UpdateClientOperation&lt;RadComboBoxItem&gt;
            					//The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            				break;
            				case ClientOperationType.Clear:
            					//All children of the combobox have been removed - operation.Item will always be null.
            				break;
            			}
            		}
            		</code>
            		<code lang="VB">
            			For Each operation As ClientOperation(Of RadComboBoxItem) In RadToolBar1.ClientChanges
            				Dim item As RadComboBoxItem = operation.Item
            				Select Case operation.Type
            					Case ClientOperationType.Insert
            						'An item has been inserted - operation.Item contains the inserted item
            					Exit Select
            					Case ClientOperationType.Remove
            						'An item has been inserted - operation.Item contains the removed item. 
            						'Keep in mind the item has been removed from the combobox.
            					Exit Select
            					Case ClientOperationType.Update
            						Dim update As UpdateClientOperation(Of RadComboBoxItem) = TryCast(operation, UpdateClientOperation(Of RadComboBoxItem))
            						'The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            					Exit Select
            					Case ClientOperationType.Clear
            						//All children of the combobox have been removed - operation.Item will always be Nothing.
            					Exist Select
            				End Select
            			Next
            		</code>
             </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.Items">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see> object that contains theitems of the current RadComboBox control.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see> that contains the items of the current RadComboBox control. By default
            	the collection is empty (RadComboBox has no children).
            </value>
            <remarks>
            	Use the <b>Items</b> property to access the child items of RadComboBox
            You can add, remove or modify items from the <b>Items</b> collection.
            </remarks>
            <example>
                The following example demonstrates how to programmatically modify the properties of  items.
                <code lang="CS">
            		RadComboBox1.Items[0].Text = "Example";
            		RadComboBox1.Items[0].Value = "1";
                </code>
            	<code lang="VB">
            		RadComboBox1.Items(0).Text = "Example"
            		RadComboBox1.Items(0).Value = "1"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.EnableItemBindingExpressions">
            <summary>
            Gets or sets a value indicating whether any databinding expressions specified in the ItemTemplate should be evaluated for
            unbound items (items added inline or programmatically).
            </summary>
            <value>true if databinding expressions should be evaluated; otherwise false; The default value is false.
            </value>
        </member>
        <member name="E:Telerik.Web.UI.RadComboBox.ItemCreated">
            <summary>
            Occurs on the server when an item in the <strong>RadComboBox</strong> control is
            created.
            </summary>
            <remarks>
            	<para>The <b>ItemCreated</b> event is raised every time a new item is
                added.</para>
            	<para>The <b>ItemCreated</b> event is not related to data binding and you
                cannot retrieve the <strong>DataItem</strong> of the item in the event
                handler.</para>
            	<para>The <b>ItemCreated</b> event is often useful in scenarios where you want
                to initialize all items - for example setting the <strong>ToolTip</strong> of each
                <strong>RadComboBoxItem</strong> to be equal to the <strong>Text</strong> property.</para>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadComboBox.ItemDataBound">
            <summary>
            	<para>Occurs after an item is data bound to the <strong>RadComboBox</strong>
                control.</para>
            </summary>
            <remarks>
            	<para>This event provides you with the last opportunity to access the data item
                before it is displayed on the client. After this event is raised, the data item is
                nulled out and no longer available.</para>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadComboBox.SelectedIndexChanged">
            <summary>Occurs when the <strong>SelectedIndex</strong> property has changed.</summary>
            <remarks>
            	<para>You can create an event handler for this event to determine when the selected
                index in the <strong>RadComboBox</strong> has been changed. This can be useful when
                you need to display information in other controls based on the current selection in
                the <strong>RadComboBox</strong>. You can use the event handler to load the
                information in the other controls.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether a postback to the server automatically
            occurs when the user changes the <strong>RadComboBox</strong> selection.
            </summary>
            <remarks>
            	<para>Set this property to <b>true</b> if the server needs to capture the selection
                as soon as it is made. For example, other controls on the Web page can be
                automatically filled depending on the user's selection from a list control.</para>
            	<para>This property can be used to allow automatic population of other controls on
                the Web page based on a user's selection from a list.</para>
            	<para>The value of this property is stored in view state.</para>
            	<para>
                    The server-side event that is fired is
                    <see cref="E:Telerik.Web.UI.RadComboBox.SelectedIndexChanged">SelectedIndexChanged</see>.
                </para>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadComboBox.ItemsRequested">
            <summary>
            Occurs when <strong>RadComboBox</strong> initiates an AJAX callback to the
            server.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.IsEmpty">
            <summary>
            Gets a value indicating whether the current instance of the combobox has child
            items.
            </summary>
            <example>
            	<code lang="VB" title="[New Example]">
            If RadComboBox1.IsEmpty
              '
              '
              '
            End If
                </code>
            	<code lang="CS" title="[New Example]">
            if (RadComboBox1.IsEmpty)
            {
              //
              //
              //
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.RadComboBoxImagePosition">
            <summary>Sets or gets the position (left or right) of the arrow image dropdown.</summary>
            <example>
            	<code lang="CS" title="[New Example]">
            RadComboBox1.RadComboBoxImagePosition = RadComboBoxImagePosition.Left;
                </code>
            	<code lang="VB" title="[New Example]">
            RadComboBox1.RadComboBoxImagePosition = RadComboBoxImagePosition.Right
                </code>
            </example>
            <remarks>
            By default the image is shown on the right. Left can be used in RTL
            (right-to-left) language scenarios.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.Text">
            <summary>
            	<para>Gets or sets the text content of the <strong>RadComboBox</strong>
                control.</para>
            </summary>
            <remarks>
            In standard mode, the currently selected text can be accessed using both the
            <strong>Text</strong> property or <strong>RadCombobox.SelectedItem.Text</strong>. In
            AJAX callback modes, only the <strong>Text</strong> property can be used because
            end-users can type or paste text that does not match the text of any item and
            <strong>SelectedItem</strong> can be null.
            </remarks>
            <example>
            	<code lang="CS" title="[New Example]">
            string comboText = RadComboBox1.Text
                </code>
            	<code lang="VB" title="[New Example]">
            Dim comboText As String = RadComboBox1.Text
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.LoadingMessage">
            <summary>
            The value of the message that is shown in <strong>RadComboBox</strong> while AJAX
            callback call is in effect.
            </summary>
            <remarks>
            This property can be used for customizing and localizing the text of the loading
            message.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.WebServiceSettings">
            <summary>
            	Gets the settings for the web service used to populate items.
            </summary>
            <value>
                An <see cref="P:Telerik.Web.UI.RadComboBox.WebServiceSettings">WebServiceSettings</see> that represents the
                web service used for populating items.
            </value>
            <remarks>
            	<para>
                    Use the <strong>WebServiceSettings</strong> property to configure the web
            		service used to populate items on demand.
            		You must specify both
                    <see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> and
                    <see cref="P:Telerik.Web.UI.WebServiceSettings.Method">Method</see>
            		to fully describe the service.
                </para>
            	<para>
            		In order to use the integrated support, the web service should have the following signature:
            		
            		<code lang="CS">
            		[ScriptService]
            		public class WebServiceName : WebService
            		{
            			[WebMethod]
            			public RadComboBoxItemData[] WebServiceMethodName(object context)
            			{
            				// We cannot use a dictionary as a parameter, because it is only supported by script services.
            				// The context object should be cast to a dictionary at runtime.
            				IDictionary&lt;string, object&gt; contextDictionary = (IDictionary&lt;string, object&gt;) context;
            				
            				//...
            			}
            		}
            		</code>
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ItemRequestTimeout">
            <summary>
            Specifies the timeout after each keypress before <strong>RadComboBox</strong>
            fires an AJAX callback to the <strong>ItemsRequested</strong> server-side event.
            </summary>
            <remarks>
            In miliseconds. <strong>ItemRequestTimeout = 500</strong> is equal to half a
            second delay.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ZIndex">
            <summary>The HTML Z-index of the items dropdown of <strong>RadComboBox.Its default value is 6000</strong>.</summary>
            <remarks>
            Can be used when the dropdown is to be shown over content with a specified
            Z-index. If the combobox items dropdown is displayed below the content, set the
            <strong>ZIndex</strong> property to a value higher than the value of the HTML content
            below.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OpenDropDownOnLoad">
            <summary>
            Gets or sets a value that indicates whether the dropdown of the combobox should
            be opened by default on loadnig the page.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.IsCaseSensitive">
            <summary>
            Gets or sets a value that indicates whether the combobox autocompletion logic is
            case-sensitive or not.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ShowMoreResultsBox">
            <summary>
            Gets or sets a value indicating whether the combobox should display the box for
            requesting additional items
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.MarkFirstMatch">
            <summary>
            Gets or sets a value indicating whether the combobox should automatically
            autocomplete and highlight the currently typed text to the closest item text
            match.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.Filter">
            <summary>
            Gets or sets a value indicating whether the combobox should automatically
            autocomplete and highlight the currently typed text to the all items text
            match.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.EnableLoadOnDemand">
            <summary>
            Gets or sets a value indicating whether the combobox should issue a callback to
            the server whenever end-users change the text of the combo (keypress, paste,
            etc).
            </summary>
            <remarks>
                In Load On Demand mode, the combobox starts a callback after a specified amount of
                time (see <see cref="P:Telerik.Web.UI.RadComboBox.ItemRequestTimeout">ItemRequestTimeout</see>) and calls the
                server-side <see cref="E:Telerik.Web.UI.RadComboBox.ItemsRequested">ItemsRequested</see> event. Depending on the
                value of the event arguments, you can add new items to the combobox object and the
                items will be propagated to the browser after the request.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.EnableItemCaching">
            <summary>
            Gets or sets a value indicating whether the combobox should cache items loaded on demand or via webservice
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.EnableVirtualScrolling">
            <summary>
            Gets or sets a value indicating whether the combobox should load items on demand (via callback) 
            during scrolling-down the drop-down area.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.EnableTextSelection">
            <summary>
            Gets or sets a value indicating whether the text of combobox should be selected
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ShowToggleImage">
            <summary>
            Gets or sets a value indicating whether the dropdown image next to the combobox
            text area should be displayed.
            </summary>
            <remarks>
            The dropdown image is located in the <em>Skins</em> folder of the combo - by
            default <em>~/RadControls/ComboBox/Skins/{SkinName}/DropArrow.gif</em>. You can
            custmoize or modify the image and place it in the respective folder of the skin you are
            using.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.NoWrap">
            <summary>
            	<para>Gets or sets a value indicating whether the text in a combobox item
                automatically continues on the next line when it reaches the end of the
                dropdown.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.CloseDropDownOnBlur">
            <summary><para>Determines whether drop down should be closed on blur</para></summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.AllowCustomText">
            <summary><para>Determines whether custom text can be entered into the input field of RadComboBox.</para></summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ChangeTextOnKeyBoardNavigation">
            <summary><para>Determines whether the text can be entered into the input field of RadComboBox during keyboard navigation</para></summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ErrorMessage">
            <summary><para>Determines the custom error message to be shown after the <strong>Load On Demand Callback</strong> error appears.</para></summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ShowDropDownOnTextboxClick">
            <summary><para>Determines whether the dropdown shows when the user clicks in the input field.</para></summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.EnableScreenBoundaryDetection">
            <summary><para>Determines whether the Screen Boundaries Detection is enabled or not.</para></summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.HighlightTemplatedItems">
            <summary>
                Gets or sets a value indicating whether items defined in the
                <see cref="P:Telerik.Web.UI.RadComboBox.ItemTemplate">ItemTemplate</see> template should be automatically
                highlighted on mouse hover or keyboard navigation.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.AutoCompleteSeparator">
            <summary>
            Gets or sets a list of separators: autocomplete logic is reset afer a separator
            is entered and users can autocomplete multiple items.
            </summary>
            <remarks>You can use several separators at once.</remarks>
            <example>
            	<code lang="CS" title="[New Example]">
            RadComboBox1.AutoCompleteSeparator = ";,";
                </code>
            	<code lang="VB" title="[New Example]">
            RadComboBox1.AutoCompleteSeparator = ";,"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.AccessibilityMode">
            <summary><para>Determines whether the noscript tag containing select element to be rendered.</para></summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.SelectedItem">
            <summary><para>Gets the currently selected item in the combobox.</para></summary>
            <example>
            	<code lang="CS" title="[New Example]">
            &lt;telerik:radcombobox id="RadComboBox1" Runat="server" &gt;&lt;/telerik:radcombobox&gt;
                                
            private void RadComboBox1_SelectedIndexChanged(object o, Telerik.WebControls.RadComboBoxSelectedIndexChangedEventArgs e)
            {
                Label1.Text = RadComboBox1.SelectedItem.Text;   
            }
                </code>
            	<code lang="VB" title="[New Example]">
            &lt;telerik:radcombobox id="RadComboBox1" Runat="server" &gt;&lt;/telerik:radcombobox&gt;
                                
            Private Sub RadComboBox1_SelectedIndexChanged(ByVal o As Object, ByVal e As Telerik.WebControls.RadComboBoxSelectedIndexChangedEventArgs) Handles RadComboBox1.SelectedIndexChanged
                Label1.Text = RadComboBox1.SelectedItem.Text    
            End Sub
                </code>
            </example>
            <remarks>
            	<strong>SelectedItem</strong> can be <strong>null</strong> in load-on-demand or
                <see cref="P:Telerik.Web.UI.RadComboBox.AllowCustomText">AllowCustomText</see> modes. End-users can type any
                text.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.SelectedIndex">
            <summary><para>Gets the index of the currently selected item in the combobox.</para></summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OffsetX">
            <summary>
            Gets or sets a value indicating the horizontal offset of the combobox dropdown        
            </summary>
            <value>
            An integer specifying the horizontal offset of the combobox dropdown (measured in
            pixels). The default value is 0 (no offset).
            </value>
            <remarks>
            	<para>Use the <strong>OffsetX</strong> property to change the position of the combobox dropdown</para>
            	<para>
                    To customize the vertical offset use the <see cref="P:Telerik.Web.UI.RadComboBox.OffsetY">OffsetY</see>
                    property.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OffsetY">
            <summary>
            Gets or sets a value indicating the vertical offset of the combobox dropdown.
            </summary>
            <value>
            An integer specifying the vertical offset of the combobox dropdown(measured in
            pixels). The default value is 0 (no offset).
            </value>
            <remarks>
            	<para>Use the <strong>OffsetY</strong> property to change the position where the combobox dropdown
                will appear.</para>
            	<para>
                    To customize the horizontal offset use the <see cref="P:Telerik.Web.UI.RadComboBox.OffsetX">OffsetX</see>
                    property.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.DropDownWidth">
            <summary>
            Gets or sets the width of the dropdown in pixels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.MaxHeight">
            <summary>
            Gets or sets the max height of the dropdown in pixels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.SelectedValue">
            <summary><para>Gets the value of the currently selected item in the combobox.</para></summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.HeaderTemplate">
            <summary>
            Gets or sets the template for displaying header in
            <strong>RadcomboBox</strong>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.FooterTemplate">
            <summary>
            Gets or sets the template for displaying footer in
            <strong>RadcomboBox</strong>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.Header">
            <summary>
            Get a header of 
            <strong>RadcomboBox</strong>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.Footer">
            <summary>
            Get a footer of 
            <strong>RadcomboBox</strong>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ItemTemplate">
            <summary>
            Gets or sets the template for displaying the items in
            <strong>RadcomboBox</strong>.
            </summary>
            <value>
            	<para>A <strong>ITemplate</strong> implemented object that contains the template
                for displaying combo items. The default value is a null reference (<b>Nothing</b> in
                Visual Basic), which indicates that this property is not set.</para>
            	<para>The <strong>ItemTemplate</strong> property sets a template that will be used
                for all combo items.</para>
            </value>
            <example>
            	<para>The following example demonstrates how to use the
                <strong>ItemTemplate</strong> property to add a CheckBox for each item.</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadComboBox runat="server" ID="RadComboBox1"&gt;</para>
            	<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            		<para>&lt;ItemTemplate&gt;</para>
            		<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            			<para>&lt;asp:CheckBox runat="server"
                        ID="CheckBox"&gt;&lt;/asp:CheckBox&gt;<br/>
                        &lt;asp:Label runat="server" ID="Label1"</para>
            			<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            				<para>Text='&lt;%# DataBinder.Eval(Container, "Text") %&gt;'</para>
            				<para>&gt;&lt;/asp:Label&gt;</para>
            			</blockquote>
            		</blockquote>
            		<para>&lt;/ItemTemplate&gt;</para>
            		<para>&lt;Items&gt;</para>
            		<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            			<para>&lt;telerik:RadComboBoxItem Text="News" /&gt;</para>
            			<para>&lt;telerik:RadComboBoxItem Text="Sports" /&gt;</para>
            			<para>&lt;telerik:RadComboBoxItem Text="Games" /&gt;</para>
            		</blockquote>
            		<para>&lt;/Items&gt;</para>
            	</blockquote>
            	<para>&lt;/telerik:RadComboBox&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.MaxLength">
            <summary>Gets or sets the maximum number of characters allowed in the combobox.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ShowWhileLoading">
            <summary>
            Indicates whether the combobox will be visible while loading.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ExpandAnimation">
            <summary>Gets the settings for the animation played when the dropdown opens.</summary>
            <value>
                An <see cref="T:Telerik.Web.UI.AnimationSettings">AnnimationSettings</see> that represents the
                expand animation.
            </value>
            <remarks>
            	<para>
                    Use the <strong>ExpandAnimation</strong> property to customize the expand
                    animation of <strong>RadComboBox</strong>. You can specify the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see>,
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Duration">Duration</see> and the
                    To disable expand animation effects you should set the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> to
                    <strong>AnimationType.None</strong>.<br/>
                    To customize the collapse animation you can use the
                    <see cref="P:Telerik.Web.UI.RadComboBox.CollapseAnimation">CollapseAnimation</see> property.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to set the <strong>ExpandAnimation</strong>
                of RadComboBox. 
                <para>
            		<para><strong>ASPX:</strong></para>
            	</para>
            	<para>
            		<para>&lt;telerik:RadComboBox ID="RadComboBox1" runat="server"&gt;</para>
            		<para><strong>&lt;ExpandAnimation Type="OutQuint" Duration="300"
                    /&gt;</strong></para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadComboBoxItem Text="News" &gt;</para>
            		<para>&lt;/telerik:RadComboBoxItem&gt;</para>
            		<para>&lt;/Items&gt;</para>
            	</para>
            	<para>
            		<para>&lt;/telerik:RadComboBox&gt;</para>
            	</para>
            	<code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                RadComboBox1.ExpandAnimation.Type = AnimationType.Linear;
               RadComboBox1.ExpandAnimation.Duration = 300;
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                RadComboBox1.ExpandAnimation.Type = AnimationType.Linear
                RadComboBox1.ExpandAnimation.Duration = 300
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.ExpandDelay">
            <summary>
            Gets or sets a value indicating the timeout after which a dropdown starts to
            open.
            </summary>
            <value>
            An integer specifying the timeout measured in milliseconds. The default value is
            100 milliseconds.
            </value>
            <remarks>
            	<para>Use the <strong>ExpandDelay</strong> property to delay dropdown opening.</para>
            	<para>
                    To customize the timeout prior to item closing use the
                    <see cref="P:Telerik.Web.UI.RadComboBox.CollapseDelay">CollapseDelay</see> property.
                </para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to specify a half second (500
                milliseconds) timeout prior to dropdown opening:</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadComboBox ID="RadComboBox1" runat="server"
                <strong>ExpandDelay="500"</strong> /&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.CollapseAnimation">
            <summary>Gets the settings for the animation played when an item closes.</summary>
            <value>
                An <see cref="T:Telerik.Web.UI.AnimationSettings">AnnimationSettings</see> that represents the
                collapse animation.
            </value>
            <remarks>
            	<para>
                    Use the <strong>CollapseAnimation</strong> property to customize the collapse
                    animation of <strong>RadComboBox</strong>. You can specify the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see>,
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Duration">Duration</see> and the
                    items are collapsed.<br/>
                    To disable collapse animation effects you should set the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> to
                    <strong>AnimationType.None</strong>. To customize the expand animation you can
                    use the <see cref="P:Telerik.Web.UI.RadComboBox.CollapseAnimation">CollapseAnimation</see> property.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to set the
                <strong>CollapseAnimation</strong> of RadComboBox. 
                <para>
            		<para><strong>ASPX:</strong></para>
            	</para>
            	<para>
            		<para>&lt;telerik:RadComboBox ID="RadComboBox1" runat="server"&gt;</para>
            		<para><strong>&lt;CollapseAnimation Type="OutQuint" Duration="300"
                    /&gt;</strong></para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadComboBoxItem Text="News" &gt;</para>
            		<para>&lt;/telerik:RadComboBoxItem&gt;</para>
            		<para>&lt;/Items&gt;</para>
            	</para>
            	<para>
            		<para>&lt;/telerik:RadComboBox&gt;</para>
            		<code lang="CS">
            		</code>
            		<code lang="VB">
            		</code>
            	</para>
            	<code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                RadComboBox1.CollapseAnimation.Type = AnimationType.Linear;
                RadComboBox1.CollapseAnimation.Duration = 300;
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                RadComboBox1.CollapseAnimation.Type = AnimationType.Linear
                RadComboBox1.CollapseAnimation.Duration = 300
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.CollapseDelay">
            <summary>
            Gets or sets a value indicating the timeout after which a dropdown starts to
            close.
            </summary>
            <value>
            An integer specifying the timeout measured in milliseconds. The default value is
            500 (half a second).
            </value>
            <remarks>
            	<para>Use the <strong>CollapseDelay</strong> property to delay dropdown closing. To
                cause immediate item closing set this property to 0 (zero).</para>
            	<para>
                    To customize the timeout prior to item closing use the
                    <see cref="P:Telerik.Web.UI.RadComboBox.ExpandDelay">ExpandDelay</see> property.
                </para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to specify one second (1000
                milliseconds) timeout prior to dropdown closing:</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadComboBox ID="RadComboBox1" runat="server"
                <strong>ClosingDelay="1000"</strong> /&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.Sort">
            <summary>
            Automatically sorts items alphabetically (based on the <strong>Text</strong>
            property) in ascending or descending order.
            </summary>
            <example>
            	<code lang="CS" title="[New Example]">
            RadComboBox1.Sort = RadComboBoxSort.Ascending;
             RadComboBox1.Sort = RadComboBoxSort.Descending;
             RadComboBox1.Sort = RadComboBoxSort.None;
                </code>
            	<code lang="VB" title="[New Example]">
            RadComboBox1.Sort = RadComboBoxSort.Ascending
             RadComboBox1.Sort = RadComboBoxSort.Descending
             RadComboBox1.Sort = RadComboBoxSort.None
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.SortCaseSensitive">
             <summary>
             Gets/sets whether the sorting will be case-sensitive or not.
            By default is set to true.
             </summary>
             <example>
             	<code lang="CS" title="[New Example]">
             RadComboBox1.SortCaseSensitive = false;
             
                 </code>
             	<code lang="VB" title="[New Example]">
             RadComboBox1.SortCaseSensitive = false
                 </code>
             </example>
        </member>
        <member name="E:Telerik.Web.UI.RadComboBox.TextChanged">
            <summary>
            Occurs when the text of the RadComboBox changes between postbacks to the server.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientSelectedIndexChanging">
            <summary>
            	The client-side event that is fired when the selected index of the
            	<strong>RadComboBox</strong> is about to be changed.
            </summary>
            <remarks>
            	<para>
            		The event handler receives two parameters: the instance of of the RadComboBox
            		client-side object and event argument of the newly selected item.
            	</para>
            	<para>
            		The event can be cancelled - simply call
            		<strong> args.set_cancel(true); </strong>
            		from the event handler and the item will not be changed.
            	</para>
            </remarks>
            <example>
            	<code lang="JScript">
            &lt;script type="text/javascript"&gt;               
                function onSelectedIndexChanging(sender, eventArgs)
                {
            		var item = eventArgs.get_item();
                    if (item.get_text() == "LA")
                    {
                        // do not allow selecting item with text "LA"   
                        return false; 
                    }
                    else
                    {
                        // alert the new item text and value.
                        alert(item.get_text() + ":" + item.get_value());
                    }
                }                        
            &lt;/script&gt;
             
            &lt;telerik:radcombobox ID="RadComboBox1" runat="server" 
                  OnClientSelectedIndexChanging="onSelectedIndexChanging"&gt;
            &lt;/telerik:radcombobox&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientSelectedIndexChanged">
            <summary>
            The client-side event that is fired after the selected index of the RadComboBox has
            been changed.
            </summary>
            <remarks>
            The event handler receives two parameters: the instance of of the combobox
            client-side object and event argument with the newly selected item.
            </remarks>
            <example>
            	<code lang="JScript">
            &lt;script language="javascript"&gt;               
                function onSelectedIndexChanged(sender,eventArgs)
                {        
                        var item = eventArgs.get_item();
                        // alert the new item text and value.
                        alert(item.get_text() + ":" + item.get_value());
                }                        
            &lt;/script&gt;
             
            &lt;telerik:radcombobox ID="RadComboBox1" runat="server" 
                  OnClientSelectedIndexChanged="onSelectedIndexChanged"&gt;
            &lt;/telerik:radcombobox&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientItemsRequesting">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadComboBox</strong> is about to be populated (for example from web service).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onItemRequestingHandler(sender, eventArgs)<br/>
                {<br/>
            		var context = eventArgs.get_context();<br/>
            		context["Parameter1"] = "Value";<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadComboBox ID="RadComboBox1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemPopulating="onClientItemPopulatingHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadComboBox&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientItemsRequesting</strong> client-side event
                handler is called when the <strong>RadComboBox</strong> is about to be populated.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with three properties:
            			<list type="bullet">
            				<item><strong>get_context()</strong>, an user object that will be passed to the web service.</item>
            				<item><strong>set_cancel()</strong>, used to cancel the event.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientItemsRequested">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadComboBox</strong> items were just populated (for example from web service).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onItemsRequested(sender, eventArgs)<br/>
                {<br/>
            		alert("Loading finished");<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadComboBox ID="RadComboBox1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemsRequested="onItemsRequested"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadComboBox&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientItemsRequested</strong> client-side event
                handler is called when the <strong>RadComboBox</strong> items were just populated.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong>, null for this event.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientItemsRequestFailed">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the operation for populating the <strong>RadComboBox</strong> has failed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onItemsRequestFailed(sender, eventArgs)<br/>
                {<br/>
            		alert("Error: " + errorMessage);<br/>
            		eventArgs.set_cancel(true);<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadComboBox ID="RadComboBox1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemsRequestFailed="onItemsRequestFailed"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadComboBox&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientItemsRequestFailed</strong> client-side event
                handler is called when the operation for populating the <strong>RadComboBox</strong> has failed.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with one property:
            			<list type="bullet">
            				<item><strong>set_cancel()</strong>, set to true to suppress the default action (alert message).</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientItemDataBound">
            <summary>
            Gets or sets the name of the JavaScript function called when an Item is created during Web Service Load on Demand.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientKeyPressing">
            <summary>
            The client-side event that is fired when the user presses a key inside the
            combobox.
            </summary>
            <example>
            	<code lang="JScript" title="[New Example]">
            &lt;telerik:radcombobox 
              Runat="server"
              ID="RadComboBox3"       
              OnClientKeyPressing="HandleKeyPress" 
             ... 
            /&gt;
             
               &lt;script type="text/javascript"&gt;
               
               function HandleKeyPress(sender, e)
               {
                if (e.keyCode == 13)
                {
                 document.forms[0].submit();
                }
               }
               
               &lt;/script&gt;
                </code>
            </example>
            <remarks>
            	<para>The event handler receives two parameters:</para>
            	<list type="bullet">
            		<item>the instance of the combobox client-side object;</item>
            		<item>browser event arguments.</item>
            	</list>
            	<para>You can use the browser event arguments (and the <strong>keyCode</strong>
                property in particular) to detect which key was pressed and to write your own
                custom logic.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientDropDownOpening">
            <summary>
            The client-side event that is fired before the dropdown of the combobox is
            opened.
            </summary>
            <example>
            	<code lang="JScript" title="[New Example]">
            &lt;script language="javascript"&gt;               
             
            function HandleOpen(sender,args)
            {
                if (someCondition)
                {
                    args.set_cancel(true);   
                }
                else
                {
                    alert("Opening combobox with " + comboBox.get_items().get_count() + " items");
                }
            }
                                   
            &lt;/script&gt;
             
             
            &lt;telerik:radcombobox 
                  id="RadComboBox1" 
                  Runat="server" 
                  OnClientDropDownOpening="HandleOpen"&gt;
            &lt;/telerik:radcombobox&gt;
                </code>
            </example>
            <remarks>
            The event handler receives two parameter: the instance of the combobox
            client-side object and event args. The event can be cancelled - simply set  args.set_cancel to true<strong> args.set_cancel(true); </strong>
            from the event handler and the combobox dropdown will not be opened.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientDropDownOpened">
            <summary>
            The client-side event that is fired after the dropdown of the combobox is
            opened.
            </summary>
            <example>
            	<code lang="JScript" title="[New Example]">
            &lt;script language="javascript"&gt;               
             
            function HandleOpen(sender,args)
            {
                 alert("Opening combobox with " + comboBox.get_items().get_count() + " items");
             
            }
                                   
            &lt;/script&gt;
             
             
            &lt;telerik:radcombobox 
                  id="RadComboBox1" 
                  Runat="server" 
                  OnClientDropDownOpened="HandleOpen"&gt;
            &lt;/telerik:radcombobox&gt;
                </code>
            </example>
            <remarks>
            The event handler receives two parameter: the instance of the combobox
            client-side object and event args. The event cannot  be cancelled.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientFocus">
            <summary>
            The client-side event that is fired when when the combo gains focus
            </summary>
            <example>
            	<code lang="JScript" title="[New Example]">
            &lt;script type="text/avascript"&gt;               
             
            function OnClientFocus(sender,args)
            {
                alert("focus");
            }
                                   
            &lt;/script&gt;
             
             
            &lt;telerik:radcombobox 
                  id="RadComboBox1" 
                  Runat="server" 
                  OnClientFocus="OnClientFocus"&gt;
            &lt;/telerik:radcombobox&gt;
                </code>
            </example>
            <remarks>
            The event handler receives two parameter: the instance of the combobox
            client-side object and event args.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientBlur">
            <summary>
            The client-side event that is fired when when the combo loses focus
            </summary>
            <example>
            	<code lang="JScript" title="[New Example]">
            &lt;script type="text/avascript"&gt;               
             
            function OnClientBlur(sender,args)
            {
                alert("blur");
            }
                                   
            &lt;/script&gt;
             
             
            &lt;telerik:radcombobox 
                  id="RadComboBox1" 
                  Runat="server" 
                  OnClientBlur="OnClientBlur"&gt;
            &lt;/telerik:radcombobox&gt;
                </code>
            </example>
            <remarks>
            The event handler receives two parameter: the instance of the combobox
            client-side object and event args.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientDropDownClosing">
            <summary>
            The client-side event that is fired before the dropdown of the combobox is
            closed.
            </summary>
            <remarks>
            The event handler receives two parameter: the instance of the combobox
            client-side object and event args. The event can be cancelled - simply set  args.set_cancel to true<strong> args.set_cancel(true); </strong>
            from the event handler and the combobox dropdown will not be closed.
            </remarks>
            <example>
            	<code lang="JScript" title="[New Example]">
            &lt;script language="javascript"&gt;                
              
            function HandleClose(sender, args) 
            { 
                if (someCondition) 
                { 
                    args.set_cancel(true);    
                } 
                else 
                { 
                    alert("Closing combobox with " + sender.get_items().get_count() + " items"); 
                } 
            } 
                                    
            &lt;/script&gt; 
              
              
            &lt;telerik:radcombobox  
                  id="RadComboBox1"  
                  Runat="server"  
                  OnClientDropDownClosing="HandleClose"&gt; 
            &lt;/telerik:radcombobox&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientDropDownClosed">
             <summary>
             The client-side event that is fired after the dropdown of the combobox is
             closed.
             </summary>
             <remarks>
             The event handler receives two parameter: the instance of the combobox
             client-side object and event args. The event can not be cancelled
             </remarks>
             <example>
             	<code lang="JScript" title="[New Example]">
             &lt;script language="javascript"&gt;                
               
             function HandleClose(sender, args) 
             {  
                     alert("Closed combobox with " + sender.get_items().get_count() + " items"); 
            
             } 
                                     
             &lt;/script&gt; 
               
               
             &lt;telerik:radcombobox  
                   id="RadComboBox1"  
                   Runat="server"  
                   OnClientDropDownClosed="HandleClose"&gt; 
             &lt;/telerik:radcombobox&gt;
                 </code>
             </example>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBox.OnClientLoad">
            <remarks>
            	<para>If specified, the <strong>OnClienLoad</strong> client-side event handler is
                called after the combobox is fully initialized on the client.</para>
            	<para>A single parameter - the combobox client object - is passed to the
                handler.</para>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientLoadHandler(sender)<br/>
                {<br/>
            		alert(sender.get_id());<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadComboBox ID="RadComboBox1"<br/>
                runat= "server"<br/>
            		<strong>OnClientLoad="onClientLoadHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadComboBox&gt;</para>
            </example>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            after the <strong>RadComboBox</strong> client-side object is initialized.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadComboBoxItem">
            <summary>
            RadComboBoxItem  class.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ControlItem.Enabled">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.ControlItem.Visible">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.ControlItem.ID">
            <summary>
            The ID property is reserved for internal use. Please use the <see cref="P:Telerik.Web.UI.ControlItem.Value">Value</see> property or
            use the <see cref="T:Telerik.Web.UI.Attributes">Attributes</see> collection if you need to assign
            custom data to the item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ControlItem.Index">
            <summary>
            Gets the zero based index of the item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ControlItem.BackColor">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.ControlItem.ForeColor">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.ControlItem.BorderColor">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItem.CompareTo(System.Object)">
            <summary>
            Compares two instance for equality. 
            <returns>returns 0 if equal, a positive number if the first is greater than the 
            second, and a negative number otherwise.</returns>
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBoxItem.Text">
            <summary>Gets or sets the text caption for the combobox item.</summary>
            <value>The text of the item. The default value is empty string.</value>        
            <remarks>
            Use the <strong>Text</strong> property to specify the text to display for the
            item.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBoxItem.Value">
            <summary>Gets or sets the value  for the combobox item.</summary>
            <value>The value of the item. The default value is empty string.</value>        
            <remarks>
            Use the <strong>Value</strong> property to specify the value 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBoxItem.Owner">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadComboBox">RadComboBox</see> instance which contains the current item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBoxItem.ComboBoxParent">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadComboBox">RadComboBox</see> instance which contains the current item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBoxItem.Selected">
            <summary>Gets or sets the selected state of the combobox item.</summary>
            <value>The default value is true.</value>        
            <remarks>
            Use the <strong>Selected</strong> property to determine whether the item is selected or not.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBoxItem.ToolTip">
            <summary>Gets or sets the tooltip of the combobox item.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBoxItem.IsSeparator">
            <summary>
            Sets or gets whether the item is separator. It also represents a logical state of
            the item. Might be used in some applications for keyboard navigation to omit processing
            items that are marked as separators.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBoxItem.ImageUrl">
            <summary>Gets or sets the path to an image to display for the item.</summary>
            <value>
            The path to the image to display for the item. The default value is empty
            string.
            </value>
            <remarks>
            Use the <strong>ImageUrl</strong> property to specify the image for the item. If
            the <strong>ImageUrl</strong> property is set to empty string no image will be
            rendered. Use "~" (tilde) when referring to images within the current ASP.NET
            application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBoxItem.DisabledImageUrl">
            <summary>Gets or sets the path to an image to display for the item when it is disabled.</summary>
            <value>
            The path to the image to display for the item. The default value is empty
            string.
            </value>
            <remarks>
            Use the <strong>DisabledImageUrl</strong> property to specify the image for the item when it is disabled. If
            the <strong>DisabledImageUrl</strong> property is set to empty string no image will be
            rendered. Use "~" (tilde) when referring to images within the current ASP.NET
            application.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadComboBoxItemCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> objects in a
                <see cref="T:Telerik.Web.UI.RadComboBox">RadComboBox</see> control.
            </summary>
            <remarks>
            	The <strong>RadComboBoxItemCollection</strong> class represents a collection of
                <strong>RadComboBoxItem</strong> objects.
            	<list type="bullet">
            		<item>
                        Use the <see cref="P:Telerik.Web.UI.RadComboBoxItemCollection.Item(System.Int32)">indexer</see> to programmatically retrieve a
                        single RadComboBoxItem from the collection, using array notation.
                    </item>
            		<item>
                        Use the <strong>Count</strong> property to determine the total
                        number of combo items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadComboBoxItemCollection.Add(Telerik.Web.UI.RadComboBoxItem)">Add</see> method to add items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadComboBoxItemCollection.Remove(Telerik.Web.UI.RadComboBoxItem)">Remove</see> method to remove items from the
                        collection.
                    </item>
            	</list>
            </remarks>
            <moduleiscollection/>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see> class.
            </summary>
            <param name="parent">The owner of the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.Add(Telerik.Web.UI.RadComboBoxItem)">
            <summary>
            Appends the specified <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> object to the end of the current <see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see>.
            </summary>
            <param name="item">
            The <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> to append to the end of the current <see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see>.
            </param>
            <example>
            	The following example demonstrates how to programmatically add items in a
                <strong>RadComboBox</strong> control.
            	<code lang="CS">
            		RadComboBoxItem newsItem = new RadComboBoxItem("News");
            		RadComboBox1.Items.Add(newsItem);
                </code>
            	<code lang="VB">
            		Dim newsItem As RadPanelItem = New RadComboBoxItem("News")
            		RadComboBox1.Items.Add(newsItem)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.FindItemByText(System.String)">
            <summary>
            Finds the first <strong>RadComboBoxItem</strong> with <strong>Text</strong> that
            matches the given text value.
            </summary>
            <returns>
            	<font size="1">The first <strong>RadComboBoxItem</strong> that matches the
            specified text value.</font>
            </returns>
            <param name="text">The string to search for.</param>
            <remarks>This method is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.FindItemByValue(System.String)">
            <summary>
            Finds the first <strong>RadComboBoxItem</strong> with <strong>Value</strong> that
            matches the given value.
            </summary>
            <returns>
            	<font size="1">The first <strong>RadComboBoxItem</strong> that matches the
            specified value.</font>
            </returns>
            <param name="value">The value to search for.</param>
            <remarks>This methos is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.FindItemByAttribute(System.String,System.String)">
            <summary>
            Searches the items in the collection for a <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> which contains the specified attribute and attribute value.
            </summary>
            <param name="attributeName">The name of the target attribute.</param>
            <param name="attributeValue">The value of the target attribute</param>
            <returns>The <c>RadComboBoxItem</c> that matches the specified arguments. Null (Nothing) is returned if no node is found.</returns>
            <remarks>This method is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.FindItemByText(System.String,System.Boolean)">
            <summary>
            Finds the first <strong>RadComboBoxItem</strong> with <strong>Text</strong> that
            matches the given text value.
            </summary>
            <returns>
            	<font size="1">The first <strong>RadComboBoxItem</strong> that matches the
            specified text value.</font>
            </returns>
            <example>
            	<code lang="VB" title="[New Example]">
            Dim item As RadComboBoxItem = RadComboBox1.FindItemByText("New York",true)
                </code>
            	<code lang="CS" title="[New Example]">
            RadComboBoxItem item = RadComboBox1.FindItemByText("New York",true);
                </code>
            </example>
            <param name="text">The string to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.FindItemByValue(System.String,System.Boolean)">
            <summary>
            Finds the first <strong>RadComboBoxItem</strong> with <strong>Value</strong> that
            matches the given value.
            </summary>
            <returns>
            	<font size="1">The first <strong>RadComboBoxItem</strong> that matches the
            specified value.</font>
            </returns>
            <example>
            	<code lang="VB" title="[New Example]">
            Dim item As RadComboBoxItem = RadComboBox1.FindItemByValue("1", true)
                </code>
            	<code lang="CS" title="[New Example]">
            RadComboBoxItem item = RadComboBox1.FindItemByValue("1", true);
                </code>
            </example>
            <param name="value">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.FindItemIndexByText(System.String)">
            <summary>
            Returns the index of the first <strong>RadComboBoxItem</strong> with
            <strong>Text</strong> that matches the given text value.
            </summary>
            <param name="text">The string to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.FindItemIndexByText(System.String,System.Boolean)">
            <summary>
            Returns the index of the first <strong>RadComboBoxItem</strong> with
            <strong>Text</strong> that matches the given text value.
            </summary>
            <param name="text">The string to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.FindItemIndexByValue(System.String)">
            <summary>
            Returns the index of the first <strong>RadComboBoxItem</strong> with
            <strong>Value</strong> that matches the given value.
            </summary>
            <param name="value">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.FindItemIndexByValue(System.String,System.Boolean)">
            <summary>
            Returns the index of the first <strong>RadComboBoxItem</strong> with
            <strong>Value</strong> that matches the given value.
            </summary>
            <param name="value">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.FindItem(System.Predicate{Telerik.Web.UI.RadComboBoxItem})">
            <summary>
            Returns  the first <strong>RadComboBoxItem</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindItem</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadComboBox1.FindItem(ItemWithEqualsTextAndValue);
            }
            private static bool ItemWithEqualsTextAndValue(RadComboBoxItem item)
            {
                if (item.Text == item.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadComboBox1.FindItem(ItemWithEqualsTextAndValue)
            End Sub
            Private Shared Function ItemWithEqualsTextAndValue(ByVal item As RadComboBoxItem) As Boolean
                If item.Text = item.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
                </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.Contains(Telerik.Web.UI.RadComboBoxItem)">
            <summary>
            	Determines whether the specified <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> object is in the current 
            	<see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see>.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> object to find.
            </param>
            <returns>
            	<c>true</c> if the current collection contains the specified <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> object; 
            	otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Web.UI.RadComboBoxItem})">
            <summary>Appends the specified array of <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> objects to the end of the 
            current <see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see>.
            </summary>
            <example>
                The following example demonstrates how to use the <strong>AddRange</strong> method
                to add multiple items in a single step. 
                <code lang="CS">
            		RadComboBoxItem[] items = new RadComboBoxItem[] { new RadComboBoxItem("First"), new RadComboBoxItem("Second"), new RadComboBoxItem("Third") };
            		RadComboBox1.Items.AddRange(items);
                </code>
            	<code lang="VB">
                    Dim items() As RadComboBoxItem = {New RadComboBoxItem("First"), New RadComboBoxItem("Second"), New RadComboBoxItem("Third")}
                    RadComboBox1.Items.AddRange(items)
                </code>
            </example>
            <param name="items">
                The array of <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> o append to the end of the current 
            <see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.IndexOf(Telerik.Web.UI.RadComboBoxItem)">
            <summary>
            Determines the index of the specified <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> object in the collection.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> to locate.
            </param>
            <returns>
            	The zero-based index of item within the current <see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see>, 
            	if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.Insert(System.Int32,Telerik.Web.UI.RadComboBoxItem)">
            <summary>
            Inserts the specified <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> object in the current 
            <see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see> at the specified index location.
            </summary>
            <param name="index">The zero-based index location at which to insert the <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see>.</param>
            <param name="item">The <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.Remove(Telerik.Web.UI.RadComboBoxItem)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> object from the current
            	<see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see>.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> object to remove.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.Remove(System.Int32)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> object from the current
            	<see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see>.
            </summary>
            <param name="index">
            	The zero-based index of the index to remove.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.Sort">
            <summary>
            	Sort the items from <see>RadComboBoxItemCollection</see>.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadComboBoxItemCollection.Sort(System.Collections.IComparer)">
            <summary>
            	Sort the items from <see>RadComboBoxItemCollection</see>.
            </summary>
            <param name="comparer">
            An object from IComparer interface.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadComboBoxItemCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> object at the specified index in 
            	the current <see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see>.
            </summary>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> to retrieve.
            </param>
            <returns>
            	The <see cref="T:Telerik.Web.UI.RadComboBoxItem">RadComboBoxItem</see> at the specified index in the 
            	current <see cref="T:Telerik.Web.UI.RadComboBoxItemCollection">RadComboBoxItemCollection</see>.
            </returns>
        </member>
        <member name="T:Telerik.Web.ControlRenderHelper">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.ModalExtender">
            <summary>
            Clientside implementation of visual element resize functionality
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.StateBagWithPrefix">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.ResizeExtender">
            <summary>
            Clientside implementation of visual element resize functionality
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Dialogs.DialogControlInitializer">
            <summary>
            This class is intended to simply define the common scripts reference
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DialogDefinition.#ctor(Telerik.Web.UI.DialogParameters)">
            <summary>
            Used from DialogLoaderBase to extract the definition
             of the dialog to be loaded
            </summary>
            <param name="parameters">
            The parameters got from the DialogLoader. They must include
             either VirtualPath or Type for the control to be loaded.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.DialogDefinition.#ctor(System.String,Telerik.Web.UI.DialogParameters)">
            <summary>
            Used from a RadControl (Editor, Spell) to define an UserControl dialog
            </summary>
            <param name="virtualPath">The path to the ascx to be loaded</param>
            <param name="parameters">The parameters to be passed to the dialog</param>
        </member>
        <member name="M:Telerik.Web.UI.DialogDefinition.#ctor(System.Type,Telerik.Web.UI.DialogParameters)">
            <summary>
            Used from a RadControl (Editor, Spell) to define a WebControl dialog
            </summary>
            <param name="dialogType">The type of the control to be loaded</param>
            <param name="parameters">The parameters to be passed to the dialog</param>
        </member>
        <member name="P:Telerik.Web.UI.DialogDefinition.Behaviors">
            <summary>
            Gets or sets a value indicating the behavior of this dialog - if it can be
            resized, has expand/collapse commands, closed command, etc.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DialogHandler">
            <summary>
            This is the default dialog handler class for Telerik dialogs. It requires Session State to be enabled
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DialogHandlerNoSession">
            <summary>
            This class can be used instead of the default (DialogHandler) class for Telerik dialogs. It does not require Session State to be enabled.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadDialogOpener.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.ShouldRegisterCssReferences">
            <summary>
            This control has no skin! This property will prevent the SkinRegistrar from
            registering the missing CSS references.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.Window">
            <summary>
            A read-only property that returns the RadWindow instance used in the RadDialogOpener control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.AdditionalQueryString">
            <summary>
            Gets or sets an additional querystring appended to the dialog URL.
            </summary>
            <value>A <strong>String</strong>, appended to the dialog URL</value>
            <remarks>TODO</remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.DialogDefinitions">
            <summary>
            Gets the DialogDefinitionDictionary, containing the DialogDefinitions of the managed dialogs.
            </summary>
            <value>TODO</value>
            <remarks>TODO</remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.UseClassicDialogs">
            <summary>
            Gets or sets a value, indicating if classic windows will be used for opening a dialog.
            </summary>
            <value>A <strong>boolean</strong>, indicating if classic windows will be used
            for opening a dialog</value>
            <remarks>When set to true, the <strong>RadDialogOpener</strong> shows a dialog similar to the
            ones opened by window.open and window.showModalDialog;</remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.Language">
            <summary>Gets or sets the localization language for the user interface.</summary>
            <value>
            The localization language for the user interface. The default value is
            <strong>en-US</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.Skin">
            <summary>Gets or sets the skin name for the control user interface.</summary>
            <value>A string containing the skin name for the control user interface. The default is string.Empty.</value>
            <remarks>
            <para>
            If this property is not set, the control will render using the skin named "Default".
            If EnableEmbeddedSkins is set to false, the control will not render skin.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.EnableEmbeddedBaseStylesheet">
            <summary>Gets or sets the value, indicating whether to render the link to the embedded base stylesheet of the control or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedBaseStylesheet is set to false you will have to register the needed control base CSS file by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.EnableEmbeddedSkins">
            <summary>Gets or sets the value, indicating whether to render links to the embedded skins or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedSkins is set to false you will have to register the needed CSS files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.EnableEmbeddedScripts">
            <summary>Gets or sets the value, indicating whether to render links to the embedded scripts or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedScripts is set to false you will have to register the needed script files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.EnableAjaxSkinRendering">
            <summary>Gets or sets the value, indicating whether to render the skin CSS files during Ajax requests</summary>
            <remarks>
            <para>
            If EnableAjaxSkinRendering is set to false you will have to register the needed control base CSS file by hand when adding/showing the control with Ajax.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.OnClientOpen">
            <summary>
            Gets or sets the client-side script that gets executed when the dialog opening event is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.OnClientClose">
            <summary>
            Gets or sets the client-side script that gets executed when the dialog closing event is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.DialogsCssFile">
            <summary>
            Gets or sets the location of a CSS file, that will be added in the dialog window. If you need to include 
            more than one file, use the CSS @import url(); rule to add the other files from the first.
            <remarks>This property is needed if you are using a custom skin. It allows you to include your custom skin
            CSS in the dialogs, which are separate from the main page.</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.DialogsScriptFile">
            <summary>
            Gets or sets the location of a JavaScript file, that will be added in the dialog window. If you need to include 
            more than one file, you will need to combine the scripts into one first.
            <remarks>This property is needed if want to override some of the default functionality without loading the dialog
            from an external ascx file.</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadDialogOpener.Animation">
            <summary>
            Get/Set the animation effect of the window
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DialogOpener">
            <summary>
            This class is provided for backwards compatibility with old solutions.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.JavascriptDialogParametersProvider">
            <summary>
            An empty class to just indicate that the parameters must be taken in a querystring/javascript manner
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DialogParametersProvider.#ctor(System.Web.UI.Page)">
            <summary>
            Instantiates the DialogParametersProvider
            </summary>
            <param name="page">The page that uses the DialogParametersProvider</param>
        </member>
        <member name="M:Telerik.Web.UI.DialogParametersProvider.GetDialogParameters(System.String,System.String)">
            <summary>
            Returns the <see cref="T:Telerik.Web.UI.DialogParameters">DialogParameters</see> for a dialog
            </summary>
            <param name="dialogOpenerIdentifier">the unique identifier of the dialogOpener, which
            	parameters are stored</param>
            <param name="dialogName">the name of the dialog which parameters are requested</param>
            <returns>the DialogParameters for the specified dialog of the exact editor</returns>
        </member>
        <member name="M:Telerik.Web.UI.DialogParametersProvider.StoreAllParameters(System.String,Telerik.Web.UI.DialogParametersDictionary)">
            <summary>
            Stores the <see cref="T:Telerik.Web.UI.DialogParameters">DialogParameters</see> for
            all the dialogs of a specified RadDialogOpener
            </summary>
            <param name="dialogOpenerIdentifier">the unique identifier of the editor
            which <see cref="T:Telerik.Web.UI.DialogParameters">DialogParameters</see>
            will be stored</param>
            <param name="dialogParameters"> The list of dialog parameters</param>
        </member>
        <member name="T:Telerik.Web.Dialogs.DialogParametersSerializer">
            <summary>
            DialogParametersSerializer - serializes a DialogParameters object to a string and deserializes it.
            </summary>
            <remarks>
            	<para>Known limitations:
            		<list type="bullet">
            			<item>When deserializing, the enum values are passed as ints and an implicit cast is required.</item>
            			<item>If a string array with a one element == string.Empty is passed, the deserialized array will have no elements</item>
            		</list>
            	</para>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.DockHandle">
            <summary>
            Defines the RadDock titlebar and grips behavior.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.DockHandle.None">
            <summary>
            The control will not have titlebar or grips.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.DockHandle.TitleBar">
            <summary>
            The control will have only titlebar.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.DockHandle.Grip">
            <summary>
            The control will have only grips.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DockLayoutEventArgs">
            <summary>
            Provides data for the SaveDockLayout and the LoadDockLayout events.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockLayoutEventArgs.#ctor(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Initializes a new instance of the DockLayoutEventArgs class
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockLayoutEventArgs.Positions">
            <summary>
            Dictionary, containing UniqueName/DockZoneID pairs.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockLayoutEventArgs.Indices">
            <summary>
            Dictionary, containing UniqueName/Index pairs.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DockLayoutEventHandler">
            <summary>
            Represents the method that handles a SaveDockLayout or LoadDockLayout events
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">A DockLayoutEventArgs that contains the event data</param>
        </member>
        <member name="T:Telerik.Web.UI.DockMode">
            <summary>
            Defines the docking behavior of a RadDock control
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.DockMode.Floating">
            <summary>
            The RadDock control is able to float (to be undocked)
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.DockMode.Docked">
            <summary>
            The RadDock control is able to dock into zones
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.DockMode.Default">
            <summary>
            The RadDock control is able to be both docked and undocked.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DockPinUnpinCommand">
            <summary>
            Represents the PinUnpin command item in a RadDock control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.DockPinUnpinCommand.#ctor">
            <summary>
            Initializes a new instance of the DockPinUnpinCommand class
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockPinUnpinCommand.State">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockPinUnpinCommand.Text">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockPinUnpinCommand.AlternateText">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockPinUnpinCommand.CssClass">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockPinUnpinCommand.AlternateCssClass">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.DockPinUnpinCommand.Name">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.Dock.DefaultCommands">
            <summary>
            Defines the commands which should appear in the RadDock control
            titlebar when its Commands property is not set.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Dock.DefaultCommands.None">
            <summary>
            No commands will appear
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Dock.DefaultCommands.Close">
            <summary>
            Close command
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Dock.DefaultCommands.ExpandCollapse">
            <summary>
            ExpandCollapse command
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Dock.DefaultCommands.PinUnpin">
            <summary>
            PinUnpin command
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Dock.DefaultCommands.All">
            <summary>
            All commands
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DockPositionChangedEventArgs">
            <summary>
            Provides data for the DockPositionChanged event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockPositionChangedEventArgs.DockZoneID">
            <summary>
            Contains the ClientID of the dock zone the dock has been dropped to. 
            If the dock was not dropped in a zone (undocked) the value will be 
            string.Empty.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DockPositionChangedEventArgs.Index">
            <summary>
            Contains the index of the dock in the new dock zone
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.DockPositionChangedEventHandler">
            <summary>
            Represents the method that handles a DockPositionChanged event
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">A DockPositionChangedEventArgs that contains the event data</param>
        </member>
        <member name="T:Telerik.Web.UI.DockToggleCommandState">
            <summary>
            Defines the state of a DockToggleCommand item
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.DockToggleCommandState.Primary">
            <summary>
            The command is in primary state. It will be initially rendered 
            using the CssClass and Text properties.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.DockToggleCommandState.Alternate">
            <summary>
            The command is in alternate state. It will be initially rendered 
            using the AlternateCssClass and AlternateText properties.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.StandardDropDownProperties.PopUpWidth">
            <summary>
            Use this attribute to set the width of a DropDown
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.StandardDropDownProperties.PopUpHeight">
            <summary>
            Use this attribute to set the height of a DropDown
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.StandardDropDownProperties.PopUpClassName">
            <summary>
            Use this attribute to set the popup class name of a DropDown
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.StandardDropDownProperties.SizeToFit">
            <summary>
            Use this attribute to let the DropDown to adjust its size to its content automatically
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.StandardDropDownProperties.ItemsPerRow">
            <summary>
            Use this attribute to set the number of the items per row in a DropDown
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Editor.AttributeCollection.HashCodeCombiner">
            <summary>
            Copied from Reflector
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Dialogs.UserControlBase.ShouldRegisterCssReferences">
            <summary>
            This control has no skin! This property will prevent the SkinRegistrar from
            registering the missing CSS references.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Dialogs.UserControlBase.Language">
            <summary>
            Gets or sets a string containing the localization language for the RadEditor UI
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Dialogs.UserControlBase.ExternalDialogsPath">
            <summary>
            Gets or sets a value indicating where the editor will look for its dialogs.
            </summary>
            <value>
            A relative path to the dialogs location. For example: "~/controls/RadEditorDialogs/".
            </value>
            <remarks>
            	<para>If specified, the <strong>ExternalDialogsPath</strong>
            		property will allow you to customize and load the editor dialogs from normal ASCX files.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.Dialogs.UserControlBase.LocalizationPath">
            <summary>
            Gets or sets a value indicating where the control will look for its .resx localization files.
            By default these files should be in the App_GlobalResources folder. However, if you cannot put
            the resource files in the default location or .resx files compilation is disabled for some reason 
            (e.g. in a DotNetNuke environment), this property should be set to the location of the resource files.
            </summary>
            <value>
            A relative path to the dialogs location. For example: "~/controls/RadEditorResources/".
            </value>
            <remarks>
            	<para>If specified, the <strong>LocalizationPath</strong>
            property will allow you to load the control localization files from any location in the 
            web application.</para>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.EditorCssFile">
            <summary>
            Represents a CssFile item.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorCssFileCollection">
            <summary>
            A strongly typed collection of EditorCssFile objects
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.EditorToolsBase.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.Editor.EditorToolsBase.AddClickHandler">
            <summary>
            This property instructs the tool to attach its own click handlers and not to rely on a tool adapter
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.AlignmentSelector.Name">
            <summary>
            This property sets the tool name in the client script.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.ApplyClassDropDown.Name">
            <summary>
            This property sets the tool name in the client script.
            </summary>
            
        </member>
        <member name="P:Telerik.Web.UI.Editor.ColorPicker.Name">
            <summary>
            This property sets the tool name in the client script.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.ImageDialogCaller.Name">
            <summary>
            This property sets the tool name in the client script.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.FileManagerDialogConfiguration">
            <summary>
            Encapsulates the properties used for FileBrowser dialog management.
            </summary>
            <remarks>
            The <strong>FileManagerDialogConfiguration</strong> members are passed in a secure manner to
            the respective dialogs using the <see cref="T:Telerik.Web.UI.DialogParameters">DialogParameters</see>
            collection of the editor.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.FileManagerDialogConfiguration.ViewPaths">
            <summary>
            Gets or sets the view paths of the FileManager dialog.
            </summary>
            <value>
            A <see cref="T:System.String">String</see> array, containing virtual paths which subfolders and files
            the FileManager dialog will search and display. The default value is an empty String array.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.FileManagerDialogConfiguration.UploadPaths">
            <summary>
            Gets or sets the upload paths of the FileManager dialog.
            </summary>
            <value>
            A <see cref="T:System.String">String</see> array, containing virtual paths to which files
            can be uploaded or subfolders can be created. The default value is an empty String array.
            </value>
            <remarks>
            As only files/folders, contained in the <see cref="P:Telerik.Web.UI.FileManagerDialogConfiguration.ViewPaths">ViewPaths</see>
            array will be displayed, users are able to upload files/create subfolders only
            to folders, belonging to the intersection of the <see cref="P:Telerik.Web.UI.FileManagerDialogConfiguration.ViewPaths">ViewPaths</see> and
            <strong>UploadPaths</strong> properties.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.FileManagerDialogConfiguration.DeletePaths">
            <summary>
            Gets or sets the delete paths of the FileManager dialog.
            </summary>
            <value>
            A <see cref="T:System.String">String</see> array, containing virtual paths in which files or
            subdirectories can be deleted. The default value is an empty String array.
            </value>
            <remarks>
            As only files/folders, contained in the <see cref="P:Telerik.Web.UI.FileManagerDialogConfiguration.ViewPaths">ViewPaths</see>
            array will be displayed, users are able to delete only the files/folders,
            belonging to the intersection of the <see cref="P:Telerik.Web.UI.FileManagerDialogConfiguration.ViewPaths">ViewPaths</see> and
            <strong>UploadPaths</strong> properties.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.FileManagerDialogConfiguration.SearchPatterns">
            <summary>
            Gets or sets the extension patterns for files to be displayed in the FileManager dialog.
            </summary>
            <value>
            A <see cref="T:System.String">String</see> array, containing extension patterns for
            files to be displayed in the FileManager dialog.
            </value>
            <remarks>
            Values can contain wildcars (e.g. <strong>*.*</strong>, <strong>*.j?g</strong>)
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.FileManagerDialogConfiguration.MaxUploadFileSize">
            <summary>
            Gets or sets the max filesize which users are able to upload in bytes
            </summary>
            <value>
            An <see cref="T:System.Int32">Int32</see>, representing the max filesize which users are able
            to upload in bytes.
            </value>
            <remarks>
            The value of the MaxUploadFileSize property should be less or equal
            to the &lt;httpRuntime <strong>maxRequestLength</strong>...&gt; website property, specified in either
            the web.config or machine.config files. The &lt;httpRuntime <strong>maxRequestLength</strong>...&gt;
            property controls the allowed post request length for the website.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.FileManagerDialogConfiguration.ContentProviderTypeName">
            <summary>
            Gets or sets the fully qualified type name of the FileBrowserContentProvider used in the dialog,
            including the assembly name, version, culture, public key token.
            </summary>
            <value>
            	The default value is <strong>string.Empty</strong>
            </value>
            <remarks>
            When the value of this property is string.Empty (default), the dialog will use the integrated 
            FileSystemContentProvider.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.EditorColor">
            <summary>
            A RadEditor color picker color
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorColor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.EditorColor"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorColor.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.EditorColor"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorColor.#ctor(System.Drawing.Color,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.EditorColor"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorColorCollection">
            <summary>
            A strongly typed collection of EditorColor objects
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorColorCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.EditorColorCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorColorCollection.Add(System.String)">
            <summary>
            Adds a EditorColor object, initialized with the specified value.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorColorCollection.SetDirtyObject(System.Object)">
            <summary>
            When overridden in a derived class, instructs an object contained by the collection to record its entire state to view state, rather than recording only change information.
            </summary>
            <param name="o">The <see cref="T:System.Web.UI.IStateManager"></see> that should serialize itself completely.</param>
        </member>
        <member name="T:Telerik.Web.UI.EditorContextMenu">
            <summary>
            Represents a RadEditor context menu.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorContextMenu.LoadViewState(System.Object)">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorContextMenu.SaveViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorContextMenu.TrackViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorContextMenu.SetDirty">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorContextMenu.TagName">
            <summary>
            Gets or sets the name of the tag, this EditorContextMenu will be associated to.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.EditorContextMenu.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Telerik.Web.UI.EditorContextMenu"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.EditorContextMenu.Tools">
            <summary>
            Gets the collection of EditorTool objects, placed in this context menu instance.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorContextMenuCollection">
            <summary>
            A strongly typed collection of EditorContextMenu objects
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorContextMenuCollection.Add(Telerik.Web.UI.EditorContextMenu)">
            <summary>
            Adds the specified item to the collection. If the collection already contains an item 
            with the same TagName, it will be replaced with the new item.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorContextMenuCollection.SetDirtyObject(System.Object)">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.EditorCssClass">
            <summary>
            Represents a CssClass dropdown item.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorCssClassCollection">
            <summary>
            A strongly typed collection of EditorCssClass objects
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorFont">
            <summary>
            Represents a FontName dropdown item.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorFontCollection">
            <summary>
            A strongly typed collection of EditorFont objects
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorFontSize">
            <summary>
            Represents a FontSize dropdown item.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorFontSizeCollection">
            <summary>
            A strongly typed collection of EditorFontSize objects
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorLinkCollection">
            <summary>
            A strongly typed collection of EditorLink objects
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorParagraph">
            <summary>
            Represents a FormatBlock dropdown item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.EditorParagraph.Title">
            <summary>
            The tag which the selected text will be enclosed with.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.EditorParagraph.Tag">
            <summary>
            The text which will be displayed in the FormatBlock dropdown
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorParagraphCollection">
            <summary>
            A strongly typed collection of EditorParagraph objects
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorRealFontSize">
            <summary>
            Represents a RealFontSize dropdown item.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorRealFontSizeCollection">
            <summary>
            A strongly typed collection of EditorRealFontSize objects
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorSnippet">
            <summary>
            Represents a InsertSnippet dropdown item.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorSnippetCollection">
            <summary>
            A strongly typed collection of EditorSnippet objects
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorSymbol">
            <summary>
            Represents a InsertSymbol dropdown item.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorSymbolCollection">
            <summary>
            A strongly typed collection of EditorSymbol objects
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.SpellCheckerLanguage">
            <summary>
            Represents a SpellCheck dropdown item.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.SpellCheckerLanguageCollection">
            <summary>
            A strongly typed collection of SpellCheckerLanguage objects
            </summary>	
        </member>
        <member name="T:Telerik.Web.UI.EditorSeparator">
            <summary>
            A special EditorTool object, which is rendered as a separator by the default
            ToolAdapter.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorToolBase">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolBase.SaveViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolBase.LoadViewState(System.Object)">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolBase.TrackViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolBase.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolBase.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorToolBase.Type">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorToolBase.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Telerik.Web.UI.EditorTool"/> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.EditorToolBase.Attributes">
            <summary>
            Gets the custom attributes which will be serialized on the client.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.EditorToolBase.PopUpWidth">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorToolBase.PopUpHeight">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorToolBase.PopUpClassName">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorToolBase.SizeToFit">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorToolBase.ItemsPerRow">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorSeparator.SaveViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorSeparator.LoadViewState(System.Object)">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorSeparator.Type">
            <summary>
            Gets or sets the type of the tool - by default it is a button		
            </summary>
            <value>The type of the tool on the client.</value>		
        </member>
        <member name="T:Telerik.Web.UI.EditorToolBaseCollection">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.Add(`0)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.Contains(`0)">
            <summary>
            Determines whether the collection contains the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if the collection contains the specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the collection items to the specified array.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the specified items to the collection.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.IndexOf(`0)">
            <summary>
            Gets the index of the specified item.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts the specified item at the specified index.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.Remove(`0)">
            <summary>
            Removes the specified item.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.GetKnownTypes">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.CreateKnownType(System.Int32)">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.SetDirtyObject(System.Object)">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the tool at the specified index.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.GenericEditorToolBaseCollection`1.List">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.EditorToolStrip">
            <summary>
            Represents a ToolStrip RadEditor tool, containing other tools.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorToolStrip.LoadViewState(System.Object)">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolStrip.SaveViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolStrip.TrackViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolStrip.SetDirty">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorToolStrip.Name">
            <summary>
            Gets or sets the name of the tool strip.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Telerik.Web.UI.EditorToolStrip.Tools">
            <summary>
            Gets the collection of EditorTool objects, inside the tool strip.
            </summary>
            <value>The tools.</value>
        </member>
        <member name="T:Telerik.Web.UI.ImageManagerDialogConfiguration">
            <summary>
            Encapsulates the properties used for ImageManager dialog management.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ImageManagerDialogConfiguration.ImageEditorFileSuffix">
            <summary>
            Gets or sets the default suffix for thumbnails.
            </summary>
            <value>
            A <strong>String</strong>, specifying the default thumbnail suffix. The default value
            is "thumb".
            </value>
            <remarks>
            Used in the ImageManager dialog. The value of the <strong>ImageEditorFileSuffix</strong> property is
            used to determine if an image selected in the file browser is a thumbnail of another image
            in the same folder. When a thumbnail image is selected in the file list, additional controls
            for the image insertion appear - if the inserted image should link to the original one and
            if the link that will be inserted will open in a new window.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.ImageManagerDialogConfiguration.EnableImageEditor">
            <summary>
            Gets or sets a value indicating whether to show the Image Editor tool in the Image Manager dialog.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorModule.SaveViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorModule.LoadViewState(System.Object)">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorModule.TrackViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorModule.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorModule.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorModule.Attributes">
            <summary>
            Gets the custom attributes which will be serialized on the client.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.SpellCheckSettings.CustomDictionarySuffix">
            <summary>Gets or sets the suffix for the custom dictionary files.</summary>
            <value>The default is <b>-Custom</b></value>
            <remarks>
            The filenames are formed with the following scheme: Language + CustomDictionarySuffix +
            ".txt". Different suffixes can be used to create different custom dictionaries for
            different users.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.Editor.SpellCheckSettings.DictionaryPath">
            <summary>Gets or sets the path for the dictionary files.</summary>
            <value>The default is <strong>~/App_Data/Spell/</strong></value>
            <remarks>
            This is the path that contains the TDF files, and the custom dictionary TXT
            files.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.Editor.SpellCheckSettings.EditDistance">
            <summary>
            Gets or sets a the edit distance. If you increase the value, the checking speed
            decreases but more suggestions are presented. Applicable only in EditDistance mode.
            </summary>
            <value>The default is <b>1</b></value>
            <remarks>
                This property takes effect only if the
                <see cref="P:Telerik.Web.UI.Editor.SpellCheckSettings.SpellCheckProvider">SpellCheckProvider</see> property is set to
                <strong>EditDistanceProvider</strong>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.Editor.SpellCheckSettings.AllowAddCustom">
            <summary>Gets or sets the value indicating whether the spell will allow adding custom words.</summary>
            <value>The default is <b>true</b></value>
        </member>
        <member name="P:Telerik.Web.UI.Editor.SpellCheckSettings.DictionaryLanguage">
            <summary>
            Gets or sets the spellcheck language if different than the Language property.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.SpellCheckSettings.FragmentIgnoreOptions">
            <summary>
            Configures the spellchecker engine, so that it knows whether to skip URL's, email
            addresses, and filenames and not flag them as erros.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.SpellCheckSettings.SpellCheckProviderTypeName">
            <summary>
            Specifies the type name for a custom spell check provider.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.SpellCheckSettings.SpellCheckProvider">
            <summary>
            Specifies the spellchecking algorithm that will be used.
            </summary>
            <value>
            The default is <b>TelerikProvider</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.Editor.SpellCheckSettings.WordIgnoreOptions">
            <summary>
            Gets or sets the value used to configure the spellchecker engine to ignore words containing: UPPERCASE, some 
            CaPitaL letters, numbers; or to ignore repeated words (very very)
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.SpellCheckSettings.AjaxUrl">
            <summary>
            Gets or sets the URL, to which the spellchecker engine AJAX call will be made. Check the help for more information.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.SpellCheckSettings.CustomDictionarySourceTypeName">
            <summary>
            Gets or sets the type for the spell custom dictionary provider.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.EditorSpinBox.Name">
            <summary>
            This property sets the tool name in the client script.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.EditorSpinBox.VisibleInput">
            <summary>
            This property gets or sets a value, indicating whether to show the input box of the spin box element
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.EditorCheckBox.Name">
            <summary>
            This property sets the tool name in the client script.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.EditorTextBox.Name">
            <summary>
            This property sets the tool name in the client script.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.StandardButton.Name">
            <summary>
            This property sets the tool name in the client script.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.StandardDropDown.Name">
            <summary>
            This property sets the tool name in the client script.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ToolsFileLoader">
            <summary>
            Parses the ToolsFileContent property of RadEditor and initializes the corresponding
            collections.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadColors(Telerik.Web.UI.EditorColorCollection)">
            <summary>
            Initializes the Colors collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadContextMenus(Telerik.Web.UI.EditorContextMenuCollection)">
            <summary>
            Initializes the ContextMenus collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadCssClasses(Telerik.Web.UI.EditorCssClassCollection)">
            <summary>
            Initializes the CssClasses collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadCssFiles(Telerik.Web.UI.EditorCssFileCollection)">
            <summary>
            Initializes the CssFiles collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadFontNames(Telerik.Web.UI.EditorFontCollection)">
            <summary>
            Initializes the Links collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadFontSizes(Telerik.Web.UI.EditorFontSizeCollection)">
            <summary>
            Initializes the Links collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadLanguages(Telerik.Web.UI.SpellCheckerLanguageCollection)">
            <summary>
            Initializes the Languages collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadLinks(Telerik.Web.UI.EditorLinkCollection)">
            <summary>
            Initializes the Links collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadModules(Telerik.Web.UI.EditorModuleCollection)">
            <summary>
            Initializes the Modules collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadParagraphs(Telerik.Web.UI.EditorParagraphCollection)">
            <summary>
            Initializes the Paragraphs collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadRealFontSizes(Telerik.Web.UI.EditorRealFontSizeCollection)">
            <summary>
            Initializes the Links collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadSnippets(Telerik.Web.UI.EditorSnippetCollection)">
            <summary>
            Initializes the Snippets collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadSymbols(Telerik.Web.UI.EditorSymbolCollection)">
            <summary>
            Initializes the Symbols collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ToolsFileLoader.LoadTools(Telerik.Web.UI.EditorToolGroupCollection)">
            <summary>
            Initializes the Tools collection from the ToolsFileContent property of RadEditor.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridBoolColumnEditor">
            <summary>This is a base class for all column editors for GridCheckBoxColumn.</summary>
            <remarks>It defines the base properties for controls that can edit boolean values.</remarks>
        </member>
        <member name="T:Telerik.Web.UI.IGridColumnEditor">
            <summary>
            Interface that describes the baseic column editor functionality, needed for a
            class that should be responsible for editing of a content of a cell in a
            <see cref="T:Telerik.Web.UI.GridEditableItem"/> 
            </summary>
            <remarks>
            Implement column editor to provide extended editing functionality in RadGrid. The column-editor inheritors should provide the methods for
            creating the column editor control inside the container (generally a grid TableCell). For example the default column editor for GridBoundColumn
            creates a TextBox control and adds it to the corresponding GridtableCell when the InstantiateInControl method is called.
            To inherit the base implementation of a column editor control in RadGrid you may consider deriving from <see cref="T:Telerik.Web.UI.GridColumnEditorBase"/> instead implementing the IColumnEditor interface.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.IGridColumnEditor.InitializeInControl(System.Web.UI.Control)">
            <summary>
            Implement this member to add control int the given container. 
            After the call to this method the ContainerControl property should return the instance of containerControl parameter passed to this function.
            </summary>
            <param name="containerControl"></param>
        </member>
        <member name="M:Telerik.Web.UI.IGridColumnEditor.InitializeFromControl(System.Web.UI.Control)">
            <summary>
            The editor should recreate its state and imput controls from the Container.
            </summary>
            <param name="containerControl">control (generally a TableCell) that contains the input controls, previously instantiated within the InitializeInControl method call</param>
        </member>
        <member name="P:Telerik.Web.UI.IGridColumnEditor.ContainerControl">
            <summary>
            Gets the instance of the Container control (generally a TableCell), after the last call of InstantiateInControl method
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IGridColumnEditor.IsInitialized">
            <summary>
            Get value if the editor has been initialized after an InitializeInControl or InitializeFromControl method call
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IGridColumnEditor.IsInEditMode">
            <summary>
            Get a value indicating if the column/row the editor currently is instantiated is in edit mode.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnEditorBase.CopySettingsFrom(Telerik.Web.UI.IGridColumnEditor)">
            <summary>
            Copy setting from given column editor
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnEditorBase.CreateControls">
            <summary>
            Create the input/edit controls belonging to the editor and prepare for AddControlsToContainer call.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnEditorBase.AddControlsToContainer">
            <summary>
            Implement this member to create the edit controls in the grid cell.
            This method is called from each column's InitializeCell method, when a <see cref="T:Telerik.Web.UI.GridItem"/> initializes its cells.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnEditorBase.LoadControlsFromContainer">
            <summary>
            This method should recrteate the state of the column editor (edit controls, etc) from the container.
            This method is called when <see cref="M:Telerik.Web.UI.GridTableView.ExtractValuesFromItem(System.Collections.IDictionary,Telerik.Web.UI.GridEditableItem)"/> method is called, or when <see cref="!:GridEditableItem.EditManager.GetColumnEditor"/> is called.
            </summary>
            <remarks>
            This method is should prepare the column editor to extract values from the edit controls residign in a TableCell of the grid.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridBoolColumnEditor.Value">
            <summary>
            Gets or sets the value for each cell in a
            <strong>GridCheckBoxColumn</strong>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridCheckBoxColumnEditor.CheckBoxControl">
            <summary>
            Provides a reference to the control in the corresponding grid cell of the current
            <strong>GridCheckBoxColumn</strong>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridCheckBoxColumnEditor.CheckBoxStyle">
            <summary>
            Gets or sets the style defining the appearance of the corresponding
            check-box.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridCheckBoxColumnEditor.IsInitialized">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridCheckBoxColumnEditor.Value">
            <summary>
            Gets or sets the value for each cell in a
            <strong>GridCheckBoxColumn</strong>.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridCreateColumnEditorEventHandler">
            <summary>
            Summary description for GridCreateColumnEditorEvent.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridDropDownColumnEditor">
            <summary>
            Summary description for GridDropDownColumnEditor.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridTextColumnEditor">
            <summary>
            Base class that intruduces the editor of GridBoundColumn. THis can be an editor that creates a simple TextBox control, ot RichTexst editors, that has a single string property Text.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridTextBoxColumnEditor">
            <summary>
            Class tha implements data editing of a GridBoundColumn with a single TextBox control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridTextBoxColumnEditor.TextBoxControl">
            <summary>
            Gets The text box instance created of extracted from a cell after calls to AddControlsToContainer or LoadControlsFromContainer methods.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridTextBoxColumnEditor.TextBoxStyle">
            <summary>
            Gets the instace of the Style that would be applied to the TextBox control, when initializing in a TableCell.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridBoundColumn">
            <summary>
            A column type for the RadGrid control that is bound to a field in a data
            source.
            </summary>
            <seealso cref="!:http://demos.telerik.com/ASPNET/Prometheus/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <remarks>
            	<para>The default data binding (when <strong>AutoGenerateColumns</strong> property
                is set to true) generates <strong>GridBoundColumn</strong> type of columns. It
                displays each item from the DataSource field as text. This column is
                <a href="http://www.telerik.com/help/aspnet-ajax/grdeditforms.html">editable</a> (implements the
                <a href="http://www.telerik.com/help/aspnet-ajax/telerik.web.ui-telerik.web.ui.grideditablecolumn.html">IGridEditableColumn</a>
                interface) and provides by default <strong>GridTextColumnEditor</strong>, used for
                editing the text in each item.</para>
            	<para><strong>GridBoundColumn</strong> has three similar and yet different
                properties controlling its visibility and rendering in a browser in regular and in
                edit mode:</para>
            	<list type="bullet">
            		<item><strong>Display</strong> - concerns only the appearance of the column in
                    browser mode, client-side. The column will be rendered in the browser but all
                    the cells will be styled with <em>display: none</em>. The column editor will be
                    visible in edit mode.</item>
            		<item><strong>Visible</strong> - will stop the column cells from rendering in
                    browser mode. The column will be visible in edit mode.</item>
            		<item>
            			<strong>ReadOnly</strong> - the column will be displayed according to the
                        settings of previous properties in browser mode but will not appear in the
                        edit-form.<br/>
            			<div>
            				<list type="table">
            					<item>
            						<description>None of these properties can prevent you from
                                    accessing the column cells' content server-side using the
                                    <strong>UniqueName</strong> of the column.</description>
            					</item>
            				</list>
            			</div>
            		</item>
            	</list>
            </remarks>
            <example>
            	<pre>
            &lt;telerik:GridBoundColumn FooterText="BoundColumn footer" UniqueName="CustomerID" SortExpression="CustomerID"<br/>HeaderText="Bound&lt;br/&gt;Column" DataField="CustomerID"&gt;<br/>&lt;/telerik:GridBoundColumn&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid Manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid Manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid Manual">Using columns</seealso>
        </member>
        <member name="T:Telerik.Web.UI.GridEditableColumn">
            <summary>
            All columns in RadGrid that have editing capabilities derive from GridEditableColumn.
            This class implements the base functionality for editing, using column editors etc.
            </summary>
            <remarks>
            Provides IGridEditableColumn interface, which RadGrid uses to operate with the
            state of all the editable columns.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.GridColumn">
            <summary>
            	<para>A Column is the main logic unit that relates the content of the grid to
            properties of the objects in the DataSource.</para>
            	<para>The <b>GridColumn</b> defines the properties and methods that are common to all
            column types in RadGrid. As it is an abstract class (MustInherit in VB.NET)
            <b>GridColumn</b> class can not be created directly. You should inherit it and use its
            children.</para>
            </summary>
            <remarks>
            	<strong>GridColumn</strong> is the base abstract class that implements the
            functionality of a grid column. All inherited classes modify the base behavior
            corresponding to the specific data that should be displayed/edited in RadGrid. The
            columns that have editing capabilities derrive from
            <see cref="T:Telerik.Web.UI.GridEditableColumn"/> class. Other instances display data, buttons, and
            so on in the cells of the grid regarding the type of the Item/row in which the cell
            resides. In you code you can create only instances of the derrived classes. In order to
            display a column in the grid you should add it in the corresponding
            <see cref="P:Telerik.Web.UI.GridTableView.Columns"/> collection. Since the column collection is
            fully persisted in the ViewSteate you should follow the rules that apply to creating
            asp.net server controls dynamically, when adding columns to grid tables
            programmatically.
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.GridColumn.footerStyle">
            <summary>
            	<para>Using the <strong>FooterStyle</strong> property lets you enhance the appearance
            of the footer section of the column. You can set forecolor, backcolor, font and content
            alignment.</para>
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridColumn.headerStyle">
            <summary>
            	<para>Using the <strong>HeaderStyle</strong> property lets you enhance the appearance
            of the header section of the column. You can set forecolor, backcolor, font and content
            alignment.</para>
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridColumn.itemStyle">
            <summary>
            	<para>Use this property to enhance the appearance of the item cells of the column. You
            can provide a custom style for Common style attributes that can be adjusted such as:
            forecolor, backcolor, font, and content alignment within the cell.</para>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.#ctor">
            <summary>Creates and initializes a new column with its base properties.</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.Initialize">
            <summary>
            	<para>The <b>Initialize</b> method is inherited by a derived
            <strong>GridColumn</strong> class. Is is used to reset a column of the derived
            type.</para>
            </summary>
            <remarks>
            	<para>This method is mainly used to reset properties common for all column types
            derived from GridColumn class.</para>
            	<para>The <b>Initialize</b> method is usually called during data-binding, prior to the
            first row being bound.</para>
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,Telerik.Web.UI.GridItem)">
            <summary>
            	<para>After a call to this method the column should add the corresponding controls
            (text, labels, input controls) into the cell given, regarding the inItem type and
            column index.</para>
            	<para><strong>Note:</strong> This method is called within RadGrid and is not intended
            to be used directly from your code.</para>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.SupportsFiltering">
            <summary>
            This method should be used in case you develop your own column. It returns true
            if the column supports filtering.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.RefreshCurrentFilterValue(Telerik.Web.UI.GridFilteringItem,System.String)">
            <summary>
            Modifies the <strong>CurrentFilterFunction</strong> and
            <strong>CurrentFilterValue</strong> properties according to the function given and the
            corresponding filter text-box control in the filtering item.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.RefreshCurrentFilterValue(Telerik.Web.UI.GridFilteringItem)">
            <summary>
            Modifies the <strong>CurrentFilterValue</strong> property according to the
            corresponding selected item in the filter text-box control in the filtering
            item.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.SetCurrentFilterValueToControl(System.Web.UI.WebControls.TableCell)">
            <summary>
            Sets the value of the property CurrentFilterValue as a text on the TextBox control found in the cell
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.GetCurrentFilterValueFromControl(System.Web.UI.WebControls.TableCell)">
            <summary>
            Gets the value of the Text property of a textbox control found in the cell, used to set the value of the CurrentFilterValue property.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.EvaluateFilterExpression(Telerik.Web.UI.GridFilteringItem)">
            <summary>
            Gets a string representing a filter expression, based on the settings of all
            columns that support filtering, with a syntax ready to be used by a
            <strong>DataView</strong> object
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.SetupFilterControls(System.Web.UI.WebControls.TableCell)">
            <summary>
            Instantiates the filter controls (text-box, image.) in the cell given
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.GetFilterFunctionsList(Telerik.Web.UI.GridFilterListOptions,System.Collections.ArrayList)">
            <summary>
            Gets a list of filter functions based on the settings of the <see cref="P:Telerik.Web.UI.GridColumn.FilterListOptions"/> property.
            </summary>
            <param name="options"></param>
            <param name="sourceList"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.PrepareCell(System.Web.UI.WebControls.TableCell,Telerik.Web.UI.GridItem)">
            <summary>
            Prepares the cell of the item given, when grid is rendered. 
            </summary>
            <param name="cell"></param>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.ToString">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.ResetCurrentFilterValue(Telerik.Web.UI.GridFilteringItem)">
            <summary>
            Resets the values of the <see cref="P:Telerik.Web.UI.GridColumn.CurrentFilterFunction"/> and
            <see cref="P:Telerik.Web.UI.GridColumn.CurrentFilterValue"/> properties to their defaults.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.GetSortExpression">
            <summary>
            By default returns the SortExpression of the column. If the SortExpression is not set explicitly, it would be calculated, based on the
            DataField of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.GetDefaultGroupByExpression">
            <summary>
            Calculate the default Group-by expression based on the settings of the
            <strong>DataField</strong> (if available)
            </summary>
            <remarks>
            For example, if a column's DataField is ProductType the default group-by expression will be:
            'ProductType Group By ProductType'
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.Clone">
            <remarks>
            	<strong>Note:</strong> When implementing/overriding this method be sure to call
            the base member or call <strong>CopyBaseProperties</strong> to be sure that all base
            properties will be copied accordingly
            </remarks>
            <summary>Creates a copy of the current column.</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.IsBoundToFieldName(System.String)">
            <summary>
            This method returns true if the column is bound to the specified field
            name.
            </summary>
            <param name="name">The name of the DataField, which will be checked.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.CompareTo(System.Object)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridColumn.GetCustomPropertyDataFields(System.Object)">
            <summary>
            	<para>This method should be used in case you develop your own column. It returns the
            full list of <strong>DataFields</strong> used by the column.
            <strong>GridTableView</strong> uses this to decide which <strong>DataFields</strong>
            from the specified <strong>DataSource</strong> will be inlcuded in case of
            <strong>GridTableView.RetrieveAllDataFields</strong> is set to
            <strong>false</strong>.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.CurrentFilterValue">
            <summary>Gets or sets a value of the currently applied filter.</summary>
            <value>
            This property returns a <strong><em>string</em></strong>, representing the
            current value, for which the columns is filtered (the value, which the user has entered
            in the filtering text box).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.Sortable">
            <summary>
            Should override if sorting will be disabled
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.CurrentFilterFunction">
            <summary>Gets or sets the current function used for filtering.</summary>
            <value>
            	<para>This property returns a value of type
                <strong><em>Telerik.Web.UI.GridKnownFunction</em></strong>. The possible
                values are:</para>
            	<para>GridKnownFunction.<strong><em>Between</em></strong><br/>
                GridKnownFunction.<strong><em>Contains</em></strong><br/>
                GridKnownFunction.<strong><em>Custom</em></strong><br/>
                GridKnownFunction.<strong><em>DoesNotContain</em></strong><br/>
                GridKnownFunction.<strong><em>EndsWith</em></strong><br/>
                GridKnownFunction.<strong><em>EqualTo</em></strong><br/>
                GridKnownFunction.<strong><em>GreaterThan</em></strong><br/>
                GridKnownFunction.<strong><em>GridKnownFunction</em></strong><br/>
                GridKnownFunction.<strong><em>GreaterThanOrEqualTo</em></strong><br/>
                GridKnownFunction.<strong><em>IsEmpty</em></strong><br/>
                GridKnownFunction.<strong><em>IsNull</em></strong><br/>
                GridKnownFunction.<strong><em>LessThan</em></strong><br/>
                GridKnownFunction.<strong><em>LessThanOrEqualTo</em></strong><br/>
                GridKnownFunction.<strong><em>NoFilter</em></strong><br/>
                GridKnownFunction.<strong><em>NotBetween</em></strong><br/>
                GridKnownFunction.<strong><em>NotEqualTo</em></strong><br/>
                GridKnownFunction.<strong><em>NotIsEmpty</em></strong><br/>
                GridKnownFunction.<strong><em>NotIsNull</em></strong><br/>
                GridKnownFunction.<strong><em>StartsWith</em></strong></para>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.FilterListOptions">
            <summary>
            Gets or sets the value indincating which of the filter functions should be
            available for that column. For more information see
            <see cref="T:Telerik.Web.UI.GridFilterListOptions"/> enumaration.
            </summary>
            <value>
            	<para>This property returns a value of type
                <strong><em>Telerik.Web.UI.GridFilterListOptions</em></strong>. The possible
                values are:</para>
            	<para>
                Telerik.Web.UI.GridFilterListOptions.<strong><em>AllowAllFilters</em></strong><br/>
                Telerik.Web.UI.GridFilterListOptions.<strong><em>VaryByDataType</em></strong><br/>
                Telerik.Web.UI.GridFilterListOptions.<strong><em>VaryByDataTypeAllowCustom</em></strong></para>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.AutoPostBackOnFilter">
            <summary>
            Gets or sets a value indicating whether the grid should automatically postback,
            when the value in the filter text-box changes, and the the focus moves to another
            element.
            </summary>
            <value>
            This property returns a <strong><em>Boolean</em></strong> value, indicating
            whether the grid will postback, once the focus moves to another element, and the text
            of the filtering textbox has changed.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.FilterImageUrl">
            <summary>
            Gets or sets a string representing the URL to the image used in the filtering
            box.
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing the URL to the image used in the
            filtering box.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.SortAscImageUrl">
            <summary>
            Gets or sets a string representing the URL to the image used for sorting in
            ascending mode.
            </summary>
            <value>
            A <strong><em>string,</em></strong> representing the URL to the image used for
            sorting in ascending mode
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.SortDescImageUrl">
            <summary>
            Gets or sets a string representing the URL to the image used for sorting in
            descending mode.
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing the URL to the image used for
            sorting in descending mode
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.DataTypeName">
            <summary>
            Gets the string representation of the <strong>DataType</strong> property of the
            column, needed for the client-side grid instance.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.FilterTemplate">
            <summary>
            Gets or sets the template, which will be rendered in the filter item cell of the column.
            </summary>
            <value>A value of type ITemplate.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.FooterStyle">
            <summary>
            Style of the cell in the footer item of the grid, corresponding to the column.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.FooterText">
            <summary>
            	<para>Use the <b>FooterText</b> property to specify your own or determine the current
            text for the footer section of the column.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.HeaderImageUrl">
            <summary>
            Gets or sets the URL of an image in the cell in the header item of the grid
            current column. You can use a relative or an absolute URL.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.HeaderStyle">
            <summary>
            Style of the cell in the header item of the grid, corresponding to the column.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.HeaderText">
            <summary>
            Use the <b>HeaderText</b> property to specify your own or determine the current
            text for the header section of the column.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.ItemStyle">
            <summary>
            Style of the cells, corresponding to the column.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.Owner">
            <summary>
            Gets the instance of the GridTableVeiw wich owns this column instance.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.SortExpression">
            <summary>
            The string representing a filed-name from the DataSource that should be used when grid sorts by this column. For example:
            'EmployeeName'
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.GroupByExpression">
            <summary>
            	<para>The group-expression that should be used when grid is grouping-by this column. If
            not set explicitly, RadGrid will generate a group expression based on the DataField of
            the column (if available), using the <see cref="M:Telerik.Web.UI.GridColumn.GetDefaultGroupByExpression"/>
            method.</para>
            	<para>The grouping can be turned on/off for columns like GridBoundColumn using
            <see cref="P:Telerik.Web.UI.GridColumn.Groupable"/> property.</para>
            	<para>For more information about the Group-By expressions and their syntax, see
            <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> class.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.ShowSortIcon">
            <summary>
            Get or Sets a value indicating whether a sort icon should appear next to the
            header button, when a column is sorted.
            </summary>
            <value>
            This property returns a <strong><em>Boolean</em></strong> value, indicating
            whether a sort icon should appear next to the header button, when a column is
            sorted.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.Visible">
            <summary>
            Gets or sets a value indicating if the column and all corresponding cells would be rendered.
            </summary>
            <value>
            This property returns a <strong><em>Boolean</em></strong> value, indicating
            whether the cells corresponding to the column, would be visible on the client, and
            whether they would be rendered on the client.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.Display">
            <summary>
            Gets or sets a value indicating whether the cells corresponding to a column would be rendered with a 'display:none' style attribute (end-user-not-visible).
            To completely prevent cells from rendering, set the <see cref="P:Telerik.Web.UI.GridColumn.Visible"/> property to false, instead of the Display property.
            </summary>
            <value>
            This property returns a <strong><em>Boolean</em></strong> value, indicating
            whether the cells corresponding to the column would be rendered with a 'display:none'
            style attribute (end-user-not-visible).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.OwnerID">
            <summary>
            Gets the value of the ClientID property of the GridTableView that owns this column. This property value is used by grid's client object
            </summary>
            <value>
            The return value of this property is a <strong><em>string</em></strong>,
            representing the clientID of the GridTableView, which contains the column. This is the
            ClientID of the grid instance, followed by "_" and another string, representing the
            place of the container in the control hierarchy. For the MasterTableView, the default
            OwnerID for a column will look like: "RadGrid1_ctl01".
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.OwnerGridID">
            <summary>
            Gets the value of the ClientID property of the RadGrid instance that owns this column. This property value is used by grid's client object
            </summary>
            <value>
            This property returns a <strong><em>string</em></strong>, which represents a the
            ClientID for the control.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.Resizable">
            <summary>
            Gets or sets a value indicating whether the column can be resized client-side.
            You can use this property, by setting it to false, to disable resizing for a particular
            column, while preserving this functionality for all the other columns.
            </summary>
            <value>
            The property returns a <strong><em>boolean</em></strong> value, indicating
            whether the column can be resized on the client.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.Reorderable">
            <summary>
            Gets or sets a value indicating whether the column can be reordered client-side.
            </summary>
            <value>
            This property returns a boolean value, indicating whether the column is
            reorderable. The default value is true, meaning that the column can be reordered, using
            the SwapColumns client side method.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.Groupable">
            <summary>
            Gets or sets a value indicating whether you will be able to group
            Telerik RadGrid by that column. By default this property is
            <strong>true</strong>.
            </summary>
            <value>
            A boolean value of either <strong>true</strong>, when you are able to group by
            that column, or <strong>false.</strong>
            </value>
            <remarks>
            See Telerik RadGrid manual for details about using grouping. If
            <strong>Groupable</strong> is <em>false</em> the column header cannot be dragged to the
            <a href="RadGrid~Telerik.Web.UI.RadGrid~GroupPanel.html">GroupPanel</a>.
            <!--DXMETADATA end -->
            </remarks>
            <example>
            	<para>Using this property, you can easily turn off grouping for one or more
                columns, while still allowing this functionality for all other columns in the
                control. This is demonstrated in the code sample below:</para>
            	<pre>
            &lt;radG:GridBoundColumn<br/>   DataField="ContactName"<br/>   HeaderText="ContactName"<br/>   SortExpression="ContactName"<br/>   UniqueName="ContactName"<br/>   Groupable="false"&gt;<br/>&lt;/radG:GridBoundColumn&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.ColumnType">
            <summary>
            Gets the string representation of the type-name of this instance. The value is
            used by RadGrid to determine the type of the columns persisted into the ViewState, when
            recreating the grid after postback. The value is also used by the grid client-side
            object. This property is read only.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.HeaderButtonType">
            <summary>
            	<para>Gets or sets the button type of the button rendered in the header item, used
                for sorting. The possible values that this property accepts are:</para>
            	<para>Telerik.Web.UI.GridHeaderButtonType.<strong>LinkButton</strong><br/>
                Telerik.Web.UI.GridHeaderButtonType.<strong>PushButton</strong><br/>
                Telerik.Web.UI.GridHeaderButtonType.<strong>TextButton</strong></para>
            </summary>
            <value>
            The return value for this property is of type
            <strong>Telerik.Web.UI.GridHeaderButtonType</strong>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.OrderIndex">
            <summary>
                Gets or sets the order index of column in the collection of
                <see cref="P:Telerik.Web.UI.GridTableView.RenderColumns"/>. Use
                <see cref="M:Telerik.Web.UI.GridTableView.SwapColumns(System.String,System.String)"/> method for reordering the columns.
            </summary>
            <remarks>
            	<para>
                    We recommend using this property only for getting the order index for a
                    specific column instead of setting it. Use
                    <see cref="M:Telerik.Web.UI.GridTableView.SwapColumns(System.String,System.String)"/> method for reordering columns.
                </para>
            	<para>Note that changing the column order index will change the order of the cells
                in the grid items, after the grid is rebound.</para>
            	<para>
                    The value of the property would not affect the order of the column in the
                    <see cref="P:Telerik.Web.UI.GridTableView.Columns"/> collection.
                </para>
            </remarks>
            <value>
            	<strong>integer</strong> representing the current column index. You should have
            in mind that <strong>GridExpandColumn</strong> and <strong>RowIndicatorColumn</strong>
            are always in front of data columns so that's why you columns will start from index
            2.
            </value>
            <example>
            	<code lang="CS" title="OrderIndex c# example" description="Get the current indeces of columns in Telerik RadGrid and change their indeces via SwapColumns method (C# version). This code will print all the indeces prior and after swapping the columns.">
            protected void RadGrid1_PreRender(object sender, EventArgs e)
                {
                    foreach (GridBoundColumn column in RadGrid1.MasterTableView.Columns)
                    {
                        Response.Write(column.UniqueName + column.OrderIndex + "&lt;br&gt;");
                    }
             
                    RadGrid1.MasterTableView.SwapColumns(2, 4);
             
                    foreach (GridBoundColumn column in RadGrid1.MasterTableView.Columns)
                    {
                        Response.Write(column.UniqueName + column.OrderIndex + "&lt;br&gt;");
                    }
                }
                </code>
            	<code lang="VB" title="OrderIndex vb example" description="Get the current indeces of columns in Telerik RadGrid and change their indeces via SwapColumns method (VB version). This code will print all the indeces prior and after swapping the columns.">
            Protected Sub RadGrid1_PreRender(sender As Object, e As EventArgs)
               Dim column As GridBoundColumn
               For Each column In  RadGrid1.MasterTableView.Columns
                  Response.Write((column.UniqueName + column.OrderIndex + "&lt;br&gt;"))
               Next column
               
               RadGrid1.MasterTableView.SwapColumns(2, 4)
               
               Dim column As GridBoundColumn
               For Each column In  RadGrid1.MasterTableView.Columns
                  Response.Write((column.UniqueName + column.OrderIndex + "&lt;br&gt;"))
               Next column
            End Sub 'RadGrid1_PreRender
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.IsEditable">
            <summary>
            	<para>This property is supposed for developers of new grid columns. It gets whether
                a column is currently ReadOnly. The ReadOnly property determines whether a column
                will be editable in edit mode. A column for which the ReadOnly property is true
                will not be present in the automatically generated edit form.</para>
            </summary>
            <value>A boolean value, indicating whether a specific column is editable.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.EditFormColumnIndex">
            <summary>
            	<para>Specifies the vertical collumn number where this column will appear when
                using EditForms editing mode and the form is autogenerated. See the remarks for
                details.</para>
            </summary>
            <remarks>
            	<para>A practicle example of using this property is to deterimine the number of
                columns rendered in the edit form. If there will be only one column in the rendered
                edit form, when we retrieve the value of this property for a column, as shown in
                the code below:</para>
            	<div class="LanguageSpecific" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<code class="Vb">
            							<font size="2">protected void RadGrid1_PreRender(<font class="keyword">object</font> sender, EventArgs e)<br/>    {<br/>
            								<font class="keyword">int</font> columnIndex = RadGrid1.MasterTableView.Columns[3].EditFormColumnIndex;<br/>    }</font>
            						</code>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            	<para>it will be equal to 0, meaning the the column belongs to the first group of
                columns in the edit form.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.UniqueName">
            <summary>
            Each column in Telerik RadGrid has an <strong>UniqueName</strong>
            property (string). This property is assigned automatically by the designer (or the
            first time you want to access the columns if they are built dynamically).
            </summary>
            <remarks>
            	<para>You can also set it explicitly, if you prefer. However, the automatic
                generation handles most of the cases. For example a
                <strong>GridBoundColumn</strong> with <strong>DataField</strong> 'ContactName'
                would generate an <strong>UniqueName</strong> of 'ContactName'.</para>
            	<para>Additionally, there may be occasions when you will want to set the UniqueName
                explicitly. You can do so simply by specifying the custom name that you want to
                choose:</para>
            	<div class="LanguageSpecific" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<code class="Vb">
            							<font size="2">&lt;radG:GridTemplateColumn<br/> UniqueName=<font class="string">"ColumnUniqueName"</font>&gt;<br/>&lt;/radG:GridTemplateColumn&gt;</font>
            						</code>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            </remarks>
            <example>
            	<para>When you want to access a cell within a <strong>grid</strong> item, you
                should use the following code to obtain the right cell:</para>
            	<para class="sourcecode">TableCell cell = gridDataItem["ColumnUniqueName"];</para>
            	<para>or</para>
            	<para class="sourcecode">gridDataItem["ColumnUniqueName"].Text =</para>
            	<para>to access the <strong>Text</strong> property</para>
            	<para>Using this property you can index objects of type
                <strong>%</strong>GridDataItem:GridDataItem% or
                <strong>%</strong>GridEditFormItem:GridEditFormItem% (or all descendants of
                <strong>%</strong>GridEditableItem:GridEditableItem% class)</para>
            	<para>In events related to creating, binding or for commands in items, the event
                argument has a property <strong>Item</strong> to access the item that event is
                fired for. To get an instance of type <strong>GridDataItem</strong>, you should use
                the following:</para>
            	<para class="sourcecode">//presume e is the event argument object<br/>
                if (e.Item is GridDataItem)<br/>
                {<br/>
                GridDataItem gridDataItem = e.Item as GridDataItem;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.EditFormHeaderTextFormat">
            <summary>
            String that formats the HeaderText when the column is displayed in an edit form
            </summary>
            <example>
            	<para>The following code demonstrates one possible use of this property:</para>
            	<div class="LanguageSpecific" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap"></td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            	<para>In this way, once a record enters edit mode, the name of the column will be
                followed by the custom text entered in the example above.</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;radG:GridBoundColumn DataField="CustomerID"<br/>
                 HeaderText="CustomerID"<br/>
                 SortExpression="CustomerID"<br/>
                 UniqueName="CustomerID"<br/>
            		<strong>EditFormHeaderTextFormat="{0} is currently in edit mode"</strong>
                &gt;<br/>
                &lt;/radG:GridBoundColumn&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.DataType">
            <summary>
            	<para>Gets or sets (see the Remarks) the type of the data from the DataField as it
                was set in the DataSource.</para>
            </summary>
            <remarks>
            	<para>The DataType property supports the following base .NET Framework data
                types:</para>
            	<list type="bullet">
            		<item>Boolean</item>
            		<item>Byte</item>
            		<item>Char</item>
            		<item>DateTime</item>
            		<item>Decimal</item>
            		<item>Double</item>
            		<item>Int16</item>
            		<item>Int32</item>
            		<item>Int64</item>
            		<item>SByte</item>
            		<item>Single</item>
            		<item>String</item>
            		<item>TimeSpan</item>
            		<item>UInt16</item>
            		<item>UInt32</item>
            		<item>UInt64</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridColumn.FilterControlWidth">
            <summary>
            	<para>Use this property to set width to the filtering control (depending on the column type, this may be a normal textbox, RadNumericTextBox, RadDatePicker, etc.)</para>
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.IGridEditableColumn">
            <summary>
            Interface that RadGrid uses to determine the editable columns, their current state etc.
            </summary>
            <example>
            	<code lang="CS" title="Update data with editable columns">
            protected void RadGrid1_UpdateCommand(object source, Telerik.Web.UI.GridCommandEventArgs e)
                    {        
                            GridEditableItem editedItem = e.Item as GridEditableItem;
                            GridEditManager editMan = editedItem.EditManager;
             
                            foreach( GridColumn column in e.Item.OwnerTableView.RenderColumns )
                            {
                                if ( column is IGridEditableColumn )
                                {
                                    IGridEditableColumn editableCol = (column as IGridEditableColumn);
                                    if ( editableCol.IsEditable )
                                    {
                                        IGridColumnEditor editor = editMan.GetColumnEditor( editableCol );
             
                                        string editorType = editor.ToString();
                                        string editorText = "unknown";
                                        object editorValue = null;
             
                                        if ( editor is GridTextColumnEditor )
                                        {
                                            editorText = (editor as GridTextColumnEditor).Text;
                                            editorValue = (editor as GridTextColumnEditor).Text;
                                        }
             
                                        if ( editor is GridBoolColumnEditor )
                                        {
                                            editorText = (editor as GridBoolColumnEditor).Value.ToString();
                                            editorValue = (editor as GridBoolColumnEditor).Value;
                                        }
             
                                        if ( editor is GridDropDownColumnEditor )
                                        {
                                            editorText = (editor as GridDropDownColumnEditor).SelectedText + "; " +
                                                (editor as GridDropDownColumnEditor).SelectedValue;
                                            editorValue = (editor as GridDropDownColumnEditor).SelectedValue;
                                        }
             
                                        try
                                        {
                                            DataRow[] changedRows = this.EmployeesData.Tables["Employees"].Select( "EmployeeID = " + editedItem.OwnerTableView.DataKeyValues[editedItem.ItemIndex]["EmployeeID"] );
                                            changedRows[0][column.UniqueName] = editorValue;
                                            this.EmployeesData.Tables["Employees"].AcceptChanges();
                                        }
                                        catch(Exception ex)
                                        {
                                            RadGrid1.Controls.Add(new LiteralControl ("&lt;strong&gt;Unable to set value of column '" + column.UniqueName + "'&lt;/strong&gt; - " + ex.Message));
                                            e.Canceled = true;
                                            break;
                                        }
                                    }
                                }
                            }
                    }
                </code>
            	<code lang="VB" title="Update data with editable columns">
            Private Sub RadGrid1_UpdateCommand(ByVal source As System.Object, ByVal e As Telerik.Web.UI.GridCommandEventArgs) Handles RadGrid1.UpdateCommand
             
                        Dim editedItem As GridEditableItem = CType(e.Item, GridEditableItem)
                        Dim editMan As GridEditManager = editedItem.EditManager
             
                        Dim column As GridColumn
             
                        For Each column In e.Item.OwnerTableView.Columns
                            If Typeof column Is IGridEditableColumn Then
                                Dim editableCol As IGridEditableColumn = CType(column, IGridEditableColumn)
                                If (editableCol.IsEditable) Then
                                    Dim editor As IGridColumnEditor = editMan.GetColumnEditor(editableCol)
             
                                    Dim editorType As String = CType(editor, Object).ToString()
                                    Dim editorText As String = "unknown"
                                    Dim editorValue As Object = Nothing
             
                                    If (Typeof editor Is GridTextColumnEditor) Then
                                        editorText = CType(editor, GridTextColumnEditor).Text
                                        editorValue = CType(editor, GridTextColumnEditor).Text
                                    End If
             
                                    If (Typeof editor Is GridBoolColumnEditor) Then
                                        editorText = CType(editor, GridBoolColumnEditor).Value.ToString()
                                        editorValue = CType(editor, GridBoolColumnEditor).Value
                                    End If
             
                                    If (Typeof editor Is GridDropDownColumnEditor) Then
                                        editorText = CType(editor, GridDropDownColumnEditor).SelectedText &amp; "; " &amp; CType(editor, GridDropDownColumnEditor).SelectedValue
                                        editorValue = CType(editor, GridDropDownColumnEditor).SelectedValue
                                    End If
             
                                    Try
                                        Dim changedRows As DataRow() = Me.EmployeesData.Tables("Employees").Select("EmployeeID = " &amp; editedItem.OwnerTableView.DataKeyValues(editedItem.ItemIndex)("EmployeeID"))
                                        changedRows(0)(column.UniqueName) = editorValue
                                        Me.EmployeesData.Tables("Employees").AcceptChanges()
                                    Catch ex As Exception
                                        RadGrid1.Controls.Add(New LiteralControl("&lt;strong&gt;Unable to set value of column '" &amp; column.UniqueName &amp; "'&lt;/strong&gt; - " + ex.Message))
                                        e.Canceled = True
                                    End Try
             
                                End If
                            End If
                        Next
                    End Sub
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/DataEditing/EditModes/DefaultCS.aspx" cat="RadGrid ">Using column editors</seealso>
        </member>
        <member name="M:Telerik.Web.UI.IGridEditableColumn.ShouldExtractValues(Telerik.Web.UI.GridEditableItem)">
            <summary>
            Get value based on the current IsEditable state, item edited state and ForceExtractValue setting.
            </summary>
            <param name="item">item to check to extract values from</param>
        </member>
        <member name="M:Telerik.Web.UI.IGridEditableColumn.FillValues(System.Collections.IDictionary,Telerik.Web.UI.GridEditableItem)">
            <summary>
            Extracts the values from the editedItem and fills the names/values pairs for each data-field edited by the column in the newValues dictionary.
            </summary>
            <param name="newValues">dictionary to fill. This param should not be null (Nothing in VB.NET)</param>
            <param name="editableItem">the GridEditableItem to extract values from</param>
        </member>
        <member name="P:Telerik.Web.UI.IGridEditableColumn.IsEditable">
            <summary>
            Get whether a column is currently read-only
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IGridEditableColumn.ColumnEditor">
            <summary>
            Gets the column editor instance for this column
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IGridEditableColumn.Column">
            <summary>
            Gets the GridColumn instance implementing this interface
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IGridEditableColumn.ForceExtractValue">
            <summary>
            Force RadGrid to extract values from EditableColumns that are ReadOnly (or IsEditable is false).
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridEditableColumn.FillValues(System.Collections.IDictionary,Telerik.Web.UI.GridEditableItem)">
            <summary>
            Extracts the values from the editedItem and fills the names/values pairs for each data-field edited by the column in the newValues dictionary.
            </summary>
            <param name="newValues">dictionary to fill. This param should not be null (Nothing in VB.NET)</param>
            <param name="editableItem">the GridEditableItem to extract values from</param>
        </member>
        <member name="M:Telerik.Web.UI.GridEditableColumn.ShouldExtractValues(Telerik.Web.UI.GridEditableItem)">
            <summary>
            Get value based on the current IsEditable state, item edited state and ForceExtractValue setting.
            </summary>
            <param name="item">item to check to extract values from</param>
        </member>
        <member name="P:Telerik.Web.UI.GridEditableColumn.CurrentColumnEditor">
            <summary>
            Get the current colum editor. If the column editor is not assigned at the moment the column will search for the ColumnEditorID on the page or should
            create its default column editor
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditableColumn.ConvertEmptyStringToNull">
            <summary>
            Convert the emty string to null when extracting values for inserting, updating, deleting
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditableColumn.ReadOnly">
            <summary>
            Gets or sets the readonly status of the column. The column will be displayed in
            browser mode (unless its <strong>Visible</strong> property is <strong>false</strong>)
            but will not appear in the edit-form.
            </summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether a column is
            ReadOnly.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridEditableColumn.ForceExtractValue">
            <summary>
            Force RadGrid to extract values from EditableColumns that are ReadOnly (or IsEditable is false).
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridBoundColumn.Initialize">
            <summary>Resets the <strong>GridBoundColumn</strong> to its initial state.</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridBoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,Telerik.Web.UI.GridItem)">
            <summary>
            Resets the specified cell in the <strong>GridBoundColumn</strong> to its initial
            state.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridBoundColumn.DataField">
            <summary>
            	<para>Gets or sets the field name from the specified data source to bind to the
            <strong>GridBoundColumn</strong>.</para>
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the data field from the data
            source, from which to bind the column.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridBoundColumn.Aggregate">
            <summary>
            	<para>Gets or sets the field name from the specified data source to bind to the
            <strong>GridBoundColumn</strong>.</para>
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the data field from the data
            source, from which to bind the column.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridBoundColumn.HtmlEncode">
            <summary>
            Sets or gets whether cell content must be encoded. Default value is
            <em>false</em>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridBoundColumn.EmptyDataText">
            <summary>
            Sets or gets default text when column is empty. Default value is
            "&amp;nbsp;"
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridBoundColumn.MaxLength">
            <summary>
            Gets or Sets an integer, specifying the maximum number of characters, which will
            be accepted in the edit textbox for the field, when in edit mode.
            </summary>
            <value>
            An <strong><em>integer</em></strong>, specifying the maximum number of
            characters, which the item will accept when in edit mode.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridBoundColumn.DataFormatString">
            <remarks>
            	<div id="ctl00_LibFrame_MainContent_ctl22">
            		<para>Use the <b>DataFormatString</b> property to provide a custom format for the items
            in the column.</para>
            		<para>The data format string consists of two parts, separated by a colon, in the form {
            <span class="parameter">A</span> : <span class="parameter">Bxx</span> }.<br/>
            For example, the formatting string {0:C2} displays a currency formatted number with two
            decimal places.</para>
            		<para><strong>Note:</strong> The entire string must be enclosed in braces to indicate
            that it is a format string and not a literal string. Any text outside the braces is
            displayed as literal text.</para>
            		<para>The value before the colon (<span class="parameter">A</span> in the general
            example) specifies the parameter index in a zero-based list of parameters.</para>
            		<div class="alert">
            			<para><strong>Note:</strong> This value can only be set to 0 because there is only one
            value in each cell.</para></div>
            		<para>The value before the colon (<span class="parameter">A</span> in the general
            example) specifies the parameter index in a zero-based list of parameters.</para>
            		<para>The character after the colon (<span class="parameter">B</span> in the general
            example) specifies the format to display the value in. The following table lists the
            common formats.</para>
            		<div class="labelheading">
            			<div class="tableSection">
            				<list type="table">
            					<listheader>
            						<term>
            							<para>Format character</para></term>
            						<description>
            							<para>Description</para></description></listheader>
            					<item>
            						<term>
            							<para><b>C</b></para></term>
            						<description>
            							<para>Displays numeric values in currency format.</para></description></item>
            					<item>
            						<term>
            							<para><b>D</b></para></term>
            						<description>
            							<para>Displays numeric values in decimal format.</para></description></item>
            					<item>
            						<term>
            							<para><b>E</b></para></term>
            						<description>
            							<para>Displays numeric values in scientific (exponential)
            format.</para></description></item>
            					<item>
            						<term>
            							<para><b>F</b></para></term>
            						<description>
            							<para>Displays numeric values in fixed format.</para></description></item>
            					<item>
            						<term>
            							<para><b>G</b></para></term>
            						<description>
            							<para>Displays numeric values in general format.</para></description></item>
            					<item>
            						<term>
            							<para><b>N</b></para></term>
            						<description>
            							<para>Displays numeric values in number format.</para></description></item>
            					<item>
            						<term>
            							<para><b>X</b></para></term>
            						<description>
            							<para>Displays numeric values in hexadecimal
            format.</para></description></item></list></div>
            			<div class="tableSection">
            				<para><strong>Note:</strong> The format character is not case-sensitive, except for
            <b>X</b>, which displays the hexadecimal characters in the case specified.</para></div>
            			<div class="alert">The value after the format character
            (<span class="parameter">xx</span> in the general example) specifies the number of
            significant digits or decimal places to display.</div>
            			<para>For more information on formatting strings, see
            <a href="http://msdn2.microsoft.com/en-us/library/26etazsy(VS.80).aspx">Formatting
            Overview</a> (external link to MSDN library).</para></div></div>
            </remarks>
            <summary>
            Gets or sets the string that specifies the display format for items in the
            column.
            </summary>
            <value>
            A <strong><em>string</em></strong> that specifies the display format for items in
            the column
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridBoundColumn.AllowFiltering">
            <summary>Gets or sets whether the column data can be filtered.</summary>
            <value>A boolean value, indicating whether the column data can be filtered.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridBoundColumn.AllowSorting">
            <summary>Gets or sets a whether the column data can be sorted.</summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether the column data can
            be sorted.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridBoundColumn.IsEditable">
            <summary>
            Gets a boolean value, indicating whether the column is editable. A ReadOnly
            column will return a false value for this property. The property is readOnly.
            </summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether the column is
            editable
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridButtonColumnType">
            <summary>Defines what button will be rendered in a GridButtonColumn</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridButtonColumnType.LinkButton">
            <summary>Renders a standard hyperlink button.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridButtonColumnType.PushButton">
            <summary>Renders a standard button.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridButtonColumnType.ImageButton">
            <summary>Renders an image that acts like a button.</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridConfirmDialogType">
            <summary>Defines what kind of confirm dialog will be used in a GridButtonColumn</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridConfirmDialogType.Classic">
            <summary>Standard browser confirm dialog.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridConfirmDialogType.RadWindow">
            <summary>RadWindow confirm dialog.</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridButtonColumn">
            <summary><para>It displays a button for each item in the column.</para></summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <remarks>
            	<para>
                    This column renderes a button of the specified ButtonType in each corresponding
                    cell of the items of type <see cref="T:Telerik.Web.UI.GridDataItem"/> and
                    <see cref="T:Telerik.Web.UI.GridEditFormItem"/>. You can use this buttons to fire command
                    events that can be handeled in <see cref="E:Telerik.Web.UI.RadGrid.ItemCommand"/> event
                    handler. This, in combination with the
                    <a href="grdCommandReference.html">event
                    bubbling mechanism</a> in Telerik RadGrid, allows you to create a
                    column of custom button controls, such as <strong>Add</strong>,
                    <strong>Remove</strong>, <strong>Select</strong> or <strong>Edit</strong>
                    buttons.
                </para>
            	<para>The available buttons types are:
                <b>PushButton,</b><strong>LinkButton</strong> and <strong>ImageButton</strong>.
                Telerik RadGrid comes with two types of button columns:</para>
            	<list type="bullet">
            		<item><strong>Select</strong> - when a button in this column is pressed, it
                    will select the whole row. The <strong>Select</strong> column below uses a
                    <strong>PushButton</strong>.</item>
            		<item><strong>Remove selection</strong> - when a button in this column is
                    pressed, it will delete the row. The <strong>Remove selection</strong> column
                    below uses a <strong>LinkButton</strong>.</item>
            	</list>
            </remarks>
            <example>
            	<pre>
                &lt;radG:GridButtonColumn FooterText="PushButtonColumn&lt;br/&gt;footer" DataTextFormatString="Select {0}"<br/>        ButtonType="PushButton" UniqueName="column" HeaderText="PushButton&lt;br/&gt;Column"   <br/>        CommandName="Select" DataTextField="CustomerID"&gt;<br/>    &lt;/radG:GridButtonColumn&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid Manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid Manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid Manual">Using columns</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridButtonColumn.#ctor">
            <summary>Constructs a new <strong>GridButtonColumn</strong> object.</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridButtonColumn.Initialize">
            <summary>
            	<para>The <b>Initialize</b> method is inherited by a derived
            <strong>GridButtonColumn</strong> class. Is is used to reset a column of the derived
            type.</para>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,Telerik.Web.UI.GridItem)">
            <summary>
            	<para>After a call to this method the column should add the corresponding button into
            the cell given, regarding the <strong>inItem</strong> type and column index.</para>
            	<para><strong>Note:</strong> This method is called within RadGrid and is not intended
            to be used directly from your code.</para>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridButtonColumn.Clone">
            <summary>Returns a copy of the GridButtonColumn.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.ConfirmTitle">
            <summary>
            Gets or sets the title that will be shown on the RadWindow confirmation dialog when a button
            in this column is clicked. 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.ButtonType">
            <summary>
            Gets or sets a value indicating the type of the button that will be rendered. The
            type should be one of the specified by the <see cref="T:Telerik.Web.UI.GridButtonColumnType"/>
            enumeration.
            </summary>
            <remarks>
            	<list type="table">
            		<item>
            			<term><strong>LinkButton</strong></term>
            			<description>Renders a standard hyperlink button.</description></item>
            		<item>
            			<term><strong>PushButton</strong></term>
            			<description>Renders a standard button.</description></item>
            		<item>
            			<term><strong>ImageButton</strong></term>
            			<description>Renders an image that acts like a
            button.</description></item></list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.ButtonCssClass">
            <summary>
            Gets or sets the CssClass of the button
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.CommandName">
            <summary>
            Gets or sets a value defining the name of the command that will be fired when a
            button in this column is clicked.
            </summary>
            <remarks>
            	<table style="BORDER-COLLAPSE: collapse" cols="1" width="80%" border="1">
            		<tbody>
            			<tr>
            				<td align="left" width="35%" bgcolor="#CCFF00" colspan="2">
            					<para align="left">Fired By controls within <strong>DataItems</strong> - showing and
            editing data</para></td></tr>
            			<tr>
            				<td align="left" width="35%"><strong>CancelCommandName</strong></td>
            				<td>Represents the Cancel command name. Fires <strong>RadGrid.CancelCommand</strong>
            event and sets <strong>Item.Edit</strong> to <strong>false</strong> for the parent
            Item.</td></tr>
            			<tr>
            				<td align="left" width="35%"><strong>DeleteCommandName</strong></td>
            				<td>Represents the Delete command name. Fires <strong>RadGrid.DeleteCommand</strong>
            event. Under .Net 2.0 performs automatic delete operation and then sets
            <strong>Item.Edit</strong> to <strong>false</strong>.</td></tr>
            			<tr>
            				<td align="left" width="35%"><strong>UpdateCommandName</strong></td>
            				<td>Represents the Update command name. Fires <strong>RadGrid.UpdateCommand</strong>
            event. Under .Net 2.0 performs automatic update operation and then sets
            <strong>Item.Edit</strong> to <strong>false</strong>.</td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>EditCommandName</strong></para></td>
            				<td>Represents the Edit command name. Sets <strong>Item.Edit</strong> to
            <strong>true</strong>.</td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>SelectCommandName</strong></para></td>
            				<td>Represents the Select command name. Sets <strong>Item.Selected</strong> to
            <strong>true</strong>.</td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>DeselectCommandName</strong></para></td>
            				<td>Represents the Deselect command name. <strong>Sets Item.Selected</strong> to
            false.</td></tr>
            			<tr>
            				<td align="left" bgcolor="#CCFF00" colspan="2">
            					<para align="left">Can be fired by controls within any Item</para></td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>InitInsertCommandName</strong></para></td>
            				<td>By default grid renders an image button in the <strong>CommandItem</strong>. Opens
            the insert item.<br/></td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>PerformInsertCommandName</strong></para></td>
            				<td>Fires <strong>RadGrid.InsertCommand</strong> event. Under .Net 2.0 Perfoms
            automatic insert operation and closes the insert item.<br/></td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>RebindGridCommandName</strong></para></td>
            				<td>By default grid renders an image button in the <strong>CommandItem</strong>. Forces
            <strong>RadGrid.Rebind</strong></td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>SortCommandName</strong></para></td>
            				<td>Represents the Sort command name. By default it is fired by image buttons in the
            header item when Sorting is enabled. The argument for the <strong>SortCommand</strong>
            must be the <strong>DataField</strong> name for the <strong>DataField</strong> to be
            sorted.</td></tr></tbody></table>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.CommandArgument">
            <summary>
            Gets or sets an optional parameter passed to the Command event along with the
            associated
            <a href="RadGridNet2~Telerik.Web.UI.GridButtonColumn~CommandName.html">CommandName</a>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.DataTextField">
            <remarks>
            	<para>Use the <strong>DataTextField</strong> property to specify the field name
                from the data source to bind to the
                <span class="179215212-08062006"><strong>Text</strong></span> property of the
                buttons in the
                <strong><span class="179215212-08062006">Grid</span>ButtonColumn</strong> object.
                Binding the column to a field instead of directly setting the <strong>Text</strong>
                property allows you to display different captions for the buttons in the
                <strong><span class="179215212-08062006">Grid</span>ButtonColumn</strong> by using
                the values in the specified field.</para>
            	<para><span class="179215212-08062006"><strong>Tip:</strong> This property is most
                often used in combination with
                <a href="RadGridNet2~Telerik.Web.UI.GridButtonColumn~DataTextFormatString.html">
                DataTextFormatString Property</a>.</span></para>
            </remarks>
            <summary>
            Gets or sets a value from the specified datasource field. This value will then be
            displayed in the <strong>GridBoundColumn</strong>.
            </summary>
            <example>
            	<div class="LanguageSpecific">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap"></td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            	<code lang="CS">
            [ASPX/ASCX]&lt;br/&gt;&lt;br/&gt;&lt;radg:RadGrid id=&lt;font class="string"&gt;"RadGrid1"&lt;/font&gt; runat=&lt;font class="string"&gt;"server"&lt;/font&gt;&gt;&lt;br/&gt;  &lt;MasterTableView AutoGenerateColumns=&lt;font class="string"&gt;"False"&lt;/font&gt;&gt;&lt;br/&gt;    &lt;Columns&gt;&lt;br/&gt;      &lt;radg:GridButtonColumn HeaderText=&lt;font class="string"&gt;"Customer ID"&lt;/font&gt;&lt;font color="red"&gt;DataTextField=&lt;font class="string"&gt;"CustomerID"&lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;font color="red"&gt;DataTextFormatString=&lt;font class="string"&gt;"Edit Customer {0}"&lt;/font&gt;&lt;/font&gt; ButtonType=&lt;font class="string"&gt;"LinkButton"&lt;/font&gt; UniqueName=&lt;font class="string"&gt;"ButtonColumn"&lt;/font&gt;&gt;&lt;br/&gt;     &lt;/radg:GridButtonColumn&gt;
                </code>
            	<code lang="CS">
            	</code>
            	<code lang="CS">
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.DataTextFormatString">
            <remarks>
            	<para>Use the <strong>DataTextFormatString</strong> property to provide a custom
                display format for the caption of the buttons in the
                <strong>GridButtonColumn</strong>.</para>
            	<para><span class="179215212-08062006"><strong>Note</strong>:</span> The entire
                string must be enclosed in braces to indicate that it is a format string and not a
                literal string. Any text outside the braces is displayed as literal text.</para>
            </remarks>
            <example>
            	<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            		<tbody>
            			<tr>
            				<td nowrap="nowrap"></td>
            			</tr>
            		</tbody>
            	</table>
            	<code lang="CS">
            [ASPX/ASCX]&lt;br/&gt;&lt;br/&gt;&lt;radg:RadGrid id=&lt;font color="black"&gt;&lt;font class="string"&gt;"RadGrid1"&lt;/font&gt; runat=&lt;font class="string"&gt;"server"&lt;/font&gt;&gt;&lt;br/&gt;  &lt;MasterTableView AutoGenerateColumns=&lt;font class="string"&gt;"False"&lt;/font&gt;&gt;&lt;br/&gt;    &lt;Columns&gt;&lt;br/&gt;      &lt;radg:GridButtonColumn HeaderText=&lt;font class="string"&gt;"Customer ID"&lt;/font&gt;&lt;/font&gt;&lt;font color="red"&gt;DataTextField=&lt;font class="string"&gt;"CustomerID"&lt;/font&gt;&lt;br/&gt;DataTextFormatString=&lt;font class="string"&gt;"Edit Customer {0}"&lt;/font&gt;&lt;/font&gt; ButtonType=&lt;font class="string" color="black"&gt;"LinkButton"&lt;/font&gt; UniqueName=&lt;font color="black"&gt;&lt;font class="string"&gt;"ButtonColumn"&lt;/font&gt;&gt;&lt;br/&gt;     &lt;/radg:GridButtonColumn&gt;&lt;/font&gt;
                </code>
            </example>
            <summary>
            Gets or sets the string that specifies the display format for the caption in each
            button.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.Text">
            <summary>Gets or sets a value indicating the text that will be shown for a button.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.ImageUrl">
            <summary>
            Gets or sets a value indicating the URL for the image that will be used in a
            Image button. <see cref="P:Telerik.Web.UI.GridButtonColumn.ButtonType"/> should be set to
            <strong>ImageButton</strong>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.ConfirmText">
            <summary>
            Gets or sets the text that will be shown on the confirmation dialog when a button
            in this column is clicked. The prompt is automatically enabled when this property is
            set.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.Groupable">
            <summary>
            Gets or sets a value indicating whether this column can be used for grouping. If
            set to false the column header cannot be dragged to the
            <see cref="!:GroupPanel"/>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.IsEditable">
            <summary>Gets the status of <see cref="P:Telerik.Web.UI.GridButtonColumn.ShowInEditForm"/> property.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridButtonColumn.ShowInEditForm">
            <summary>
            	<para>
                    If the corresponding <see cref="T:Telerik.Web.UI.GridTableView"/> is in edit mode
                    <see cref="F:Telerik.Web.UI.GridEditMode.InPlace"/> specifies whether this column will
                    render an Enabled=true button control, when the corresponding item is edit
                    mode.
                </para>
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridCheckBoxColumn">
            <summary>
            Displays a <b>CheckBox</b> control for each item in the column. This allows you
            to edit for example <strong>Boolean</strong> field(s) from data table(s).
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <remarks>
            This column is editable (implements the <strong>IGridEditableColumn</strong>
            interface) and provides by default <strong>GridBoolColumnEditor</strong>, used for
            editing the text in each item. You can persist the checked state of a checkbox, if you
            use it within <strong>GridTemplateColumn</strong>
            (<a href="gridPersistCheckBoxStateInGridTemplateColumnOnRebind.html">
            see here</a>).
            </remarks>
            <example>
            	<pre>
                &lt;radG:GridCheckBoxColumn FooterText="CheckBoxColumn footer" UniqueName="Bool" HeaderText="CheckBox&lt;br/&gt;Column"<br/>        DataField="Bool"&gt;<br/>    &lt;/radG:GridCheckBoxColumn&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid Manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid Manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid Manual">Using columns</seealso>
            <seealso cref="!:grdColumnTypes.html#Similarities_Differences_Checkbox" cat="RadGrid Manual">Similarities/Differences between GridCheckBoxColumn and GridTemplateColumn with
            checkbox</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridCheckBoxColumn.DataField">
            <summary>
            	<para>Gets or sets the field name from the specified data source to bind to the
                <strong>column</strong>.</para>
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the data field from the data
            source, from which to bind the column.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridCheckBoxColumn.AllowSorting">
            <summary>Gets or sets a whether the column data can be sorted.</summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether the column data can
            be sorted.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridCheckBoxColumn.AllowFiltering">
            <summary>Gets or sets whether the column data can be filtered.</summary>
            <value>A boolean value, indicating whether the column data can be filtered.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridCheckBoxColumn.IsEditable">
            <summary>
            Gets a boolean value, indicating whether the column is editable. A ReadOnly
            column will return a false value for this property. The property is readOnly.
            </summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether the column is
            editable.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridClientDeleteColumn">
            <summary>
            A special type of GridButtonColumn, including a delete buttons in each row. It
            provides the functionality of erasing records client-side, without making a round trip
            to the server.
            </summary>
            <remarks>
            	<para>This optimizes the performance and the source data is automatically refreshed
                on the subsequent post to the server. The user experience is improved because the
                delete action is done client-side and the table presentation is updated
                immediately.</para>
            	<para>Its <b>ConfirmText</b> property can be assigned like with the default
                GridButtonColumn showing a dialog which allows the user to cancel the
                action.</para>
            </remarks>
            <example>
            	<pre>
            &lt;radG:GridClientDeleteColumn ConfirmText="Are you sure you want to delete the selected row?" HeaderStyle-Width="35px" ButtonType="ImageButton" ImageUrl="~/RadControls/Grid/Skins/WebBlue/Delete.gif" /&gt;
                </pre>
            </example>
            <seealso cref="!:grdClientSideDelete.html" cat="RadGrid Manual">Client-side delete feature</seealso>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid Manual">Grid column types</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Client/ClientDelete/DefaultCS.aspx" cat="Online demos">Client-side delete</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/WebGrid/DefaultCS.aspx" cat="Online demos">Web Grid</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDeleteColumn.ImageUrl">
            <summary>
            Gets or sets a value indicating the URL for the image that will be used in a
            Image button. <see cref="T:Telerik.Web.UI.ButtonType"/> should be set to
            <strong>ImageButton</strong>.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridClientSelectColumn">
            <summary>
            Displays a <strong>Checkbox</strong> control for each item in the column. This
            allows you to select grid rows client-side automatically when you change the status of
            the checkbox to checked.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Column types</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Client/Selecting/DefaultCS.aspx" cat="Online demos">Client selection</seealso>
            <remarks>
            If you choose <strong>AllowMultiRowSelection = true</strong> for the grid, a
            checkbox will be displayed in the column header to toggle the checked/selected stated
            of the rows simultaneously (according to the state of that checkbox in the
            header).<br/>
            	<br/>
            To enable this feature you need to turn on the client selection of the grid
            (<strong>ClientSettings -&gt; Selecting -&gt; AllowRowSelect = true</strong>).
            </remarks>
            <example>
            	<pre>
            &lt;radG:GridClientSelectColumn UniqueName="CheckboxSelectColumn" HeaderText="CheckboxSelect column &lt;br /&gt;" /&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid manual">Using columns</seealso>
        </member>
        <member name="T:Telerik.Web.UI.GridColumnCollection">
            <summary>
            The collection of columns of RadGrid or its tables. Accessible through
            <strong>Columns</strong> property of RadGrid and GridTableView (MasterTableView)
            classes.
            </summary>
            <remarks>
            Its items are of the available Grid
            <a href="grdColumnTypes.html">column
            types</a>.
            </remarks>
            <example>
            	<code lang="CS" title="Adding columns into Columns collection of MasterTableView">
            GridBoundColumn boundColumn;
                        boundColumn = new GridBoundColumn();
                        boundColumn.DataField = "CustomerID";
                        boundColumn.HeaderText = "CustomerID";
                        RadGrid1.MasterTableView.Columns.Add(boundColumn);
             
                        boundColumn = new GridBoundColumn();
                        boundColumn.DataField = "ContactName";
                        boundColumn.HeaderText = "Contact Name";
                        RadGrid1.MasterTableView.Columns.Add(boundColumn);
             
                        RadGrid1.MasterTableView.Columns.Add( new GridExpandColumn() );
                </code>
            	<code lang="VB" title="Adding columns into Columns collection of MasterTableView">
            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn()
            boundColumn.DataField = "CustomerID"
            boundColumn.HeaderText = "CustomerID"
            RadGrid1.MasterTableView.Columns.Add(boundColumn)
             
            boundColumn = New GridBoundColumn()
            boundColumn.DataField = "ContactName"
            boundColumn.HeaderText = "Contact Name"
            RadGrid1.MasterTableView.Columns.Add(boundColumn)
             
            RadGrid1.MasterTableView.Columns.Add(New GridExpandColumn())
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.Add(Telerik.Web.UI.GridColumn)">
            <summary>Adds a column object to the GridColumnCollection.</summary>
            <param name="column">The GridColumn object to add to the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.Contains(System.Object)">
            <summary>
            Determines whether the <b>CridColumnCollection</b> contains the value specified
            by the given <strong>GridColumn</strong> object.
            </summary>
            <returns>
            	<strong>true</strong> if the <b>GridColumn</b> is found in the
            <b>GridColumnCollection</b>; otherwise, <b>false</b>.
            </returns>
            <param name="Val">GridColumn object to locate in the <strong>GridColumnCollection</strong>.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific column in the
            <b>GridColumnCollection</b>.
            </summary>
            <returns>
            The index of <span class="parameter">value</span> if found in the collection;
            otherwise, -1.
            </returns>
            <param name="Val">The object to locate in the <strong>GridColumnCollection</strong>.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a column to the <strong>GridColumnCollectino</strong> at the specified
            index.
            </summary>
            <param name="Index">
            The zero-based index at which <span class="parameter">column</span> should be
            inserted.
            </param>
            <param name="Val">
            	<para>
                    The <see cref="T:Telerik.Web.UI.GridColumn"/> to insert into the collection.
                </para>
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of an object from the
            <b>GridColumnCollection</b>.
            </summary>
            <param name="Val">The object to remove from the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.IndexOf(Telerik.Web.UI.GridColumn)">
            <summary>
            Determines the index of a specific column in the
            <b>GridColumnCollection</b>.
            </summary>
            <returns>
            The index of <span class="parameter">value</span> if found in the collection;
            otherwise, -1.
            </returns>
            <param name="column">
                The <see cref="T:Telerik.Web.UI.GridColumn"/> to locate in the
                <strong>GridColumnCollection</strong>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.Remove(Telerik.Web.UI.GridColumn)">
            <summary>
            Removes the first occurrence of a column from the
            <b>GridColumnCollection</b>.
            </summary>
            <param name="column">The column to remove from the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <strong>GridColumnCollection</strong> item at the specified
            index.
            </summary>
            <param name="index"><para>The zero-based index of the item(column) to remove.</para></param>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.FindByUniqueName(System.String)">
            <summary>
            Gets the first column with UniqueName found. Throws GridException if no column is found.
            </summary>
            <param name="UniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.FindByUniqueNameSafe(System.String)">
            <summary>
            Gets the first column with UniqueName found. Returns null if no column is found.
            </summary>
            <param name="UniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.FindByDataField(System.String)">
            <summary>
            Gets the first column found bound to the DataField. Throws GridException if no column is bound to this DataField
            </summary>
            <param name="DataField"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.FindByDataFieldSafe(System.String)">
            <summary>
            Gets the first column found bound to the DataField. Returns null is no column is bound to this DataField
            </summary>
            <param name="DataField"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.GridColumnCollection.FindAllByDataField(System.String)">
            <summary>
            Gets all columns found bound to the DataField specified. Returns null is no column is bound to this DataField
            </summary>
            <param name="DataField"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Web.UI.GridColumnCollection.Count">
            <summary>Gets the number of columns added programmatically or declaratively.</summary>
            <remarks>
                Note that this is not the actual number of column in a
                <see cref="T:Telerik.Web.UI.GridTableView"/>. See also
                <see cref="P:Telerik.Web.UI.GridTableView.RenderColumns"/>
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.RenderColumns">RenderColumns Property (Telerik.Web.UI.GridTableView)</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridColumnCollection.Item(System.Int32)">
            <remarks>
            If the column/detail table structure is created after the control has been
            initialized (indicated by <strong>RadGrid.Init</strong> event ) the state of the
            columns/detail tables may have been lost. This happens when properties have been set to
            <strong>GridColumn</strong>/<strong>GridTableView</strong> instance before it has been
            added to the corresponding collection of
            <strong>Columns</strong>/<strong>DetailTables</strong>. Then a
            <strong>GridException</strong> is thrown with message: <em>"Failed accessing
            GridColumn by index. Please verify that you have specified the structure of RadGrid
            correctly."</em>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Telerik.Web.UI.GridDateTimeColumn" -->
        <member name="T:Telerik.Web.UI.GridDropDownColumn">
            <remarks>
            	<para>Here is the mechanism which Telerik RadGrid uses to present
                values for <strong>GridDropDownColumn</strong>. Consider the snippet below:</para>
            	<para class="example">&lt;radg:GridDropDownColumn<br/>
                 UniqueName="LevelID"<br/>
            		<strong>ListDataMember="Level"</strong><br/>
            		<strong>ListTextField="Description"</strong><br/>
            		<strong>ListValueField="LevelID"</strong><br/>
                 HeaderText="LevelID"<br/>
            		<strong>DataField="LevelID"</strong><br/>
                /&gt;</para>
            	<para>
            		<br/>
                    As you can see, a requirement for the proper functioning of
                    <strong>GridDropDownColumn</strong> is that <strong><u>all column
                    values</u></strong> referenced by the <see cref="P:Telerik.Web.UI.GridDropDownColumn.DataField">DataField</see>
                    attribute match the column values referenced by the
                    <see cref="P:Telerik.Web.UI.GridDropDownColumn.ListValueField">ListValueField</see> attribute.<br/>
                    If there are values in the LevelID column of the LevelID table which do not
                    have corresponding equal values in the LevelID column of the Level table, then
                    the grid will display the default first value from the Description column as it
                    will not "know" what is the correct field.
                </para>
            </remarks>
            <summary>
            Displays a <b>DropDown</b> control for each item in the column. This allows you
            to edit for example lookup field(s) from data table(s).
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid manual">Using columns</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.ListDataMember">
            <summary>
            	<para>The <strong>ListDataMember</strong> property points to the data table (part
                of the dataset used for grid data-source) which is the source for the
                <strong>GridDropDownColumn</strong> generation.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.DataSourceID">
            <summary>
            A string, specifying the ID of the datasource control, which will be used to
            populate the dropdown with data.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the ID of the datasource control,
            which will be used to populate the dropdown with data.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.ListTextField">
            <summary>
            	<para>The <strong>ListTextField</strong> points to the column in the data table
                from which the grid will extract the values for the dropdown.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.ListValueField">
            <summary>
            	<para>The <strong>ListValueField</strong> points to the column in the data table
                which will be used as a pointer to retrieve the items for the dropdown in the
                <strong>GridDropDownColumn</strong>.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.DataField">
            <summary>
            	<para>The <strong>DataField</strong> property points to the column in the grid
                data-source containing values which will be compared at a later stage with the
                values available in the column, referenced by the
                <strong>%</strong>ListValueField:ListValueField% property.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.EnableEmptyListItem">
            <summary>
            A Boolean value, indicating whether the dropdown column will be bound to a
            default value/text when there is no data source specified, from which to fetch the
            data.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, specifying whether the dropdown column
            accepts EmptyListItemText and EmptyListItemValue strings.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.EmptyListItemText">
            <summary>
            A string, specifying the text to be displayed in normal mode, when there is no
            Data Source specified for the column. In edit mode, this value is rendered as a
            dropdown list item. When in edit mode, and there is a valid DataSource specified for
            the control, this value is appended as the first item of the dropdown box.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the text to be displayed in
            normal/edit mode, when there is no Data Source specified for the column.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.EmptyListItemValue">
            <summary>
                A string value, representing the value, associated with the
                <see cref="P:Telerik.Web.UI.GridDropDownColumn.EmptyListItemText"/>.
            </summary>
            <value>
                A <strong><em>string</em></strong> value, representing the value, associated with
                the <see cref="P:Telerik.Web.UI.GridDropDownColumn.EmptyListItemText"/>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.DropDownControlType">
            <summary>
             Gets or sets the type of the dropdown control associated with the column.
            </summary>
            <value>
                Returns a value from the GridDropDownColumnControlType enumeration; default value is RadComboBox.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.IsEditable">
            <summary>
            A Boolean value, indicating whether a dropdown column is editable. If it is
            editable, it will be represented as an active dropdown box in edit mode.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether a dropdown column
            is editable.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.AllowSorting">
            <summary>Gets or sets a whether the column data can be sorted.</summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether the column data can
            be sorted.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridDropDownColumn.AllowFiltering">
            <summary>
            A Boolean property, which specifies whether filtering will be enabled for the
            column.
            </summary>
            <value>
            A <strong><em>Bollean</em></strong> value, indicating whether a particular
            dropdown column can be filtered.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridForceExtractValues">
            <summary>
            Force RadGrid to extract values from EditableColumns that are ReadOnly.
            See also the <see cref="M:Telerik.Web.UI.GridTableView.ExtractValuesFromItem(System.Collections.IDictionary,Telerik.Web.UI.GridEditableItem)"/> method.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridForceExtractValues.None">
            <summary>
            No values would be extracted from ReadOnly column
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridForceExtractValues.InBrowseMode">
            <summary>
            Values will be extracted only when an item is NOT in edit mode
            </summary>        
        </member>
        <member name="F:Telerik.Web.UI.GridForceExtractValues.InEditMode">
            <summary>
            Values will be extracted only when an item is in edit mode
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridForceExtractValues.Always">
            <summary>
            Values will be extracted in all cases.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridEditCommandColumn">
            <summary>
            Initially only the [Edit] button is shown. When it is pressed, the [Update] and
            [Cancel] appear at its place and the cells on this row become editable.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/WebGrid/DefaultCS.aspx" cat="Online demos">Web Grid</seealso>
            <example>
            	<pre>
            &lt;radg:GridEditCommandColumn ButtonType="ImageButton" UpdateImageUrl="..\Img\Update.gif"<br/>    EditImageUrl="..\Img\Edit.gif" InsertImageUrl="..\Img\Insert.gif"<br/>    CancelImageUrl="..\Img\Cancel.gif" UniqueName="EditCommandColumn"&gt;<br/>&lt;/radg:GridEditCommandColumn&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid manual">Using columns</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridEditCommandColumn.ButtonType">
            <summary>
            Gets or sets a value indicating what type of buttons will be used in the
            <strong>GridEditCommandColumn</strong> items.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditCommandColumn.CancelText">
            <summary>
            Gets or sets a string representing the text that will be used for the Cancel
            button, in the Edit/Insert form.
            </summary>
            <value>string, representing the text that will be used for the Cancel button.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridEditCommandColumn.EditText">
            <value>string, representing the text that will be used for the Edit button.</value>
            <summary>
            Gets or sets a string, representing the text of the edit linkbutton, which is
            located in the GridEditCommandColumn, and which will replace the default "Edit"
            text.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditCommandColumn.UpdateText">
            <value>
            A <strong><em>string</em></strong>, representing the text that will be used for
            the Update button.
            </value>
            <summary>
            Gets or sets a string, representing the text that will be used for the Update
            button.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditCommandColumn.InsertText">
            <value>
            A <strong><em>string</em></strong>, representing the text that will be used for
            the Insert button.
            </value>
            <summary>
            Gets or sets a string, representing a text, which will be displayed instead of
            the default "Insert" text for the GridEditFormInsertItem item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditCommandColumn.InsertImageUrl">
            <summary>
            Gets or sets the URL for the image that will be used to fire the Insert command.
            This property should be used in conjunction with <strong>ButtonType</strong> set to
            <strong>ImageButton</strong>.
            </summary>
            <value>string, representing the URL of the image that is used.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridEditCommandColumn.UpdateImageUrl">
            <summary>
                Gets or sets the URL for the image that will be used to fire the Update command.
                This property should be used in conjunction with <see cref="P:Telerik.Web.UI.GridEditCommandColumn.ButtonType"/> set
                to <strong>ImageButton</strong>.
            </summary>
            <value>string, representing the URL of the image that is used.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridEditCommandColumn.EditImageUrl">
            <value>
            A <strong><em>string</em></strong>, representing the URL of the image that is
            used.
            </value>
            <summary>
            Gets or sets the URL for the image that will be used to fire the Edit command.
            This property should be used in conjunction with <strong>ButtonType</strong> set to
            <strong>ImageButton</strong>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditCommandColumn.CancelImageUrl">
            <commentsfrom cref="P:Telerik.Web.UI.GridEditCommandColumn.EditImageUrl" filter="##VALUE"/>
            <summary>
            A string, representing the url path to the image that will be used instead of the
            default cancel linkbutton, in the EditForm.
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing the url path to the image that
            will be used instead of the default cancel linkbutton, in the EditForm.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridEditCommandColumn.Groupable">
            <commentsfrom cref="P:Telerik.Web.UI.GridColumn.Groupable" filter=""/>
        </member>
        <member name="P:Telerik.Web.UI.GridEditCommandColumn.UniqueName">
            <summary>
            Gets or sets a unique name for this column. The unique name can be used to
            reference particular columns, or cells within grid rows.
            </summary>
            <value>
            	<para>A <strong><em>string</em></strong>, representing the Unique name of the
                column.</para>
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridExpandColumn">
            <summary>
            This column appears when the grid has a hierarchical structure, to facilitate the
            expand/collapse functionality. The expand column is always placed in front of all other
            grid content columns and can not be moved.
            </summary>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid Manual">Column Types</seealso>
            <seealso cref="!:grdHideExpandCollapseImagesWhenNoRecords.html" cat="RadGrid Manual">How to hide images of ExpandCollapse column when no records</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridExpandColumn.ExpandImageUrl">
            <summary>
            Gets or sets a string, specifying the URL to the image, which will be used
            instead of the default Expand image for the GridGroupSplitterColumn (the plus
            sign).
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the URL to the image, which will
            be used instead of the default Expand image for the GridGroupSplitterColumn
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridExpandColumn.CollapseImageUrl">
            <summary>
            Gets or sets a string, specifying the URL to the image, which will be used
            instead of the default Collapse image for the GridGroupSplitterColumn (the minus
            sign).
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the URL to the image, which will
            be used instead of the default Collapse image for the GridGroupSplitterColumn
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridExpandColumn.ButtonType">
            <summary>
            Gets a Telerik.Web.UI.GridExpandColumnType value, indicating the type of the
            button. The button of the GridExpandColumn is always of type ImageButton.
            </summary>
            <value>
            A Telerik.Web.UI.GridExpandColumnType value, indicating the type of the
            button.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridExpandColumn.UniqueName">
            <summary>
                Gets or sets a string, specifying the Unique name of the column. The default value
                is "ExpandColumn". <script type="text/javascript">
            	</script>
            	<span id="dxCrLf"></span>
            	<span id="dxCrLf"></span> function
                GridCreated()<span id="dxCrLf"></span> { <span id="dxCrLf"></span>
            	<span id="dxCrLf"></span> } <span id="dxCrLf"></span>
            	<span id="dxCrLf"></span>
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the Unique name of the
            column.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridExpandColumn.Groupable">
            <summary>
            Gets a <strong><em>Boolean</em></strong> value indicating whether the
            GridGroupSplitterColumn is groupable. This value is always false.
            </summary>
            <value>
            Gets a <strong><em>Boolean</em></strong> value indicating whether the
            GridGroupSplitterColumn is groupable.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridExpandColumn.Reorderable">
            <summary>
            Gets a Boolean value, indicating whether the GridExpandColumn is reorderable.
            This value is always false, due to the specificity of the column, which should always
            be positioned first.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether the
            GridExpandColumn is reorderable.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridExpandColumn.Resizable">
            <summary>
            Gets a Boolean value, indicating whether the GridExpandColumn is resizable.
            This value is always false, due to the specificity of the column, which should always
            be positioned first.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether the
            GridExpandColumn is resizable.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridExpandColumn.Visible">
            <summary>
            Gets a Boolean value, indicating whether the GridExpandColumn is visible.
            This value is always false, due to the specificity of the column.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether the
            GridExpandColumn is visible.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridExpandColumn.CommandName">
            <summary>
                Gets or sets a string, representing the CommandName of the GridExpandColumn. The
                command name's default value is "ExpandCollapse". It can be used to determine the
                type of command in the ItemCommand event handler. <script type="text/javascript">
            	</script>
            	<span id="dxCrLf"></span>
            	<span id="dxCrLf"></span> function
                GridCreated()<span id="dxCrLf"></span> { <span id="dxCrLf"></span>
            	<span id="dxCrLf"></span> } <span id="dxCrLf"></span>
            	<span id="dxCrLf"></span>
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing the CommandName of the
            GridExpandColumn.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridGroupSplitterColumn">
            <summary>
            This column appears when grouping is enabled, to facilitate the expand/collapse
            functionality. The group splitter column is always placed first and can not be
            moved.
            </summary>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GroupBy/OutlookStyle/DefaultCS.aspx" cat="Online demos">Grouping demo with GridGroupSplitterColumn</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupSplitterColumn.ExpandImageUrl">
            <summary>
            Gets or sets a string, specifying the URL to the image, which will be used
            instead of the default Expand image for the GridGroupSplitterColumn (the plus
            sign).
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the URL to the image, which will
            be used instead of the default Expand image for the GridGroupSplitterColumn
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupSplitterColumn.CollapseImageUrl">
            <summary>
            Gets or sets a string, specifying the URL to the image, which will be used
            instead of the default Collapse image for the GridGroupSplitterColumn (the minus
            sign).
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the URL to the image, which will
            be used instead of the default Collapse image for the GridGroupSplitterColumn
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupSplitterColumn.Groupable">
            <summary>
            Gets a <strong><em>Boolean</em></strong> value indicating whether the
            GridGroupSplitterColumn is groupable. This value is always false.
            </summary>
            <value>
            Gets a <strong><em>Boolean</em></strong> value indicating whether the
            GridGroupSplitterColumn is groupable.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupSplitterColumn.CorrespondingExpression">
            <exclude/>
            <excludetoc/>
            <summary>This property is for internal usage.</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridHeaderButtonType">
            <summary>
            	<para>An enumeration, used to get/set the button type of the headers of the
                columns. The default value is LinkButton. The possible values are:</para>
            	<list type="bullet">
            		<item>LinkButton</item>
            		<item>PushButton</item>
            		<item>TextButton</item>
            	</list>
            	<para>If set to a value other than LinkButton, the property is only honored when
                sorting is enabled.</para>
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridHyperLinkColumn">
            <summary>
            Each row in a <strong>Hyperlink</strong> column will contain a predefined
            hyperlink. This link is not the same for the whole column and can be defined for each
            row individually.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <remarks>
            	<para>The content of the column can be bound to a field in a data source or to a
                static text. You can customize the look of the links by
                <a href="grdSkins.html#CSSClasses">using
                CSS classes</a>.</para>
            	<para>You can set multiple fields to a <strong>GridHyperlinkColumn</strong> through
                its <strong>DataNavigateUrlFields</strong> property. These fields can later be used
                when setting the <strong>DataNavigateUrlFormatString</strong> property and be part
                of a query string:</para>
            	<div class="LanguageSpecific" id="Code_VB" style="DISPLAY: block">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code inline="true">
            &lt;radG:GridHyperLinkColumn<br/>     DataNavigateUrlFields= <font color="black"><font class="string">"ProductID,OrderID"</font><br/>     DataNavigateUrlFormatString= <font class="string">"~/Details.aspx?ProductID={0}&amp;OrderID={1}"</font>&gt;<br/>&lt;/radG:GridHyperLinkColumn&gt;</font>
            							</code>
            						</pre>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            </remarks>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid manual">Using columns</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridHyperLinkColumn.DataNavigateUrlFields">
            <summary>
            Gets or sets a string, representing a comma-separated enumeration of DataFields
            from the data source, which will form the url of the windwow/frame that the hyperlink
            will target.
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing a comma-separated enumeration of
            DataFields from the data source, which will form the url of the windwow/frame that the
            hyperlink will target.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridHyperLinkColumn.DataNavigateUrlFormatString">
            <summary>
            Gets or sets a string, specifying the FormatString of the DataNavigateURL.
            Essentially, the DataNavigateUrlFormatString property sets the formatting for the url
            string of the target window or frame.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the FormatString of the
            DataNavigateURL.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridHyperLinkColumn.DataTextField">
            <summary>
            Gets or sets a string, representing the DataField name from the data source,
            which will be used to supply the text for the hyperlink in the column. This text can
            further be customized, by using the DataTextFormatString property.
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing the DataField name from the data
            source, which will be used to supply the text for the hyperlink in the column.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridHyperLinkColumn.DataTextFormatString">
            <summary>
            Gets or sets a string, specifying the format string, which will be used to format
            the text of the hyperlink, rendered in the cells of the column.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the format string, which will be
            used to format the text of the hyperlink, rendered in the cells of the column.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridHyperLinkColumn.NavigateUrl">
            <summary>
            Gets or sets a string, specifying the url, to which to navigate, when a hyperlink
            within a column is pressed. This property will be honored only if the
            DataNavigateUrlFields are not set. If either
            DataNavigateUrlFields are set, they will override the
            NavigateUrl property.
            </summary>
            <value>
            A a <strong><em>string</em></strong>, specifying the url, to which to navigate,
            when a hyperlink within a column is pressed.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridHyperLinkColumn.Target">
            <summary>
            	<para>Sets or gets a string, specifying the window or frame at which to target
                content. The possible values are:</para>
            	<para>_blank - the target URL will open in a new window<br/>
                _self - the target URL will open in the same frame as it was clicked<br/>
                _parent - the target URL will open in the parent frameset<br/>
                _top - the target URL will open in the full body of the window</para>
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the window or frame at which to
            target content.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridHyperLinkColumn.Text">
            <summary>
            Gets or sets a string, specifying the text to be displayed by the hyperlinks in
            the column, when there is no DataTextField specified.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the text to be displayed by the
            hyperlinks in the column, when there is no DataTextField specified.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridHyperLinkColumn.AllowFiltering">
            <summary>
            Gets or sets whether the column data can be filtered. The default value is
            true.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether the column can be
            filtered.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridTemplateColumn">
            <summary>
            Displays each item in the column in accordance with a specified templates (item,
            edit item, header and footer templates). This allows you to provide custom controls in
            the column.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <example>
            	<pre>
            &lt;radG:GridTemplateColumn UniqueName="TemplateColumn" SortExpression="CompanyName"&gt;<br/>    &lt;FooterTemplate&gt;<br/>&lt;img src="Img/image.gif" alt="" style="vertical-align: middle" /&gt;<br/>        Template footer<br/>   
            &lt;/FooterTemplate&gt;<br/>    &lt;HeaderTemplate&gt;<br/>        
            &lt;table id="Table1" cellspacing="0" cellpadding="0" width="300" border="1"&gt;<br/>            &lt;tr&gt;<br/>&lt;td colspan="2" align="center"&gt;<br/>                    &lt;b&gt;Contact details&lt;/b&gt;&lt;/td&gt;<br/>&lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td style="width: 50%" align="center"&gt;<br/> 
            &lt;asp:LinkButton CssClass="Button" Width="140" ID="btnContName" Text="Contact name"<br/> 
            ToolTip="Sort by ContactName" CommandName='Sort' CommandArgument='ContactName'<br/>                       
            runat="server" /&gt;&lt;/td&gt;<br/>                &lt;td style="width: 50%" align="center"&gt;<br/> 
            &lt;asp:LinkButton CssClass="Button" Width="140" ID="btnContTitle" Text="Contact title"<br/>      
            ToolTip="Sort by ContactTitle" CommandName='Sort' CommandArgument='ContactTitle'<br/>      
            runat="server" /&gt;&lt;/td&gt;<br/>            &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>   
            &lt;/HeaderTemplate&gt;<br/>    &lt;ItemTemplate&gt;<br/>      
            &lt;table cellpadding="1" cellspacing="1" class="customTable"&gt;<br/>         
            &lt;tr&gt;<br/>                &lt;td style="width: 50%"&gt;<br/>     
            &lt;/%# Eval("ContactName") /%&gt;<br/>                &lt;/td&gt;<br/> 
            &lt;td style="width: 50%"&gt;<br/>          
            &lt;/%# Eval("ContactTitle") /%&gt;<br/>            
            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>     
            &lt;td colspan="2" align="center"&gt;<br/>                   
            &lt;a href='&lt;/%# "<a href="http://www.google.com/search?hl=en&amp;q">http://www.google.com/search?hl=en&amp;q</a>=" + DataBinder.Eval(Container.DataItem, "ContactName") + "&amp;btnG=Google+Search"/%&gt;'&gt;<br/>   
            &lt;em&gt;Search Google for<br/>                            &lt;/%# Eval("ContactName") /%&gt;<br/> 
            &lt;/em&gt;&lt;/a&gt;<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>&lt;td colspan="2" align="center"&gt;<br/>                    &lt;img src="Img/image.gif" alt="" /&gt;<br/> 
            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>    
            &lt;/ItemTemplate&gt;<br/>&lt;/radG:GridTemplateColumn&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid manual">Using columns</seealso>
            <seealso cref="!:grdCustomizeWithGridTemplateColumn.html" cat="RadGrid manual">Customizing with GridTemplateColumn</seealso>
            <seealso cref="!:gridPersistCheckBoxStateInGridTemplateColumnOnRebind.html" cat="RadGrid Manual - How-To">Persisting CheckBox control state in GridTemplateColumn on Rebind</seealso>
            <remarks>
            	<para>You can view and set templates using the Edit Templates command in grid's
                Smart Tag.</para>
            	<para>You can also create the template columns programmatically and bind the
                controls in the code-behind (see
                <a href="grdProgrammaticCreation.html">Programmatic creation of
                Telerik RadGrid</a>).</para>
            	<para><strong>Note:</strong> Unlike other grid columns, GridTemplateColumn cannot
                be set as read-only.</para>
            </remarks>
            <seealso cref="!:grdProgrammaticCreation.html" cat="RadGrid manual">Programmatic creation</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTemplateColumn.DataField">
            <summary>
            Gets or sets a string, specifying which DataField from the data source the
            control will use to handle the automatic filtering.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying which DataField from the data
            source the control will use to handle the automatic filtering.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridTemplateColumn.AllowFiltering">
            <summary>
            Gets or sets whether the column data can be filtered. The default value is
            true.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether the column can be
            filtered.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridTemplateColumn.EditItemTemplate">
            <summary>
            Gets or sets the ItemTemplate, which is rendered in the control in edit mode.
            </summary>
            <value>A value of type ITemplate</value>
        </member>
        <member name="P:Telerik.Web.UI.GridTemplateColumn.FooterTemplate">
            <summary>
            Gets or sets the template, which will be rendered in the footer of the template
            column.
            </summary>
            <value>A value of type ITemplate.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridTemplateColumn.HeaderTemplate">
            <summary>
            Gets or sets the template, which will be rendered in the header of the template
            column.
            </summary>
            <value>A value of type ITemplate.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridTemplateColumn.ItemTemplate">
            <summary>
            Gets or sets the ItemTemplate, which is rendered in the control in normal
            (non-Edit) mode.
            </summary>
            <value>A value of type ITemplate</value>
        </member>
        <member name="P:Telerik.Web.UI.GridTemplateColumn.IsEditable">
            <summary>
            Gets a Boolean value, indicating whether the column is editable. If a template
            column is editable, it will render the contents of the EditItemTemplate in the edit
            form. If there are no contents in the EditItemTemplate, the column will not be
            editable.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether the column is
            editable.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridTemplateColumn.InitializeTemplatesFirst">
            <summary>
            Set to false if templates should overwrite other controls in header cell (sort image, etc)
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSplitGroup.GroupItemsCount">
            <summary>
            Number of items in the group
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSplitGroup.ActualItemCount">
            <summary>
            Number of items displayed on the page
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSplitGroup.Mode">
            <summary>
            if true Group is countinued from the previous page or it continues
            on the next page if value of false
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridDataSetHelper">
            <summary>
            Summary description for DataSetHelper.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridDefaultValueChecker">
            <summary>
            Summary description for DefaultValueChecker.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridEditFormType">
            <summary>
            Type of the edit forms in RadGrid
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridEditFormType.AutoGenerated">
            <summary>
            Form is autogenerated, based on the column that each GridTableView exposes.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridEditFormType.WebUserControl">
            <summary>
            The edit form is a WebUserControl specified by <see cref="P:Telerik.Web.UI.GridEditFormSettings.UserControlName"/>
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridEditFormType.Template">
            <summary>
            The template specified by <see cref="P:Telerik.Web.UI.GridEditFormSettings.FormTemplate"/> is used as an edit form.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridEditFormSettings">
            <summary>
            Settings for the edit forms generated by a <see cref="T:Telerik.Web.UI.GridTableView"/> for each item that is in edit mode and the 
            <see cref="P:Telerik.Web.UI.GridTableView.EditMode"/> is set to <see cref="F:Telerik.Web.UI.GridEditMode.EditForms"/>.
            </summary>
            <remarks>
            Set the type of the EditForm using <see cref="P:Telerik.Web.UI.GridEditFormSettings.EditFormType"/>.
            If the type is <see cref="F:Telerik.Web.UI.GridEditFormType.AutoGenerated"/> then the form will be autogenerated based on the
            columns of the corresponding table view. Note that only the columns that are editable wil be included. Those are
            the standatrd columns that have editing capabilities - such <see cref="T:Telerik.Web.UI.GridBoundColumn"/> that has 
            <see cref="!:GridBoundColumn.ReadOnly"/> set to false. All the style properties apply only to the autogenerated edit form.
            See <see cref="T:Telerik.Web.UI.GridEditFormType"/> for more details on the types of the edit forms.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.EditColumn">
            <summary>
            Set properties of the update-cancel buttons column that appears in an edit form
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.ColumnNumber">
            <summary>
            Number of vertical columns to split all edit fields on the form when it is autogenerated.
            Each GridColumn has a <see cref="P:Telerik.Web.UI.GridColumn.EditFormColumnIndex"/> to choose the column where
            the editor would appear.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.CaptionDataField">
            <summary>
            Data field to incude in form's caption
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.CaptionFormatString">
            <summary>
            Caption format string - {0} parameter must be included and would be repaced with DataField value
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.FormStyle">
            <summary>
            Style of the forms's area (rendered as a DIV elemet)
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.FormTableStyle">
            <summary>
            Style of the forms' table element
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.FormMainTableStyle">
            <summary>
            Style of the forms' main table element
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.FormCaptionStyle">
            <summary>
            Style of the table row that shows the caption of the form
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.FormTableItemStyle">
            <summary>
            Style of the normal rows in the edit-form's table
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.FormTableAlternatingItemStyle">
            <summary>
            Style of the alternating rows in the edit-form's table
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.FormTableButtonRowStyle">
            <summary>
            Style of the footer row of the table, where the update-cancel buttons appear
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.EditFormType">
            <summary>
            Specifies the type of the edit form. See <see cref="T:Telerik.Web.UI.GridEditFormType"/> about details for 
            the possible values and their meanings.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Telerik.Web.UI.GridEditFormSettings.UserControlName" -->
        <member name="P:Telerik.Web.UI.GridEditFormSettings.FormTemplate">
            <summary>
            EditForm template - if EditFormType if <see cref="P:Telerik.Web.UI.GridEditFormSettings.EditFormType"/> is of type <see cref="F:Telerik.Web.UI.GridEditFormType.Template"/>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormSettings.PopUpSettings">
            <summary>
                Gets a reference to <see cref="T:Telerik.Web.UI.GridPopUpSettings"/> class providing properties
                related to PopUp EditForm.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPopUpSettings.Height">
            <summary>
            Gets or sets a value specifying the grid height in pixels (px).
            </summary>
            <value>the default value is 300px</value>
        </member>
        <member name="P:Telerik.Web.UI.GridPopUpSettings.Width">
            <summary>
            Gets or sets a value specifying the grid height in pixels (px).
            </summary>
            <value>the default value is 400px</value>
        </member>
        <member name="T:Telerik.Web.UI.GridEditManager">
            <summary>
            Summary description for GridEditManager.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridBaseDataList">
            <summary>
            	<para>Serves as the abstract base class for data tables. This class provides the
            methods and properties common to all tables in
            Telerik RadGrid.</para>
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadCompositeDataBoundControl">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.OnPreRender(System.EventArgs)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.RegisterScriptControl">
            <summary>
            Registers the control with the ScriptManager
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.RegisterCssReferences">
            <summary>
            Registers the CSS references
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.LoadClientState(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Loads the client state data
            </summary>
            <param name="clientState"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.SaveClientState">
            <summary>
            Saves the client state data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.RenderClientStateField(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.RenderContents(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.GetEmbeddedSkinNames">
            <summary>
            Returns the names of all embedded skins. Used by Telerik.Web.Examples.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Executed when post data is loaded from the request
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadCompositeDataBoundControl.RaisePostDataChangedEvent">
            <summary>
            Executed when post data changes should invoke a chagned event
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCompositeDataBoundControl.Skin">
            <summary>Gets or sets the skin name for the control user interface.</summary>
            <value>A string containing the skin name for the control user interface. The default is string.Empty.</value>
            <remarks>
            <para>
            If this property is not set, the control will render using the skin named "Default".
            If EnableEmbeddedSkins is set to false, the control will not render skin.
            </para>
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.RadCompositeDataBoundControl.IsSkinSet">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCompositeDataBoundControl.EnableEmbeddedScripts">
            <summary>
            Gets or sets the value, indicating whether to render script references to the embedded scripts or not.
            </summary>
            <remarks>
            <para>
            If EnableEmbeddedScripts is set to false you will have to register the needed Scripts files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCompositeDataBoundControl.EnableEmbeddedSkins">
            <summary>Gets or sets the value, indicating whether to render links to the embedded skins or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedSkins is set to false you will have to register the needed CSS files by hand.
            </para>
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.RadCompositeDataBoundControl.EnableEmbeddedBaseStylesheet">
            <summary>Gets or sets the value, indicating whether to render the link to the embedded base stylesheet of the control or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedBaseStylesheet is set to false you will have to register the needed control base CSS file by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCompositeDataBoundControl.RuntimeSkin">
            <summary>
            Gets the real skin name for the control user interface. If Skin is not set, returns
            "Default", otherwise returns Skin.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadCompositeDataBoundControl.EnableAjaxSkinRendering">
            <summary>Gets or sets the value, indicating whether to render the skin CSS files during Ajax requests</summary>
            <remarks>
            <para>
            If EnableAjaxSkinRendering is set to false you will have to register the needed control base CSS file by hand when adding/showing the control with Ajax.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadCompositeDataBoundControl.ClientStateFieldID">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadCompositeDataBoundControl.CssClassFormatString">
            <summary>
            The CssClass property will now be used instead of the former Skin 
            and will be modified in AddAttributesToRender()
            </summary>
            <example>
            protected override string CssClassFormatString
            {
            	get
            	{
            		return "RadDock RadDock_{0} rdWTitle rdWFooter";
            	}
            }
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadCompositeDataBoundControl.DefaultCssClass">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadCompositeDataBoundControl.ScriptManager">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="E:Telerik.Web.UI.GridBaseDataList.SelectedIndexChanged">
            <summary>
            Occurs when a different item is selected in a table between posts to the
            server.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridBaseDataList.TabIndex">
            <summary>Gets or sets the tab index of the Web server control.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridBaseDataList.CellPadding">
            <summary>
            Gets or sets the amount of space between the contents of a cell and the cell's
            border.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridBaseDataList.CellSpacing">
            <summary>Gets or sets the amount of space between cells.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridBaseDataList.Controls">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridBaseDataList.GridLines">
            <summary>
            Gets or sets a value that specifies whether the border between the cells of a
            data table is displayed.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridBaseDataList.HorizontalAlign">
            <summary>
            Gets or sets the horizontal alignment of a data table within its
            container.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnDataBinding">
            <summary>
            This event is fired when the grid request data using client-side data-binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnDataBound">
            <summary>
            This event is fired when the grid client-side data-binding is finished.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnGridCreating">
            <remarks>
            	<para>This event is fired before grid creation.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term><strong>Examples</strong></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnGridCreating="GridCreating" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            					<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            GridCreating()</para>
            					<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            					<para>alert("Creting grid with ClientID: " + this.ClientID);</para>
            					<para>}</para></blockquote>
            				<para dir="ltr">&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired before grid creation.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnGridCreated">
            <remarks>
            	<para>This event is fired after the grid is created.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnGridCreated="GridCreated" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function GridCreated()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Grid with ClientID: " + this.ClientID + " was created");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired after the grid is created.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnGridDestroying">
            <remarks>
            	<para>This event is fired when RadGrid object is destroyed, i.e. on each
            <em>window.onunload</em></para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term><strong>Examples</strong></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnGridCreating="GridDestroying" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            GridDestroying()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Destroying grid with ClientID: " + this.ClientID);</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>
            This client-side event is fired when <strong>RadGrid</strong> object is
            destroyed, i.e. on each <em>window.onunload</em>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnMasterTableViewCreating">
            <remarks>
            	<para>This event is fired before the MasterTableView is created.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term><strong>Examples</strong></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnMasterTableViewCreating="MasterTableViewCreating" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            MasterTableViewCreating()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Creating MasterTableView");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired before the MasterTableView is created.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnMasterTableViewCreated">
            <remarks>
            	<para align="left">This event is fired after the MasterTableView is created.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnMasterTableViewCreated="MasterTableViewCreated" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            MasterTableViewCreated()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("MasterTableView was created");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired after the MasterTableView is created.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnTableCreating">
            <remarks>
            	<para>This event is fired before table creation.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnTableCreating="TableCreating" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            TableCreating()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Creating DetailTable");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired before table creation.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnTableCreated">
            <remarks>
            	<para>This event is fired after the table is created.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>RadGridTable Object</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term><strong>Examples</strong></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnTableCreated="TableCreated" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            TableCreated(tableObject)</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("DetailTable with ClientID: " + tableObject.ClientID + " was
            created");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired after the table is created.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnTableDestroying">
            <remarks>
            	<para>This event is fired when table object is destroyed.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnTableDestroying="TableDestroying" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            TableDestroying()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Destroing DetailTable with ClientID: " + this.ClientID);</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired when table object is destroyed.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnColumnCreating">
            <remarks>
            	<para>This event is fired before column available at client-side creation.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGridTable</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnColumnCreating="ColumnCreating" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            ColumnCreating()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Creating column);</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>
            This client-side event is fired before column available at client-side
            creation.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnColumnCreated">
            <remarks>
            	<para>This event is fired after a column available at client-side is created.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGridTable</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>RadGridTableColumn object</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term><strong>Examples</strong></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnColumnCreated="ColumnCreated" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            ColumnCreated(columnObject)</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Column with Index: " + columnObject.Index + " was created");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>
            This client-side event is fired after a column available at client-side is
            created.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnColumnDestroying">
            <remarks>
            	<para>This event is fired when a column object is destroyed.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGridTable</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnColumnDestroying="ColumnDestroying" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            ColumnDestroying()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Destroing column with Index: " + this.Index);</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired when a column object is destroyed.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnColumnResizing">
            <remarks>
            	<para>This event is fired before a column is resized.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGridTable</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>columnIndex, columnWidth</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>Yes, return <em>false</em> to cancel</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnColumnResizing="ColumnResizing" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            ColumnResizing(columnIndex, columnWidth)</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Resizng column with Index: " + columnIndex + ", width: " +
            columnWidth);</para>
            				<para>}</para>
            				<para>OR</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            ColumnResizing(columnIndex, columnWidth)</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>return false; //cancel ColumnResizing event</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired before a column is resized.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnRowClick">
            FOR FUTURE VERSIONS
        </member>
        <member name="P:Telerik.Web.UI.GridClientEvents.OnRowContextMenu">
            <remarks>
            	<para><span id="ctl01_repeaterMessages_ctl01_lblMessageText">The client-side script
                for RadGrid.ClientSettings.ClientEvents.OnRowContextMenu kills any exceptions that
                occur in the event handler. This can make bugs hard to track down because it
                appears that nothing happens when actually the exception was killed before it
                becomes visible.</span></para>
            	<para><span>You can avoid this problem by putting a try/catch block around the
                event handler that sends an alert if an exception was thrown:</span></para>
            	<pre>
            RadGrid1.ClientSettings.ClientEvents.OnRowContextMenu = " try { ... my event handling code ... } catch (exp) { alert(exp.message); }";
                </pre>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.GridClientMessages">
            <summary>
            Contains properties related to messages appearing as tooltips for various grid
            actions. You can use this class for localizing the grid messages.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientMessages.DropHereToReorder">
            <summary>
            Gets or sets a string that will be displayed as a tooltip when you start dragging
            a column header trying to reorder columns.
            </summary>
            <value>
            	<strong>string</strong>, the tooltip that will be displayed when you try to
            reorder columns. By default it states "<strong>Drop here to reorder</strong>".
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridClientMessages.DragToGroupOrReorder">
            <summary>
            Gets or sets a string that will be displayed as a tooltip when you hover a column
            that can be dragged.
            </summary>
            <value>
            	<strong>string</strong>, the tooltip that will be displayed hover a draggable
            column. By default it states "<strong>Drag to group or reorder</strong>".
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridClientMessages.DragToResize">
            <value>
            	<strong>string</strong>, the tooltip that will be displayed when you hover the
            resizing handle of a column. By default it states "<strong>Drag to
            resize</strong>".
            </value>
            <summary>
            Gets or sets a string that will be displayed as a tooltip when you hover the
            resizing handle of a column.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientMessages.PagerTooltipFormatString">
            <summary>
            The format string used for the tooltip when using Ajax scroll paging or the Slider pager
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridClientSettings.IsSet">
            <remarks>This method is for Telerik RadGrid internal usage.</remarks>
            <summary>
            Checks if a client settings property value was changed and differs from its
            default.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.DataBinding">
            <summary>
                Gets a reference to <see cref="T:Telerik.Web.UI.GridSelecting"/> class providing properties
                related to client-side selection features.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.Selecting">
            <summary>
                Gets a reference to <see cref="T:Telerik.Web.UI.GridSelecting"/> class providing properties
                related to client-side selection features.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.ClientEvents">
            <summary>Gets a reference to <see cref="T:Telerik.Web.UI.GridClientEvents"/> class.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.ClientMessages">
            <summary>
                Gets a reference to <see cref="T:Telerik.Web.UI.GridClientMessages"/> class, holding properties
                that can be used for localizing Telerik RadGrid.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.Scrolling">
            <summary>
                Gets a reference to <see cref="T:Telerik.Web.UI.GridScrolling"/>, which holds various
                properties for setting the Telerik RadGrid scrolling features.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.Resizing">
            <summary>
                Gets a reference to <see cref="T:Telerik.Web.UI.GridResizing"/>, which holds properties related
                to Telerik RadGrid resizing features.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.EnableAlternatingItems">
            <summary>
                Determines whether the alternating items will render with a different CSS class.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.AllowKeyboardNavigation">
            <summary>
            Gets or sets a value indicating whether the keyboard navigation will be enabled
            in Telerik RadGrid.
            </summary>
            <value>
            true, if keyboard navigation is enabled, otherwise false (the default
            value).
            </value>
            <remarks>
            	<ul class="noindent">
            		<li><strong>Arrowkey Navigation</strong> - allows end-users to navigate around
                    the menu structure using the arrow keys.</li>
            		<li>select grid items pressing the [SPACE] key</li>
            		<li>edit rows hitting the [ENTER] key</li>
            	</ul>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.AllowDragToGroup">
            <summary>
                Gets or sets a value indicating whether you will be able to drag column headers to
                <see cref="T:Telerik.Web.UI.GridGroupPanel"/> and let the grid automatically form
                <see cref="!:GroupByExpression"/> and group its data.
            </summary>
            <value>
            	<strong>true</strong>, if you are able to drag group header to the group panel,
            otherwise <strong>false</strong> (the default value)
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.AllowColumnsReorder">
            <summary>
            Gets or sets a value indicating whether you will be able to reorder columns by
            using drag&amp;drop. By default it is false.
            </summary>
            <seealso cref="P:Telerik.Web.UI.GridClientSettings.ReorderColumnsOnClient">ReorderColumnsOnClient Property</seealso>
            <value>
            	<strong>true</strong> if reorder via drag&amp;drop is enabled, otherwise
            <strong>false</strong> (the default value).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.AllowAutoScrollOnDragDrop">
            <summary>
            Gets or sets a value indicating whether MasterTableView will be automatically scrolled when an item is dragged.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.ReorderColumnsOnClient">
            <summary>
                Gets or sets a value indicating whether columns will be reordered on the client.
                This property is meaningful when used in conjunction with
                <see cref="P:Telerik.Web.UI.GridClientSettings.AllowColumnsReorder"/> set to <strong>true</strong>.
            </summary>
            <remarks>
            	<para>False by default, which means that each time you try to reorder columns a
                postback will be performed.</para>
            	<para>Note that in case this property is true the order changes will be persisted
                on the server only after postback.</para>
            </remarks>
            <value>
            	<strong>true</strong> if columns are reordered on the client, otherwise
            <strong>false</strong> (the default value.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.AllowExpandCollapse">
            <summary>
            	<para>Gets or sets a value indicating whether the expand/collapse functionality for
                hierarchical structures in grid will be enabled.</para>
            	<para>The AllowExpandCollapse property of RadGrid is meaningful with client
                hierarchy load mode only and determine<br/>
                whether the end user will be able to expand/collapse grid items. This property do
                not control the visibility of the corresponding expand/collapse column.</para>
            </summary>
            <remarks>
            This property should be set to <strong>true</strong>, when working in
            <strong>HierarchyLoadMode.Client</strong>.
            </remarks>
            <value>
            	<strong>true</strong> if expand/collapse is enabled, otherwise
            <strong>false</strong> (the default value).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridClientSettings.AllowGroupExpandCollapse">
            <summary>
            	<para>Gets or sets a value indicating whether the expand/collapse functionality for
                grouped data in grid will be enabled.</para>
            	<para>The AllowGroupExpandCollapse property of RadGrid is meaningful with client
                group load mode only and determine whether the end user will be able to
                expand/collapse grid items. This property do not control the visibility of the
                corresponding expand/collapse column.</para>
            </summary>
            <value>
            	<strong>true</strong>, if expand/collapse is enabled, otherwise
            <strong>false</strong> (the default value).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridColumnsReorderEventArgs.Canceled">
            <summary>
                Gets or sets a value indicating whether <see cref="E:Telerik.Web.UI.RadGrid.ColumnsReorder"/>
                event will be canceled.
            </summary>
            <value>
            	<strong>true</strong>, if the event is canceled, otherwise
            <strong>false</strong>.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.IGridCommandEvent">
            <summary>
            Interface that provides the basic functionality needed for a class to be used to
            send information to Command event handler.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.IGridCommandEvent.ExecuteCommand(System.Object)">
            <summary>Override to fire the corresponding command.</summary>
        </member>
        <member name="P:Telerik.Web.UI.IGridCommandEvent.Canceled">
            <summary>Gets or sets a value, defining whether the command should be canceled.</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridCommandEventArgsFactory">
            <summary>For internal usage only.</summary>
            <exclude/>
        </member>
        <member name="M:Telerik.Web.UI.GridCommandEventArgsFactory.CreateGridCommandEventArgs(Telerik.Web.UI.GridItem,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>For internal usage only.</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridCommandEventHandler">
            <summary>
            Represents the method that will handle grid's Command events including
            CancelCommand, DeleteCommand, EditCommand, InsertCommand, ItemCommand, SortCommand and
            UpdateCommand.
            </summary>
            <param name="source">The source of the event.</param>
            <param name="e">A <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:Telerik.Web.UI.GridCommandEventArgs">
            <summary>
            Provides data for Command events including CancelCommand, DeleteCommand,
            EditCommand, InsertCommand, ItemCommand, SortCommand and UpdateCommand.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridCommandEventArgs.ExecuteCommand(System.Object)">
            <summary>
                Fires the command stored in <see cref="!:GridCommandEventArgs.CommandName"/>
                property
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridCommandEventArgs.CommandSource">
            <summary>Gets the source of the command</summary>
            <example>
            	<code lang="CS">
            // Get a reference to the control that triggered expand/collapse command 
            protected void RadGrid1_ItemCommand(object source, GridCommandEventArgs e)
            {
                if (e.CommandName == RadGrid.ExpandCollapseCommandName)
                {
                    Control c = e.CommandSource as Control;
                }
            }
                </code>
            	<code lang="VB">
            ' Get a reference to the control that triggered expand/collapse command 
            Protected Sub RadGrid1_ItemCommand([source] As Object, e As GridCommandEventArgs)
                If e.CommandName = RadGrid.ExpandCollapseCommandName Then
                    Dim c As Control = e.CommandSource 
                End If
            End Sub 'RadGrid1_ItemCommand
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridCommandEventArgs.Item">
            <summary>Gets the item containing the command source</summary>
            <example>
            	<code lang="CS">
            protected void RadGrid1_UpdateCommand(object source, GridCommandEventArgs e)
            {
                if (e.Item is GridEditFormItem &amp;&amp; e.Item.IsInEditMode)
                {
                    GridEditFormItem item = e.Item as GridEditFormItem;
                    Hashtable newValues = new Hashtable();
                    item.OwnerTableView.ExtractValuesFromItem(newValues, item);
                    if (newValues["Name"].ToString() == "DefaultName")
                    {
                        e.Canceled = true;
                    }
                }
            }
                </code>
            	<code lang="VB">
            Protected Sub RadGrid1_UpdateCommand([source] As Object, e As GridCommandEventArgs)
                If Typeof e.Item Is GridEditFormItem AndAlso e.Item.IsInEditMode Then
                    Dim item As GridEditFormItem = e.Item
                    Dim newValues As New Hashtable()
                    item.OwnerTableView.ExtractValuesFromItem(newValues, item)
                    If newValues("Name").ToString() = "DefaultName" Then
                        e.Canceled = True
                    End If
                 End If
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridCommandEventArgs.Canceled">
            <summary>Gets or sets a value, defining whether the command should be canceled.</summary>
            <example>
            	<code lang="CS">
            protected void RadGrid1_UpdateCommand(object source, GridCommandEventArgs e)
            {
                if (e.Item is GridEditFormItem &amp;&amp; e.Item.IsInEditMode)
                {
                    GridEditFormItem item = e.Item as GridEditFormItem;
                    Hashtable newValues = new Hashtable();
                    item.OwnerTableView.ExtractValuesFromItem(newValues, item);
                    if (newValues["Name"].ToString() == "DefaultName")
                    {
                        e.Canceled = true;
                    }
                }
            }
                </code>
            	<code lang="VB">
            Protected Sub RadGrid1_UpdateCommand([source] As Object, e As GridCommandEventArgs)
                If Typeof e.Item Is GridEditFormItem AndAlso e.Item.IsInEditMode Then
                    Dim item As GridEditFormItem = e.Item
                    Dim newValues As New Hashtable()
                    item.OwnerTableView.ExtractValuesFromItem(newValues, item)
                    If newValues("Name").ToString() = "DefaultName" Then
                        e.Canceled = True
                    End If
                 End If
            End Sub
                </code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.GridSelectCommandEventArgs">
            <summary>For internal usage only.</summary>
            <exclude/>
        </member>
        <member name="M:Telerik.Web.UI.GridSelectCommandEventArgs.ExecuteCommand(System.Object)">
            <summary>Fires RadGrid.SelectedIndexChanged event.</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridDeselectCommandEventArgs">
            <summary>For internal usage only</summary>
            <exclude/>
        </member>
        <member name="M:Telerik.Web.UI.GridDeselectCommandEventArgs.ExecuteCommand(System.Object)">
            <summary>Fires RadGrid.SelectedIndexChanged event.</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridDetailTableDataBindEventHandler">
            <summary>Represents a method that will handle grid's DetailTableDataBind event.</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridDetailTableDataBindEventArgs">
            <summary>Provides data for DetailTableDataBind event.</summary>
            <example>
            	<code lang="CS">
            protected void RadGrid1_DetailTableDataBind(object source, Telerik.Web.UI.GridDetailTableDataBindEventArgs e)
            {
                GridDataItem parentItem = e.DetailTableView.ParentItem as GridDataItem;
                if (e.DetailTableView.DataSourceID == "AccessDataSource2")
                {
                    Session["CustomerID"] = parentItem["CustomerID"].Text;
                }
            }
                </code>
            	<code lang="VB">
            Protected Sub RadGrid1_DetailTableDataBind(ByVal source As Object, ByVal e As GridDetailTableDataBindEventArgs) Handles RadGrid1.DetailTableDataBind
                Dim parentItem As GridDataItem = CType(e.DetailTableView.ParentItem, GridDataItem)
                If (e.DetailTableView.DataSourceID = "AccessDataSource2") Then
                        Session("CustomerID") = parentItem("CustomerID").Text
                End If
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.GridDetailTableDataBindEventArgs.ExecuteCommand(System.Object)">
            <summary>
            Fires RadGrid.DetailTableDataBind event
            </summary>
            <param name="source"></param>
        </member>
        <member name="P:Telerik.Web.UI.GridDetailTableDataBindEventArgs.DetailTableView">
            <summary>Gets a reference to the detail table being bound.</summary>
            <example>
            	<code lang="CS">
            protected void RadGrid1_DetailTableDataBind(object source, Telerik.Web.UI.GridDetailTableDataBindEventArgs e)
            {
                GridDataItem parentItem = e.DetailTableView.ParentItem as GridDataItem;
                if (e.DetailTableView.DataSourceID == "AccessDataSource2")
                {
                    Session["CustomerID"] = parentItem["CustomerID"].Text;
                }
            }
                </code>
            	<code lang="VB">
            Protected Sub RadGrid1_DetailTableDataBind(ByVal source As Object, ByVal e As GridDetailTableDataBindEventArgs) Handles RadGrid1.DetailTableDataBind
                Dim parentItem As GridDataItem = CType(e.DetailTableView.ParentItem, GridDataItem)
                If (e.DetailTableView.DataSourceID = "AccessDataSource2") Then
                        Session("CustomerID") = parentItem("CustomerID").Text
                End If
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridDetailTableDataBindEventArgs.Canceled">
            <summary>Gets or sets a value, defining whether the command should be canceled.</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridExpandCommandEventArgs">
            <summary>For internal usage only.</summary>
            <exclude/>
        </member>
        <member name="M:Telerik.Web.UI.GridExpandCommandEventArgs.ExecuteCommand(System.Object)">
            <summary>
                Expands/Collapses the <see cref="T:Telerik.Web.UI.GridItem"/> containing the
                <see cref="!:CommandSource"/>
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridFilterCommandEventArgs">
            <summary>For internal usage only.</summary>
            <exclude/>
        </member>
        <member name="M:Telerik.Web.UI.GridFilterCommandEventArgs.ExecuteCommand(System.Object)">
            <summary>
                Calculates and sets the <see cref="!:FilterExpression"/> to the corresponding
                <see cref="T:Telerik.Web.UI.GridTableView"/> and rebinds the grid.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridTableViewCollection">
            <summary>
            	<para>A collection that stores <see cref="T:Telerik.Web.UI.GridTableView"/> objects. You can access
            this collection through <see cref="P:Telerik.Web.UI.GridTableView.DetailTables"/> property of a
            parent <see cref="T:Telerik.Web.UI.GridTableView"/>.</para>
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridTableViewCollection"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.#ctor(Telerik.Web.UI.RadGrid,Telerik.Web.UI.GridTableView)">
            <summary>
            <para>
             Initializes a new instance of <see cref="T:Telerik.Web.UI.GridTableViewCollection"/>.
            </para>
            </summary>
            <param name="Owner"><see cref="T:Telerik.Web.UI.RadGrid"/> that would aggregate this instance</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.#ctor(Telerik.Web.UI.GridTableViewCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> based on another <see cref="T:Telerik.Web.UI.GridTableViewCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.#ctor(Telerik.Web.UI.GridTableView[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> containing any array of <see cref="T:Telerik.Web.UI.GridTableView"/> objects.
               </para>
            </summary>
            <param name="value">
                  An array of <see cref="T:Telerik.Web.UI.GridTableView"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.Add(Telerik.Web.UI.GridTableView)">
            <summary>
               <para>Adds a <see cref="T:Telerik.Web.UI.GridTableView"/> with the specified value to the 
               <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridTableView"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewCollection.AddRange(Telerik.Web.UI.GridTableView[])"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.AddRange(Telerik.Web.UI.GridTableView[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.Web.UI.GridTableViewCollection"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.Web.UI.GridTableView"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewCollection.Add(Telerik.Web.UI.GridTableView)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.AddRange(Telerik.Web.UI.GridTableViewCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewCollection.Add(Telerik.Web.UI.GridTableView)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.Contains(Telerik.Web.UI.GridTableView)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> contains the specified <see cref="T:Telerik.Web.UI.GridTableView"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridTableView"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.Web.UI.GridTableView"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewCollection.IndexOf(Telerik.Web.UI.GridTableView)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.CopyTo(Telerik.Web.UI.GridTableView[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> is greater than the available space between <paramref name="array"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="array"/> is less than <paramref name="array"/>"s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.IndexOf(Telerik.Web.UI.GridTableView)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.Web.UI.GridTableView"/> in 
                  the <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridTableView"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.Web.UI.GridTableView"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.Web.UI.GridTableViewCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewCollection.Contains(Telerik.Web.UI.GridTableView)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.Insert(System.Int32,Telerik.Web.UI.GridTableView)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.Web.UI.GridTableView"/> into the <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.Web.UI.GridTableView"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewCollection.Add(Telerik.Web.UI.GridTableView)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewCollection.Remove(Telerik.Web.UI.GridTableView)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.Web.UI.GridTableView"/> from the 
               <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridTableView"/> to remove from the <see cref="T:Telerik.Web.UI.GridTableViewCollection"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.Web.UI.GridTableViewCollection.OwnerGrid">
            <summary>
            Get the instance of <see cref="T:Telerik.Web.UI.RadGrid"/> that owns this instance
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridTableViewCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.Web.UI.GridTableView"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:Telerik.Web.UI.GridDataTableFromEnumerable.FinishedParsingProperties(System.Object)">
            <summary>
            Add DataColumns for grid columns with composite DataFields (sub properties)
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridEnumerableBase">
            <summary>
            Summary description for IGridEnumerable.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridExportSettings">
            <summary>
            Container of misc. grouping settings of RadGrid control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridExportSettings.FileName">
            <summary>
            A string specifying the name (without the extension) of the file that will be
            created. The file extension is automatically added based on the method that is
            used.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx" cat="RadGrid QSF demos">Export Grid to Microsoft Excel, Microsoft Word</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridExportSettings.ExportOnlyData">
            <summary>Determines whether only data will be exported.</summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx" cat="RadGrid QSF demos">Export Grid to Microsoft Excel, Microsoft Word</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridExportSettings.IgnorePaging">
            <summary>
            Specifies whether all records will be exported or merely those on the current
            page.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx" cat="RadGrid QSF demos">Export Grid to Microsoft Excel, Microsoft Word</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridExportSettings.OpenInNewWindow">
            <summary>Opens the exported grid in a new instead of the same page.</summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx" cat="RadGrid QSF demos">Export Grid to Microsoft Excel, Microsoft Word</seealso>
        </member>
        <member name="T:Telerik.Web.UI.GridCsvSettings">
            <summary>
            Container of misc. grouping settings of RadGrid control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridCsvSettings.RowDelimiter">
            <summary>
            Gets or sets the row delimiter for RadGrid CSV export.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridCsvSettings.ColumnDelimiter">
            <summary>
            Gets or sets the row delimiter for RadGrid CSV export.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridKnownFunction">
            <summary>
            Predefined filter expression enumeration. Used by <see cref="T:Telerik.Web.UI.GridFilterFunction"/> class.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Filtering/DefaultCS.aspx" cat="Online demos">Basic Filtering</seealso>
            <remarks>
            	<para>Some functions are applicable (and are not displayed on filterting) to all
                the data types:</para>
            	<para><strong>String</strong> type supports all the functions.</para>
            	<para><strong>Integer:</strong> NoFilter, EqualTo, NotEqualTo, GreaterThan,
                LessThan, GreaterThanOrEqualTo, LessThanOrEqualTo, Between, NotBetween, IsNull and
                NotIsNull are supported. <font color="blue"><em>Contains, DoesNotContain,
                StartsWith,</em>
            			<em>EndsWith, IsEmpty <font color="#000040">and</font>
                NotIsEmpty</em></font>
            		<strong>are not</strong> supported.</para>
            	<para><strong>Date:</strong> same as Integer.</para>
            </remarks>
            <seealso cref="!:grdBasicFiltering.html" cat="RadGrid manual">Basic Filtering</seealso>
            <seealso cref="!:grdLocalizingFilteringMenuOptions.html" cat="RadGrid manual">How-To: Localizing filtering menu options</seealso>
            <seealso cref="!:grdReducingFilterMenuOptions.html" cat="RadGrid manual">How-To: Reducing filtering menu options</seealso>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.NoFilter">
            <summary>
            No filter would be applied, filter controls would be cleared 
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.Contains">
            <summary>Same as: dataField LIKE '/%value/%'</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.DoesNotContain">
            <summary>Same as: dataField NOT LIKE '/%value/%'</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.StartsWith">
            <summary>Same as: dataField LIKE 'value/%'</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.EndsWith">
            <summary>Same as: dataField LIKE '/%value'</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.EqualTo">
            <summary>
            Same as: dataField = value
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.NotEqualTo">
            <summary>Same as: dataField != value</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.GreaterThan">
            <summary>Same as: dataField &gt; value</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.LessThan">
            <summary>
            Same as: dataField &lt; value
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.GreaterThanOrEqualTo">
            <summary>Same as: dataField &gt;= value</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.LessThanOrEqualTo">
            <summary>
            Same as: dataField &lt;= value
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.Between">
            <summary>
            Same as: value1 &lt;= dataField &lt;= value2.<br/>
            Note that value1 and value2 should be separated by [space] when entered as
            filter.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.NotBetween">
            <summary>
            Same as: dataField &lt;= value1 &amp;&amp; dataField &gt;= value2.<br/>
            Note that value1 and value2 should be separated by [space] when entered as
            filter.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.IsEmpty">
            <summary>
            Same as: dataField = ''
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.NotIsEmpty">
            <summary>Same as: dataField != ''</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.IsNull">
            <summary>
            Only null values
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.NotIsNull">
            <summary>
            Only those records that does not contain null values within the corresponding column
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridKnownFunction.Custom">
            <summary>
            Custom function will be applied. The filter value should contain a valid filter expression, including DataField, operators and value
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridFilterListOptions">
            <summary>
            Choose which filter function will be enabled for a column
            </summary>
            <seealso cref="!:grdBasicFiltering.html" cat="RadGrid Manual">Basic Filtering</seealso>
            <seealso cref="!:grdCustomOptionForFiltering.html" cat="RadGrid Manual: How-To">Custom option for filtering (FilterListOptions -&gt;
            VaryByDataTypeAllowCustom)</seealso>
        </member>
        <member name="F:Telerik.Web.UI.GridFilterListOptions.VaryByDataType">
            <summary>
            Depending of data type of the column, RadGrid will automatically choose which filters to be displayed in the list
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridFilterListOptions.VaryByDataTypeAllowCustom">
            <summary>
            As VaryByDataType with custom filtering enabled
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridFilterListOptions.AllowAllFilters">
            <summary>
            All filters will be displayed. Note that some data types are not applicatble to some filter functions. For example you cannot apply
            the 'like' function for integer data type. In such cases you should handle the filtering in a custom manner, handling
            <see cref="E:Telerik.Web.UI.RadGrid.ItemCommand"/> for 'Filter' command or <see cref="!:RadGrid.FilterCommand"/>
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridFilterFunction">
            <summary>
            Used when column-based filtering feature of RadGrid is enabled. Defines properties and methods for formatting the 
            predefined filter expressions
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridAggregateFunction">
            <summary>
                Enumeration representing the aggregate functions which can be applied to a
                GridGroupByField (part of <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/>
                collection)
            </summary>
            <remarks>
                Meaningful only when GridGroupByField is part of
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> collection
            </remarks>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField; 
              
            gridGroupByField = new GridGroupByField(); 
            gridGroupByField.FieldName = "Freight"; 
            gridGroupByField.HeaderText = "Total shipping cost is "; 
            gridGroupByField.Aggregate = GridAggregateFunction.Sum; 
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "Freight"
            gridGroupByField.HeaderText = "Total shipping cost is "
            gridGroupByField.Aggregate = GridAggregateFunction.Sum
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.GridGroupByField">
            <summary>
                Field which is part of each <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/>
                and <see cref="P:Telerik.Web.UI.GridGroupByExpression.GroupByFields"/> collection
            </summary>
            <example>
            	<code lang="VB" title="VB">
            Dim groupExpression As GridGroupByExpression = New GridGroupByExpression()
             
            Dim groupByField As GridGroupByField = New GridGroupByField()
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupExpression.SelectFields.Add(groupByField)
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupExpression.GroupByFields.Add(groupByField)
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression)
                </code>
            	<code lang="CS" title="C#">
            GridGroupByExpression groupExpression = new GridGroupByExpression(); 
             
            GridGroupByField groupByField = new GridGroupByField(); 
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupExpression.SelectFields.Add(groupByField); 
             
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupExpression.GroupByFields.Add(groupByField); 
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression);
                </code>
            </example>
            <remarks>
                Some of the GridGroupByField properties are meaningful only when present under
                specific collection - <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> or
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.GroupByFields"/>
            </remarks>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByDeclarativeDefinition.html">Declarative GridGroupByField syntax</seealso>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByField.SetAggregate(System.String)">
            <summary>
                Method setting the aggregate function applied for a
                <strong>GridGroupByField</strong> which is part of the
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> collection.
            </summary>
            <returns>N/A</returns>
            <example>
            	<code lang="VB" title="VB">
            Dim groupExpression As GridGroupByExpression = New GridGroupByExpression()
             
            Dim groupByField As GridGroupByField = New GridGroupByField()
            groupByField.FieldName = "Size"
            groupByField.SetAggregate(GridAggregateFunction.Sum)
            groupExpression.SelectFields.Add(groupByField)
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupExpression.SelectFields.Add(groupByField)
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupExpression.GroupByFields.Add(groupByField)
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression)
                </code>
            	<code lang="CS" title="C#">
            GridGroupByExpression groupExpression = new GridGroupByExpression(); 
             
            GridGroupByField groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Size"; 
            groupByField.SetAggregate(GridAggregateFunction.Sum); 
            groupExpression.SelectFields.Add(groupByField); 
             
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupExpression.SelectFields.Add(groupByField); 
             
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupExpression.GroupByFields.Add(groupByField); 
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression);
                </code>
            </example>
            <remarks>
                Meaningful only for GridGroupByFields from the
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> collection
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByField.SetSortOrder(System.String)">
            <summary>
                Method setting the sort order applied for a <strong>GridGroupByField</strong> which
                is part of the <see cref="P:Telerik.Web.UI.GridGroupByExpression.GroupByFields"/> collection.
            </summary>
            <returns>N/A</returns>
            <remarks>
                Meaningful only for GridGroupByFields from the
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.GroupByFields"/> collection
            </remarks>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByExpression groupExpression = new GridGroupByExpression(); 
             
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupExpression.SelectFields.Add(groupByField); 
             
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupByField.SetSortOrder(GridSortOrder.Ascending);
            groupExpression.GroupByFields.Add(groupByField); 
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression);
                </code>
            	<code lang="VB" title="VB">
            Dim groupExpression As GridGroupByExpression = New GridGroupByExpression()
             
            Dim groupByField As GridGroupByField = New GridGroupByField()
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupExpression.SelectFields.Add(groupByField)
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupByField.SetSortOrder(GridSortOrder.Descending)
            groupExpression.GroupByFields.Add(groupByField)
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByField.GetHeaderText">
            <summary>
                Method which gets the <strong>HeaderText</strong> value from GridGroupByField part
                of the <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> collection
            </summary>
            <returns>String containing the <strong>HeaderText</strong> value</returns>
            <remarks>
                Meaningful only for GridGroupByFields from the
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> collection
            </remarks>
            <example>
            	<code lang="VB" title="VB">
            Dim groupExpression As GridGroupByExpression = RadGrid1.MasterTableView.GroupByExpressions(0)
            Dim headerText as String = groupExpression.SelectFields(0).GetHeaderText()
                </code>
            	<code lang="CS" title="C#">
            GridGroupByExpression groupExpression = RadGrid1.MasterTableView.GroupByExpressions[0] as GridGroupByExpression;
            String headerText = groupExpression.SelectFields[0].GetHeaderText()
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByField.GetFormatString">
            <summary>
                Method which gets the <strong>FormatString</strong> value from GridGroupByField
                part of the <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> collection
            </summary>
            <returns>String containing the <strong>FormatString</strong> value</returns>
            <remarks>
                Meaningful only for GridGroupByFields from the
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> collection
            </remarks>
            <example>
            	<code lang="VB" title="VB">
            Dim groupExpression As GridGroupByExpression = RadGrid1.MasterTableView.GroupByExpressions(0)
            Dim formatString As String = groupExpression.SelectFields(0).GetFormatString()
                </code>
            	<code lang="CS" title="C#">
            GridGroupByExpression groupExpression = RadGrid1.MasterTableView.GroupByExpressions[0] As GridGroupByExpression; 
            String formatString = groupExpression.SelectFields[0].GetFormatString()
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByField.Validate">
            <summary>Inherited but not used</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByField.ToString">
            <summary>
            Method that retrieves a <b>System.String</b> that indicates the current
            object
            </summary>
            <returns>The string format of the object.</returns>
            <seealso cref="!:http://msdn.microsoft.com/library/default.asp?url=/workshop/webcontrols/webforms/library/shared/tostring.asp">Object.ToString()</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByField.CopyFrom(Telerik.Web.UI.GridGroupByField)">
            <summary>Inherited but not used</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByField.FieldName">
            <summary>
            Gets or sets a string that represents the <strong>DataField</strong> column
            property that will be used to form the <strong>GroupByExpression</strong>.
            </summary>
            <remarks>
            Unless you have specified a <strong>FieldAlias</strong>, the value of this
            property will be used when Telerik RadGrid constructs the text for
            <strong>GridGroupHeaderItem</strong>. <strong>FieldName</strong> has a meaning both for
            <strong>SelectFields</strong> and <strong>GroupByFields</strong> of
            <strong>GroupByExpression</strong>.
            </remarks>
            <value>
            String representing the <strong>DataField</strong> for the corresponding grouped
            column
            </value>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            //Add select fields (before the "Group By" clause)
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.HeaderText = "Employee";
            expression.SelectFields.Add( gridGroupByField );
             
            //Add a field for group-by (after the "Group By" clause)
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            expression.GroupByFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            'Add select field (before the "Group By" clause)
            gridGroupByField = New GridGroupByField()
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.HeaderText = "Employee"
            expression.SelectFields.Add(gridGroupByField)
             
            'Add a field for group-by (after the "Group By" clause)
            gridGroupByField = New GridGroupByField()
            gridGroupByField.FieldName = "EmployeeID"
            expression.GroupByFields.Add(gridGroupByField)
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByDeclarativeDefinition.html">Declarative GridGroupByField syntax</seealso>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByField.FieldAlias">
            <summary>
            Gets or sets a value representing a friendly name for the field used for forming
            the group by expression. This name will be displayed in each group header when grouping
            by the respective field.
            </summary>
            <remarks>
            	<para>
                    Use this property for setting the field text that will be displayed in the
                    <strong>GridGroupHeaderItem</strong>. If this property is not set, the value of
                    <see cref="P:Telerik.Web.UI.GridGroupByField.FieldName"/> property will be used. Note that this property has
                    a meaning <em>only</em> for GridGroupByField part of the <u>SelectFields</u> of
                    <strong>GridGroupByExpression</strong>.
                </para>
            	<para>This property is useful in cases when:</para>
            	<list type="bullet">
            		<item>you want to change the value displayed in group header (different than
                    the default <strong>DataField</strong> column value)<br/>
                    or</item>
            		<item>group by a template column and Telerik RadGrid cannot get the
                    header text for that column.</item>
            	</list>
            </remarks>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            //Add select fields (before the "Group By" clause)
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.FieldAlias = "EmployeeIdentificator";
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            'Add select fields (before the "Group By" clause)
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.FieldAlias = "EmployeeIdentificator"
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
            <value>String representing the friendly name shown</value>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByDeclarativeDefinition.html">Declarative GridGroupByField syntax</seealso>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByField.Aggregate">
            <remarks>
                Meaningful only for fields in the
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> collection.
            </remarks>
            <summary>
                Gets or sets aggregate function (from <see cref="T:Telerik.Web.UI.GridAggregateFunction"/>
                enumeration values) that will be applied on the grouped data.
            </summary>
            <value>
            Returns the result from currently used aggregate function. This property defaults
            to <strong>GridAggregateFunction.None</strong>
            </value>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "Freight";
            gridGroupByField.HeaderText = "Total shipping cost is ";
            gridGroupByField.Aggregate = GridAggregateFunction.Sum;
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "Freight"
            gridGroupByField.HeaderText = "Total shipping cost is "
            gridGroupByField.Aggregate = GridAggregateFunction.Sum
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByField.SortOrder">
            <remarks>
                Meaningful only for fields in the
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.GroupByFields"/> collection. 'None' value is
                not supported because it can not determine uniquely the order in which the groups
                will be displayed.
            </remarks>
            <summary>
                Gets or sets the value representing how the data will be sorted. Acceptable values
                are the values of <see cref="T:Telerik.Web.UI.GridSortOrder"/> enumeration except for None
                (Ascending, Descending).
            </summary>
            <value>
            Returns the sorting mode applied to the grouped data. By default it is
            Ascending.
            </value>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.SortOrder = GridSortOrder.Descending;
            expression.GroupByFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.SortOrder = GridSortOrder.Descending
            expression.GroupByFields.Add(gridGroupByField)
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByField.FormatString">
            <remarks>
            	<para>
                    Meaningful only for fields in the
                    <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> collection.
                </para>
            	<para>When rendering RadGrid is using this expression to format field's value. It
                is mandatory that {0} parameter is specified in the string - it will be replaced
                with field's runtime value.</para>
            </remarks>
            <summary>
                Gets or sets the string that will be used to format the GridGroupByField part of
                the <see cref="!:SelectFields"/> collection.
            </summary>
            <value>
            String, formated by the GridGroupByField's FormatString property. It defaults to:
            "{0}".
            </value>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.FormatString = "&lt;strong&gt;{0}&lt;/strong&gt;";
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.FormatString = "&lt;strong&gt;{0}&lt;/strong&gt;"
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByDeclarativeDefinition.html">Declarative GridGroupByField syntax</seealso>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByField.HeaderText">
            <remarks>
                Meaningful only for fields in the
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> collection. When rendering
                RadGrid will override the <strong>FieldAlias</strong> value with the
                <strong>HeaderText</strong> specified.
            </remarks>
            <value>
            	<strong>string</strong>, copied from the column's HeaderText if this group
            expression is based on a column. It defaults to the <strong>FieldAlias</strong> value
            (if specified).
            </value>
            <summary>
                Gets or sets the expression that will be displayed in the
                <see cref="T:Telerik.Web.UI.GridGroupHeaderItem"/>.
            </summary>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.HeaderText = "EmployeeNo";
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.HeaderText = "EmployeeNo"
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByField.HeaderValueSeparator">
            <summary>
            	<para>Gets or sets the string that separates header text from value text as the
                field is rendered in the <strong>GroupHeaderItems</strong>.</para>
            </summary>
            <value>
            	<para>string, represents the separator between the header text and value
                text.</para>
            	<para>This field value defaults to <strong>": "</strong>.</para>
            </value>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.HeaderValueSeparator = " for current group: ";
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.HeaderValueSeparator = " for current group: "
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
            <remarks>
                Meaningful only for fields in the
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> collection.
            </remarks>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
            <seealso cref="!:http://www.telerik.com/help/radgrid/v4_Net2/?grdGroupByDeclarativeDefinition.html">Declarative GridGroupByField syntax</seealso>
        </member>
        <member name="T:Telerik.Web.UI.GridGroupByFieldList">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.GridGroupingSettings">
            <summary>Container of miscellaneous grouping settings of RadGrid control</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupingSettings.#ctor(System.Web.UI.StateBag)">
            <summary>For internal usage only</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupingSettings.GroupContinuesFormatString">
            <summary>
            The group header message, indicating that the group continues on the next
            page.
            </summary>
            <seealso cref="!:grdLocalizingTootips.html" cat="RadGrid Manual">Localizing the grid messages</seealso>
            <remarks>
            Localizing the grid messages topic lists all the tooltips and text messages which
            can be modified.
            </remarks>
            <example>
            	<pre>
            &lt;GroupingSettings GroupContinuesFormatString="The group continues on the next page." /&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupingSettings.GroupContinuedFormatString">
            <summary>
            The group header message indicating that this group continues from the previous
            page.
            </summary>
            <seealso cref="!:grdLocalizingTootips.html" cat="RadGrid Manual">Localizing the grid messages</seealso> 
            <remarks>
            Localizing the grid messages topic lists all the tooltips and text messages which
            can be modified.
            </remarks>
            <example>
            	<pre>
            &lt;GroupingSettings GroupContinuedFormatString="This group continues from the previous page." /&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupingSettings.GroupSplitDisplayFormat">
            <summary>
            A part of the string that formats the information label that appears on each
            group header of a group that is split onto several pages parameter {0} will be replaced
            with the number of actual items displayed on the page parameter {1} will be replaced
            with the number of all items in the group
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupingSettings.GroupSplitFormat">
            <summary>
            Gets or sets the format string that will be used when group is split, containing
            the <strong>GroupSplitDisplayFormat</strong> or
            <strong>GroupContinuedFormatString</strong> and
            <strong>GroupContinuesFormatString</strong> or the three together.
            </summary>
            <value>This property defaults to "({0})"</value>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupingSettings.GroupByFieldsSeparator">
            <summary>
            String that separates each group-by field when displayed in
            <strong>GridGroupHeaderItems</strong>.
            </summary>
            <value>This property default to ";"</value>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupingSettings.CaseSensitive">
            <summary>
            Gets or sets a value indicating whether the grouping operations will be case
            sensitive or not.
            </summary>
            <value>
            	<strong>true</strong> if grouping is case sensitive, otherwise
            <strong>false</strong>. The default value is <strong>true</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupingSettings.ExpandTooltip">
            <summary>
            Gets or sets a string that will be displayed when the group expand image is
            hovered.
            </summary>
            <seealso cref="!:grdLocalizingTootips.html" cat="RadGrid Manual">Localizing the grid messages</seealso>
            <remarks>
            Localizing the grid messages topic lists all the tooltips and text messages which
            can be modified.
            </remarks>
            <example>
            	<pre>
              &lt;GroupingSettings ExpandTooltip="Click here to expand the group!" /&gt;
            </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupingSettings.CollapseTooltip">
            <summary>
            Gets or sets a string that will be displayed when the group collapse image is
            hovered.
            </summary>
            <seealso cref="!:grdLocalizingTootips.html" cat="RadGrid Manual">Localizing the grid messages</seealso>
            <remarks>
            Localizing the grid messages topic lists all the tooltips and text messages which
            can be modified.
            </remarks>
            <example>
            	<pre>
              &lt;GroupingSettings ExpandTooltip="Click here to collapse the group!" /&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupingSettings.UnGroupTooltip">
            <summary>
            Gets or sets a string that will be displayed when a group panel item is
            hovered.
            </summary>
            <seealso cref="!:grdLocalizingTootips.html" cat="RadGrid Manual">Localizing the grid messages</seealso>
            <remarks>
            Localizing the grid messages topic lists all the tooltips and text messages which
            can be modified.
            </remarks>
            <example>
            	<pre>
                &lt;radG:RadGrid&gt;<br/>        ..<br/>        &lt;GroupingSettings UnGroupTooltip="Wanna ungroup? Drag me back!" /&gt;<br/>    &lt;/radG:RadGrid&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupingSettings.UnGroupButtonTooltip">
            <summary>
            Gets or sets value text of group panel item's ungroup button's tooltip
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupingSettings.ShowUnGroupButton">
            <summary>
            Gets or sets value indicating if group panel item's ungroup button should be shown
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridGroupsChangingEventArgs">
            <summary>
            Holds properties specific for grouping mechanism such as performed action and
            reference to GridTableView where the action was performed.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupsChangingEventArgs.Action">
            <summary>
                Gets a reference to <see cref="T:Telerik.Web.UI.GridGroupsChangingAction"/> enumeration, which
                holds information about what action did fire the
                <see cref="E:Telerik.Web.UI.RadGrid.GroupsChanging"/> event.
            </summary>
            <example>
            	<para>protected void RadGrid1_GroupsChanging(object source,
                Telerik.Web.UI.GridGroupsChangingEventArgs e)<br/>
                {<br/>
                if (e.Action == GridGroupsChangingAction.Group)</para>
            	<para>{ ... }</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupsChangingEventArgs.TableView">
            <summary>
            Gets a reference to the <strong>GridTableView</strong> object where the grouping
            is performed.
            </summary>
            <value>a reference to <strong>GridTableView</strong> object.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupsChangingEventArgs.Expression">
            <summary>
                Gets or sets the <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> that will be used for
                grouping Telerik RadGrid.
            </summary>
            <example>
            	<code lang="CS" title="CS">
            protected void RadGrid1_GroupsChanging(object source, Telerik.Web.UI.GridGroupsChangingEventArgs e) 
            {  
              if (e.Action == GridGroupsChangingAction.Group) 
              { 
               GridGroupByField countryGroupField = new GridGroupByField(); 
               countryGroupField.FieldName = "Country"; 
               GridGroupByField cityGroupField = new GridGroupByField(); 
               cityGroupField.FieldName = "City"; 
              
               e.Expression.SelectFields.Clear(); 
               e.Expression.SelectFields.Add(countryGroupField); 
               e.Expression.SelectFields.Add(cityGroupField); 
               
               e.Expression.GroupByFields.Clear(); 
               e.Expression.GroupByFields.Add(countryGroupField); 
               e.Expression.GroupByFields.Add(cityGroupField); 
               ...
              }
            }
                </code>
            	<code lang="VB" title="VB">
            Protected Sub RadGrid1_GroupsChanging(ByVal source As Object, ByVal e As Telerik.Web.UI.GridGroupsChangingEventArgs)
             'Expression is added (by drag/grop on group panel)
              If (e.Action = GridGroupsChangingAction.Group) Then
               Dim countryGroupField As GridGroupByField = New GridGroupByField
               countryGroupField.FieldName = "Country"
               Dim cityGroupField As GridGroupByField = New GridGroupByField
               cityGroupField.FieldName = "City"
               e.Expression.SelectFields.Clear
               e.Expression.SelectFields.Add(countryGroupField)
               e.Expression.SelectFields.Add(cityGroupField)
               e.Expression.GroupByFields.Clear
               e.Expression.GroupByFields.Add(countryGroupField)
               e.Expression.GroupByFields.Add(cityGroupField)
              End If
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupsChangingEventArgs.SortedField">
            <summary>Gets a reference to the currently used <see cref="T:Telerik.Web.UI.GridGroupByField"/>.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupsChangingEventArgs.Canceled">
            <summary>
                Gets or sets a value indicating whether <see cref="E:Telerik.Web.UI.RadGrid.GroupsChanging"/>
                event will be canceled.
            </summary>
            <value>
            	<strong>true</strong>, if the event is canceled, otherwise
            <strong>false</strong>.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridHierarchySettings">
            <summary>
            Container of misc. grouping settings of RadGrid control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridHierarchySettings.ExpandTooltip">
            <summary>
            Gets or sets a string that represents the tooltip that will be shown when the
            expand image is hovered.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridHierarchySettings.CollapseTooltip">
            <summary>
            Gets or sets a string that represents the tooltip that will be shown when the
            collapse image is hovered.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridHierarchySettings.SelfExpandTooltip">
            <summary>
            Gets or sets a string that represents the tooltip that will be shown when the
            self-hierarchy expand image is hovered.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridHierarchySettings.SelfCollapseTooltip">
            <summary>
            Gets or sets a string that represents the tooltip that will be shown when the
            self-hierarchy collapse image is hovered.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridIndexCollection">
            <summary>
            This is a collection of item indexes - each item index is unique within the
            collection
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridIndexCollection.Add(System.Int32[])">
            <summary>
            Constructs and add item hierarchical index to the collection
            of indexes.
            </summary>
            <remarks>
            The hierarchical-index is based on sequential numbers of
            indxes of items and detail tables. For example
            index Add(1) will construct the hierarchicalindex for Item 1 in MasterTableView.
            Add(1, 0, 2) references to the item with index 2 that belongs to a child table 0 of
            the item 1 in MastertableView.
            </remarks>
            <param name="indexes"></param>
        </member>
        <member name="T:Telerik.Web.UI.GridItemDecorator">
            <summary>
            Summary description for GridItemDecorator.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridItemEventArgs.EventInfo">
            <summary>
            Event info object. Cast to derrived classes to obtain the appropriate instance
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridItemEventArgs.Canceled">
            <summary>
            Set to true to cancel the default event execution, if available. The ItemCreated and ItemDataBound events cannot be cancelled.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridItemDropPosition">
            <summary>
            	Specifies the position at which the user has dragged and dropped the source item(s) with regards to the 
            	destination item.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridItemDropPosition.Above">
            <summary>
            The source item(s) is dropped above (before) the destination item.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridItemDropPosition.Below">
            <summary>
            The source item(s) is dropped below (after) the destination item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridDragDropEventArgs.DestinationTableView">
            <summary>
            Contains <see cref="T:Telerik.Web.UI.GridTableView"/> instance to which belongs the destinationItem  
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPdfExportingArgs.RawHTML">
            <summary>
            Contains raw RadGrid's HTML which will be transformed to PDF.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridExportingArgs.ExportOutput">
            <summary>
            Contains export document which will be written to the response
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridCommandItem">
            <summary>
            Item that is displayed on top or at the bottom of the each GridTableView base on the settings of 
            <see cref="P:Telerik.Web.UI.GridTableView.CommandItemDisplay"/> property. Generally this item displays by default "Add new record" and "Refresh" button,
            but it can be customized using the <see cref="P:Telerik.Web.UI.GridTableView.CommandItemTemplate"/>. The commands bubbled through this item will be fired by 
            RadGrid.ItemCommand event. 
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridItem">
            <summary>
            Class that represents the rows of each GridTableView with RadGrid. All Items in RadGrid inherit from this class.
            RadGrid creates the items runtime, when it binds to data.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.#ctor(Telerik.Web.UI.GridTableView,System.Int32,System.Int32,Telerik.Web.UI.GridItemType)">
            <summary>
            Initializes the base properties of an item.
            </summary>
            <param name="ownerTableView"></param>
            <param name="itemIndex"></param>
            <param name="dataSetIndex"></param>
            <param name="itemType"></param>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.FireCommandEvent(System.String,System.Object)">
            <summary>
            Use this method to simulate item command event that bubbles to RadGrid and can be handeled automatically or in a custom manner,
            handling RadGrid.ItemCommand event.
            </summary>
            <param name="commandName">command to bubble, for example 'Page'</param>
            <param name="commandArgument">command argument, for example 'Next'</param>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.RestoreDecorator">
            <summary>
            This method is not intended to be used directly from your code.
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.Initialize(Telerik.Web.UI.GridColumn[])">
            <summary>
            This method is not intended to be used directly from your code
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.SetupItem(System.Boolean,System.Object,Telerik.Web.UI.GridColumn[],System.Web.UI.ControlCollection)">
            <summary>
            This method is not intended to be used directly from your code
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.PrepareItemStyle">
            <summary>Override this method to change the default logic for rendering the item</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.PrepareItemVisibility">
            <summary>Override this method to change the default logic for item visibility</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.SetTempIndexHierarchical(System.String)">
            <summary>
            Used after postback before ViewState becomes available - 
            for example in ItemCreated and ItemDataBound events
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.RemoveChildSelectedItems">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.RemoveChildEditItems">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.SetChildrenVisible(System.Boolean)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.SetVisibleChildren(System.Boolean)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.ExpandHierarchyToTop">
            <example>
            	<code lang="CS" title="C#">
            //get MasterTableView's second (index 1) nested view item
            GridNestedViewItem firstLevelNestedViewItem = (GridNestedViewItem)RadGrid1.MasterTableView.GetItems(GridItemType.NestedView)[1];
            //get second nested view item at level 2 of the hierarchy
            GridNestedViewItem secondLevelNestedViewItem = (GridNestedViewItem)firstLevelNestedViewItem.NestedTableViews[0].GetItems(GridItemType.NestedView)[1];
            //get the first item to be expanded
            GridItem itemToExpand = secondLevelNestedViewItem.NestedTableViews[0].GetItems(GridItemType.Item)[0];
            itemToExpand.ExpandHierarchyToTop();
                </code>
            	<code lang="VB" title="VB">
            'get MasterTableView's second (index 1) nested view item
            Dim firstLevelNestedViewItem As GridNestedViewItem = CType(RadGrid1.MasterTableView.GetItems(GridItemType.NestedView)(1), GridNestedViewItem)
            'get second nested view item at level 2 of the hierarchy
            Dim secondLevelNestedViewItem As GridNestedViewItem = CType(firstLevelNestedViewItem.NestedTableViews(0).GetItems(GridItemType.NestedView)(1), GridNestedViewItem)
            'get the first item to be expanded
            Dim itemToExpand As GridItem = secondLevelNestedViewItem.NestedTableViews(0).GetItems(GridItemType.Item)(0)
            itemToExpand.ExpandHierarchyToTop()
                </code>
            </example>
            <overloads>Expands the hierarchy starting from the last level to the top</overloads>
        </member>
        <member name="M:Telerik.Web.UI.GridItem.CalcColSpan(Telerik.Web.UI.GridColumn[],System.Int32,System.Int32)">
            <summary>
            Calculate column-span value for a cell using column list, when the cell indicated
            with FromCellIndex should be spanned to ToCellIndex
            </summary>
            <param name="columns">columns - visible property is taken in count</param>
            <param name="FromCellIndex">cell inbdex of spanned cell</param>
            <param name="ToCellIndex">cell index of next not-spanned cell or -1 for the last cell index</param>
            <returns>ColSpan number</returns>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.OwnerTableView">
            <summary>
            Gets a reference to the <strong>GridTableView</strong> that owns this
            <strong>GridItem.</strong>
            </summary>
            <example>
                You can use the OwnerTableView property to get an instance of the GridTableView
                that holds the item modified. For example in the
                <strong>SelectedIndexChanged</strong> event handler you can get the
                <strong>GridTableView</strong> object like this:
                <code lang="CS" title="C#">
            protected void RadGrid1_SelectedIndexChanged(object sender, EventArgs e)
                {
                    GridTableView tableview = RadGrid1.SelectedItems[0].OwnerTableView;
                }
                </code>
            	<code lang="VB" title="VB.NET">
            Protected Sub RadGrid1_SelectedIndexChanged(sender As Object, e As EventArgs)
               Dim tableview As GridTableView = RadGrid1.SelectedItems(0).OwnerTableView
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.OwnerID">
            <summary>
            Gets the <strong>ClientID</strong> of the <strong>GridTableView</strong> that
            owns this instance.
            </summary>
            <example>
                The OwnerID property will get the <strong>ClientID</strong> of the
                <strong>GridTableView</strong> that owns the referenced instance. For example the
                code below will return RadGrid1_ctl01 which is the ClientID of the MasterTableView
                for basic RadGrid:
                <code lang="CS" title="C#">
            protected void RadGrid1_SelectedIndexChanged(object sender, EventArgs e)
                {
                    Label1.Text = RadGrid1.SelectedItems[0].OwnerID;
                }
                </code>
            	<code lang="VB" title="VB.NET">
            Protected Sub RadGrid1_SelectedIndexChanged(sender As Object, e As EventArgs)
               Label1.Text = RadGrid1.SelectedItems(0).OwnerID
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.OwnerGridID">
            <summary>
            Gets the <strong>ClientID</strong> of the <strong>RadGrid</strong> instance that
            owns the item.
            </summary>
            <example>
                The OwnerGridID property will get the <strong>ClientID</strong> of the
                <strong>Grid</strong> instance that owns the referenced item. For example the code
                below will return RadGrid1 which is the ClientID of the owner Grid instance.
                <code lang="CS" title="C#">
            protected void RadGrid1_ItemCreated(object sender, GridItemEventArgs e)
                {
                    if (e.Item is GridEditableItem &amp;&amp; e.Item.IsInEditMode)
                            {
                         Response.Write(e.Item.OwnerGridID);
                        
                         }
                }
            </code>
            	<code lang="VB" title="VB.NET">
            Protected Sub RadGrid1_ItemCreated(sender As Object, e As GridItemEventArgs)
               If Typeof e.Item Is GridEditableItem And e.Item.IsInEditMode Then
                  Response.Write(e.Item.OwnerGridID)
               End If 
            End Sub
            </code>
            </example>
            <remarks>
            This would be useful if several controls use the same eventhandler and you need
            to diferentiate the Grid instances in the handler.
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.GridItem.CellDataBound">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.HasChildItems">
            <summary>
            Gets a value indicating whether this item has child items - or items somehow
            related to this.
            </summary>
            <example>
                For example the <strong>GridDataItem</strong> has child
                <strong>NestedViewItem</strong> that holds the hierarchy tables when grid is
                rendering hierarchy.<br/>
            	<strong>GroupHeaderItems</strong> has the items with a group for children, and so
                on.
                <code lang="CS" title="C#">
            protected void RadGrid1_ItemCreated(object sender, GridItemEventArgs e)
                {
                    if (e.Item is GridItem &amp;&amp; (e.Item as GridItem).HasChildItems == true)
                        {
                          Label1.Text = "has items";
                        }
                }
            </code>
            	<code lang="VB" title="VB">
            Protected Sub RadGrid1_ItemCreated(ByVal sender As Object, ByVal e As GridItemEventArgs)
                   If (Typeof e.Item Is GridItem AndAlso CType(e.Item, GridItem).HasChildItems = True) Then
                         Label1.Text = "has items"
                   End If
            End Sub
            </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.CanExpand">
            <summary>
            Gets a value indicating whether the item can be "expanded" to show its child items 
            </summary>
            <example>
                Shows whether an item can be "expanded" to show its child items
                <code lang="CS" title="C#">
            protected void RadGrid1_ItemCreated(object sender, GridItemEventArgs e)
                {
                    if (e.Item is GridItem &amp;&amp; (e.Item as GridItem).CanExpand == true)
                        {
                          Label1.Text = "Item was expanded";
                        }
                }
            </code>
            	<code lang="VB" title="VB">
            Protected Sub RadGrid1_ItemCreated(ByVal sender As Object, ByVal e As GridItemEventArgs)
                   If (Typeof e.Item Is GridItem AndAlso CType(e.Item, GridItem).CanExpand = True)
                         Label1.Text = "Item was expanded"
                   End If
            End Sub
            </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.DataItem">
            <summary>
            The original <strong>DataItem</strong> from the <strong>DataSource</strong>. See
            examples section below.
            </summary>
            <example>
            For example if you bind the grid to a <strong>DataView</strong> object the
            <strong>DataItem</strong> will represent the <strong>DataRowView</strong> object
            extracted from the <strong>DataView</strong> for this <strong>GridItem</strong>. Note
            that the <strong>DataItem</strong> object is available only when grid binds to data
            (inside the <strong>ItemDataBound</strong> server event handler).
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.DataSetIndex">
            <summary>
            Gets the index of the <strong>GridDataItem</strong> in the underlying
            DataTable/specified table from a DataSet<strong>.</strong>
            </summary>
            <value>Integer</value>
            <requirements>
            This property has a meaning only when the Telerik RadGrid source is
            DataTable.
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.ItemIndex">
            <summary>
                Gets the index of the grid item among the <see cref="P:Telerik.Web.UI.GridTableView.Items"/>
                collection. This index also can be used to get the <strong>DataKeyValues</strong>
                corresponding to this item from a <strong>GridTableView.</strong>
            </summary>
            <example>
                Gets a value representing the index of this item among the
                <see cref="P:Telerik.Web.UI.GridTableView.Items"/> collection. This index also can be used to
                get the <strong>DataKeyValues</strong> corresponding to this item from a
                <strong>GridTableView.</strong>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.ClientRowIndex">
            <summary>
            Gets the index of the row as in the html table object rendered on the client
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.RowIndex">
            <summary>
            Gets the index of the item in the rows collection of the underlying Table server control
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.ItemIndexHierarchical">
            <summary>
            Get the unique item index among all the item in the hierarchy. This index is used when setting item to selected, edited, etc
            </summary>
            <example>
                If we have three level hierarchy with two items each and select the first item in
                the third level then the ItemIndexHierarchical will be 1:0_1:0_0
                <code lang="CS" title="C#">
            protected void RadGrid1_SelectedIndexChanged(object sender, EventArgs e)
                {
                    Response.Write(RadGrid1.SelectedItems[0].ItemIndexHierarchical);
                }
                </code>
            	<code lang="VB" title="VB">
            Protected Sub RadGrid1_SelectedIndexChanged(sender As Object, e As EventArgs)
               Response.Write(RadGrid1.SelectedItems(0).ItemIndexHierarchical)
            End Sub 'RadGrid1_SelectedIndexChanged
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.ItemType">
            <summary>
            Gets the respective <see cref="T:Telerik.Web.UI.GridItemType">GridItemType</see> of the grid item.
            </summary>
            <example>
                Gets the respective <see cref="T:Telerik.Web.UI.GridItemType">GridItemType</see> of the grid item.
                <code lang="CS" title="C#">
            foreach (GridDataItem dataItem in rgdStateRules.MasterTableView.Items)
            {
              if (dataItem.ItemType == GridItemType.Item ||
                  dataItem.ItemType ==   GridItemType.AlternatingItem)
              {
                 string reqName = dataItem["SomeColumnUniqueName"]. Text;
                 ....
              }
            }
            </code>
            	<code lang="VB" title="VB">
            Dim dataItem As GridDataItem
            For Each dataItem In  rgdStateRules.MasterTableView.Items
               If dataItem.ItemType = GridItemType.Item Or dataItem.ItemType = GridItemType.AlternatingItem Then
                  Dim reqName As String = dataItem("SomeColumnUniqueName").Text
               End If
            Next dataItem
            </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.Expanded">
            <summary>
            Gets or sets a value indicating whether the grid item is expanded or
            collapsed.
            </summary>
            <example>
                The example below sets all expanded items to collapsed
                <code lang="CS" title="C#">
            for(int i = 0; i &lt; RadGrid.Items.Count - 1;i++)
                if(RadGrid.Items[i].Expanded)
                {
                     RadGrid.Items[i].Expanded = false;
                }
                </code>
            	<code lang="VB" title="VB">
            Dim i As Integer
            For i = 0 To (RadGrid.Items.Count - 1) Step -1
               If RadGrid.Items(i).Expanded Then
                  RadGrid.Items(i).Expanded = False
               End If
            Next i
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.Display">
            <example>
                The example below will hide the GridCommandItem.
                <code lang="CS" title="C#">
            if (e.Item is GridCommandItem)
                    {
                        e.Item.Display = false;
                    }
                </code>
            	<code lang="VB" title="VB">
            If Typeof e.Item Is GridCommandItem Then
               e.Item.Display = False
            End If
                </code>
            </example>
            <summary>Sets whether the GridItem will be visible or with style="display:none;"</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.Selected">
            <summary>Gets or set a value indicating whether the grid item is selected</summary>
            <example>
            	<para>You can check whether a certain item is selected using the Selected
                property:</para>
            	<code lang="CS" title="C#">
            protected void RadGrid1_PreRender(object sender, EventArgs e)
                {
                    foreach (GridDataItem dataitem in RadGrid1.MasterTableView.Items)
                    {
                        if (dataitem.Selected == true)
                        {
                            //do your thing
                        }
                    }
                }
                </code>
            	<code lang="VB" title="VB.NET">
            Protected Sub RadGrid1_PreRender(sender As Object, e As EventArgs)
               Dim dataitem As GridDataItem
               For Each dataitem In  RadGrid1.MasterTableView.Items
                  If dataitem.Selected = True Then
                    'do your thing
                  End If
               Next dataitem 
            End Sub 'RadGrid1_PreRender
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.Edit">
            <summary>Sets the Item in edit mode. Requires Telerik RadGrid to rebind.</summary>
            <remarks>
            	<para>
                    If <see cref="P:Telerik.Web.UI.GridTableView.EditMode"/> is set to InPlace, the grid column
                    editors will be displayed inline of this item.
                </para>
            	<para>
                    If <see cref="P:Telerik.Web.UI.GridTableView.EditMode"/> is set to EditForms, a new
                    GridItem will be created, which will be child of this item
                    (<strong>GridEditFormItem</strong>). The new item will hold the edit form.
                </para>
            </remarks>
            <example>
            	<para>We suggest using IsInEditMode instead of Edit to check whether an Item is in
                edit more or not.</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.GroupIndex">
            <summary>Gets the index of the Item in the group. This works only when grouping.</summary>
            <example>
                This example expands all items that meet the condition:
                <code lang="CS" title="C#">
            if (e.Item.GroupIndex == EditItemGroupIndex | EditItemGroupIndex.StartsWith(e.Item.GroupIndex + "_")) 
            {
             e.Item.Expanded = true;
            }
                </code>
            	<code lang="VB" title="VB">
            If e.Item.GroupIndex = EditItemGroupIndex Or EditItemGroupIndex.StartsWith(e.Item.GroupIndex &amp; "_") Then
            e.Item.Expanded = True
            End If
                </code>
            </example>
            <value>
            	<para>Returns a string formed: X_Y_Z, where:<br/>
                 - X is a zero-based value representing the group index (the first group of results
                will have index = 0)</para>
            	<para>- Y is a zero-based value representing the group level. If you group the grid
                using 2 criteria, the inner groups will have index = 1.</para>
            	<para>- Z is a zero-based value representing the GridItem index in the group (the
                first item will have index = 0)</para>
            	<para><strong>Note</strong> that if you use more criteria, you will have more
                indexes returned: X_Y_Z_W, where the last one is always the item index in the
                group.</para>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.IsDataBound">
            <summary>
            Gets a value indicating whether the grid item is bound to a data source.
            </summary>
            <example>
            Default value is true when the grid is databound.
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridItem.IsInEditMode">
            <summary>
            Gets a value indicating whether the grid item is in edit mode at the
            moment.
            </summary>
            <example>
                Will locate the TextBox for Item in Edit mode:
                <code lang="CS" title="C#">
            if (e.Item is GridEditableItem &amp;&amp; e.Item.IsInEditMode)
                {
                  TextBox txt = (e.Item as GridEditableItem)["SomeColumnName"].Controls[0] as TextBox;
                }
                </code>
            	<code lang="VB" title="VB">
            If Typeof e.Item Is GridEditableItem And e.Item.IsInEditMode Then
                ...
            End If
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.GridCommandItem.#ctor(Telerik.Web.UI.GridTableView)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridCommandItem.SetupItem(System.Boolean,System.Object,Telerik.Web.UI.GridColumn[],System.Web.UI.ControlCollection)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridCommandItem.PrepareItemStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.GridEditableItem">
            <summary>
            	<para>Represents the base class for any items that display and edit data in a
            <see cref="T:Telerik.Web.UI.GridTableView">GridTableView</see> of RadGrid. Inheritors has the
            capabilities to:</para>
            	<list type="bullet">
            		<item>Locate a table cell based on the column unique names</item>
            		<item>Extract values from the cells of column editors</item>
            		<item>Has a dictionary of saved-old-values that are necessary for optimistic concurency
            editing oprations</item>
            		<item>Edit/browse mode</item>
            		<item>EditManager instance, which is capable of locating the column
            editors</item></list>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridEditableItem.InitializeEditorInCell(Telerik.Web.UI.IGridEditableColumn)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridEditableItem.ExtractValues(System.Collections.IDictionary)">
            <summary>
            Extracts values for each column, using <see cref="M:Telerik.Web.UI.GridEditableColumn.FillValues(System.Collections.IDictionary,Telerik.Web.UI.GridEditableItem)"/>
            </summary>
            <param name="newValues">This dictionary to fill, this parameter should not be null</param>
        </member>
        <member name="M:Telerik.Web.UI.GridEditableItem.UpdateValues(System.Object)">
            <summary>
            Extracts values for each column, using <see cref="M:Telerik.Web.UI.GridEditableColumn.FillValues(System.Collections.IDictionary,Telerik.Web.UI.GridEditableItem)"/> and updates values in provided object;
            </summary>
            <param name="newValues">This dictionary to fill, this parameter should not be null</param>
        </member>
        <member name="M:Telerik.Web.UI.GridEditableItem.GetDataKeyValue(System.String)">
            <summary>
            Get the DataKeyValues from the owner GridTableView with the corresponding item ItemIndex and keyName.
            The keyName should be one of the specified in the  <see cref="P:Telerik.Web.UI.GridTableView.DataKeyNames"/> array
            </summary>
            <param name="keyName">data key name</param>
            <returns>data key value</returns>
        </member>
        <member name="P:Telerik.Web.UI.GridEditableItem.EditManager">
            <summary>Allows you to access the column editors</summary>
            <example>
            	<code lang="CS" title="C#">
            GridEditManager editMan = editedItem.EditManager;
            IGridEditableColumn editableCol = (column as IGridEditableColumn);
            IGridColumnEditor editor = editMan.GetColumnEditor( editableCol );
                </code>
            	<code lang="VB" title="VB">
            Dim editMan As GridEditManager = editedItem.EditManager
            Dim editableCol As IGridEditableColumn = CType(column, IGridEditableColumn)
            Dim editor As IGridColumnEditor = editMan.GetColumnEditor(editableCol)
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridEditableItem.Item(System.String)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="P:Telerik.Web.UI.GridEditableItem.Item(Telerik.Web.UI.GridColumn)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="P:Telerik.Web.UI.GridEditableItem.SavedOldValues">
            <summary>Gets the old value of the edited item</summary>
            <example>
            	<code lang="CS" title="C#">
            foreach (DictionaryEntry entry in newValues)
                 {
                    Label1.Text += "\n&lt;br /&gt;Key: " + entry.Key + "&lt;br /&gt;New value: " + entry.Value + "&lt;br /&gt; Old value: " + editedItem.SavedOldValues[entry.Key] + "&lt;br /&gt;";
                 }
                </code>
            	<code lang="VB" title="VB">
            	</code>
            	<code lang="VB" title="VB">
            For Each entry As DictionaryEntry In newValues
             Label1.Text += "" &amp; Microsoft.VisualBasic.Chr(10) &amp; "&lt;br /&gt;Key: " + entry.Key + "&lt;br /&gt;New value: " + entry.Value + "&lt;br /&gt; Old value: " + editedItem.SavedOldValues(entry.Key) + "&lt;br /&gt;"
            Next
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridEditableItem.CanExtractValues">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridEditableItem.KeyValues">
            <example>
            	<code lang="CS" title="C#">
            string keyValues = ((GridEditableItem)e.Item).KeyValues;  
            if (keyValues.Contains("CustomerID"))  
                  Session["CustomerID"] = keyValues.Substring(13, keyValues.Length - 1);  
                  else 
                  Session["OrderID"] = keyValues.Substring(10, keyValues.Length - 1);
                </code>
            	<code lang="VB" title="VB">
            Dim keyValues As String = CType(e.Item, GridEditableItem).KeyValues
            If keyValues.Contains("CustomerID") Then
             Session("CustomerID") = keyValues.Substring(13, keyValues.Length - 1)
            Else
             Session("OrderID") = keyValues.Substring(10, keyValues.Length - 1)
            End If
                </code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.GridDataItem">
            <summary>
            Summary description for GridDataItem.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridDataItem.ClientFireCommandFunction(System.String,System.String)">
            <summary>
            Generates a client-side function which fires a command with a given name and arguments
            </summary>
            <seealso cref="!:http://www.telerik.com/help/aspnet-ajax/grid_firecommand.html"/>
            <seealso cref="!:http://www.telerik.com/help/aspnet-ajax/grid_firecommand.html" cat="Client API">GridTableView fireCommand</seealso>
            <example>
            	<code lang="CS">
            protected void RadGrid1_ItemCreated(object sender, GridItemEventArgs e)
            {
                if (e.Item is GridDataItem)
                {
                    GridDataItem dataItem = (GridDataItem) e.Item;
                    ((Button) dataItem["MyTemplateColumn"].Controls[0]).OnClientClick =
                        dataItem.ClientFireCommandFunction("MyCommandName", "");
                }
            }
            </code>
            </example>
            <param name="commandName">Command's name</param>
            <param name="commandArgument">Command's argument</param>
        </member>
        <member name="M:Telerik.Web.UI.GridDataItem.SetVisibleChildren(System.Boolean)">
            <summary>Sets the visibility of the children items.</summary>
            <remarks>This method is for Telerik RadGrid internal usage.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.GridDataItem.InitializeEditorInCell(Telerik.Web.UI.IGridEditableColumn)">
            <remarks>This method is for Telerik RadGrid internal usage.</remarks>
        </member>
        <member name="T:Telerik.Web.UI.GridEditFormItem">
            <summary>
            Item that loads an EditForm during binding if <see cref="P:Telerik.Web.UI.GridTableView.EditMode"/> is <see cref="F:Telerik.Web.UI.GridEditMode.EditForms"/>. When in this mode
            RadGrid loads an EditFormItem for each normal data-bound item. EditForm is generated only for the items that are in <see cref="!:Edit"/> = true mode.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormItem.EditFormCell">
            <summary>
            The table cell where the edit form will be instantiated, during data-binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormItem.FormColumns">
            <summary>
            FormColumns are only available when EditFormType is GridEditFormType.AutoGenerated.
            These are the container controls for each edit-form-column. You cna find the edit controls 
            in these containers. You should not remove any controls from this containers.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridEditFormItem.ParentItem">
            <summary>
            The corresponding DataItem that the edit form is generated for.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridFilteringItem">
            <summary>
                It's an item, displaying input controls, which allows user to enter a filter values
                for each visible column in a GridTableView. By default the columns render a textbox
                and a button, displaying the filtering menu on click. This item is visible based on
                the settings of <see cref="P:Telerik.Web.UI.GridTableView.AllowFilteringByColumn"/> property.
                The items is displayed right under the header row of a GridTabelView.
            </summary>
            <seealso cref="!:grdSettingFilterTextBoxDimensions.html" cat="RadGrid Manual: How-To">Setting filter textbox dimensions/changing default filter image</seealso>
            <example>
            	<code lang="VB" title="Access controls of FilteringMenuItem" description="Setting filter textbox dimensions/changing default filter image">
            Protected Sub RadGrid1_ItemCreated(sender As Object, e As GridItemEventArgs) Handles RadGrid1.ItemCreated
               If Typeof e.Item Is GridFilteringItem Then
                  Dim filteringItem As GridFilteringItem = CType(e.Item, GridFilteringItem)
             
                  'set dimensions for the filter textbox 
                  Dim box As TextBox = CType(filteringItem("ContactName").Controls(0), TextBox)
                  box.Width = Unit.Pixel(30)
             
                  'set ImageUrl which points to your custom image
                  Dim image As Image = CType(filteringItem("ContactName").Controls(1), Image)
                 image.ImageUrl = "&lt;my_image_url&gt;"
               End If
            End Sub 'RadGrid1_ItemCreated
                </code>
            	<code lang="CS" title="Access controls of FilteringMenuItem" description="Setting filter textbox dimensions/changing default filter image">
            Protected void RadGrid1_ItemCreated(Object sender, GridItemEventArgs e)
            {
                     If (e.Item Is GridFilteringItem)
                    {
                        GridFilteringItem filteringItem = e.Item As GridFilteringItem;
             
                        //Set dimensions For the filter textbox 
                        TextBox box = filteringItem["ContactName"].Controls[0] As TextBox;
                        box.Width = Unit.Pixel(30);
             
                       //Set ImageUrl which points To your custom image
                       Image image = filteringItem["ContactName"].Controls[1] As Image;
                      image.ImageUrl = "&lt;my_image_url&gt;";
                    }
            }
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.GridFilteringItem.#ctor(Telerik.Web.UI.GridTableView,System.Int32,System.Int32)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridFilteringItem.Item(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.GridFooterItem">
            <summary>
            Displays the footer row of a GridTableView with cells for each column in the grid similar to GridHeaderItem.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridFooterItem.Item(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridFooterItem.Item(Telerik.Web.UI.GridColumn)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="T:Telerik.Web.UI.GridGroupHeaderItem">
            <summary>
            The item which splits the groups (when utilizing the grouping feature of RadGrid)
            and provides expand/collapse functionality for them.
            </summary>
            <example>
                Here is how you can get reference to the <strong>GridGroupHeaderItem</strong> on
                <strong>ItemDataBound</strong>:
                <code lang="VB" title="VB.NET">
            Private Sub RadGrid1_ItemDataBound(sender As Object, e As Telerik.Web.UI.GridItemEventArgs)
               If Typeof e.Item Is GridGroupHeaderItem Then
                  Dim item As GridGroupHeaderItem = CType(e.Item, GridGroupHeaderItem)
                  'do something here
               End If
            End Sub 'RadGrid1_ItemDataBound
                </code>
            	<code lang="CS" title="C#">
            private void RadGrid1_ItemDataBound(object sender, Telerik.Web.UI.GridItemEventArgs e)
            {
             if ( e.Item is GridGroupHeaderItem )
             {
              GridGroupHeaderItem item = (GridGroupHeaderItem)e.Item;
              //do something here
             }
             }
            }
                </code>
            </example>
            <remarks>Created and meaningful only with grouping enabled.</remarks>
            <requirements>
            	<see cref="T:Telerik.Web.UI.GridGroupByExpression"/> should be applied to have such type of
                item(s).
            </requirements>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdCustomizeGridGroupHeaderItem.html">Customize GridGroupHeaderItem</seealso>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdPerformCalculationsInGroupHeader.html">Performing calculations in group header</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupHeaderItem.#ctor(Telerik.Web.UI.GridTableView,System.Int32,System.Int32)">
            <summary>Marked for internal usage only</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupHeaderItem.Initialize(Telerik.Web.UI.GridColumn[])">
            <summary>Inherited from Control, for internal usage only</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupHeaderItem.PrepareItemStyle">
            <summary>Inherited from Control, for internal usage only</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupHeaderItem.SetupItem(System.Boolean,System.Object,Telerik.Web.UI.GridColumn[],System.Web.UI.ControlCollection)">
            <summary>Inherited from Control, for internal usage only</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupHeaderItem.GetChildItems">
            <summary>
                Method which returns the data items under the
                <see cref="T:Telerik.Web.UI.GridGroupHeaderItem"/> group.
            </summary>
            <returns>An array of GridItem instances</returns>
            <example>
                The code below can be used to loop through the data items in a group on button
                click handler (for example): 
                <code lang="VB" title="VB.NET">
            Dim groupHeader As GridGroupHeaderItem = RadGrid1.MasterTableView.GetItems(GridItemType.GroupHeader)(0)
            Dim groupItems As GridItem() = groupHeader.GetChildItems()
            'traverse the items and operate with them further
                </code>
            	<code lang="CS" title="C#">
            GridGroupHeaderItem groupHeader= RadGrid1.MasterTableView.GetItems(GridItemType.GroupHeader)[0] as GridGroupHeaderItem;
            GridItem [] groupItems = groupHeader.GetChildItems();
            //traverse the items and operate with them further
                </code>
            </example>
            <remarks>Meaningful only with grouping enabled.</remarks>
            <requirements>
            	<see cref="T:Telerik.Web.UI.GridGroupByExpression"/> should be applied to have
                <see cref="T:Telerik.Web.UI.GridGroupHeaderItem"/> available.
            </requirements>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupHeaderItem.SetVisibleChildren(System.Boolean)">
            <summary>
                Method which shows/hides the items in the group designated by the
                <see cref="T:Telerik.Web.UI.GridGroupHeaderItem"/>
            </summary>
            <returns>N/A</returns>
            <example>
                The code below will hide the items under the first group in the grid: 
                <code lang="VB" title="VB.NET">
            Dim groupHeader As GridGroupHeaderItem = RadGrid1.MasterTableView.GetItems(GridItemType.GroupHeader)(0)
            groupHeader.SetVisibleChildren(False)
                </code>
            	<code lang="CS" title="C#">
            GridGroupHeaderItem groupHeader = RadGrid1.MasterTableView.GetItems(GridItemType.GroupHeader)[0] as GridGroupHeaderItem;
            groupHeader.SetVisibleChildren(false);
                </code>
            </example>
            <remarks>Meaningful only with grouping enabled.</remarks>
            <requirements>
            	<see cref="T:Telerik.Web.UI.GridGroupByExpression"/> should be applied to have
                <see cref="T:Telerik.Web.UI.GridGroupHeaderItem"/> available.
            </requirements>
            <param name="value">
            boolean, determines whether the items in the group will be displayed or
            hidden
            </param>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupHeaderItem.DataCell">
            <summary>The cell holding the content of the <see cref="T:Telerik.Web.UI.GridGroupHeaderItem"/></summary>
            <value>N/A</value>
            <example>
                Below is a sample code presenting how to customize the <strong>DataCell</strong>
                content dynamically on <strong>ItemDataBound:</strong>
            	<code lang="VB" title="VB.NET">
            Private Sub RadGrid1_ItemDataBound(sender As Object, e As Telerik.Web.UI.GridItemEventArgs)
               If Typeof e.Item Is GridGroupHeaderItem Then
                  Dim item As GridGroupHeaderItem = CType(e.Item, GridGroupHeaderItem)
                  Dim groupDataRow As DataRowView = CType(e.Item.DataItem, DataRowView)
             
                  'Clear the present text of the cell
                  item.DataCell.Text = ""
                  Dim column As DataColumn
                  For Each column In groupDataRow.DataView.Table.Columns
             
                     'Check the condition and add only the field you need
                     If column.ColumnName = "Country" Then
                        item.DataCell.Text += "Customized display - Country is " + groupDataRow("Country").ToString()
                     End If
                  Next column
               End If
            End Sub 'RadGrid1_ItemDataBound
                </code>
            	<code lang="CS" title="C#">
            Private void RadGrid1_ItemDataBound(Object sender, Telerik.Web.UI.GridItemEventArgs e)
            {
             If ( e.Item Is GridGroupHeaderItem )
             {
              GridGroupHeaderItem item = (GridGroupHeaderItem)e.Item;
              DataRowView groupDataRow = (DataRowView)e.Item.DataItem;
             
              //Clear the present text of the cell
              item.DataCell.Text = "";
              foreach( DataColumn column In groupDataRow.DataView.Table.Columns)
             
              //Check the condition And add only the field you need
              If ( column.ColumnName == "Country" )
              {
               item.DataCell.Text += "Customized display - Country is " + groupDataRow
               ["Country"].ToString();
              }
             }
            }
                </code>
            </example>
            <remarks>Created and meaningful only with grouping enabled.</remarks>
            <requirements>
            	<see cref="T:Telerik.Web.UI.GridGroupByExpression"/> should be applied to have
                <see cref="T:Telerik.Web.UI.GridGroupHeaderItem"/> with DataCell.
            </requirements>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdCustomizeGridGroupHeaderItem.html">Customize GridGroupHeaderItem</seealso>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdPerformCalculationsInGroupHeader.html">Performing calculations in group header</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupHeaderItem.HasChildItems">
            <summary>
                Boolean property indicating whether the relevant
                <see cref="T:Telerik.Web.UI.GridGroupHeaderItem"/> has child items inside the group it forms.
            </summary>
            <value>boolean</value>
            <example>
            	<code lang="VB" title="VB.NET">
            Dim groupHeader As GridGroupHeaderItem = grid.MasterTableView.GetItems(GridItemType.GroupHeader)(0)
            If (groupHeader.HasChildItems) Then
              'operate with the items
            Else 
              'do something else
            End If
                </code>
            	<code lang="CS" title="C#">
            GridGroupHeaderItem groupHeader = grid.MasterTableView.GetItems(GridItemType.GroupHeader)[0] as GridGroupHeaderItem;
            if (groupHeader.HasChildItems)
            {
               //operate with the items
            }
            else
            {
               //do something else
            }
                </code>
            </example>
            <remarks>Meaningful only with grouping enabled.</remarks>
            <requirements>
            	<see cref="T:Telerik.Web.UI.GridGroupByExpression"/> should be applied to have
                <see cref="T:Telerik.Web.UI.GridGroupHeaderItem"/> with this boolean property.
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupHeaderItem.CanExpand">
            <summary>Marked for internal usage</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridHeaderItem">
            <summary>
            Summary description for GridHeaderItem.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridHeaderItem.#ctor(Telerik.Web.UI.GridTableView,System.Int32,System.Int32)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="M:Telerik.Web.UI.GridHeaderItem.Initialize(Telerik.Web.UI.GridColumn[])">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridHeaderItem.Item(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.GridMultiRowItem">
            <summary>
            Summary description for GridMultiRowItem.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridMultiRowItem.#ctor(Telerik.Web.UI.GridTableView)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridMultiRowItem.PrepareItemStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridTFoot.#ctor(Telerik.Web.UI.GridTableView)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridTFoot.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridTHead.#ctor(Telerik.Web.UI.GridTableView,System.Boolean)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.GridNestedViewItem">
            <summary>
            Item that contains the nested instances of GridTableView class, that appear as a child item of the corresponding GridDataItem
            </summary>
            <remarks>
            The child tables will be created when grid is databinding and will be added as controls of the <see cref="P:Telerik.Web.UI.GridNestedViewItem.NestedViewCell"/>
            Then these tables can also be accessed using the <see cref="P:Telerik.Web.UI.GridNestedViewItem.NestedTableViews"/> array.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.GridNestedViewItem.#ctor(Telerik.Web.UI.GridTableView,System.Int32,System.Int32)">
            <summary>
                Creates an instance of <see cref="T:Telerik.Web.UI.GridNestedViewItem">GridNestedViewItem</see> For
                internal usage only.
            </summary>
            <exclude/>
            <excludetoc/>
            <param name="ownerTableView">
                An instance of <see cref="T:Telerik.Web.UI.GridTableView">GridTableView Class</see>, which will
                contain the created item
            </param>
            <param name="itemIndex">
                The value for <see cref="P:Telerik.Web.UI.GridItem.ItemIndex">ItemIndex Property
                (Telerik.Web.UI.GridItem)</see> property
            </param>
            <param name="dataSetIndex">
                The value for <see cref="P:Telerik.Web.UI.GridItem.DataSetIndex">DataSetIndex Property
                (Telerik.Web.UI.GridItem)</see> property
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridNestedViewItem.PrepareItemStyle">
            <summary>Defines the default logic for rendering the item. For internal usage only.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridNestedViewItem.Initialize(Telerik.Web.UI.GridColumn[])">
            <summary>This method is not intended to be used directly from your code</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridNestedViewItem.SetupItem(System.Boolean,System.Object,Telerik.Web.UI.GridColumn[],System.Web.UI.ControlCollection)">
            <summary>This method is not intended to be used directly from your code</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridNestedViewItem.NestedViewCell">
            <summary>Gets the cell that contains the <see cref="P:Telerik.Web.UI.GridNestedViewItem.NestedTableViews"/>.</summary>
            <value>System.Web.UI.WebControls.TableCell</value>
            <example>
            	<code lang="CS">
            foreach (GridNestedViewItem nestedViewItem in radgrid1.MasterTableView.GetItems(GridItemType.NestedView))
            {
                TableCell cell = nestedViewItem.NestedViewCell;
                cell.BorderColor = System.Drawing.Color.Red;
            }
                </code>
            	<code lang="VB">
            Dim nestedViewItem As GridNestedViewItem
            For Each nestedViewItem In RadGrid1.MasterTableView.GetItems(GridItemType.NestedView)
                Dim cell As TableCell = nestedViewItem.NestedViewCell
                cell.BorderColor = System.Drawing.Color.Red
            Next nestedViewItem
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridNestedViewItem.NestedTableViews">
            <summary>
            Gets an array of GridTableView objects residing in the <see cref="P:Telerik.Web.UI.GridNestedViewItem.NestedViewCell"/>.
            </summary>
            <example>
            	<code lang="CS">
            GridTableView nestedTable = RadGrid1.MasterTableView.Items[0].ChildItem.NestedTableViews[0];
                </code>
            	<code lang="VB">
            Dim nestedTable As GridTableView = RadGrid1.MasterTableView.Items(0).ChildItem.NestedTableViews(0)
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridNestedViewItem.ParentItem">
            <summary>
             Gets a reference to a <see cref="T:Telerik.Web.UI.GridDataItem"/> that is parent of this
             <see cref="T:Telerik.Web.UI.GridNestedViewItem"/>
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridNoRecordsItem">
            <summary>
            GridNoRecordsItem is used to display no records template, in the corresponding table view has <see cref="P:Telerik.Web.UI.GridTableView.ShowHeadersWhenNoRecords"/> is set to true (the default)
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridNoRecordsItem.#ctor(Telerik.Web.UI.GridTableView,System.Int32,System.Int32)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridNoRecordsItem.PrepareItemStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridNoRecordsItem.Initialize(Telerik.Web.UI.GridColumn[])">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridNoRecordsItem.SetupItem(System.Boolean,System.Object,Telerik.Web.UI.GridColumn[],System.Web.UI.ControlCollection)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.GridPagerItem">
            <summary>
            Summary description for GridPagerItem.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridPagerItem.#ctor(Telerik.Web.UI.GridTableView,System.Int32,System.Int32,System.Boolean)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridPagerItem.SetupItem(System.Boolean,System.Object,Telerik.Web.UI.GridColumn[],System.Web.UI.ControlCollection)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridPagerItem.PrepareItemStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridPagerItem.InitializePagerItem(Telerik.Web.UI.GridColumn[])">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridPagerItem.GetNumericPager">
            <returns>Returns instance of control which contains grid numeric pager</returns>
            <example>
            	<para>If you have already defined an GridPagerTemplate, but still standard numeric
                pager is required you can attain this using the following code</para>
            	<code lang="CS">
            protected void RadGrid1_ItemCreated(object sender, Telerik.Web.UI.GridItemEventArgs e)
                {        
                    if (e.Item is GridPagerItem)
                    {
                        GridPagerItem gridPager = e.Item as GridPagerItem;
                        Control numericPagerControl = gridPager.GetNumericPager();
                        gridPager.Controls[0].Controls.Add(numericPagerControl);            
                    }
                }
            </code>
            	<code lang="VB">
            Protected Sub RadGrid1_ItemCreated(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs)
                If Typeof e.Item Is GridPagerItem Then
                    Dim gridPager As GridPagerItem = TryCast(e.Item, GridPagerItem)
                    Dim numericPagerControl As Control = gridPager.GetNumericPager()
                    gridPager.Controls(0).Controls.Add(numericPagerControl)
                End If
            End Sub
            </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerItem.IsTopPager">
            <summary>Gets the position of the pager in the RadGrid. Default value is false.</summary>
            <example>
            	<code lang="CS" title="C#">
            if (((GridPagerItem)this.Item).IsTopPager)
            {
            Item.Visible = false;
            return;
            }
                </code>
            	<code lang="VB" title="VB">
            If CType(Me.Item, GridPagerItem).IsTopPager Then
             Item.Visible = False
             Return
            End If
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerItem.PagerContentCell">
            <summary>The Cell where the PagerItems are located</summary>
            <example>
            	<code lang="CS" title="C#">
            if (e.Item is GridPagerItem)
               {
                  GridPagerItem pagerItem = (e.Item as GridPagerItem);
                  pagerItem.PagerContentCell.Controls.Clear();
                  //custom paging
               }
                </code>
            	<code lang="VB" title="VB">
            If Typeof e.Item Is GridPagerItem Then
            Dim pagerItem As GridPagerItem = CType(e.Item, GridPagerItem)
             pagerItem.PagerContentCell.Controls.Clear
             'custom paging
            End If
                </code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.GridStatusBarItem">
            <summary>
            GridStatusBarItem is used to display information messages for
            Telerik RadGrid status. Meaningful only when Telerik RadGrid is in AJAX
            mode.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridStatusBarItem.#ctor(Telerik.Web.UI.GridTableView,System.Int32,System.Int32)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="M:Telerik.Web.UI.GridStatusBarItem.PrepareItemStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridStatusBarItem.Initialize(Telerik.Web.UI.GridColumn[])">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridStatusBarItem.SetupItem(System.Boolean,System.Object,Telerik.Web.UI.GridColumn[],System.Web.UI.ControlCollection)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.GridPagerMode">
            <summary>
            The mode of the pager defines what buttons will be displayed and how the pager
            will navigate through the pages.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridPagerMode.NextPrev">
            <summary>The grid Pager will display only the Previous and Next link buttons.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridPagerMode.NumericPages">
            <summary>The grid Pager will display only the page numbers as link buttons.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridPagerMode.NextPrevAndNumeric">
            <summary>
            The grid Pager will display the Previous button, then the page numbers and then
            the Next button.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridPagerMode.NextPrevNumericAndAdvanced">
            <summary>
            The grid Pager will display the Previous button, then the page numbers and then
            the Next button. On the next Pager row, the Pager will display text boxes for
            navigating to a specific page and setting the Page size (number of items per
            page).
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridPagerMode.Advanced">
            <summary>
            The grid Pager will display text boxes for navigating to a specific page and
            setting the Page size (number of items per page).
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridPagerMode.Slider">
            <summary>
            The grid Pager will display a slider for very fast and AJAX-based navigation
            through grid pages.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridPagerPosition">
            <summary>This enumeration defines the possible positions of the pager item</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridPagerPosition.Bottom">
            <summary>
            The Pager item will be displayed on the bottom of the grid. (Default
            value)
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridPagerPosition.Top">
            <summary>The Pager item will be displayed on the top of the grid.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridPagerPosition.TopAndBottom">
            <summary>
            The Pager item will be displayed both on the bottom and on the top of the
            grid.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridPagerStyle">
            <summary>
            RadGrid and GridTableView use instance of this class to set style of thir PagerItem-s when rendering
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridTableItemStyle">
            <summary>
            Summary description for GridTableItemStyle.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridTableItemStyle.IsDefault">
            <summary>
            Returns 'True' if none of the properties have been set
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.IsDefault">
            <value>Returns <strong>true</strong> if none of the properties have been set.</value>
            <summary>
            Gets a value indicating whether the default pager will be used, i.e. no
            customizations have been made.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.IsPagerOnBottom">
            <summary>
            Gets a value indicating whether the pager is displayed on the bottom of the
            grid.
            </summary>
            <value>
            Returns <strong>true</strong> if the pager will be displayed on the bottom of the
            grid. Otherwise <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.IsPagerOnTop">
            <summary>
            Gets a value indicating whether the pager is displayed on the top of the
            grid.
            </summary>
            <value>
            Returns <strong>true</strong> if the pager will be displayed on the top of the
            grid. Otherwise <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.Mode">
            <summary>
            Gets or sets the mode of Telerik RadGrid Pager. The mode defines what
            the pager will contain. This property accepts as values only members of the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridPagerMode.html">GridPagerMode
            Enumeration</a>.
            </summary>
            <value>
            Returns the pager mode as one of the values of the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridPagerMode.html">GridPagerMode
            Enumeration</a>.
            </value>
            <remarks>
                You should have Paging enabled by setting the <see cref="P:Telerik.Web.UI.RadGrid.PageSize"/>
                property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.NextPageText">
            <summary>
            Text that would appear if Mode is PrevNext for 'next' page button
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.LastPageText">
            <summary>
            Text that would appear if Mode is PrevNext for 'last' page button
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.PrevPageImageUrl">
            <summary>
            Gets or sets url for Previous Page image
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.NextPageImageUrl">
            <summary>
            Gets or sets url for Next Page image
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.FirstPageImageUrl">
            <summary>
            Gets or sets url for first page image
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.LastPageImageUrl">
            <summary>
            Gets or sets url for first page image
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.FirstPageToolTip">
            <summary>
            ToolTip that would appear if Mode is PrevNext for 'next' page button
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.NextPageToolTip">
            <summary>
            ToolTip that would appear if Mode is PrevNext for 'next' page button
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.LastPageToolTip">
            <summary>
            ToolTip that would appear if Mode is PrevNext for 'last' page button
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.PrevPageToolTip">
            <summary>
            ToolTip that would appear if Mode is PrevNext for 'prev' page button
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.NextPagesToolTip">
            <summary>
            ToolTip that would appear if Mode is PrevNext for 'next' page button
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.PrevPagesToolTip">
            <summary>
            ToolTip that would appear if Mode is PrevNext for 'prev' page button
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.PageButtonCount">
            <summary>
                Gets or sets the number of buttons that would be rendered if pager Mode is
                <see cref="F:Telerik.Web.UI.GridPagerMode.NumericPages"/>
            </summary>
            <value>
            returns the number of button that will be displayed. The default value is 10
            buttons.
            </value>
            <remarks>
            By default 10 buttons will be displayed. If the number of grid pages is greater
            than 10, ellipsis will be displayed.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.Position">
            <summary>
            Gets or sets the Position of pager item(s).Accepts only values, members of the
            <a href="RadGridNet2~Telerik.Web.UI.GridPagerPosition.html">GridPagerPosition
            Enumeration</a>.
            </summary>
            <value>
            Returns the Pager position as a value, member of the
            <a href="RadGridNet2~Telerik.Web.UI.GridPagerPosition.html">GridPagerPosition
            Enumeration</a>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.PrevPageText">
            <summary>
            Text that would appear if Mode is PrevNext for 'previous' page button
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.FirstPageText">
            <summary>
            Text that would appear if Mode is PrevNext for 'first' page button
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.Visible">
            <summary>Gets or sets the visibility of the pager item</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.AlwaysVisible">
            <remarks>
            In order to display the grid pager regardless of the number of records returned
            and the page size, you should set this property of the corresponding GridTableView to
            <strong>true</strong>. Its default value is <strong>false</strong>.
            </remarks>
            <summary>
            Gets or set a value indicating whether the Pager will be visible regardless of
            the number of items. (See the remarks)
            </summary>
            <value>
            	<strong>true</strong>, if pager will be displayed, regardless of the number of
            grid items, othewise <strong>false</strong>. By fefault it is
            <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.EnableSEOPaging">
            <summary>
            Get or set a value indicating whether the SEO (Search Engine Optimized) paging
            enabled
            </summary>
            <isnew>December 15, 2006</isnew>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.HorizontalAlign">
            <summary>
                Gets or sets the horizontal align of the pager. Accepts as values members of the
                <see cref="P:Telerik.Web.UI.GridPagerStyle.HorizontalAlign"/> enumeration.
            </summary>
            <value>
                the horizontal align of the pager as a value from the
                <see cref="P:Telerik.Web.UI.GridPagerStyle.HorizontalAlign"/> enumeration.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.ShowPagerText">
            <summary>
            Gets or sets a value indicating whether the pager text or only the pager buttons
            will be displayed.
            </summary>
            <value>
            	<strong>true</strong> if both pager text and buttons will be displayed, otherwise
            <strong>false</strong>. By default it is <strong>true</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridPagerStyle.PagerTextFormat">
            <summary>
            The string used to format the description text that appears in a pager item. See
            the remarks.
            </summary>
            <remarks>
            The parameters {0) - {4} are mandatory.<br/>
            	<br/>
            Parameter {0} is used to display current page number.<br/>
            Parameter {1} is total number of pages.<br/>
            Parameter {2} will be replaced with the number of the first item in the current
            page.<br/>
            Parameter {3} will be set to the number of the last item in the current page.<br/>
            Parameter {4} indicates where pager buttons would appear.<br/>
            Parameter {5} corresponds to number of all items in the datasource.
            </remarks>
            <value>
            The default value is:<br/>
            	<font face="Courier New">Change page: {4}  Displaying page {0} of {1}, items {2}
            <font color="black"><font class="keyword">to</font> {3} of {5}</font></font>
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridPagingManager">
            <summary>
            Summary description for GridPagingManager.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagingManager.DataSourceCount">
            <summary>
            Number of items in the data-source
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPagingManager.Count">
            <summary>
            Number of items in the current page
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridPaperSize">
            <summary>
            Represents the paper size used when exporting to PDF.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridPdfSettings">
            <summary>
            Container of misc. grouping settings of RadGrid control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridPdfSettings.PaperSize">
            <summary>
            Gets or sets the physical paper size that RadGrid will use when exporting to PDF.
            </summary>
            <remarks>
            It will be overriden by setting PageWidth and PageHeight explicitly.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridPdfSettings.PageWidth">
            <summary>
            Gets or sets the page width that RadGrid will use when exporting to PDF.
            </summary>
            <remarks>
            This setting will override any predefined value that comes from the PaperSize property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridPdfSettings.PageHeight">
            <summary>
            Gets or sets the page height that RadGrid will use when exporting to PDF.
            </summary>
            <remarks>
            This setting will override any predefined value that comes from the PaperSize property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridPdfSettings.FontType">
            <summary>
            	<para class="">This property describes the different types of font embedding: Link,
                Embed and Subset.</para>
            </summary>
            <remarks>
                Possible values: 
                <list type="bullet">
            		<item>
            			<div class="">
            				<strong>Link</strong><br/>
                            The font program is referenced by name in the rendered PDF. Anyone who
                            views a rendered PDF with a linked font program must have that font
                            installed on their computer otherwise it will not display correctly.
                        </div>
            		</item>
            		<item>
            			<div class="">
            				<strong>Embed</strong><br/>
                            The entire font program is embedded in the rendered PDF. Embedding the
                            entire font program guarantees the PDF will display as intended by the
                            author on all computers, however this method does possess several
                            disadvantages:
                        </div>
            			<ol>
            				<li>
            					<div class="">
                                    Font programs can be extremely large and will significantly
                                    increase the size of the rendered PDF. For example, the MS
                                    Gothic TrueType collection is 8MB!
                                </div>
            				</li>
            				<li>
            					<div class="">
                                    Certain font programs cannot be embedded due to license
                                    restrictions. If you attempt to embed a font program that
                                    disallows embedding, RadGrid will substitute the font with a
                                    base 14 font and generate a warning message.
                                </div>
            				</li>
            			</ol>
            		</item>
            		<item>
            			<div class="">
            				<strong>Subset (default value)<br/></strong>Subsetting a font will
                            generate a new font that is embedded in the rendered PDF that contains
                            only the chars referenced by RadGrid. For example, if a particular
                            RadGrid utilised the Verdana font referencing only the character 'A', a
                            subsetted font would be generated at run-time containing only the
                            information necessary to render the character 'A'.<br/>
            				<br/>
                            Subsetting provides the benefits of embedding and significantly reduces
                            the size of the font program. However, small processing overhead is
                            incurred to generated the subsetted font.
                        </div>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.GridPropertyEvaluator">
            <summary>
            GridPropertyEvaluator
            A DataBinder.Eval() workalike that is a bit more forgiving and does not throw exceptions when it can't find a property.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridResizing">
            <summary>
            Summary description for GridResizing.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridScrolling">
            <summary>
            Contains properties related to customizing the settings for scrolling operation
            in Telerik RadGrid.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridScrolling.AllowScroll">
            <summary>
            Gets or sets a value indicating whether scrolling will be enabled in
            Telerik RadGrid.
            </summary>
            <value>true, if scrolling is enabled, otherwise false (the default value).</value>
        </member>
        <member name="P:Telerik.Web.UI.GridScrolling.ScrollHeight">
            <summary>
            Gets or sets a value specifying the grid height in pixels (px) beyond which the
            scrolling will be enabled.
            </summary>
            <value>the default value is 300px</value>
        </member>
        <member name="P:Telerik.Web.UI.GridScrolling.UseStaticHeaders">
            <summary>
            Gets or sets a value indicating whether grid column headers will scroll as the
            rest of the grid items or will remain static (MS Excel ® style).
            </summary>
            <value>
            	<strong>true</strong> if headers remain static on scroll, otherwise
            <strong>false</strong> (the default value).
            </value>
            <remarks>
                This property is meaningful only when used in conjunction with
                <see cref="P:Telerik.Web.UI.GridScrolling.AllowScroll"/> set to <strong>true</strong>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridScrolling.SaveScrollPosition">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will keep the
            scroll position during postbacks.
            </summary>
            <remarks>
                This property is meaningful only when used in conjunction with
                <see cref="P:Telerik.Web.UI.GridScrolling.AllowScroll"/> set to <strong>true</strong>.
            </remarks>
            <value>
            	<strong>true</strong> (the default value), if Telerik RadGrid keeps
            the scroll position on postback, otherwise <strong>false</strong> .
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridScrolling.EnableVirtualScrollPaging">
            <remarks>
            	<para>This property is particularly useful when working with huge datasets. Using
                the grid scrollbar, you can change the grid pages just like in Microsoft
                Word<font size="1">®.</font> When scrolling with the virtual scrollbar,
                Telerik RadGrid uses AJAX requests to change the pages, i.e. no
                Postbacks are performed. The overall behavior is smooth and with no flicker.</para>
            	<para>Note that you should have AJAX enabled for Telerik RadGrid by
                setting the <strong>EnableAJAX</strong>="<strong>True</strong>".</para>
            </remarks>
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will change
            the pages when you scroll using the grid scroller. This in terms of
            Telerik RadGrid is called Virtual Scrolling.
            </summary>
            <value>
            	<strong>true</strong>, if virtual scrolling is enabled, otherwise
            <strong>false</strong> (the default value).
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridSelecting">
            <summary>
            Provides properties related to setting the client-side selection in
            Telerik RadGrid.
            </summary>
            <remarks>
                You can get a reference to this class using
                <see cref="P:Telerik.Web.UI.GridClientSettings.Selecting"/> property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridSelecting.AllowCellSelect">
            <summary>not currently available</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridSelecting.AllowMultiCellSelect">
            <summary>not currently available</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridSelecting.AllowRowSelect">
            <summary>
            Gets or sets a value indicating whether you will be able to select a grid row on
            the client by clicking on it with the mouse.
            </summary>
            <value>
            true, if you will be able to select a row on the client, otherwise false (the
            default value).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridSelecting.AllowColumnSelect">
            <summary>not currently available</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridSelecting.AllowMultiColumnSelect">
            <summary>not currently available</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridSelecting.EnableDragToSelectRows">
            <summary>
            Gets or sets a value indicating whether you will be able to select multiple rows
            by dragging a rectangle around them with the mouse.
            </summary>
            <value>
            true, if you can select rows by dragging a rectangle with the mouse, otherwise
            false (the default value)
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridSelfHierarchySettings">
            <summary>
            Holds the column names presenting the self-referencing relations in the source
            table.
            </summary>
            <example>
            &lt;MasterTableView HierarchyDefaultExpanded="true" HierarchyLoadMode="Client"
            EnableNoRecordsTemplate="false"<br/>
            DataKeyNames= "ID,ParentID" Width="100%"&gt;<br/>
            	<font color="red">&lt;SelfHierarchySettings ParentKeyName="ParentID" KeyName="ID"
            /&gt;</font><br/>
            &lt;/MasterTableView&gt;
            </example>
            <remarks>Meaningful in cases of self-referenced grid.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.GridSelfHierarchySettings.IsSet">
            <remarks>This method is for Telerik RadGrid internal usage.</remarks>
            <summary>
            Checks if a self-hierarchy settings property value was changed and differs from its
            default.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSelfHierarchySettings.ParentKeyName">
            <summary>
            Gets or sets a value representing the parent ID field when building the
            self-referencing hierarchy.
            </summary>
            <remarks>
            The value property must be included in the <strong>DataKeyNames</strong> array
            for the <strong>MasterTableView</strong>.
            </remarks>
            <value>
            	<strong>string</strong>, representing the parent ID of the current table
            level.
            </value>
            <example>
            	<list type="termdef">
            		<item>
            			<description>
            				<pre>
            &lt;radG:RadGrid ID="RadGrid1" EnableAJAX="True" ShowHeader="true" runat="server" Skin="None"<br/>                        Width= "97%" GridLines="None" OnColumnCreated="RadGrid1_ColumnCreated"<br/>                        OnItemCreated="RadGrid1_ItemCreated"<br/>                        OnNeedDataSource= "RadGrid1_NeedDataSource"&gt;<br/>                        &lt;MasterTableView HierarchyDefaultExpanded="true" HierarchyLoadMode="Client" EnableNoRecordsTemplate="false"<br/>
            					<strong><u>DataKeyNames= "ID,ParentID"</u></strong> Width="100%"&gt;<br/>                            &lt;SelfHierarchySettings <strong><u>ParentKeyName="ParentID"</u></strong> KeyName="ID" /&gt;<br/>                        &lt;/MasterTableView&gt;<br/>                        &lt;ClientSettings AllowExpandCollapse="true" /&gt;
            &lt;/radG:RadGrid&gt;
            </pre>
            			</description>
            		</item>
            	</list>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridSelfHierarchySettings.KeyName">
            <summary>
            Gets or sets a value, representing the ID of the current table level in
            self-referencing hierarchy structure.
            </summary>
            <value><strong>string</strong>, representing the current table level.</value>
            <remarks>
            The value property must be included in the <strong>DataKeyNames</strong> array
            for the <strong>MasterTableView</strong>.
            </remarks>
            <example>
            	<list type="termdef">
            		<item>
            			<term>
            				<pre>
            &lt;radG:RadGrid ID="RadGrid1" EnableAJAX="True" ShowHeader="true" runat="server" Skin="None"<br/>                        Width= "97%" GridLines="None" OnColumnCreated="RadGrid1_ColumnCreated"<br/>                        OnItemCreated="RadGrid1_ItemCreated"<br/>                        OnNeedDataSource= "RadGrid1_NeedDataSource"&gt;<br/>                        &lt;MasterTableView HierarchyDefaultExpanded="true" HierarchyLoadMode="Client" EnableNoRecordsTemplate="false"<br/>
            					<strong><u>DataKeyNames= "ID,ParentID"</u></strong> Width="100%"&gt;<br/>                            &lt;SelfHierarchySettings ParentKeyName="ParentID" <strong><u>KeyName="ID"</u></strong> /&gt;<br/>                        &lt;/MasterTableView&gt;<br/>                        &lt;ClientSettings AllowExpandCollapse="true" /&gt;
            </pre>
            			</term>
            		</item>
            		<item>
            			<term>
            				<pre>
            &lt;/radG:RadGrid&gt;
            </pre>
            			</term>
            		</item>
            	</list>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridSelfHierarchySettings.MaximumDepth">
            <remarks>
            This property can be set <strong>only once</strong> when the grid is initialized
            and can not be modified.
            </remarks>
            <summary>
            Gets or sets a value indicating the level-depth limit of the nested
            tables.
            </summary>
            <value>
            	<strong>integer</strong>, representing the depth limit in levels of nesting. By
            default the limit is <strong>10 levels</strong>.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridSortOrder">
            <summary>Enumeration representing the order of sorting data in RadGrid</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridSortOrder.None">
            <summary>do not sort the grid data</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridSortOrder.Ascending">
            <summary>sorts grid data in ascending order</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridSortOrder.Descending">
            <summary>sorts grid data in descending order</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridSortExpression">
            <summary>
            Class that is used to define sort field and sort order for RadGrid
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpression.#ctor">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpression.SortOrderAsString">
            <summary>
            This method gives the string representation of the sorting order. It can be
            either "ASC" or "DESC"
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpression.SortOrderFromString(System.String)">
            <summary>
            Returns a GridSortOrder enumeration based on the string input. Takes either "ASC"
            or "DESC"
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpression.SortOrderAsString(Telerik.Web.UI.GridSortOrder)">
            <summary>
            This method gives the string representation of the sorting order. It can be
            either "ASC" or "DESC"
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpression.Equals(System.Object)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpression.GetHashCode">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpression.SetSortOrder(System.String)">
            <summary>
            	<para>Sets the sort order.</para>
            	<para>The SortOrder paremeter should be either "Ascending", "Descending" or "None".</para>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpression.ToString">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpression.Parse(System.String)">
            <summary>
            Parses a string representation of the sort order and returns
            GirdSortExpression.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortExpression.FieldName">
            <summary>Gets or sets the name of the field to which sorting is applied.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortExpression.SortOrder">
            <summary>Sets or gets the current sorting order.</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridSortExpressionCollection">
            <summary>
            A collection of <see cref="T:Telerik.Web.UI.GridSortExpression"/> objects. Depending on the value of
            <see cref="P:Telerik.Web.UI.GridSortExpressionCollection.AllowMultiColumnSorting"/> it holds single
            or multiple sort expressions. 
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.#ctor">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.#ctor(System.Collections.ArrayList)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.CopyTo(System.Array,System.Int32)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.CopyTo(Telerik.Web.UI.GridSortExpressionCollection)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the
            <strong>GridSortExpressionCollection</strong>.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.Add(System.Object)">
            <summary>Adds a <see cref="T:Telerik.Web.UI.GridSortExpression"/> to the collection.</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.Clear">
            <summary>Clears the GridSortExpressionCollection of all items.</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.GetExpression(System.String)">
            <summary>
            Find a SortExpression in the collection if it contains any with sort field = expression
            </summary>
            <param name="expression">sort field</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.AddSortExpression(Telerik.Web.UI.GridSortExpression)">
            <summary>
            If <see cref="P:Telerik.Web.UI.GridSortExpressionCollection.AllowMultiColumnSorting"/> is true adds the sortExpression in the collection. 
            Else any other expression previously stored in the collection wioll be removed
            </summary>
            <param name="sortExpression"></param>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.AddSortExpression(System.String)">
            <summary>
            If <see cref="P:Telerik.Web.UI.GridSortExpressionCollection.AllowMultiColumnSorting"/> is true adds the sortExpression in the collection. 
            Else any other expression previously stored in the collection wioll be removed
            </summary>
            <param name="expression">String containing sort field and optionaly sort order (ASC or DESC)</param>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.AddAt(System.Int32,Telerik.Web.UI.GridSortExpression)">
            <summary>
                Adds a <see cref="T:Telerik.Web.UI.GridSortExpression"/> to the collection at the specified
                index.
            </summary>
            <remarks>
                As a convenience feature, adding at an index greater than zero will set the
                <see cref="P:Telerik.Web.UI.GridSortExpressionCollection.AllowMultiColumnSorting"/> to <strong>true</strong>.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.RemoveSortExpression(Telerik.Web.UI.GridSortExpression)">
            <summary>Removes the specified <see cref="T:Telerik.Web.UI.GridSortExpression"/> from the collection.</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.ContainsSortExpression(Telerik.Web.UI.GridSortExpression)">
            <summary>
                Returns true or false depending on whether the specified sorting expression exists
                in the collection. Takes a <see cref="T:Telerik.Web.UI.GridSortExpression"/> parameter.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.ContainsExpression(System.String)">
            <summary>
            Returns true or false depending on whether the specified sorting expression
            exists in the collection. Takes a string parameter.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.ChangeSortOrder(System.String)">
            <summary>
            Adds the sort field (expression parameter) if the collection does not alreqady contain the field. Else the sort order of the field will be inverted. The default change order is
            Asc -&gt; Desc -&gt; No Sort. The No-Sort state can be controlled using <see cref="P:Telerik.Web.UI.GridSortExpressionCollection.AllowNaturalSort"/> property
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.GetSortString">
            <summary>
            Get a comma separated list of sort fields and sort-order, in the same format used by
            DataView.Sort string expression. Returns null (Nothing) if there are no sort expressions in the collection
            </summary>
            <returns>Comma separated list of sort fields and optionaly sort-order, null if there are no sort expressions in the collection</returns>
        </member>
        <member name="M:Telerik.Web.UI.GridSortExpressionCollection.IndexOf(Telerik.Web.UI.GridSortExpression)">
            <summary>
            Searches for the specified
            GridSortExpression and
            returns the zero-based index of the first occurrence within the entire
            <b>GridSortExpressionCollection</b>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortExpressionCollection.AllowMultiColumnSorting">
            <summary>
            If false, the collection can contain only one sort expression at a time.
            Trying to add a new one in this case will delete the existing expression
            or will change the sort order if its FiledName is the same.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortExpressionCollection.Count">
            <summary>Returns the number of items in the GridSortExpressionCollection.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortExpressionCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the GridSortExpressionCollection is
            synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortExpressionCollection.Item(System.Int32)">
            <summary>This is the default indexer of the collection - takes an integer value.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortExpressionCollection.SyncRoot">
            <summary>
            	<a onclick="javascript:Track('ctl00_LibFrame_ctl07|ctl00_LibFrame_ctl14',this);" href="http://msdn2.microsoft.com/en-us/library/system.collections.arraylist.syncroot.aspx">
            	</a>
            	<table>
            		<tr>
            			<td>Gets an object that can be used to synchronize access to the
                        GirdSortExpressionCollection.</td>
            		</tr>
            	</table>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortExpressionCollection.AllowNaturalSort">
            <summary>
            Allow the no-sort state when changing sort order.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridSortingSettings">
            <summary>
            Holds miscellaneous properties related to sorting like the localization
            properties.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortingSettings.SortToolTip">
            <summary>
            Gets or sets the tooltip that will be displayed when you hover the sorting button
            and there is no sorting applied.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortingSettings.SortedAscToolTip">
            <summary>
            Gets or sets the tooltip that will be displayed when you hover the sorting button
            and the column is sorted ascending.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortingSettings.SortedDescToolTip">
            <summary>
            Gets or sets the tooltip that will be displayed when you hover the sorting button
            and the column is sorted descending.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridSortingSettings.EnableSkinSortStyles">
            <summary>
            Defines whether a predefined CssClass will be applied to the sorted column's cells
            Default value is True
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridStateManager">
            <summary>
            State managemenet helper. This class is intended to be used only internally in RadGrid.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridStatusBarItemSettings">
            <summary>This class holds settings related to the StatusBar item.</summary>
            <example>
            	<para><font color="blue" size="2">&lt;</font><font color="maroon" size="2">StatusBarSettings</font><font color="red" size="2">ReadyText</font><font color="blue" size="2">="Stand
                by"</font><font color="blue" size="2">/&gt;</font></para>
            </example>
            <isnew>November 26, 2006</isnew>
        </member>
        <member name="P:Telerik.Web.UI.GridStatusBarItemSettings.StatusLabelID">
            <summary>Gets the ID of the Label that will display the status message.</summary>
        </member>
        <member name="P:Telerik.Web.UI.GridStatusBarItemSettings.ReadyText">
            <summary>
            Gets or sets the text that will be displayed in
            <strong>GridStatusBarItem</strong> when Telerik RadGrid does not perform
            any operations.
            </summary>
            <value>the default value is "Ready"</value>
        </member>
        <member name="P:Telerik.Web.UI.GridStatusBarItemSettings.LoadingText">
            <summary>
            Gets or sets the text that will be displayed in
            <strong>GridStatusBarItem</strong> when Telerik RadGrid is performing an
            AJAX request.
            </summary>
            <value>the default value is "Loading..."</value>
        </member>
        <member name="T:Telerik.Web.UI.GridStringTokenizer">
            <summary>
            A String Tokenizer that accepts Strings as source and delimiter. Only 1 delimiter is supported (either String or char[]).
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridStringTokenizer.#ctor(System.String,System.String)">
            <summary>
            Constructor for StringTokenizer Class.
            </summary>
            <param name="source">The Source String.</param>
            <param name="delimiter">The Delimiter String. If a 0 length delimiter is given, " " (space) is used by default.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridStringTokenizer.#ctor(System.String,System.Char[])">
            <summary>
            Constructor for StringTokenizer Class.
            </summary>
            <param name="source">The Source String.</param>
            <param name="delimiter">The Delimiter String as a char[].  Note that this is converted into a single String and
            expects Unicode encoded chars.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridStringTokenizer.#ctor(System.String)">
            <summary>
            Constructor for StringTokenizer Class.  The default delimiter of " " (space) is used.
            </summary>
            <param name="source">The Source String.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridStringTokenizer.#ctor">
            <summary>
            Empty Constructor.  Will create an empty StringTokenizer with no source, no delimiter, and no tokens.
            If you want to use this StringTokenizer you will have to call the NewSource(string s) method.  You may
            optionally call the NewDelim(string d) or NewDelim(char[] d) methods if you don't with to use the default
            delimiter of " " (space).
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridStringTokenizer.NewSource(System.String)">
            <summary>
            Method to add or change this Instance's Source string.  The delimiter will
            remain the same (either default of " " (space) or whatever you constructed 
            this StringTokenizer with or added with NewDelim(string d) or NewDelim(char[] d) ).
            </summary>
            <param name="newSrc">The new Source String.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridStringTokenizer.NewDelim(System.String)">
            <summary>
            Method to add or change this Instance's Delimiter string.  The source string
            will remain the same (either empty if you used Empty Constructor, or the 
            previous value of source from the call to a parameterized constructor or
            NewSource(string s)).
            </summary>
            <param name="newDel">The new Delimiter String.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridStringTokenizer.NewDelim(System.Char[])">
            <summary>
            Method to add or change this Instance's Delimiter string.  The source string
            will remain the same (either empty if you used Empty Constructor, or the 
            previous value of source from the call to a parameterized constructor or
            NewSource(string s)).
            </summary>
            <param name="newDel">The new Delimiter as a char[].  Note that this is converted into a single String and
            expects Unicode encoded chars.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridStringTokenizer.CountTokens">
            <summary>
            Method to get the number of tokens in this StringTokenizer.
            </summary>
            <returns>The number of Tokens in the internal ArrayList.</returns>
        </member>
        <member name="M:Telerik.Web.UI.GridStringTokenizer.HasMoreTokens">
            <summary>
            Method to probe for more tokens.
            </summary>
            <returns>true if there are more tokens; false otherwise.</returns>
        </member>
        <member name="M:Telerik.Web.UI.GridStringTokenizer.NextToken">
            <summary>
            Method to get the next (string)token of this StringTokenizer.
            </summary>
            <returns>A string representing the next token; null if no tokens or no more tokens.</returns>
        </member>
        <member name="P:Telerik.Web.UI.GridStringTokenizer.Source">
            <summary>
            Gets the Source string of this Stringtokenizer.
            </summary>
            <returns>A string representing the current Source.</returns>
        </member>
        <member name="P:Telerik.Web.UI.GridStringTokenizer.Delim">
            <summary>
            Gets the Delimiter string of this StringTokenizer.
            </summary>
            <returns>A string representing the current Delimiter.</returns>
        </member>
        <member name="T:Telerik.Web.UI.GridTableFrame">
            <summary>
            The frame attribute for a table specifies which sides of the frame surrounding
            the table will be visible.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableFrame.Void">
            <summary>No sides.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableFrame.Above">
            <summary>The top side only.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableFrame.Below">
            <summary>The bottom side only.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableFrame.HSides">
            <summary>The top and bottom sides only.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableFrame.LHS">
            <summary>The left-hand side only.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableFrame.RHS">
            <summary>The right-hand side only.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableFrame.VSides">
            <summary>The right and left sides only.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableFrame.Box">
            <summary>All four sides.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableFrame.Border">
            <summary>All four sides</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridTableTextDirection">
            <summary>
            Specifies the two possible text directions. Related to
            Telerik RadGrid support for right-to-left languages.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableTextDirection.LTR">
            <summary>Left-To-Right direction</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableTextDirection.RTL">
            <summary>Right-To-Left direction</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridChildLoadMode">
            <summary>
            Defines the possible modes for loading the child items when
            <strong>RadGrid</strong> displays hierarchy.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridChildLoadMode.ServerBind">
            <summary>
            All child GridTableViews will be bound immediately when DataBind occurs for a parent GridTableView or RadGrid. 
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridChildLoadMode.ServerOnDemand">
            <seealso cref="P:Telerik.Web.UI.GridItem.Expanded"/>
            <seealso cref="P:Telerik.Web.UI.GridItem.Expanded"/>
            <seealso cref="P:Telerik.Web.UI.GridItem.Expanded"/>
            <summary>
            DataBind of a child GridTableView would only take place when an item is Expanded  <seealso cref="P:Telerik.Web.UI.GridItem.Expanded"/>. 
            This is the default value of <see cref="P:Telerik.Web.UI.GridTableView.HierarchyLoadMode"/>
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridChildLoadMode.Client">
            <summary>
            	<para>This mode is similar to ServerBind, but items are expanded client-side, using
                JavaScript manipulations, instead of postback to the server.</para>
            	<para>
                    In order to use client-side hierarchy expand, you will need to set also
                    <see cref="!:RadGrid.ClientSettings.AllowExpandCollapse"/> to
                    <strong>true</strong>.
                </para>
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridGroupLoadMode">
            <summary>
            	<para>Specifies where the grouping will be handled. There are two options:</para>
            	<list type="bullet">
            		<item>Server-side - <strong>GridTableView.GroupLoadMode.Server</strong></item>
            		<item>Client-side -
            <strong>GridTableView.GroupLoadMode.Client</strong></item></list>
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridGroupLoadMode.Server">
            <summary>
            This is the default behavior. Groups are expanded after postback to the server
            for example: 
            <div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<code class="VB">
            &lt;MasterTableView GroupLoadMode=<font color="black"><font class="string">"Server"</font>&gt;</font>
            						</code></td></tr></tbody></table></div>
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridGroupLoadMode.Client">
            <summary>
            Groups will be expanded client-side and no postback will be performed.<br/>
            	<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<code class="VB">
            &lt;MasterTableView GroupLoadMode=<font color="black"><font class="string">"Client"</font>&gt;</font>
            						</code></td></tr></tbody></table></div>
            and set the client setting <strong>AllowGroupExpandCollapse</strong> to
            <strong>true:</strong><br/>
            	<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<code class="VB">
            &lt;ClientSettings AllowGroupExpandCollapse=<font color="black"><font class="string">"True"</font>&gt;</font>
            						</code></td></tr></tbody></table></div>
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridEditMode">
            <summary>
            	<para>To display the grid column editors inline when switching grid item in edit
                mode (see the screenshot below), you simply need to change the
                <strong>EditMode</strong> property to <strong>InPlace</strong>.</para>
            	<div class="LanguageSpecific" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code>
            &lt;radg:RadGrid id=<font class="string" color="black">"RadGrid1"</font> runat=<font class="string" color="black">"server"</font>&gt;<br/>&lt;MasterTableView AutoGenerateColumns=<font class="string" color="black">"True"</font> EditMode=<font color="black"><font class="string">"InPlace"</font> /&gt;<br/>&lt;/radg:RadGrid&gt;</font>
            							</code>
            						</pre>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            	<para class=""><img alt="A row in edit mode" src="Images/grd_EditMode_markedup.png" border="0"/></para>
            	<para>To display the grid column editors in auto-generated form when switching grid
                item in edit mode (see the screenshot below), you simply need to change the
                MasterTableView <strong>EditMode</strong> property to
                <strong>EditForms</strong>.</para>
            	<div class="LanguageSpecific">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code>
            &lt;radg:RadGrid id=<font class="string" color="black">"RadGrid1"</font> runat=<font class="string" color="black">"server"</font>&gt;<br/>&lt;MasterTableView AutoGenerateColumns=<font class="string" color="black">"True"</font> EditMode=<font color="black"><font class="string">"EditForms"</font> /&gt;<br/>&lt;/radg:RadGrid&gt;</font>
            							</code>
            						</pre>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div><img alt="Edit in forms mode" src="images/grd_EditInForms_thumb.png" border="0"/>
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridEditMode.InPlace">
            <summary>
            Telerik RadGrid will display the column editors inline when switching
            grid item in edit mode
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridEditMode.EditForms">
            <summary>
            Telerik RadGrid will display the grid column editors in
            auto-generated form when switching grid item in edit mode
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridDataSourcePersistenceMode">
            <summary>
            Indicate where RadGrid would store its data
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridDataSourcePersistenceMode.NoPersistence">
            <summary>
            DataSource (or generated html tables) data will not be stored.
            RadGrid will fire NeedDataSource event and will bind after each postback
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridDataSourcePersistenceMode.ViewState">
            <summary>
            Default - RadGrid stores data in the view-state bag.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridResetPageIndexAction">
            <summary>
                Discribe how <strong>RadGrid</strong> whould respond if the
                <see cref="!:CurrentPageIndex"/> is invalid when data-binding. See
                <see cref="P:Telerik.Web.UI.GridTableView.CurrentResetPageIndexAction"/>
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridResetPageIndexAction.SetPageIndexToFirst">
            <summary>
            CurrentPageIndex would be set to 0
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridResetPageIndexAction.SetPageIndexToLast">
            <summary>
            CurrentPageIndex would be set to current page count - 1
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridResetPageIndexAction.ReportError">
            <summary>
            RadGrid would repord an InvalidOperationException.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridInsertItemPageIndexAction.ShowItemOnFirstPage">
            <summary>
            InsertItem will be shown on first page
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridInsertItemPageIndexAction.ShowItemOnLastPage">
            <summary>
            InsertItem will be shown on the last page
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridInsertItemPageIndexAction.ShowItemOnCurrentPage">
            <summary>
            InsertItem will be shown on the current page
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridCommandItemDisplay">
            <summary>
            Specifies the position of the <see cref="!:CommandItem"/> in
            Telerik RadGrid.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridCommandItemDisplay.None">
            <summary>There will be no command item.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridCommandItemDisplay.Top">
            <summary>The command item will be above the Telerik RadGrid</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridCommandItemDisplay.Bottom">
            <summary>The command item will be on the bottom of Telerik RadGrid</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridCommandItemDisplay.TopAndBottom">
            <summary>
            The command item will be both on the top and bottom of
            Telerik RadGrid.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridInsertItemDisplay">
            <summary>
            Specifies the position of the <see cref="!:InsertItem"/> in
            Telerik RadGrid.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.GridInsertItemDisplay.Top">
            <summary>The command item will be above the Telerik RadGrid</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridInsertItemDisplay.Bottom">
            <summary>The command item will be on the bottom of Telerik RadGrid</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridTableView">
            <summary>Represents one table of data.</summary>
            <remarks>
            	<para>In case of flat grid structure, i.e. no hierarchy levels, this object is the
            <strong>MasterTableView</strong> itself.</para>
            	<para>In case of hierarchical structure, the topmost <strong>GridTableView</strong> is
            the <strong>MasterTableView</strong>. All inner (child) tables are refered as
            DetailTables. Each table that has children tables has a collection called
            <see cref="P:Telerik.Web.UI.GridTableView.DetailTables"/> where you can access these tables.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableViewBase.OwnerGrid">
            <summary>Gets the owner RadGrid object.</summary>
            <value>The owner RadGrid object.</value>
            <seealso cref="!:OwnerID">OwnerID Property</seealso>
        </member>
        <member name="F:Telerik.Web.UI.GridTableView.filterItemStyle">
            <summary>Gets the rendering style of a FilterItem.</summary>
        </member>
        <member name="F:Telerik.Web.UI.GridTableView.commandItemStyle">
            <summary>Gets the rendering style of a CommandItem.</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.#ctor(Telerik.Web.UI.RadGrid)">
            <summary>
            Constructs a new <strong>GridTableView</strong> and sets as its owner the RadGrid
            object.
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridTableView">GridTableView Method</seealso>
            <seealso cref="T:Telerik.Web.UI.GridTableView">GridTableView Method</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.#ctor(Telerik.Web.UI.RadGrid,System.Boolean)">
            <summary>
            Constructs a new <strong>GridTableView</strong> and sets as its owner the
            <strong>RadGrid</strong> object. Sets the <strong>IsTrackingViewState</strong> property
            to the corresponding value of the boolean parameter.
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridTableView">GridTableView Method</seealso>
            <seealso cref="T:Telerik.Web.UI.GridTableView">GridTableView Method</seealso>
            <param name="OwnerGrid">The owner RadGrid object</param>
            <param name="IsTrackingViewState">
            Indicates whether <strong>RadGrid</strong> is saving changes to its view
            state.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.#ctor">
            <summary>
            Default contructor for <strong>GridTableView</strong> - generally used by Page
            serializer only.
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridTableView">GridTableView Method</seealso>
            <seealso cref="T:Telerik.Web.UI.GridTableView">GridTableView Method</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.SwapColumns(System.String,System.String)">
            <summary>
            Swaps columns appearance position using the unique names of the two
            columns.
            </summary>
            <seealso cref="M:Telerik.Web.UI.GridTableView.SwapColumns(System.String,System.String)">SwapColumns Method</seealso>
            <param name="columnName1">first column unique name</param>
            <param name="columnName2">second column unique name</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.SwapColumns(System.Int32,System.Int32)">
            <summary>Swaps columns appearance position using order indexes of the two columns.</summary>
            <remarks>
            You should have in mind that <strong>GridExpandColumn</strong> and
            <strong>RowIndicatorColumn</strong> are always in front of data columns so that's why
            you columns will start from index 2.
            </remarks>
            <seealso cref="M:Telerik.Web.UI.GridTableView.SwapColumns(System.String,System.String)">SwapColumns Method</seealso>
            <param name="orderIndex1">first column order index</param>
            <param name="orderIndex2">second column order index</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.ClearSelectedItems">
            <summary>
            Removes all selected items that belong to this <strong>GridTableView</strong>
            instance.
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridSelecting">GridSelecting Class</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.ClearEditItems">ClearEditItems Method</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.ClearEditItems">
            <summary>
            Removes all edit items that belong to the <strong>GridTableView</strong>
            instance.
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridEditFormItem">GridEditFormItem Class</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.ClearSelectedItems">ClearSelectedItems Method</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.Rebind">
            <summary>
                Forces the Owner <strong>RadGrid</strong> to fire
                <see cref="E:Telerik.Web.UI.RadGrid.NeedDataSource"/> event then calls
                <see cref="M:Telerik.Web.UI.GridTableView.DataBind"/>.
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridNeedDataSourceEventHandler">GridNeedDataSourceEventHandler Delegate</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.DataBind">DataBind Method</seealso>
            <remarks>
            The <strong>Rebind</strong> method should be called every time a change to the
            <strong>RadGrid</strong> columns/items has been made.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.DataBind">
            <summary>Binds the data source to the <strong>RadGrid</strong> instance.</summary>
            <remarks>
                Call this member to bind partially <strong>RadGrid</strong>. Before calling this
                method the <see cref="P:Telerik.Web.UI.GridTableView.DataSource"/> property should be assigned or you can use
                <see cref="M:Telerik.Web.UI.GridTableView.Rebind"/> method instead. Use <see cref="M:Telerik.Web.UI.RadGrid.DataBind"/>
                or <see cref="M:Telerik.Web.UI.RadGrid.Rebind"/> member to bind all
                <strong>GridTableView</strong>s in <strong>RadGrid</strong>.
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataSource">DataSource Property</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.Rebind">Rebind Method</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.ClearChildSelectedItems">
            <summary>For internal usage.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.ClearChildEditItems">
            <summary>For internal usage.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.GetColumn(System.String)">
            <summary>
            Returns a <see cref="T:Telerik.Web.UI.GridColumn"/> based on its
            <see cref="P:Telerik.Web.UI.GridColumn.UniqueName"/>.
            </summary>
            <returns>
            The <strong>GridColumn</strong> object related to the
            <em>columnUniqueName</em>.
            </returns>
            <seealso cref="T:Telerik.Web.UI.GridColumn">GridColumn Class</seealso>
            <seealso cref="P:Telerik.Web.UI.GridColumn.UniqueName">UniqueName Property (Telerik.Web.UI.GridColumn)</seealso>
            <example>
            	<para>The following code snippet demonstrates how you to access a column at
                PreRender RadGrid event and make set it as invisible:</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;radg:radgrid id="RadGrid1" DataSourceID="AccessDataSource1"
                runat="server" OnPreRender="RadGrid1_PreRender"&gt;<br/>
                &lt;/radg:radgrid&gt;<br/>
                &lt;asp:AccessDataSource ID="AccessDataSource1"
                DataFile="~/Grid/Data/Access/Nwind.mdb"<br/>
                SelectCommand="SELECT CustomerID, CompanyName, ContactName FROM Customers"<br/>
                runat="server"&gt;<br/>
                &lt;/asp:AccessDataSource&gt;</para>
            	<code lang="CS" title="[New Example]">
            protected void RadGrid1_PreRender(object sender, System.EventArgs e)
            {
                 RadGrid1.MasterTableView.GetColumn( "CustomerID" ).Visible = false;            
            }
            </code>
            </example>
            <seealso cref="M:Telerik.Web.UI.GridTableView.GetItems(Telerik.Web.UI.GridItemType[])">GetItems Method</seealso>
            <param name="columnUniqueName">The <see cref="P:Telerik.Web.UI.GridColumn.UniqueName"/> for the requested column.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.GetColumnSafe(System.String)">
            <summary>
            Returns a <see cref="T:Telerik.Web.UI.GridColumn"/> based on its
            <see cref="P:Telerik.Web.UI.GridColumn.UniqueName"/>.
            </summary>
            <param name="columnUniqueName">The <see cref="P:Telerik.Web.UI.GridColumn.UniqueName"/> for the requested column.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.GetItems(Telerik.Web.UI.GridItemType[])">
            <summary>
            Returns a collection of <see cref="T:Telerik.Web.UI.GridItem"/> objects based on their
                 <see cref="P:Telerik.Web.UI.GridItem.ItemType"/>.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.GridItem"/>s collection of objects based on their
                <see cref="P:Telerik.Web.UI.GridItem.ItemType"/>.
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridTableView.GetColumn(System.String)">GetColumn Method</seealso>
            <param name="includeItemTypes">
            The <see cref="P:Telerik.Web.UI.GridItem.ItemType"/>, which will be used as a criteria for
            the collection.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.PrepareControlHierarchy">
            <summary>
            Applies all view changes to control hierarchy before rendering
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.CreateTableView(Telerik.Web.UI.RadGrid,System.Boolean)">
            <summary>
            This method is used by RadGrid internally. Please do not use.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.Clone">
            <exclude/>
            <excludetoc/>
            <summary>For internal structure usage.</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.CreateControlHierarchy(System.Boolean)">
            <summary>
            Recreates all GridItems and chld controls, using the DataSource or the ViewState
            </summary>
            <param name="useDataSource">'True' means that DataBind() is executing. 'False' means that Viewtate 
            has been just loaded after postback.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.ExportToCSV">
            <summary>
            Exports the grid data in CSV format using the properties set in the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridExportSettings.html">ExportSettings</a>.
            </summary>
            <seealso cref="M:Telerik.Web.UI.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx">MS Excel and MS Word online example</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.ExportToPdf">
            <summary>
            Exports the grid data in PDF format using the properties set in the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridExportSettings.html">ExportSettings</a>.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx">Exporting online example</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.ExportToExcel">
            <summary>
            Exports the grid data in Microsoft Excel ® format using the properties set in the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridExportSettings.html">ExportSettings</a>.
            </summary>
            <seealso cref="M:Telerik.Web.UI.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx">MS Excel and MS Word online example</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.ExportToWord">
            <summary>
            Exports the grid data in Microsoft Word ® format based on the selected ExportSettings.
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridExportSettings">GridExportSettings Class</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="!:ExportToExcel2007">ExportToExcel2007 Method</seealso>
            <seealso cref="!:ExportToWord2007">ExportToWord2007 Method</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.SetLevelRequiresBinding">
            <summary>For internal usage.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.PrepareExport">
            <exclude/>
            <excludetoc/>
            <summary>For internal usage.</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.ExtractValuesFromItem(System.Collections.IDictionary,Telerik.Web.UI.GridEditableItem)">
            <summary>
                The passed IDictionary object (like Hashtable for example) will be filled with the
                names/values of the corresponding column data-fields and their values. Only
                instances of type <see cref="T:Telerik.Web.UI.GridEditableColumn"/> support extracting values.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/DataEditing/ExtractValues/DefaultCS.aspx">Using grid server-side API for extraction</seealso>
            <param name="newValues">the dictionary that will be filled</param>
            <param name="editedItem">the item to extract values from</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.PerformUpdate(Telerik.Web.UI.GridEditableItem)">
            <summary>
                Perform asynchronous update operation, using the DataSource control API and the
                Rebind method. Please, make sure you have specified the correct
                <strong>DataKeyNames</strong> for the <see cref="T:Telerik.Web.UI.GridTableView"/>. When the
                asynchronous operation calls back, RadGrid will fire
                <see cref="E:Telerik.Web.UI.RadGrid.ItemUpdated"/> event.
            </summary>
            <remarks>
            	<para>The following online example uses PerformUpdate method:</para>
            	<para>
            		<span id="Header1_ExampleLabel"><a href="http://www.telerik.com/demos/aspnet/Grid/Examples/AJAX/EditOnDblClick/DefaultCS.aspx">
                Edit on double-click</a></span></para>
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformInsert">PerformInsert Method</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformDelete(Telerik.Web.UI.GridEditableItem)">PerformDelete Method</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.PerformUpdate(Telerik.Web.UI.GridEditableItem,System.Boolean)">
            <summary>
                Perform asynchronous update operation, using the DataSource control API. Please
                make sure you have specified the correct <strong>DataKeyNames</strong> for the
                GridTableView. When the asynchronous operation calls back, RadGrid will fire
                <see cref="E:Telerik.Web.UI.RadGrid.ItemUpdated"/> event. The boolean property defines if
                RadGrid will <see cref="M:Telerik.Web.UI.GridTableView.Rebind"/> after the update.
            </summary> 
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformInsert">PerformInsert Method</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformDelete(Telerik.Web.UI.GridEditableItem)">PerformDelete Method</seealso>
            <param name="editedItem">the item that is in edit mode and should be updated</param>
            <param name="suppressRebind">set to true to prevent grid from binding after the update operation completes</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.PerformInsert">
            <summary>
                Perform asynchronous insert of the new item, diplayed by RadGrid when in edit mode,
                using the DataSourceControl API, then <see cref="M:Telerik.Web.UI.GridTableView.Rebind"/>. When the
                asynchronous operation calls back, RadGrid will fire
                <see cref="E:Telerik.Web.UI.RadGrid.ItemInserted"/> event.
            </summary>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformUpdate(Telerik.Web.UI.GridEditableItem)">PerformUpdate Method</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformDelete(Telerik.Web.UI.GridEditableItem)">PerformDelete Method</seealso>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.GetInsertItem">
            <summary>
            Get the item that appears when grid is in Insert Mode.
            </summary>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformInsert">PerformInsert Method</seealso>
            <returns>A reference to the newly inserted item for the respective GridTableView.</returns>
            <remarks>
            	<para>There is scenarios in which you need to make some changes with/depending on
                the inserted item.</para>
            	<para>If you want to predifine some controls values on item insertion, you should
                use the ItemCommand server-side event to access it:</para>
            	<pre>
            [C#]<br/>private void RadGrid1_ItemCommand(object source, Telerik.Web.UI.GridCommandEventArgs e)<br/>{<br/>  if (e.CommandName == RadGrid.InitInsertCommandName)<br/>
              {<br/>    e.Canceled = true;<br/>
                e.Item.OwnerTableView.InsertItem();<br/>    GridEditableItem insertedItem = e.Item.OwnerTableView.GetInsertItem();<br/>
                GridEditFormItem editFormItem = insertedItem as GridEditFormItem; <br/><br/>    TextBox box = editFormItem.FindControl("txtEmployeeID") as TextBox;<br/>    box.Text = "11";<br/>  }<br/>}
                </pre>
            	<pre>
            		<br/>[VB.NET]
                </pre>
            	<pre>
            Private Sub RadGrid1_ItemCommand(ByVal source As Object, ByVal e As Telerik.Web.UI.GridCommandEventArgs) Handles RadGrid1.ItemCommand<br/>         If (e.CommandName = RadGrid.InitInsertCommandName) Then<br/>
                        e.Canceled = True<br/>            e.Item.OwnerTableView.InsertItem()<br/>             Dim insertedItem As GridEditableItem = e.Item.OwnerTableView.GetInsertItem()<br/>
                         Dim editFormItem As GridEditFormItem = CType(insertedItem, GridEditFormItem)<br/><br/>             Dim box As TextBox = CType(MyUserControl.FindControl("insertedItem"), TextBox)<br/>            box.Text = "11"<br/>         End If<br/> End Sub
                </pre>
            	<para><span class="threadMessageBody" id="ctl00_ctl07_repeaterMessages_ctl00_lblMessageText">If you want to get access to
                the newly added row and its values to update in a custom data source, you can use
                the InsertCommand event:</span></para>
            	<para><span class="threadMessagebody">[C#]</span></para>
            	<pre>
            		<span class="threadMessagebody">protected void RadGrid1_InsertCommand(object source, GridCommandEventArgs e)  <br/> {  <br/>     GridDataInsertItem gridDataInsertItem =  <br/>         (GridDataInsertItem)(RadGrid1.MasterTableView.GetInsertItem());<br/>
                Hashtable ht = new Hashtable();  <br/>     gridDataInsertItem.ExtractValues(ht);  <br/>     //Loop through each "DictionaryEntry" in hash table and insert using key value <br/>     foreach (DictionaryEntry ent in ht)  <br/>
                 {  <br/>         //get the key values and insert to custom datasource. <br/>     } </span>
            		<span class="threadMessagebody"><br/>}</span>
            	</pre>
            	<para>[Visual Basic]</para>
            	<pre>
            Protected Sub RadGrid1_InsertCommand(ByVal source As Object, ByVal e As GridCommandEventArgs)<br/>    Dim gridDataInsertItem As GridDataInsertItem = CType(RadGrid1.MasterTableView.GetInsertItem,GridDataInsertItem)<br/>
                Dim ht As Hashtable = New Hashtable<br/>    gridDataInsertItem.ExtractValues(ht)<br/>    'Loop through each "DictionaryEntry" in hash table and insert using key value <br/>    For Each ent As DictionaryEntry In ht<br/>
                    'get the key values and insert to custom datasource. <br/>    Next<br/>End Sub
                </pre>
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.PerformInsert(Telerik.Web.UI.GridEditableItem)">
            <summary>
            Performs asynchronous insert operation, using the DataSourceControl API, then
            Rebinds. When the asynchronous operation calls back, RadGrid will fire
            <see cref="E:Telerik.Web.UI.RadGrid.ItemInserted"/> event.
            </summary>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformUpdate(Telerik.Web.UI.GridEditableItem)">PerformUpdate Method</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformDelete(Telerik.Web.UI.GridEditableItem)">PerformDelete Method</seealso>
            <param name="editedItem">item to be inserted</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.PerformInsert(Telerik.Web.UI.GridEditableItem,System.Boolean)">
            <summary>
            Perform asynchronous insert operation, using the DataSource control API.
            When the asynchronous operation calls back, RadGrid will fire <see cref="E:Telerik.Web.UI.RadGrid.ItemInserted"/> event.
            </summary> 
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformUpdate(Telerik.Web.UI.GridEditableItem)">PerformUpdate Method</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformDelete(Telerik.Web.UI.GridEditableItem)">PerformDelete Method</seealso>
            <param name="editedItem">the item to be inserted</param>
            <param name="suppressRebind">True to prevent from binding after the insert operartion completes.</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.PerformDelete(Telerik.Web.UI.GridEditableItem)">
            <summary>
            Perform asynchronous delete operation, using the DataSourceControl API the Rebinds the grid. Please make sure you have specified the correct <strong>DataKeyNames</strong> for the GridTableView.
            When the asynchronous operation calls back, RadGrid will fire <see cref="E:Telerik.Web.UI.RadGrid.ItemDeleted"/> event.
            </summary> 
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformUpdate(Telerik.Web.UI.GridEditableItem)">PerformUpdate Method</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformInsert">PerformInsert Method</seealso>
            <param name="editedItem">The item that should be deleted</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.PerformDelete(Telerik.Web.UI.GridEditableItem,System.Boolean)">
            <summary>
            Perform delete operation, using the DataSourceControl API. Please make sure you have specified the correct <strong>DataKeyNames</strong> for the GridTableView.
            </summary>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformUpdate(Telerik.Web.UI.GridEditableItem)">PerformUpdate Method</seealso>
            <seealso cref="M:Telerik.Web.UI.GridTableView.PerformInsert">PerformInsert Method</seealso>
            <param name="editedItem">The item that should be deleted</param>
            <param name="suppressRebind">Set to true to stop error from binding</param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.InsertItem">
            <summary>
                Places the GridTableView in insert mode, allowing user to insert a new data-item
                values. The <see cref="P:Telerik.Web.UI.GridTableView.CurrentPageIndex"/> will be set to display the last
                page. You can use also the <see cref="P:Telerik.Web.UI.GridTableView.IsItemInserted"/> to place the
                GridTableView in insert mode.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.InsertItem(System.Object)">
            <summary>
                Places the GridTableView in insert mode, allowing the user to insert a new
                data-item values. The GridInsertItem created will be bound to values of the
                newDataItem object. The <see cref="P:Telerik.Web.UI.GridTableView.CurrentPageIndex"/> will be set to display
                the last page. You can use also the <see cref="P:Telerik.Web.UI.GridTableView.IsItemInserted"/> property to
                place the GridTableView in insert mode.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridTableView.InsertItem(System.Collections.IDictionary)">
            <summary>
                Places the GridTableView in insert mode, allowing the user to insert a new
                data-item values. The GridInsertItem created will be bound to values found in
                newValues dictionary; The <see cref="P:Telerik.Web.UI.GridTableView.CurrentPageIndex"/> will be set to
                display the last page. You can use also the <see cref="P:Telerik.Web.UI.GridTableView.IsItemInserted"/> to
                place the GridTableView in insert mode.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.OwnerID">
            <summary>Gets the ClientID of the RadGrid object that contains this instance.</summary>
            <value>
            The string representation of the ClientID object that contains the
            instance.
            </value>
            <seealso cref="!:OwnerGrid">OwnerGrid Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ItemTemplate">
            <summary>
            Gets or sets the ItemTemplate, which is rendered in the control in normal
            (non-Edit) mode.
            </summary>
            <value>A value of type System.Web.UI.CompiledBindableTemplateBuilder</value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.EditItemTemplate">
            <summary>
            Gets or sets the EditItemTemplate, which is rendered in the control in edit
            mode.
            </summary>
            <value>A value of type System.Web.UI.CompiledBindableTemplateBuilder</value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.NestedViewTemplate">
            <summary>
            Gets or sets the ItemTemplate, which is rendered in the control in normal
            (non-Edit) mode.
            </summary>
            <value>A value of type System.Web.UI.CompiledBindableTemplateBuilder</value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.DetailTables">
            <summary>
            	<para>Gets or sets the collection of detail table views for this
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>.</para>
            </summary>
            <value>
            A collection of detail table views for this
            <strong>GridTableView</strong>.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataKeyValues">DataKeyValues Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <remarks>
                Adding or removing objects to the <strong>DetailTables</strong> collection changes
                the hierarchical structure. 
                <para>
                    Use <see cref="M:Telerik.Web.UI.RadGrid.Rebind"/> after modifying the collection
                    programmatically.
                </para>
            	<para>This collection can also be altered unsing the environment designer.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.CurrentResetPageIndexAction">
            <summary>
            	<para>
                    Gets or sets a value that describes how <strong>RadGrid</strong> would respond
                    if the <see cref="P:Telerik.Web.UI.GridTableView.CurrentPageIndex"/> is invalid when data-binding.
                </para>
            </summary>
            <remarks>
            	<para>
                    This property is not persisted in the ViewState. By deafult the value is
                    <see cref="F:Telerik.Web.UI.GridResetPageIndexAction.SetPageIndexToFirst"/>.
                </para>
            </remarks>
            <seealso cref="T:Telerik.Web.UI.GridResetPageIndexAction">GridResetPageIndexAction Enumeration</seealso>
            <value>
                A member of the <strong>GridResetPageIndexAction</strong> enumeration which
                describes how <strong>RadGrid</strong> would respond if the
                <strong>CurrentPageIndex</strong> is invalid when data-binding. By default its
                value is <see cref="F:Telerik.Web.UI.GridResetPageIndexAction.SetPageIndexToFirst"/>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.GridLines">
            <summary>
            Gets or sets a value indicating whether the border lines for grid cells will be
            displayed.
            </summary>
            <value>
                One of the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableViewBase~GridLines.html">GridLines</a>
                values. The default is <see cref="!:GridLines.Both"/>.
            </value>
            <remarks>
            	<para>Use the <strong>GridLines</strong> property to specify the gridline style for
                a <strong>GridTableView</strong> control. The following table lists the available
                styles.</para>
            	<para>
            		<list type="table">
            			<item>
            				<term>Style</term>
            				<description>Description</description>
            			</item>
            			<item>
            				<term><strong>GridLines.None</strong></term>
            				<description>No gridlines are displayed.</description>
            			</item>
            			<item>
            				<term><strong>GridLines.Horizontal</strong></term>
            				<description>Displays the horizontal gridlines only.</description>
            			</item>
            			<item>
            				<term><strong>GridLines.Vertical</strong></term>
            				<description>Displays the vertical gridlines only.</description>
            			</item>
            			<item>
            				<term><strong>GridLines.Both</strong></term>
            				<description>Displays both the horizontal and vertical
                            gridlines.</description>
            			</item>
            		</list>
            	</para>
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableViewBase.CellPadding">CellPadding Property (Telerik.Web.UI.GridTableViewBase)</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableViewBase.CellSpacing">CellSpacing Property (Telerik.Web.UI.GridTableViewBase)</seealso>
            <example>
            	<para>The following code snippet demonstrates how to use the
                <strong>GridLines</strong> property to hide the gridlines in a
                <strong>GridTableView</strong> control.</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;radG:RadGrid ID="RadGrid1" runat="server"
                <strong>GridLines="None"</strong>&gt;<br/>
                &lt;/radGrid:RadGrid&gt;</para>
            	<code lang="VB" title="[New Example]">
            RadGrid1.GridLines = GridLines.None
                </code>
            	<code lang="CS" title="[New Example]">
            RadGrid1.GridLines = GridLines.None;
                </code>
            </example>
            <seealso cref="P:Telerik.Web.UI.GridTableView.HorizontalAlign">HorizontalAlign Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.HorizontalAlign">
            <summary>
            	<para>Gets or sets a value indicating the horizontal alignment of the grid
                table.</para>
            </summary>
            <value>
                One of the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableViewBase~HorizontalAlign.html">HorizontalAlign</a>
                values. The default is <see cref="!:HorizontalAlign.NotSet"/>.
            </value>
            <remarks>
            	<para>Use the <strong>HorizontalAlign</strong> property to specify the horizontal
                alignment of a <strong>GridTableView</strong> control within the page. The
                following table lists the different horizontal alignment styles.</para>
            	<para>
            		<list type="table">
            			<item>
            				<term>Alignment value</term>
            				<description>Description</description>
            			</item>
            			<item>
            				<term><strong>HorizontalAlign.NotSet</strong></term>
            				<description>The horizontal alignment of the <b>GridTableView</b>
                            control has not been set.</description>
            			</item>
            			<item>
            				<term><strong>HorizontalAlign.Left</strong></term>
            				<description>The <b>GridTableView</b> control is left-aligned on the
                            page.</description>
            			</item>
            			<item>
            				<term><strong>HorizontalAlign.Center</strong></term>
            				<description>The <b>GridTableView</b> control is centered on the
                            page.</description>
            			</item>
            			<item>
            				<term><strong>HorizontalAlign.Right</strong></term>
            				<description>The <b>GridTableView</b> control is right-aligned on the
                            page.</description>
            			</item>
            			<item>
            				<term><strong>HorizontalAlign.Justify</strong></term>
            				<description>The <b>GridTableView</b> control is aligned with both the
                            left and right margins of the page.</description>
            			</item>
            		</list>
            	</para>
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.GridLines">GridLines Property</seealso>
            <example>
            	<para>The following code snippet demonstrates how to use the
                <strong>HorizontalAlign</strong> property to align a <strong>GridTableView</strong>
                control on the right side of a page.</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;radG:RadGrid ID="RadGrid1" runat="server"
                HorizontalAlign="Right"&gt;<br/>
                &lt;/radG:RadGrid&gt;</para>
            	<code lang="VB" title="[New Example]">
            RadGrid1.HorizontalAlign = HorizontalAlign.Right
                </code>
            	<code lang="CS" title="[New Example]">
            RadGrid1.HorizontalAlign = HorizontalAlign.Right;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.DataKeyValues">
            <summary>
            	<para>
                    Gets a collection of <strong>DataKeyValue</strong> objects that represent the
                    data key value of the corresponding item (specified with its
                    <see cref="!:ItemIndex"/>) and the <strong>DataKeyName</strong>
                    (case-sensitive!). The <strong>DataKeyName</strong> should be one of the
                    specified in the <see cref="P:Telerik.Web.UI.GridTableView.DataKeyNames"/> array.
                </para>
            </summary>
            <example>
            	<code lang="CS" title="CS" description="The following code will display a message when an Item is updated. The message will show the Employee ID for the updated employee data.">
            protected void RadGrid1_ItemUpdated(object source, Telerik.Web.UI.GridUpdatedEventArgs e)
               {
                    if (e.Exception != null)
                    {
                        e.KeepInEditMode = true;
                        e.ExceptionHandled = true;
                        Response.Write("Employee " + e.Item.OwnerTableView.DataKeyValues[e.Item.ItemIndex]["EmployeeID"] + " cannot be updated. Reason: " + e.Exception.Message);
                    }
                    else
                    {
                        Response.Write("Employee " + e.Item.OwnerTableView.DataKeyValues[e.Item.ItemIndex]["EmployeeID"] + " updated");
                    }
               }
                </code>
            	<code lang="CS" title="CS short" description="In brief:">
            int eID = (int)tableView.DataKeyValues[editedItem.ItemIndex]["EmployeeID"];
                </code>
            	<code lang="VB" title="VB short" description="In brief:">
            Dim eID as Integer = (CInt)tableView.DataKeyValues(editedItem.ItemIndex)("EmployeeID")
                </code>
            	<code lang="CS" title="VB" description="The following code will display a message when an Item is updated. The message will show the Employee ID for the updated employee data.">
            Protected Sub RadGrid1_ItemUpdated(ByVal source As Object, ByVal e As Telerik.Web.UI.GridUpdatedEventArgs) Handles RadGrid1.ItemUpdated
               If Not e.Exception Is Nothing Then
                     e.KeepInEditMode = True
                     e.ExceptionHandled = True
                     Response.Write("Employee " + e.Item.OwnerTableView.DataKeyValues(e.Item.ItemIndex)("EmployeeID").ToString() + " cannot be updated. Reason: " + e.Exception.Message)
               Else
                     Response.Write("Employee " + e.Item.OwnerTableView.DataKeyValues(e.Item.ItemIndex)("EmployeeID").ToString() + " updated")
               End If
            End Sub
                </code>
            </example>
            <returns>data key name/value pair</returns>
            <value>
            A
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridDataKeyArray.html">GridDataKeyArray</a> that
            contains the data key of each item in a <strong>GridTableView</strong> control.
            </value>
            <remarks>
            When the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~DataKeyNames.html">DataKeyNames</a>
            property is set, the <strong>GridTableView</strong> control automatically creates a
            <strong>DataKeyValue</strong> object for each item in the control. The
            <strong>DataKeyValue</strong> object contains the values of the field or fields
            specified in the <strong>DataKeyNames</strong> property. The
            <strong>DataKeyValue</strong> objects are then added to the control's
            <strong>DataKeysValue</strong> collection. Use the <strong>DataKeysValue</strong>
            property to retrieve the <strong>DataKeyValue</strong> object for a specific data item
            in the <strong>GridTableView</strong> control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.DataKeyNames">
            <summary>
            	<para>
                    Gets or sets an array of data-field names that will be used to populate the
                    <see cref="P:Telerik.Web.UI.GridTableView.DataKeyValues"/> collection, when the
                    <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                    control is databinding.
                </para>
            </summary>
            <remarks>
            	<para>Use the <strong>DataKeyNames</strong> property to specify the field or fields
                that represent the primary key of the data source.</para>
            	<para><strong>Note:</strong> Values set to this property are case-sensitive! The
                field names should be coma-separated.</para>
            	<para>
                    The data key names/values are stored in the <strong>ViewState</strong> so they
                    are available at any moment after grid have been data-bound, after postbacks,
                    etc. This collection is used when editing data, and for automatic relations
                    when binding an hiararchical grid (see
                    <see cref="P:Telerik.Web.UI.GridTableView.ParentTableRelation"/>).
                </para>
            	<para>If the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridColumn~Visible.html">Visible</a>
                property of a column field is set to false, the column is not displayed in the
                <strong>GridTableView</strong> control and the data for the column does not make a
                round trip to the client. If you want the data for a column that is not visible to
                make a round trip, add the field name to the <strong>DataKeyNames</strong>
                property.</para>
            </remarks>
            <value>
            An array that contains the names of the primary key fields for the items
            displayed in a <strong>GridTableView</strong> control.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AdditionalDataFieldNames">
            <summary>
                Gets or sets values indicating <strong>DataFieldNames</strong> that should be
                sorted, grouped, etc and are not included as columns, in case the property
                <see cref="P:Telerik.Web.UI.GridTableView.RetrieveAllDataFields"/> is <strong>false</strong>.
            </summary>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataKeyValues">DataKeyValues Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <value>
            An array of DataFieldNames values that should be sorted, grouped, etc and are not
            included as columns.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.RetrieveAllDataFields">RetrieveAllDataFields Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.EnableNoRecordsTemplate">
            <summary>
                Gets or sets a value indicating whether <strong>RadGrid</strong> will show
                <see cref="P:Telerik.Web.UI.GridTableView.NoRecordsTemplate"/> instead of the corresponding
                <see cref="T:Telerik.Web.UI.GridTableView"/> if there is no items to display.
            </summary>
            <value>
            	<strong>true</strong> if <see cref="P:Telerik.Web.UI.GridTableView.NoRecordsTemplate"/> usage is enabled;
                otherwise, <b>false</b>. The default value is <b>true</b>.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.NoRecordsTemplate">NoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.NoMasterRecordsText">NoMasterRecordsText Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.NoDetailRecordsText">NoDetailRecordsText Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.NoRecordsTemplate">
            <summary>
            	<para>Gets or sets the template that will be displayed if a
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                control is bound to a data source that does not contain any records.</para>
            </summary>
            <remarks>
            	<para>
                    You can set the text that will appear in the NoRecordsTemplate through
                    <see cref="P:Telerik.Web.UI.GridTableView.NoMasterRecordsText">NoMasterRecordsText</see> and
                    <see cref="P:Telerik.Web.UI.GridTableView.NoDetailRecordsText">NoDetailRecordsText</see> properties.
                </para>
            	<para>By default if <strong>Items.Count</strong> equals 0,
                <strong>GridTableView</strong> will render no records message.</para>
            	<para>If <strong>NoRecordsTemplate</strong> and
                <strong>NoMasterRecordsText/</strong><strong>NoDetailRecordsText</strong> are set,
                the <strong>NoRecordsTemplate</strong> property has priority.</para>
            </remarks>
            <value>
            	<para>A
                <a href="http://msdn2.microsoft.com/en-us/library/system.web.ui.itemplate.aspx">System.Web.UI.ITemplate</a>
                that contains the custom content for the empty data row. The default value is a
                null reference (<strong>Nothing</strong> in Visual Basic), which indicates that
                this property is not set.</para>
            </value>
            <example>
            	<para>The following example demonstrates how <strong>NoRecordsTemplate</strong> can
                be implemented declaratively:</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;radG:RadGrid ID="RadGrid1" runat="server"&gt;<br/>
                &lt;MasterTableView&gt;<br/>
                &lt;NoRecordsTemplate&gt;<br/>
                &lt;div style="text-align: center; height: 300px"&gt;<br/>
                &lt;asp:Label ForeColor="RoyalBlue" runat="server" ID="Label1"&gt;Currently there
                are no items in this folder.&lt;/asp:Label&gt;<br/>
                &lt;br /&gt;<br/>
                &lt;/div&gt;<br/>
                &lt;/NoRecordsTemplate&gt;<br/>
                &lt;/MasterTableView&gt;<br/>
                &lt;/radG:RadGrid&gt;</para>
            	<para>The following code snippet demonstrates how the NoRecordsTemplate can be
                implemented dynamically:</para>
            	<code lang="VB" title="[New Example]">
            RadGrid1.MasterTableView.NoRecordsTemplate = New NoRecordsTemplate()
              
            Public Class NoRecordsTemplate
                Implements ITemplate
                
                Public Sub New()
                End Sub
             
                Public Sub InstantiateIn(ByVal container As System.Web.UI.Control) Implements System.Web.UI.ITemplate.InstantiateIn
                    Dim lbl As Label = New Label()
                    lbl.ID = "Label1"
                    lbl.Text = "Currently there are no items in this folder."
                    lbl.ForeColor = System.Drawing.Color.RoyalBlue
                    container.Controls.Add(lbl)
                End Sub
            End Class
                </code>
            	<code lang="CS" title="[New Example]">
            RadGrid1.MasterTableView.NoRecordsTemplate = new NoRecordsTemplate();
             
            class NoRecordsTemplate: ITemplate
            {
                public NoRecordsTemplate()
                {
                }
                
                public void InstantiateIn(Control container)
                {
                    Label lbl = new Label();
                    lbl.ID = "Label1";
                    lbl.Text = "Currently there are no items in this folder.";
                    lbl.ForeColor = System.Drawing.Color.RoyalBlue;
                    container.Controls.Add(lbl);
                }
            }
                </code>
            </example>
            <notes>
            	<para>The
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~EnableNoRecordsTemplate.html">
                EnableNoRecordsTemplate Property</a> should be set to <strong>true</strong> (its
                default value) in order to be displayed the
                <strong>NoRecordsTemplate</strong>.</para>
            </notes>
            <seealso cref="P:Telerik.Web.UI.GridTableView.EnableNoRecordsTemplate">EnableNoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.NoMasterRecordsText">NoMasterRecordsText Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.NoDetailRecordsText">NoDetailRecordsText Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.NoMasterRecordsText">
            <summary>
                Gets or sets the text that will be displayed in there is no
                <see cref="P:Telerik.Web.UI.GridTableView.NoRecordsTemplate"/> defined and no records in the
                <strong>MasterTableView</strong>.
            </summary>
            <seealso cref="P:Telerik.Web.UI.GridTableView.EnableNoRecordsTemplate">EnableNoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.NoRecordsTemplate">NoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.NoDetailRecordsText">NoDetailRecordsText Property</seealso>
            <value>
            The text to display in the empty data item. The default is an empty string ("")
            which indicates that this property is not set.
            </value>
            <remarks>
            The empty data row is displayed in a <strong>GridTableView</strong> control when
            the data source that is bound to the control does not contain any records. Use the
            <strong>NoMasterRecordsText</strong> and <strong>NoDetailRecordsText</strong> property
            to specify the text to display in the empty data item. Alternatively, you can define
            your own custom user interface (UI) for the empty data item by setting the
            <strong>NoRecordsTemplate</strong> property instead of this property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.NoDetailRecordsText">
            <summary>
                Gets or sets the text that will be displayed in there is no
                <see cref="P:Telerik.Web.UI.GridTableView.NoRecordsTemplate"/> defined and no records in the Detail tables.
            </summary>
            <value>
            The text to display in the empty data item. The default is an empty string (""),
            which indicates that this property is not set.
            </value>
            <remarks>
            The empty data row is displayed in a <strong>GridTableView</strong> control when
            the data source that is bound to the control does not contain any records. Use the
            <strong>NoMasterRecordsText</strong> and <strong>NoDetailRecordsText</strong> property
            to specify the text to display in the empty data item. Alternatively, you can define
            your own custom user interface (UI) for the empty data item by setting the
            <strong>NoRecordsTemplate</strong> property instead of this property.
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.EnableNoRecordsTemplate">EnableNoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.NoRecordsTemplate">NoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.NoMasterRecordsText">NoMasterRecordsText Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RetrieveAllDataFields">
            <summary>
            	<para>Gets or sets a value indicating whether the <strong>GridTableView</strong>
                will extract all bindable properties from the <strong>DataSource</strong> when
                binding, to perform operations like sorting, grouping, etc on DataFields that are
                not included in the column declarations.</para>
            </summary>
            <remarks>
                You can also use the <see cref="P:Telerik.Web.UI.GridTableView.AdditionalDataFieldNames"/> array to indicate
                RadGrid <strong>DataFieldNames</strong> that should be sorted, grouped, ect and are
                not included as columns.
            </remarks>
            <value>
            	<para><strong>true</strong>, if the <strong>GridTableView</strong> will extract all
                bindable properties from the <strong>DataSource</strong> when binding; otherwise,
                <strong>false</strong>. The default value is <strong>true.</strong></para>
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AdditionalDataFieldNames">AdditionalDataFieldNames Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.UseAllDataFields">
            <summary>
            	<para>Gets or sets a value indicating whether the <strong>GridTableView</strong>
                should use all retieved properties from the <strong>DataSource</strong> when
                binding, to perform operations like sorting, grouping, etc on DataFields that are
                not included in the column declarations.</para>
            </summary>
            <remarks>
                You can also use the <see cref="P:Telerik.Web.UI.GridTableView.AdditionalDataFieldNames"/> array to indicate
                RadGrid <strong>DataFieldNames</strong> that should be sorted, grouped, ect and are
                not included as columns.
            </remarks>
            <value>
            	<para><strong>false</strong>, if the <strong>GridTableView</strong> will not use all
                bindable properties from the <strong>DataSource</strong> when binding; otherwise,
                <strong>true</strong>. The default value is <strong>false.</strong></para>
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AdditionalDataFieldNames">AdditionalDataFieldNames Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RetrieveNullAsDBNull">
            <summary>
            	<para>Gets or sets a value indicating whether <strong>null</strong> values in the
                database will be retrieved as <strong>dbnull</strong> values.</para>
            </summary>
            <value>
            	<para><strong>true</strong> if the <strong>null</strong> values in the database
                will be retrieved as <strong>dbnull</strong> values; otherwise,
                <strong>false</strong>. The default is <strong>false</strong>.</para>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ParentTableRelation">
            <summary>
            Gets or sets the collection of data-field pairs that describe the relations in a
            hierarchical grid.
            </summary>
            <remarks>
                If you have specified the relations <strong>RadGrid</strong> will automatically
                filter the child data-source when when binding detail-tables. The specified
                <see cref="P:Telerik.Web.UI.GridRelationFields.MasterKeyField"/> in each
                <see cref="T:Telerik.Web.UI.GridRelationFields"/> in this collection should be a Key that is
                specified in the parent table's <see cref="P:Telerik.Web.UI.GridTableView.DataKeyNames"/> array. Each
                DetailKeyField specfied should also be included in this
                <strong>GridTableView</strong>'s DataKeyNames array.
                <strong>MasterTableView</strong> does not need any
                <strong>ParentTableRelations</strong>.
            </remarks>
            <value>
            A <strong>GridTableViewRelation</strong> collection of data-field pairs that
            describe the relations in a hierarchical grid.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableViewRelation">GridTableViewRelation Class</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataKeyValues">DataKeyValues Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Hierarchy/ThreeLevel/DefaultCS.aspx">Hierarchy online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.SelfHierarchySettings">
            <summary>
            Gets a set the options for <strong>GridTableView</strong>'s self-hierarchy
            behavior.
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridSelfHierarchySettings">GridSelfHierarchySettings Class</seealso>
            <value>Options for <strong>GridTableView</strong>'s self-hierarchy behavior.</value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Hierarchy/SelfReferencing/DefaultCS.aspx">Self-referencing hierarchy online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.CommandItemSettings">
            <summary>Gets a set the options for <strong>GridTableView</strong>'s command item.</summary>
            <value>The options for <strong>GridTableView</strong>'s command item.</value>
            <seealso cref="T:Telerik.Web.UI.GridCommandItemSettings">GridCommandItemSettings Class</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.CommandItemDisplay">CommandItemDisplay Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.DataSource">
            <summary>
            	<para>Gets or sets the object from which the data-bound control retrieves its list
                of data items.</para>
            </summary>
            <remarks>
            	<para>
                    Generally the <strong>DataSource</strong> object references
                    <see cref="P:Telerik.Web.UI.RadGrid.DataSource"/>. Assign this property only if you need to
                    change the default behavior or <see cref="T:Telerik.Web.UI.RadGrid"/>.
                </para>
            	<para>
            		<strong>RadGrid</strong> modifies this property when
                    <see cref="P:Telerik.Web.UI.RadGrid.DataSource"/> is assigned.
                </para>
            	<para>On postback the <strong>DataSource</strong> property settings are not
                persisted due to performance reasons. Note, however, that you can save the grid
                <strong>DataSource</strong> in a <strong>Session/Application/Cache</strong>
                variable and then retrieve it from there after postback invocation. Respectively,
                you can get the changes made in the data source in a dataset object and then
                operate with them.</para>
            	<para>This property cannot be set by themes or style sheet themes.</para>
            </remarks>
            <value>
            An object that represents the data source from which the
            <strong>GridTableView</strong> control retrieves its data. The default is a null
            reference (<strong>Nothing</strong> in Visual Basic).
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataSourceID">DataSourceID Property</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/SimpleBinding/DefaultCS.aspx">Simple data-binding online example</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/Binding/DefaultCS.aspx">Various data sources online example</seealso>
            <seealso cref="T:Telerik.Web.UI.GridNeedDataSourceEventHandler">GridNeedDataSourceEventHandler Delegate</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.DataSourceID">
            <summary>
            Gets or sets the ID of the <strong>DataSource</strong> control used for
            population of this <strong>GridTableView</strong> data items.
            </summary>
            <example>
            	<para class="sourcecode">[ASPX/ASCX]<br/>
                &lt;radG:RadGrid ID="RadGrid1" runat="server"
                DataSourceID="SessionDataSource1"&gt;<br/>
                 ............<br/>
                &lt;/radG:RadGrid&gt;</para>
            </example>
            <value>
            	<para>The ID of a control that represents the data source from which the data-bound
                control retrieves its data. The default is String.Empty ("").</para>
            </value>
            <remarks><para>This property cannot be set by themes or style sheet themes.</para></remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DataSource">DataSource Property</seealso>
            <seealso cref="T:Telerik.Web.UI.GridNeedDataSourceEventHandler">GridNeedDataSourceEventHandler Delegate</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ParentItem">
            <summary>
            Gets a reference to a <strong>GridItem</strong> that is a parent of this
            <strong>GridTableView</strong>, when this <strong>GridTableView</strong> represents a
            child table in a hierarchical structure.
            </summary>
            <value>A reference to the server control's parent control.</value>
            <remarks>
            Whenever a page is requested, a hierarchy of server controls on that page is
            built. This property allows you to determine the parent control of the current server
            control in that hierarchy, and to program against it.
            </remarks>
            <remarks>
            Whenever a page is requested, a hierarchy of server controls on that page is
            built. This property allows you to determine the parent control of the current server
            control in that hierarchy, and to program against it.
            </remarks>
            <seealso cref="T:Telerik.Web.UI.GridItem">GridItem Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.FilterExpression">
            <summary><para>Gets or sets the filtering options for grid columns.</para></summary>
            <remarks>
            In the most common case, Telerik RadGrid checks all filtering options
            for each column, then prepares a filter expression and sets this property internally. 
            <para><strong>Note:</strong> You should be careful when setting this property as it may
            break the whole filtering functionality for your grid.</para>
            	<para>More info on the way, the expressions are created you can find
            <a href="http://msdn2.microsoft.com/en-US/library/system.data.datacolumn.expression(VS.80).aspx">
            here</a> (external link to MSDN library).</para>
            </remarks>
            <example>
            	<code lang="VB" title="Set FilterExpression" description="Set FilterExpression on initial page load">
            If (Not Page.IsPostBack) Then
                        RadGrid1.MasterTableView.FilterExpression = "([Country] LIKE '&lt;see cref="Germany"/&gt;') "
             
                        Dim column As GridColumn = RadGrid1.MasterTableView.GetColumnSafe("Country")
                        column.CurrentFilterFunction = GridKnownFunction.Contains
                        column.CurrentFilterValue = "Germany"
                    End If
                </code>
            	<code lang="CS" title="Set FilterExpression" description="Set FilterExpression on initial page load">
            if (!Page.IsPostBack) 
                    {
                        RadGrid1.MasterTableView.FilterExpression = "([Country] LIKE \'&lt;see cref="Germany"/&gt;\') ";
             
                        GridColumn column = RadGrid1.MasterTableView.GetColumnSafe("Country");
                        column.CurrentFilterFunction = GridKnownFunction.Contains;
                        column.CurrentFilterValue = "Germany";
                    }
                </code>
            </example>
            <seealso cref="!:grdApplyingDefaultFilterOnInitialLoad.html" cat="RadGrid Manual">Applying default filter on initial load</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.GroupsDefaultExpanded">
            <summary>
            Gets or sets a value indicating whether the groups will be expanded on grid load
            (<strong>true</strong> by default).
            </summary>
            <value>
            	<strong>true</strong>, if the groups will be expanded on grid load; otherwise,
            <strong>false</strong>. The default value is <strong>true</strong>.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.GroupLoadMode">GroupLoadMode Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.GroupByExpressions">GroupByExpressions Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.HierarchyDefaultExpanded">
            <summary>
            Gets or sets a value indicating whether the hierarchy will be expanded by
            default.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RowIndicatorColumn">
            <summary>
            Gets a reference to the <see cref="P:Telerik.Web.UI.GridTableView.RowIndicatorColumn"/> object, allowing
            you to customize its settings.
            </summary>
            <remarks>The property setter does nothing and should not be used. It works around a bug in the VS.NET designer.</remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ExpandCollapseColumn">
            <summary>
            Gets a reference to the <see cref="P:Telerik.Web.UI.GridTableView.ExpandCollapseColumn"/> object, allowing
            you to customize its settings.
            </summary>
            <remarks>The property setter does nothing and should not be used. It works around a bug in the VS.NET designer.</remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.HierarchyLoadMode">
            <summary>
            	<para>
                    Gets or sets a value indicating when the <strong>DataBind</strong> of the child
                    <strong>GridTableView</strong> will occur when working in hierarchy mode.
                    Accepts values from <see cref="T:Telerik.Web.UI.GridChildLoadMode"/> enumeration. See the
                    remars for details.
                </para>
            </summary>
            <remarks>
            	<para>Changing this propery value impacts the performance the following way:</para>
            	<list type="bullet">
            		<item>In <strong>ServerBind</strong> mode - Roundtrip to the database only when
                    grid is bound. ViewState holds all detail tables data. Only detail table-views
                    of the expanded items are rendered. Postback to the server to expand an
                    item</item>
            		<item>In <strong>ServerOnDemand</strong> mode - Roundtrip to the database when
                    grid is bound and when item is expanded. ViewState holds data for only visible
                    Items (smallest possible). Only detail table-views of the expanded items are
                    rendered. Postback to the server to expand an item.</item>
            		<item>In <strong>Client</strong> mode - Roundtrip to the database only when
                    grid is bound. ViewState holds all detail tables data. All items are rendered -
                    even is not visible (not expanded). NO postback to the server to expand an item
                    - expand/collapse of hierarchy items is managed client-side.<br/>
            			<strong>Note:</strong> In order to use client-side hierarchy expand, you will
                    need to set also
                    <strong><see cref="!:RadGrid.ClientSettings.AllowExpandCollapse"/></strong>
                    to <strong>true</strong>.</item>
            	</list>
            </remarks>
            <value>The default value is <strong>ServerOnDemand</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.GroupLoadMode">
            <summary>
            	<para>Specifies where the grouping will be handled. There are two options:</para>
            	<list type="bullet">
            		<item>Server-side - <strong>GridTableView.GroupLoadMode.Server</strong></item>
            		<item>Client-side -
            <strong>GridTableView.GroupLoadMode.Client</strong></item></list>
            </summary>
            <remarks>
            	<para><strong>GridTableView.GroupLoadMode.Server</strong></para>
            	<para>This is the default behavior. Groups are expanded after postback to the server
            for example:</para>
            	<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code inline="true">
            &lt;MasterTableView GroupLoadMode=<font color="black"><font class="string">"Server"</font>&gt;</font>
            							</code>
            						</pre></td></tr></tbody></table></div>
            	<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            		<strong>GridTableView.GroupLoadMode.Client</strong></div>
            	<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">Groups will be
            expanded client-side and no postback will be performed.<br/>
            		<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            			<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            				<tbody>
            					<tr>
            						<td nowrap="nowrap">
            							<pre>
            								<code>
            &lt;MasterTableView GroupLoadMode=<font color="black"><font class="string">"Client"</font>&gt;</font>
            								</code>
            							</pre></td></tr></tbody></table></div>
            and set the client setting <strong>AllowGroupExpandCollapse</strong> to
            <strong>true:</strong><br/>
            		<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            			<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            				<tbody>
            					<tr>
            						<td nowrap="nowrap">
            							<pre>
            								<code>
            &lt;ClientSettings AllowGroupExpandCollapse=<font color="black"><font class="string">"True"</font>&gt;</font>
            								</code>
            							</pre></td></tr></tbody></table></div></div>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.EditMode">
            <remarks>
            	<para>There are two possible values defined by the <strong>GridEditMode</strong>
                enumeration:</para>
            	<list type="bullet">
            		<item>InPlace</item>
            		<item>EditForms</item>
            	</list>
            	<para>To display the grid column editors inline when switching grid item in edit
                mode (see the screenshot below), you simply need to change the
                <strong>EditMode</strong> property to <strong>InPlace</strong>.</para>
            	<div class="LanguageSpecific" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code>
            &lt;radg:RadGrid id=<font class="string" color="black">"RadGrid1"</font> runat=<font class="string" color="black">"server"</font>&gt;<br/>&lt;MasterTableView AutoGenerateColumns=<font class="string" color="black">"True"</font> EditMode=<font color="black"><font class="string">"InPlace"</font> /&gt;<br/>&lt;/radg:RadGrid&gt;</font>
            							</code>
            						</pre>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            	<para class=""><img alt="A row in edit mode" src="Images/grd_EditMode_markedup.png" border="0"/></para>
            	<para>To display the grid column editors in auto-generated form when switching grid
                item in edit mode (see the screenshot below), you simply need to change the
                MasterTableView <strong>EditMode</strong> property to
                <strong>EditForms</strong>.</para>
            	<div class="LanguageSpecific">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code>
            &lt;radg:RadGrid id=<font class="string" color="black">"RadGrid1"</font> runat=<font class="string" color="black">"server"</font>&gt;<br/>&lt;MasterTableView AutoGenerateColumns=<font class="string" color="black">"True"</font> EditMode=<font color="black"><font class="string">"EditForms"</font> /&gt;<br/>&lt;/radg:RadGrid&gt;</font>
            							</code>
            						</pre>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div><img alt="Edit in forms mode" src="images/grd_EditInForms_thumb.png" border="0"/>
            </remarks>
            <summary>
            	<para>FormsGets or sets a value indicating how a <strong>GridItem</strong> will
                look in edit mode.</para>
            </summary>
            <value>
            A value indicating how a <strong>GridItem</strong> will look in edit mode. The
            default is <strong>EditForms</strong>.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridEditMode">GridEditMode Enumeration</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AllowMultiColumnSorting">
            <summary>
                Gets or sets the value indicating wheather more than one column can be sorted in a
                single <strong>GridTableView</strong>. The order is the same as the sequence of
                expressions in <see cref="P:Telerik.Web.UI.GridTableView.SortExpressions"/>.
            </summary>
            <value>
            	<strong>true</strong>, if more than one column can be sorted in a single
            <strong>GridTableView</strong>; otherwise, <strong>false</strong>. The default value is
            <strong>false</strong>.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowSorting">AllowSorting Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.SortExpressions">SortExpressions Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AllowNaturalSort">
            <summary>
            Gets or sets the value indicated whether the no-sort state when changing sort
            order will be allowed.
            </summary>
            <value>
            	<strong>true</strong>, if the no-sort state when changing sort order will be
            allowed; otherwise, <strong>false</strong>. The default value is
            <strong>true</strong>.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.SortExpressions">SortExpressions Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowSorting">AllowSorting Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AllowSorting">
            <summary>
            	<para>Gets or sets a value indicating whether the sorting feature is
                enabled.</para>
            </summary>
            <value>
            	<para>
            		<strong>true</strong> if the sorting feature is enabled; otherwise,
                    <strong>false</strong>. The default is <see cref="P:Telerik.Web.UI.RadGrid.AllowSorting"/>.
                </para>
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.SortExpressions">SortExpressions Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowCustomSorting">AllowCustomSorting Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowMultiColumnSorting">AllowMultiColumnSorting Property</seealso>
            <remarks>
            	<para>When a data source control that supports sorting is bound to the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                control, the <strong>GridTableView</strong> control can take advantage of the data
                source control's capabilities and provide automatic sorting functionality.</para>
            	<para>To enable sorting, set the <strong>AllowSorting</strong> property to
                <strong>true</strong>. When sorting is enabled, the heading text for each column
                field with its
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~SortExpressions.html">SortExpressions</a>
                property set is displayed as a link button.</para>
            	<para>Clicking the link button for a column causes the items in the
                <strong>GridTableView</strong> control to be sorted based on the sort expression.
                Typically, the sort expression is simply the name of the field displayed in the
                column, which causes the <strong>GridTableView</strong> control to sort with
                respect to that column. To sort by multiple fields, use a sort expression that
                contains a comma-separated list of field names. You can determine the sort
                expression that the <strong>GridTableView</strong> control is applying by using the
                SortExpressions property. Clicking a column's link button repeatedly toggles the
                sort direction between ascending and descending order.</para>
            	<para><strong>Note</strong> that if you want to sort the grid by a column different
                than a GridBoundColumn, you should set also its
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridColumn~SortExpression.html">SortExpression</a>
                property to the desired data field name you want the column to be sorted by.</para>
            </remarks>
            <notes>
            	<para>Different data sources have different requirements for enabling their sorting
                capabilities. To determine the requirements, see the documentation for the specific
                data source.</para>
            	<para>The <strong>SortExpression</strong> property for an automatically generated
                columns field is automatically populated. If you define your own columns through
                the <a href="Telerik.Web.UI~Telerik.Web.UI.GridColumnCollection.html">Columns</a>
                collection, you must set the <strong>SortExpression</strong> property for each
                column; otherwise, the column will not display the link button in the
                header.</para>
            </notes>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowNaturalSort">AllowNaturalSort Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.SortExpressions">SortExpressions Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AllowFilteringByColumn">
            <summary>
            	<para>Gets or sets a value indicating whether the filtering by column feature is
                enabled.</para>
            </summary>
            <value>
            	<para>
            		<strong>true</strong> if the filtering by column feature is enabled; otherwise,
                    <strong>false</strong>. Default value is the value of
                    <see cref="P:Telerik.Web.UI.RadGrid.AllowFilteringByColumn"/>.
                </para>
            </value>
            <remarks>
            	<para>
                    When the value is true, <strong>GridTableView</strong> will display the
                    filtering item, under the table's header item. The filtering can be controlled
                    based on a column through column properties:
                    <see cref="P:Telerik.Web.UI.GridColumn.FilterListOptions"/> ,
                    <see cref="P:Telerik.Web.UI.GridColumn.CurrentFilterFunction"/>,
                    <see cref="P:Telerik.Web.UI.GridColumn.CurrentFilterValue"/>. The column
                    <see cref="M:Telerik.Web.UI.GridColumn.SupportsFiltering"/> method is used to determine if
                    a column can be used with filtering. Generally, this function returns the value
                    set to AllowFiltering for a specific column. For example
                    <see cref="T:Telerik.Web.UI.GridBoundColumn"/> will return the values of
                    <see cref="P:Telerik.Web.UI.GridBoundColumn.AllowFiltering"/> property.
                </para>
            </remarks>
            <seealso cref="T:Telerik.Web.UI.GridFilteringItem">GridFilteringItem Class</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Filtering/DefaultCS.aspx">Basic filtering online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.EnableHeaderContextMenu">
            <summary>
             	<para>Gets or sets a value indicating whether the header context menu should be 
                 enabled.</para>
             </summary>
             <value>
             	<para>
             		<strong>true</strong> if the header context menu feature is enabled; otherwise,
                     <strong>false</strong>. Default value is the value of
                     <see cref="P:Telerik.Web.UI.RadGrid.EnableHeaderContextMenu"/>.
                 </para>
             </value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AutoGenerateColumns">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will
            automatically generate columns at runtime based on its
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~DataSource.html">DataSource</a>.
            </summary>
            <value>
            	<para>
                    A value indicating whether Telerik RadGrid will automatically
                    generate columns at runtime based on its <strong>DataSource</strong>. The
                    default value is the value of <strong>RadGrid</strong>'s property
                    <see cref="P:Telerik.Web.UI.RadGrid.AutoGenerateColumns"/>.
                </para>
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AutoGeneratedColumns">AutoGeneratedColumns Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.DetailTableIndex">
            <summary>For internal usage.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ChildSelectedItems">
            <summary>
            	<para>
                    Gets all items among the hierarchy of
                    <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                    items that are selected. The selected items in a <strong>GridTableView</strong>
                    are cleared when <see cref="P:Telerik.Web.UI.GridTableView.ParentItem"/> collapses and the
                    <strong>ParentItem</strong> becomes selected.
                </para>
            </summary>
            <value>
            A <strong>GridItemCollection</strong> of items among the hierarchy of
            <strong>GridTableView</strong> items that are selected.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridItemCollection">GridItemCollection Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ChildEditItems">
            <summary>
            	<para>
                    Gets all items among the hierarchy of
                    <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                    items that are in edit mode. The edit items in a <strong>GridTableView</strong>
                    are cleared when <see cref="P:Telerik.Web.UI.GridTableView.ParentItem"/> collapses.
                </para>
            </summary>
            <value>A GridItemCollection of items that are in edit mode.</value>
            <seealso cref="T:Telerik.Web.UI.GridItemCollection">GridItemCollection Class</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.EditMode">EditMode Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.EditFormSettings">EditFormSettings Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.EnableColumnsViewState">
            <summary>
            Gets or sets a value indicating whether all columns settings will be persisted in
            the ViewState or not.
            </summary>
            <value>
            	<strong>true</strong> if columns are kept in the view state; otherwise
            <strong>false</strong>. The default value is <strong>true</strong>.
            </value>
            <requirements>
                Set this property to false if you need to change dynamically the
                <see cref="P:Telerik.Web.UI.GridTableView.Columns"/> structure of the <strong>RadGrid</strong>.
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AllowCustomSorting">
            <summary>Gets or sets if the custom sorting feature is enabled.</summary>
            <remarks>
                With custom sorting turned on, RadGrid will display as Sorting Icons, will maintain
                the SortExpressions collection and so on, but it will not actually sort the Data.
                You should perform the custom sorting in the SortCommand event handler. You can
                also use the <see cref="M:Telerik.Web.UI.GridSortExpressionCollection.GetSortString"/> method,
                which will return the sort expressions string in the same format as it wold be used
                by a DataView component.
            </remarks>
            <value>
            	<strong>true</strong>, if custom sorting feature is enabled; otherwise,
            <strong>false</strong>. The default value is <strong>false</strong>.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowSorting">AllowSorting Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.SortExpressions">SortExpressions Property</seealso>
            <seealso cref="T:Telerik.Web.UI.GridSortCommandEventHandler">GridSortCommandEventHandler Delegate</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AllowCustomPaging">
            <summary>Gets or sets if the custom paging feature is enabled.</summary>
            <value>
            	<strong>true</strong>, if the custom paging feature is enabled; otherwise,
                <strong>false</strong>. Default value is the value of
                <see cref="P:Telerik.Web.UI.RadGrid.AllowCustomPaging"/>.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowPaging">AllowPaging Property</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/CustomPaging/DefaultCS.aspx">Custom paging online example</seealso>
            <remarks>
                There are cases in which you may want to fetch only a fixed number of records and
                perform operations over this specified set of data. Telerik RadGrid allows such
                data manipulation through the custom paging mechanism integrated in the control.
                The main steps you need to undertake are: 
                <list type="bullet">
            		<item>Set <b>AllowPaging = true</b> and <b>AllowCustomPaging = true</b> for
                    your grid instance</item>
            		<item>Implement code logic which to extract merely a fixed number of records
                    from the grid source and present them in the grid structure</item>
            		<item>The total number of records in the grid source should be defined through
                    the <b>VirtualItemCount</b> property of the MasterTableView/GridTableView
                    instance. Thus the grid "understands" that the data source contains the
                    specified number of records and it should fetch merely part of them at a time
                    to execute requested operation.</item>
            	</list>Another available option for custom paging support is through the
                ObjectDataSource control custom paging feature:<br/>
            	<a href="http://www.telerik.com/help/radgrid/v4_Net2/?grdCustomPagingThroughObjectDataSourcePopulation.html">
                Custom paging with ObjectDataSource grid content generator</a>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AllowPaging">
            <summary><para>Gets or sets a value indicating whether the paging feature is enabled.</para></summary>
            <value>
            	<para>
            		<strong>true</strong> if the paging feature is enabled; otherwise,
                    <strong>false</strong>. The default is <see cref="P:Telerik.Web.UI.RadGrid.AllowPaging"/>.
                </para>
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PageCount">PageCount Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PageSize">PageSize Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PagingManager">PagingManager Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PagerStyle">PagerStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.RenderPagerStyle">RenderPagerStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PagerTemplate">PagerTemplate Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.CurrentPageIndex">CurrentPageIndex Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.CurrentResetPageIndexAction">CurrentResetPageIndexAction Property</seealso>
            <remarks>
            	<para>Instead of displaying all the records in the data source at the same time,
                the <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                control can automatically break the records up into pages. If the data source
                supports the paging capability, the <strong>GridTableView</strong> control can take
                advantage of that and provide built-in paging functionality. The paging feature can
                be used with any data source object that supports the
                <em>System.Collections.ICollection</em> interface or a data source that supports
                paging capability.</para>
            	<para>To enable the paging feature, set the <strong>AllowPaging</strong> property
                to <strong>true</strong>. By default, the <strong>GridTableView</strong> control
                displays 10 records on a page at a time. You can change the number of records
                displayed on a page by setting the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~PageSize.html">PageSize</a>
                property. To determine the total number of pages required to display the data
                source contents, use the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~PageCount.html">PageCount</a>
                property. You can determine the index of the currently displayed page by using the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~CurrentPageIndex.html">CurrentPageIndex</a>
                property.</para>
            	<para>When paging is enabled, an additional row called the pager item is
                automatically displayed in the <strong>GridTableView</strong> control. The pager
                row contains controls that allow the user to navigate to the other pages. You can
                control the settings of the pager row (such as the pager display mode, the number
                of page links to display at a time, and the pager control's text labels) by using
                the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~PagerStyle.html">PagerStyle</a>
                properties. The pager row can be displayed at the top, bottom, or both the top and
                bottom of the control by setting the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridPagerStyle~Position.html">Position</a>
                property. You can also select from one of six built-in pager display modes by
                setting the <a href="Telerik.Web.UI~Telerik.Web.UI.GridPagerMode.html">Mode</a>
                property.</para>
            	<para>The <strong>GridTableView</strong> control also allows you to define a custom
                template for the pager row. For more information on creating a custom pager row
                template, see
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~PagerTemplate.html">PagerTemplate</a>.</para>
            	<para>The <strong>GridTableView</strong> control provides an event that you can use
                to perform a custom action when paging occurs.</para>
            	<para>
            		<list type="table">
            			<item>
            				<term>Event</term>
            				<description>Description</description>
            			</item>
            			<item>
            				<term>
            					<see cref="!:PageIndexChanged"/>
            				</term>
            				<description>Occurs when one of the pager buttons is clicked, but after
                            the <b>GridTableView</b> control handles the paging operation. This
                            event is commonly used when you need to perform a task after the user
                            navigates to a different page in the control.</description>
            			</item>
            		</list>
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.CanRetrieveAllData">
            <summary><para>Gets or sets a value indicating whether Telerik RadGrid should retrieve all data and ignore server paging in case of filtering or grouping.</para></summary>
            <value>
            	<para>
            		<strong>true</strong> (default) if the retrieve all data feature is enabled; otherwise,
                    <strong>false</strong>.
                </para>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.PageSize">
            <summary>
            	<para>
                    Specify the maximum number of items that would appear in a page, when paging is
                    enabled by <see cref="P:Telerik.Web.UI.GridTableView.AllowPaging"/> or
                    <see cref="P:Telerik.Web.UI.GridTableView.AllowCustomPaging"/> property. Default value is the value of
                    <see cref="P:Telerik.Web.UI.RadGrid.PageSize"/>.
                </para>
            </summary>
            <value>The number of records to display on a single page. The default is 10.</value>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">The PageSize property is set to a value less than 1.</exception>
            <remarks>
            When the paging feature is enabled (by setting the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~AllowPaging.html">AllowPaging</a>
            property to true), use the <strong>PageSize</strong> property to specify the number of
            records to display on a single page.
            </remarks>
            <value><para>The number of records to display on a single page. The default is 10.</para></value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AllowAutomaticUpdates">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will perform
            automatic updates, i.e. using the <strong>DataSource</strong> controls
            functionality.
            </summary>
            <value>
            	<strong>true</strong>, if Telerik RadGrid will perform automatic
            updates; otherwise, <strong>false</strong>. The default value is
            <strong>false</strong>.
            </value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/DataEditing/AllEditableColumns/DefaultCS.aspx">Automatic operations online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AllowAutomaticInserts">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will perform
            automatic inserts, i.e. using the <strong>DataSource</strong> controls
            functionality.
            </summary>
            <value>
            	<strong>true</strong>, if the Telerik RadGrid will perform automatic
            inserts; otherwise, <strong>false</strong>. The default value is
            <strong>false</strong>.
            </value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/DataEditing/AllEditableColumns/DefaultCS.aspx">Automatic operations online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AllowAutomaticDeletes">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will perform
            automatic deletes, i.e. using the <strong>DataSource</strong> controls
            functionality.
            </summary>
            <value>
            	<strong>true</strong>, if Telerik RadGrid will perform automatic
            deletes; otherwise, <strong>false</strong>. The default value is
            <strong>false</strong>.
            </value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/DataEditing/AllEditableColumns/DefaultCS.aspx">Automatic operations online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.Columns">
            <summary>
            	<para>Gets a collection of
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridColumn.html">GridColumn</a> objects
                that represent the column fields in a
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
            A
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridColumnCollection.html">GridColumnCollection</a>
            that contains all the column fields in the <strong>GridTableView</strong>
            control.
            </value>
            <remarks>
            	<para>A column field represents a column in a <strong>GridTableView</strong>
                control. The <strong>Columns</strong> property (collection) is used to store all
                the explicitly declared column fields that get rendered in the GridTableView
                control. You can also use the <strong>Columns</strong> collection to
                programmatically manage the collection of column fields.</para>
            	<para>The column fields are displayed in the <strong>GridTableView</strong> control
                in the order that the column fields appear in the <strong>Columns</strong>
                collection.</para>
            	<para>
                    To get a list of all columns rendered in the current instance use
                    <see cref="P:Telerik.Web.UI.GridTableView.RenderColumns"/>
            	</para>
            	<para>Although you can programmatically add column fields to the
                <strong>Columns</strong> collection, it is easier to list the column fields
                declaratively in the <strong>GridTableView</strong> control and then use the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridColumn~Visible.html">Visible</a>
                property of each column field to show or hide each column field.</para>
            	<para>If the <strong>Visible</strong> property of a column field is set to false,
                the column is not displayed in the <strong>GridTableView</strong> control and the
                data for the column does not make a round trip to the client. If you want the data
                for a column that is not visible to make a round trip, add the field name to the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~DataKeyNames.html">DataKeyNames</a>
                property.</para>
            	<para>This property can be managed programmatically or by Property Builder (IDE
                designer).</para>
            </remarks>
            <notes>
            Explicitly declared column fields can be used in combination with automatically
            generated column fields. When both are used, explicitly declared column fields are
            rendered first, followed by the automatically generated column fields. Automatically
            generated column fields are not added to the <strong>Columns</strong>
            collection.
            </notes>
            <seealso cref="T:Telerik.Web.UI.GridColumnCollection">GridColumnCollection Class</seealso>
            <seealso cref="T:Telerik.Web.UI.GridColumn">GridColumn Class</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx">Column types online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.PageCount">
            <summary>
            	<para>Gets the number of pages required to display the records of the data source
                in a <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>The number of pages in a <strong>GridTableView</strong> control.</value>
            <remarks>
            When the paging feature is enabled (by setting the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~AllowPaging.html">AllowPaging
            Property</a> to <strong>true</strong>), use the <strong>PageCount</strong> property to
            determine the total number of pages required to display the records in the data source.
            This value is calculated by dividing the total number of records in the data source by
            the number of records displayed in a page (as specified by the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~PageSize.html">PageSize</a>
            property) and rounding up.
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowPaging">AllowPaging Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowCustomPaging">AllowCustomPaging Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PageSize">PageSize Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PagingManager">PagingManager Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PagerStyle">PagerStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PagerTemplate">PagerTemplate Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.DataSourceCount">
            <summary>Gets the number of pages if paging is enabled.</summary>
            <value>The number of pages if paging is enabled.</value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowPaging">AllowPaging Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowCustomPaging">AllowCustomPaging Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ResolvedDataSourceView">
            <summary>
                Gets a DataView object that represents the data sent to the
                <see cref="T:Telerik.Web.UI.GridTableView"/> to be displayed.
            </summary>
            <value>A result DataView object of all grid operations.</value>
            <remarks>
                ResolvedDataSourceView is available only in <see cref="!:ItemDataBound"/> event
                handler i.e. when the grid is bound.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.PagingManager">
            <summary>
            Gets a Paging object that is the result of paging settings and runtime paging
            state of the grid.
            </summary>
            <value>
            A
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridPagingManager.html">GridPagingManager</a>
            object that corresponds to the Paging object.
            </value>
            <remarks>
            	<strong>Note</strong> that changes made to this object would <u>not</u> have
            effect on the structure of the grid.
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowPaging">AllowPaging Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PageSize">PageSize Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PageCount">PageCount Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.SortExpressions">
            <summary>
            Gets a collection of sort expressions for this table view instance, associated
            with the column or columns being sorted.
            </summary>
            <remarks>
            	<para>
                    Modifying the <strong>SortExpressions</strong> collection will result in change
                    of the order of appearance of items in the table view. If
                    <see cref="P:Telerik.Web.UI.GridTableView.AllowMultiColumnSorting"/> is set to false this collection can
                    only contain one item. Adding other <see cref="T:Telerik.Web.UI.GridSortExpression"/> in
                    the collection in this case will cause existing expression to be deleted or if
                    GridSortExpression with the same same
                    <see cref="P:Telerik.Web.UI.GridSortExpression.FieldName"/> exist its
                    <see cref="P:Telerik.Web.UI.GridSortExpression.SortOrder"/> will be changed.
                </para>
            	<para>This property's value is preserved in the ViewState.</para>
            </remarks>
            <seealso cref="T:Telerik.Web.UI.GridSortExpressionCollection">GridSortExpressionCollection Class</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowSorting">AllowSorting Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowCustomSorting">AllowCustomSorting Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowMultiColumnSorting">AllowMultiColumnSorting Property</seealso>
            <value>
            The collection of sort expressions associated with the column or columns being
            sorted.
            </value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/Sort/DefaultCS.aspx">Advanced sorting online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.GroupByExpressions">
            <summary>
                Adding <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> to this collection will cause the
                current table-view to display items sorted and devided in groups separated by
                <see cref="T:Telerik.Web.UI.GridGroupHeaderItem"/>s, that display common group and aggregate
                field values. See <see cref="P:Telerik.Web.UI.GridGroupByExpression.Expression"/> on details of
                expressions syntax.
            </summary>
            <remarks>
            	<strong>Note</strong> that the correctness of the expressions in the collection is
                checked when DataBind occures. Then if an expression in not correct or a
                combination of expressions is erroneous a <see cref="T:Telerik.Web.UI.GridGroupByException"/>
                would be thrown on <see cref="M:Telerik.Web.UI.GridTableView.DataBind"/>. This property's value is preserved
                in the ViewState.
            </remarks>
            <value>
            A GroupByExpressionCollection of values that will cause the current table-view to
            display items sorted and devided in groups separated by
            <strong>GridGroupHeaderItem</strong>s, that display common group and aggregate field
            values.
            </value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GroupBy/Expressions/DefaultCS.aspx">Group-By expressions online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AutoGeneratedColumns">
            <seealso cref="P:Telerik.Web.UI.GridTableView.RenderColumns"/>
            <seealso cref="P:Telerik.Web.UI.GridTableView.Columns"/>
            <seealso cref="P:Telerik.Web.UI.GridTableView.RenderColumns"/>
            <seealso cref="P:Telerik.Web.UI.GridTableView.Columns"/>
            <summary>
                Get an array of automatically generated columns. This array is available when
                <see cref="P:Telerik.Web.UI.RadGrid.AutoGenerateColumns"/> is set to true. Autogenerated
                columns appear always after <see cref="P:Telerik.Web.UI.GridTableView.Columns"/> when rendering.
            </summary>
            <value>An array of automatically generated columns.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.EditFormSettings">
            <summary>
            Gets a value defining the setting that will be applied when an Item is in edit
            mode and the <see cref="P:Telerik.Web.UI.GridTableView.EditMode"/> property is set to
            <strong>EditForms</strong>.
            </summary>
            <example>
            	<para><font face="Courier New">[ASPX/ASCX]</font></para>
            	<para><font face="Courier New">&lt;MasterTableView&gt;<br/>
                &lt;<font style="BACKGROUND-COLOR: #edb078" color="white">EditFormSettings</font>
                CaptionFormatString='&lt;img src=<font class="string" color="black">"img/editRowBg.gif"</font> alt=<font class="string" color="black">""</font>
                /&gt;</font><font face="Courier New"><font color="black"><font class="comment">'&gt;</font><br/>
                &lt;FormMainTableStyle GridLines=<font class="string">"None"</font>
                CellSpacing=<font class="string">"0"</font>
                CellPadding=<font class="string">"3"</font>
                Width=<font class="string">"100%"</font>
                CssClass=<font class="string">"none"</font>/&gt;<br/>
                &lt;FormTableStyle CssClass=<font class="string">"EditRow"</font>
                CellSpacing=<font class="string">"0"</font>
                BorderColor=<font class="string">"#c4c0b5"</font>
                CellPadding=<font class="string">"2"</font>
                Width=<font class="string">"100%"</font>/&gt;<br/>
                &lt;FormStyle Width=<font class="string">"100%"</font>
                BackColor=<font class="string">"#ffffe1"</font></font>&gt;&lt;/FormStyle&gt;<br/>
                &lt;/<font style="BACKGROUND-COLOR: #edb078" color="white">EditFormSettings</font>&gt;</font></para>
            </example>
            <seealso cref="T:Telerik.Web.UI.GridEditFormSettings">GridEditFormSettings Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.Caption">
            <summary>
            	<para>Gets or sets a string that specifies a brief description of a
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>.
                Related to Telerik RadGrid accessibility compliance.</para>
            </summary>
            <value>
            A string that represents the text to render in an HTML caption element in a
            <strong>GridTableView</strong> control. The default value is an empty string
            ("").
            </value>
            <remarks>
            	<para>Use the <strong>Caption</strong> property to specify the text to render in an
                HTML caption element in a <strong>GridTableView</strong> control. The text that you
                specify provides assistive technology devices with a description of the table that
                can be used to make the control more accessible.</para>
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.Summary">Summary Property</seealso>
            <example>
            	<pre>
            The following example demonstrates how to style the Caption of a MasterTableView and detail GridTableView.
            </pre>
            	<pre>
            &lt;head runat="server"&gt;<br/>    &lt;title&gt;Untitled Page&lt;/title&gt;<br/>    &lt;style type="text/css"&gt;<br/>
            		<font color="red">.MasterTable_Default caption</font><br/>            {<br/>             color: red;<br/>            }   
                </pre>
            	<pre>
            		<font color="red">.DetailTable_Default caption<br/></font>            {<br/>             color: blue;<br/>            }<br/>
            		<br/>    &lt;/style&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>&lt;form id="form1" runat="server"&gt;<br/>&lt;div&gt;<br/>&lt;radG:RadGrid runat="server" ID="RadGrid1" DataSourceID="SqlDataSource1" AllowPaging="true"<br/>AllowMultiRowEdit="true" OnItemCommand="RadGrid1_ItemCommand" &gt;<br/>&lt;MasterTableView EditMode="EditForms" DataKeyNames="CustomerID" <font color="red">Caption="Master Caption"</font> CommandItemDisplay="Top"&gt;<br/> 
            &lt;Columns&gt;<br/>&lt;radG:GridEditCommandColumn&gt;<br/>&lt;/radG:GridEditCommandColumn&gt;<br/>&lt;/Columns&gt;<br/>&lt;DetailTables&gt;<br/>&lt;radG:GridTableView DataKeyNames="OrderID" DataSourceID="SqlDataSource2" <font color="red">Caption="Detail Caption" CssClass="DetailTable_Default"</font>&gt;<br/>&lt;ParentTableRelation&gt;<br/>&lt;radG:GridRelationFields DetailKeyField="CustomerID" MasterKeyField="CustomerID" /&gt;<br/>&lt;/ParentTableRelation&gt;<br/>&lt;/radG:GridTableView&gt;<br/>&lt;/DetailTables&gt;<br/>&lt;/MasterTableView&gt;<br/>&lt;/radG:RadGrid&gt;<br/>&lt;asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="&lt;/%$ ConnectionStrings:NorthwindConnectionString2/%&gt;"<br/>SelectCommand="SELECT [CustomerID], [CompanyName], [ContactName], [ContactTitle] FROM [Customers]"&gt;<br/>&lt;/asp:SqlDataSource&gt;<br/>&lt;asp:SqlDataSource ID="SqlDataSource2" runat="server" ConnectionString="&lt;/%$ ConnectionStrings:NorthwindConnectionString2/%&gt;"<br/>SelectCommand="SELECT [OrderID], [CustomerID], [ShipCountry] FROM [Orders] WHERE ([CustomerID] = @CustomerID)"&gt;<br/>&lt;SelectParameters&gt;<br/>&lt;asp:Parameter Name="CustomerID" Type="String" /&gt;<br/>&lt;/SelectParameters&gt;<br/>&lt;/asp:SqlDataSource&gt;<br/>&lt;/div&gt;<br/>&lt;/form&gt;<br/>&lt;/body&gt;
            </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.Summary">
            <summary>Gets or sets the 'summary' attribute for the respective table.</summary>
            <remarks>
            This attribute provides a summary of the table's purpose and structure for user
            agents rendering to non-visual media such as speech and Braille. This property is a
            part of Telerik RadGrid accessibility features.
            </remarks>
            <value>
            A string representation of the 'summary' attribute for the respective
            table.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.Caption">Caption Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.Dir">
            <summary>
            	<para>Gets or sets the text direction. This property is related to Telerik RadGrid support
            for Right-To-Left lanugages. It has two possible vales defined by
            <see cref="T:Telerik.Web.UI.GridTableTextDirection"/> enumeration:</para>
            	<list type="bullet">
            		<item>LTR - left-to-right text</item>
            		<item>RTL - right-to-left text</item></list>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.Frame">
            <remarks>
            	<para>The frame attribute for a table specifies which sides of the frame surrounding
            the table will be visible. Possible values:</para>
            	<list type="bullet">
            		<item><strong>void</strong>: No sides. <strong>This is the default
            value</strong>.</item>
            		<item><strong>above</strong>: The top side only.</item>
            		<item><strong>below</strong>: The bottom side only.</item>
            		<item><strong>hsides</strong>: The top and bottom sides only.</item>
            		<item><strong>vsides</strong>: The right and left sides only.</item>
            		<item><strong>lhs</strong>: The left-hand side only.</item>
            		<item><strong>rhs</strong>: The right-hand side only.</item>
            		<item><strong>box</strong>: All four sides.</item>
            		<item><strong>border</strong>: All four sides</item></list>
            </remarks>
            <summary>Gets or sets a value specifying the frame table attribute.</summary>
            <value>
            A
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableFrame.html">GridTableFrame</a> value,
            specifying the frame table attribute.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableFrame">GridTableFrame Enumeration</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.TableLayout">
            <seealso cref="T:Telerik.Web.UI.GridTableLayout">GridTableLayout Enumeration</seealso>
            <value>
            	<para>
                    A
                    <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableLayout.html">GridTableLayout</a>
                    value, indicating the table layout type. The default value is
                    <see cref="F:Telerik.Web.UI.GridTableLayout.Fixed"/>.
                </para>
            </value>
            <summary>Gets or sets a string that indicates whether the table layout is fixed.</summary>
            <remarks>
            	<para>
                    The value of the TableLayout property is a <strong>string</strong> that
                    specifies or receives one of the following <strong>GridTableLayout</strong>
                    enumeration values: 
                    <list type="table">
            			<item>
            				<term><span class="clsDefValue">Auto</span></term>
            				<description>Column width is set by the widest unbreakable content in
                            the column cells.</description>
            			</item>
            			<item>
            				<term><span class="clsLiteral">Fixed</span></term>
            				<description>
                                Default. Table and column widths are set either by the sum of the
                                widths on the <see cref="P:Telerik.Web.UI.GridTableView.Columns"/> objects or, if these are
                                not specified, by the width of the first row of cells. If no width
                                is specified for the table, it renders by default with width=100%.
                            </description>
            			</item>
            		</list>
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ItemStyle">
            <summary>
            	<para>Gets a reference to the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableItemStyle.html">GridTableItemStyle</a>
                object that allows you to set the appearance of items in a
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the style of
                data items in a <strong>GridTableView</strong> control. If style is not altered (is
                default) <see cref="P:Telerik.Web.UI.RadGrid.ItemStyle"/> is used.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AlternatingItemStyle">AlternatingItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.CommandItemStyle">CommandItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.FooterStyle">FooterStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.HeaderStyle">HeaderStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.SelectedItemStyle">SelectedItemStyle Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RenderItemStyle">
            <summary>Gets the rendering style of an Item.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of the item. If <see cref="P:Telerik.Web.UI.GridTableView.ItemStyle"/> is not specified the
                return value is OwnerGrid.<see cref="P:Telerik.Web.UI.RadGrid.ItemStyle"/>.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.GroupHeaderItemStyle">
            <summary>Manage visual style of the group header items.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the style of
                the group header items. If style is not altered (is default)
                <see cref="P:Telerik.Web.UI.RadGrid.GroupHeaderItemStyle"/> is used.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RenderGroupHeaderItemStyle">
            <summary>Gets the rendering style of the group header items.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of the group header items. If
                <see cref="P:Telerik.Web.UI.GridTableView.GroupHeaderItemStyle"/> is not specified the return value is
                OwnerGrid.<see cref="P:Telerik.Web.UI.RadGrid.GroupHeaderItemStyle"/>.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.AlternatingItemStyle">
            <summary>
            	<para>Gets a reference to the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableItemStyle.html">GridTableItemStyle</a>
                object that allows you to set the appearance of alternating items in a
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the style of
                alternating data items in a <strong>GridTableView</strong> control. If style is not
                altered (is default) <see cref="P:Telerik.Web.UI.RadGrid.AlternatingItemStyle"/> is used.
            </value>
            <remarks>
            	<para>Use the <strong>AlternatingItemStyle</strong> property to control the
                appearance of alternating items in a <strong>GridTableView</strong> control. When
                this property is set, the items are displayed alternating between the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~ItemStyle.html">ItemStyle</a>
                settings and the <strong>AlternatingItemStyle</strong> settings. This property is
                read-only; however, you can set the properties of the
                <strong>GridTableItemStyle</strong> object it returns. The properties can be set
                declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the
                    <strong>GridTableView</strong> control in the form
                    <strong>Property-Subproperty</strong>, where <strong>Subproperty</strong> is a
                    property of the <strong>GridTableItemStyle</strong> object (for example,
                    AlternatingItemStyle-ForeColor).</item>
            		<item>Nest an &lt;AlternatingItemStyle&gt; element between the opening and
                    closing tags of the GridTableView control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                <strong>Property.Subproperty</strong> (for example,
                AlternatingItemStyle.ForeColor). Common settings usually include a custom
                background color, foreground color, and font properties.</para>
            </remarks>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RenderAlternatingItemStyle">
            <summary>Gets the rendering style of the AlternatingItem.</summary>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of the AlternatingItem. If <see cref="P:Telerik.Web.UI.GridTableView.AlternatingItemStyle"/>
                is not specified the return value is
                OwnerGrid.<see cref="P:Telerik.Web.UI.RadGrid.AlternatingItemStyle"/>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.EditItemStyle">
            <summary>
            	<para>Gets a reference to the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableItemStyle.html">GridTableItemStyle</a>
                object that allows you to set the appearance of the item selected for editing in a
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
            	<para>
                    A reference to the <strong>GridTableItemStyle</strong> that represents the
                    style of the row being edited in a GridTableView control. If style is not
                    altered (is default) <see cref="P:Telerik.Web.UI.RadGrid.EditItemStyle"/> is used.
                </para>
            </value>
            <remarks>
            	<para>Use the <strong>EditItemStyle</strong> property to control the appearance of
                the item in edit mode. This property is read-only; however, you can set the
                properties of the <strong>GridTableItemStyle</strong> object it returns. The
                properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the
                    <strong>GridTableView</strong> control in the form
                    <strong>Property-Subproperty</strong>, where <strong>Subproperty</strong> is a
                    property of the <strong>GridTableItemStyle</strong> object (for example,
                    <strong>EditItemStyle-ForeColor</strong>).</item>
            		<item>Nest an &lt;<strong>EditItemStyle</strong>&gt; element between the
                    opening and closing tags of the <strong>GridTableView</strong> control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                <strong>Property.Subproperty</strong> (for example,
                <strong>EditItemStyle.ForeColor</strong>). Common settings usually include a custom
                background color, foreground color, and font properties.</para>
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.ItemStyle">ItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.GroupHeaderItemStyle">GroupHeaderItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AlternatingItemStyle">AlternatingItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PagerStyle">PagerStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.HeaderStyle">HeaderStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.FilterItemStyle">FilterItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.CommandItemStyle">CommandItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.FooterStyle">FooterStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.SelectedItemStyle">SelectedItemStyle Property</seealso>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RenderEditItemStyle">
            <summary>Gets the rendering style of an edit Item.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of an edit item. If <see cref="P:Telerik.Web.UI.GridTableView.EditItemStyle"/> is not
                specified the return value is OwnerGrid.<see cref="P:Telerik.Web.UI.RadGrid.EditItemStyle"/>.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.PagerStyle">
            <summary>
            Gets a reference to the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridPagerStyle.html">GridPagerStyle</a> object
            that allows you to set the appearance of the pager item in a
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
            control.
            </summary>
            <value>
                A reference to the <strong>GridPagerStyle</strong> that represents the style of the
                pager item in a <strong>GridTableView</strong> control. If style is not altered (is
                default) <see cref="P:Telerik.Web.UI.RadGrid.PagerStyle"/> is used.
            </value>
            <remarks>
            	<para>Use the <strong>PagerStyle</strong> property to control the appearance of the
                pager item in a <strong>GridTableView</strong> control. The pager item is displayed
                when the paging feature is enabled (by setting the <strong>AllowPaging</strong>
                property to <strong>true</strong>) and contains the controls that allow the user to
                navigate to the different pages in the control. This property is read-only;
                however, you can set the properties of the GridPagerStyle object it returns. The
                properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the
                    <strong>GridTableView</strong> control in the form
                    <strong>Property-Subproperty</strong>, where <strong>Subproperty</strong> is a
                    property of the <strong>GridPagerStyle</strong> object (for example,
                    <strong>PagerStyle-ForeColor</strong>).</item>
            		<item>Nest a <strong>&lt;PagerStyle&gt;</strong> element between the opening
                    and closing tags of the <strong>GridTableView</strong> control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                <strong>Property.Subproperty</strong> (for example,
                <strong>PagerStyle.ForeColor</strong>). Common settings usually include a custom
                background color, foreground color, and font properties.</para>
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.ItemStyle">ItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AlternatingItemStyle">AlternatingItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.HeaderStyle">HeaderStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.FooterStyle">FooterStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.SelectedItemStyle">SelectedItemStyle Property</seealso>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Styles/HeaderFooterPagerStyles/DefaultCS.aspx">Styling Header, Footer and Pager items online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RenderPagerStyle">
            <summary>Gets the rendering style of the Pager item.</summary>
            <value>
                A reference to the GridTableItemStyle that represents the rendering style of the
                pager item. If <see cref="P:Telerik.Web.UI.GridTableView.PagerStyle"/> is not specified the return value is
                OwnerGrid.<see cref="P:Telerik.Web.UI.RadGrid.PagerStyle"/>.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.HeaderStyle">
            <summary>
            	<para>Gets a reference to the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableItemStyle.html">GridTableItemStyle</a>
                object that allows you to set the appearance of the header item in a
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
            	<para>
                    A reference to the <strong>GridTableItemStyle</strong> that represents the
                    style of the header row in a <strong>GridTableView</strong> control. If style
                    is not altered (is default) <see cref="P:Telerik.Web.UI.RadGrid.HeaderStyle"/> is used.
                </para>
            </value>
            <remarks>
            	<para>Use the <strong>HeaderStyle</strong> property to control the appearance of
                the header item in a <strong>GridTableView</strong> control. This property is
                read-only; however, you can set the properties of the
                <strong>GridTableItemStyle</strong> object it returns. The properties can be set
                declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the
                    <strong>GridTableView</strong> control in the form
                    <strong>Property-Subproperty</strong>, where <strong>Subproperty</strong> is a
                    property of the GridTableItemStyle object (for example,
                    <strong>HeaderStyle-ForeColor</strong>).</item>
            		<item>Nest a <strong>&lt;HeaderStyle&gt;</strong> element between the opening
                    and closing tags of the GridTableView control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                <strong>Property.Subproperty</strong> (for example,
                <strong>HeaderStyle.ForeColor</strong>). Common settings usually include a custom
                background color, foreground color, and font properties.</para>
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.ItemStyle">ItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AlternatingItemStyle">AlternatingItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.EditItemStyle">EditItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.FooterStyle">FooterStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.SelectedItemStyle">SelectedItemStyle Property</seealso>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Styles/HeaderFooterPagerStyles/DefaultCS.aspx">Styling Header, Footer and Pager items online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RenderHeaderStyle">
            <summary>Gets the rendering style of a GridHeaderItem.</summary>
            <value>
                A reference to the GridTableItemStyle that represents the rendering style of the
                GridHeaderItem. If <see cref="P:Telerik.Web.UI.GridTableView.HeaderStyle"/> is not specified the return value
                is OwnerGrid.<see cref="P:Telerik.Web.UI.RadGrid.HeaderStyle"/>.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.FilterItemStyle">
            <summary>
            Gets a reference to the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableItemStyle.html">GridTableItemStyle</a>
            object that allows you to set the appearance of the filter item in a
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
            control.
            </summary>
            <value>
            A reference to the <strong>GridTableItemStyle</strong> that represents the style
            of the filter item.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RenderFilterItemStyle">
            <summary>Gets the rendering style of a FilterItem.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of a FilterItem. If <see cref="P:Telerik.Web.UI.GridTableView.FilterItemStyle"/> is not
                specified the return value is OwnerGrid.<see cref="P:Telerik.Web.UI.RadGrid.FilterItemStyle"/>
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.CommandItemStyle">
            <summary>
            Gets a referenct to the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableItemStyle.html">GridTableItemStyle</a>
            object that allows you to set the appearance of the command item in a
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
            control.
            </summary>
            <value>
            A reference to the <strong>GridTableItemStyle</strong> that represents the style
            of the command item.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RenderCommandItemStyle">
            <summary>Gets the rendering style of a CommandItem.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of a CommandItem. If <see cref="P:Telerik.Web.UI.GridTableView.CommandItemStyle"/> is not
                specified the return value is
                OwnerGrid.<see cref="P:Telerik.Web.UI.RadGrid.CommandItemStyle"/>.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RenderActiveItemStyle">
            <summary>Gets the rendering style of an ActiveItem.</summary>
            <value>
            A reference to the <strong>GridTableItemStyle</strong> that represents the
            rendering style of an ActiveItem.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.FooterStyle">
            <summary>Manage visual style of the footer item.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the style of
                the footer item. If style is not altered (is default)
                <see cref="P:Telerik.Web.UI.RadGrid.FooterStyle"/> is used.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Styles/HeaderFooterPagerStyles/DefaultCS.aspx ">Styling Header, Footer and Pager items online example</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RenderFooterStyle">
            <summary>Gets the rendering style of an FooterItem.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of an FooterItem. If <see cref="P:Telerik.Web.UI.GridTableView.FooterStyle"/> is not
                specified the return value is OwnerGrid.<see cref="P:Telerik.Web.UI.RadGrid.FooterStyle"/>.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.SelectedItemStyle">
            <summary>
            Gets a reference to the
            <a onclick="javascript:navigateToHelp2Keyword('frlrfSystemWebUIWebControlsStyleClassTopic','System.Web.UI.WebControls.Style')" href="#">Style</a> object that allows you to set the appearance of the selected item
               in a <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
               control.
            </summary>
            <value>
            	<para>
                    A reference to the <strong>Style</strong> object that represents the style of
                    the selected item in a <strong>GridTableView</strong> control. If style is not
                    altered (is default) <see cref="P:Telerik.Web.UI.RadGrid.SelectedItemStyle"/> is used.
                </para>
            </value>
            <remarks>
            	<para>Use the <strong>SelectedItemStyle</strong> property to control the appearance
                of the selected item in a GridTableView control. This property is read-only;
                however, you can set the properties of the <strong>Style</strong> object it
                returns. The properties can be set declaratively using one of the following
                methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the
                    <strong>GridTableView</strong> control in the form
                    <strong>Property-Subproperty</strong>, where <strong>Subproperty</strong> is a
                    property of the <strong>Style</strong> object (for example,
                    <strong>SelectedItemStyle-ForeColor</strong>).</item>
            		<item>Nest a <strong>&lt;SelectedRowStyle&gt;</strong> element between the
                    opening and closing tags of the <strong>GridTableView</strong> control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                <strong>Property.Subproperty</strong> (for example,
                <strong>SelectedItemStyle.ForeColor</strong>). Common settings usually include a
                custom background color, foreground color, and font properties.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the
                <strong>SelectedItemStyle</strong> property to define a custom style for the
                selected item in a <strong>GridTableView</strong> control.</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;radG:RadGrid ID="RadGrid1" runat="server"&gt;<br/>
                ..........<br/>
                &lt;SelectedItemStyle BackColor="#FFE0C0" /&gt;<br/>
                &lt;/radG:RadGrid&gt;</para>
            	<code lang="VB" title="[New Example]">
            RadGrid1.SelectedItemStyle.BackColor = System.Drawing.Color.Azure
                </code>
            	<code lang="CS" title="[New Example]">
            RadGrid1.SelectedItemStyle.BackColor = System.Drawing.Color.Azure;
                </code>
            </example>
            <seealso cref="P:Telerik.Web.UI.GridTableView.ItemStyle">ItemStyle Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AlternatingItemStyle">AlternatingItemStyle Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.Name">
            <summary>
            Gets or sets the name of the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>.
            </summary>
            <value>
            The string representation of the Name of the <strong>GridTableView</strong> it is
            assigned to. The default is String.Empty ("").
            </value>
            <remarks>
            The <strong>Name</strong> property can be used distinguish different
            <strong>GridTableView</strong> instances. Often used to set different settings for
            different views conditionally.
            </remarks>
            <example>
            	<para>The following example demonstrates different action on</para>
            	<para>[ASPX/ASCX]</para>&lt;script type="text/javascript" &gt;<br/>
                function OnRowDblClick(index)<br/>
                {<br/>
                 if(this.Name == "MasterTableView")<br/>
                 {<br/>
                 alert("Cliecked row with index " + index + " of the MasterTableView");<br/>
                 }<br/>
                 if(this.Name == "DetailTableView1")<br/>
                 {<br/>
                 alert("Clicked row with index " + index + " of the first detail table");<br/>
                 }<br/>
                 if(this.Name == "DetailTableView2")<br/>
                 {<br/>
                 alert("Clicked row with index " + index + " of the second detail table");<br/>
                 }<br/>
                }<br/>
                &lt;/script&gt;<br/>
            	<br/>
                &lt;radG:RadGrid ID="RadGrid1" runat="server" &gt;<br/>
                 &lt;MasterTableView Name="MasterTableView"&gt;<br/>
                 &lt;DetailTables&gt;<br/>
                 &lt;radG:GridTableView Name="DetailTableView1" &gt;<br/>
                 &lt;/radG:GridTableView&gt;<br/>
                 &lt;radG:GridTableView Name="DetailTableView2"&gt;<br/>
                 &lt;/radG:GridTableView&gt;<br/>
                 &lt;/DetailTables&gt;<br/>
                 &lt;/MasterTableView&gt;<br/>
                 &lt;ClientSettings&gt;<br/>
                 &lt;ClientEvents OnRowDblClick="OnRowDblClick"&gt;&lt;/ClientEvents&gt;<br/>
                 &lt;/ClientSettings&gt;<br/>
                &lt;/radG:RadGrid&gt;
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ShowHeader">
            <summary>
                Gets or sets a value indicating if the <see cref="T:Telerik.Web.UI.GridHeaderItem"/> will be
                shown in the current <strong>GridTableView</strong>.
            </summary>
            <value>
            	<strong>true</strong>, if the <strong>GridHeaderItem</strong> will be shown in
            the current <strong>GridTableView</strong>; otherwise, <strong>false</strong>. The
            default value is <strong>true</strong>.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.ShowFooter">ShowFooter Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ShowGroupFooter">
            <summary>
                Gets or sets a value indicating if the <see cref="T:Telerik.Web.UI.GridGroupFooterItem"/> will be
                shown in the current <strong>GridTableView</strong>.
            </summary>
            <value>
            	<strong>true</strong>, if the <strong>GridGroupFooterItem</strong> will be shown in
            the current <strong>GridTableView</strong>; otherwise, <strong>false</strong>. The
            default value is <strong>true</strong>.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.ShowFooter">ShowFooter Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ShowFooter">
            <summary>
                Gets or sets a value indicating if the <see cref="T:Telerik.Web.UI.GridFooterItem"/> will be
                shown in the current <strong>GridTableView</strong>.
            </summary>
            <value>
            	<strong>true</strong>, if the <strong>GridFooterItem</strong> will be shown in
            the current <strong>GridTableView</strong>; otherwise, <strong>false</strong>. The
            default value is <strong>false</strong>.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.ShowHeader">ShowHeader Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RenderColumns">
            <summary>
            Gets an array of all columns that are used when rendering the grid
            instance.
            </summary>
            <value>An array of all columns that are used when rendering the grid instance.</value>
            <remarks>
                Modifying the array would <u>not</u> affect rendering as it is regenerated before
                each data-bind. To modify the list of columns available use
                <see cref="P:Telerik.Web.UI.GridTableView.Columns"/> property.
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.Columns">Columns Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ItemsHierarchy">
            <summary>
            	<para>
                    Gets a collection of all data items of a grid table view and items that belong
                    to child tables of the <strong>GridTableView</strong> if the hierarchy is
                    expanded. The items are collected depth-first. The property
                    <see cref="P:Telerik.Web.UI.RadGrid.Items"/> actually referres to
                    <strong>ItemsHierarchy</strong> of<br/>
            		<see cref="P:Telerik.Web.UI.RadGrid.MasterTableView"/>. This property can be used to
                    traverse all<br/>
                    DataItems items in the hiearchy of a <strong>GridTableView</strong>.
                </para>
            </summary>
            <value>
            A <strong>GridDataItemCollection</strong> of all data items of a grid table view
            and items that belong to child tables of the <strong>GridTableView</strong> if the
            hierarchy is expanded.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridDataItem">GridDataItem Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.Items">
            <summary>
            	<para>Gets a collection of GridDataItem objects that represent the data items in a
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridDataItem.html">GridDataItem</a>
                control.</para>
            </summary>
            <remarks>
            The <strong>Items</strong> property (collection) is used to store the data items
            in a <strong>GridTableView</strong> control. The <strong>GridTableView</strong> control
            automatically populates the Items collection by creating a
            <strong>GridDataItem</strong> object for each record in the data source and then adding
            each object to the collection. This property is commonly used to access a specific item
            in the control or to iterate though the entire collection of items.
            </remarks>
            <value>
            A <strong>GridDataItemCollection</strong> that contains all the data items in a
            <strong>GridTableView</strong> control
            </value>
            <seealso cref="T:Telerik.Web.UI.GridDataItem">GridDataItem Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.VirtualItemCount">
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowCustomPaging">AllowCustomPaging Property</seealso>
            <commentsfrom cref="P:Telerik.Web.UI.RadGrid.VirtualItemCount" filter=""/>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.CurrentPageIndex">
            <summary>
            Gets or sets a value indicating the index of the currently active page in case
            paging is enabled (<see cref="P:Telerik.Web.UI.RadGrid.AllowPaging"/> is
            <strong>true</strong>).
            </summary>
            <value>The index of the currently active page in case paging is enabled.</value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowCustomPaging">AllowCustomPaging Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowPaging">AllowPaging Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ShowHeadersWhenNoRecords">
            <summary>
            If set to true (the default)
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridNoRecordsItem.html">GridNoRecordsItem</a>
            is used to display no records template. This item is the only one displayed in the
            <strong>GridTableView</strong> in this case.
            </summary>
            <seealso cref="P:Telerik.Web.UI.GridTableView.NoRecordsTemplate">NoRecordsTemplate Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.HasDetailTables">
            <summary>
            Gets a value indicating if the <strong>GridTableView</strong> instance has
            children (Detail) tables.
            </summary>
            <value>
            	<strong>true</strong>, if the <strong>GridTableView</strong> instance has
            children (Detail) tables; otherwise, <strong>false</strong>.
            </value>
            <seealso cref="P:Telerik.Web.UI.GridTableView.DetailTables">DetailTables Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ID">
            <summary>
            Gets or sets the programmatic identifier assigned to the current
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>.
            </summary>
            <remarks>
            	<para>This property is set automatically by <strong>RadGrid</strong> object that
                owns this instance.</para>
            </remarks>
            <value>The programmatic identifier assigned to the control.</value>
            <notes>
            Only combinations of alphanumeric characters and the underscore character ( _ )
            are valid values for this property. Including spaces or other invalid characters will
            cause an ASP.NET page parser error.
            </notes>
            <seealso cref="P:Telerik.Web.UI.GridTableView.OwnerID">OwnerID Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.RequiresBinding">
            <summary>
            Gets or sets a value indicating whether <strong>RadGrid</strong> will be built on
            PreRender unless it was built before that. This property is supposed for
            Telerik RadGrid internal usage, yet you can set it with care.
            </summary>
            <value>
            	<strong>true</strong>, if the <strong>RadGrid</strong> will be built on
            PreRender; otherwise, <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.HierarchyIndex">
            <summary>
            The unique hierarchy index of the current table view, generated when it is
            binding.
            </summary>
            <value>The hierarchy index of the current table view.</value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.ItemsCreated">
            <summary>
            Indicates whether the items have been created, generally by data-binding.
            </summary>
            <value>
            	<strong>true</strong>, if the items have beed created; otherwise,
            <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.UID">
            <summary>
            This property is used internally by <strong>RadGrid</strong> and it is not
            intended to be used directly from your code.
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.PagerTemplate">
            <summary>
            	<para>Gets or sets the custom content for the pager item in a
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
            A
            <a href="http://msdn2.microsoft.com/en-us/library/system.web.ui.itemplate.aspx">System.Web.UI.ITemplate</a>
            that contains the custom content for the pager item. The default value is null, which
            indicates that this property is not set.
            </value>
            <remarks>
            If this template is set, <strong>RadGrid</strong> will not create the default
            pager controls.
            </remarks>
            <seealso cref="P:Telerik.Web.UI.GridTableView.AllowPaging">AllowPaging Property</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.PagingManager">PagingManager Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.CommandItemTemplate">
            <summary>
            	<para>Gets or sets the template that will be instantiated in the CommandItem. If
                this template is set, <strong>RadGrid</strong> will not create the default
                CommandItem controls.</para>
            </summary>
            <value>
            A
            <a href="http://msdn2.microsoft.com/en-us/library/system.web.ui.itemplate.aspx">System.Web.UI.ITemplate</a>
            object that contains the custom content for the pager item. The default value is null,
            which indicates that this property is not set.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridCommandItem">GridCommandItem Class</seealso>
            <seealso cref="P:Telerik.Web.UI.GridTableView.CommandItemSettings">CommandItemSettings Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.IsItemInserted">
            <summary>
            Gets or sets a value indicating if the <strong>GridTableView</strong> is
            currently in insert mode.
            </summary>
            <value>
            	<strong>true</strong>, if the <strong>GridTableView</strong> is currently in
            insert mode; otherwise, <strong>false</strong>.
            </value>
            <remarks>
                The ItemInserted property indicates if the <strong>GridTableView</strong> is
                currently in insert mode. After setting it you should call the
                <see cref="M:Telerik.Web.UI.GridTableView.Rebind"/> method. You can also use the
                <see cref="M:Telerik.Web.UI.GridTableView.InsertItem"/> method, that will also reposition the grid to show
                the last page, where the newly inserted item is generally displayed.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.OverrideDataSourceControlSorting">
            <summary>
            Gets or sets a value indicating if the <strong>GridTableView</strong> should override the
            default DataSourceControl sorting with grid native sorting.
            </summary>
            <remarks>
                You can set this to true in case of ObjectDataSource with IEnumerable data without implemented sorting. 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.CommandItemDisplay">
            <summary>
            	<para>Gets or sets the default position of the GridCommandItem as defined by the
            <see cref="T:Telerik.Web.UI.GridCommandItemDisplay"/>. The possible values are:</para>
            	<list type="bullet">
            		<item>None - this is the default value - the command item will not be rendered</item>
            		<item>Top - the command item will be rendered on the top of the grid</item>
            		<item>Bottom - the command item will be rendered on the bottom of the grid</item>
            		<item>TopAndBottom - the command item will be rendered both on top and bottom of the
            grid.</item></list>
            </summary>
            <value>
            A
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridCommandItemDisplay.html">GridCommandItemDisplay</a>
            proprty which define the default position of the
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridCommandItem.html">GridCommandItem</a>.
            </value>
            <seealso cref="T:Telerik.Web.UI.GridCommandItemDisplay">GridCommandItemDisplay Enumeration</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridTableView.CustomPageSize">
            <summary>
            Stores a custom PageSize value if such is set when page mode is NextPrevAndNumeric
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridRelationFields">
            <summary>
            corresponding fields from a master-detail relation
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridTableViewRelation">
            <summary>
                <para>
                  A collection that stores <see cref="T:Telerik.Web.UI.GridRelationFields"/> objects.
               </para>
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridTableViewRelation"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.#ctor">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.Web.UI.GridTableViewRelation"/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.#ctor(Telerik.Web.UI.GridTableViewRelation)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> based on another <see cref="T:Telerik.Web.UI.GridTableViewRelation"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.#ctor(Telerik.Web.UI.GridRelationFields[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> containing any array of <see cref="T:Telerik.Web.UI.GridRelationFields"/> objects.
               </para>
            </summary>
            <param name="value">
                  A array of <see cref="T:Telerik.Web.UI.GridRelationFields"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.Add(Telerik.Web.UI.GridRelationFields)">
            <summary>
               <para>Adds a <see cref="T:Telerik.Web.UI.GridRelationFields"/> with the specified value to the 
               <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridRelationFields"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewRelation.AddRange(Telerik.Web.UI.GridRelationFields[])"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.AddRange(Telerik.Web.UI.GridRelationFields[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.Web.UI.GridTableViewRelation"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.Web.UI.GridRelationFields"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewRelation.Add(Telerik.Web.UI.GridRelationFields)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.AddRange(Telerik.Web.UI.GridTableViewRelation)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewRelation.Add(Telerik.Web.UI.GridRelationFields)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.Contains(Telerik.Web.UI.GridRelationFields)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> contains the specified <see cref="T:Telerik.Web.UI.GridRelationFields"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridRelationFields"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.Web.UI.GridRelationFields"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewRelation.IndexOf(Telerik.Web.UI.GridRelationFields)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.CopyTo(Telerik.Web.UI.GridRelationFields[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> is greater than the available space between <paramref name="arrayIndex"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than <paramref name="array"/>'s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.IndexOf(Telerik.Web.UI.GridRelationFields)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.Web.UI.GridRelationFields"/> in 
                  the <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridRelationFields"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.Web.UI.GridRelationFields"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.Web.UI.GridTableViewRelation"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewRelation.Contains(Telerik.Web.UI.GridRelationFields)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.Insert(System.Int32,Telerik.Web.UI.GridRelationFields)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.Web.UI.GridRelationFields"/> into the <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.Web.UI.GridRelationFields"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.Web.UI.GridTableViewRelation.Add(Telerik.Web.UI.GridRelationFields)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.Web.UI.GridTableViewRelation.Remove(Telerik.Web.UI.GridRelationFields)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.Web.UI.GridRelationFields"/> from the 
               <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridRelationFields"/> to remove from the <see cref="T:Telerik.Web.UI.GridTableViewRelation"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.Web.UI.GridTableViewRelation.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.Web.UI.GridRelationFields"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.Web.UI.GridValidationSettings">
            <summary>
            Container of misc. grouping settings of RadGrid control
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridGroupByExpression">
            <summary>
                Expression similar to SQL's "Select Group By" clause that is used by
                <strong>GridTableView</strong> to group items
                (<see cref="P:Telerik.Web.UI.GridTableView.GroupByExpressions"/>. Expressions can be defined by
                assigning <see cref="P:Telerik.Web.UI.GridGroupByExpression.Expression">Expression</see> property and/or managing the
                items in <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> or
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.GroupByFields"/> collections.
            </summary>
            <remarks>
                If you use <see cref="P:Telerik.Web.UI.GridGroupByExpression.Expression"/> property to assign
                group by expression as string then the expression is parsed and
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.SelectFields"/> and
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.GroupByFields"/> are created. If the
                expression syntax is incorrect a <see cref="T:Telerik.Web.UI.GridGroupByException"/> would be
                thrown. You can use <see cref="T:Telerik.Web.UI.GridGroupByField"/>'s properties to set
                expression's fields appearance format strings, etc. See
                <see cref="P:Telerik.Web.UI.GridGroupByExpression.Expression"/> property for details about the expression syntax.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpression.#ctor(Telerik.Web.UI.GridColumn)">
            <summary>Constructs a new GroupByExpression from a grid GridColumn.</summary>
            <remarks>
            If the column does not have a valid <see cref="P:Telerik.Web.UI.GridColumn.GroupByExpression"/> string assigned this 
            constructor will throw <see cref="T:Telerik.Web.UI.GridGroupByException"/>. Column should be <see cref="P:Telerik.Web.UI.GridColumn.Groupable"/>
            The following properties will be copied from the corresponding column's properties:
            <list>
            		<item>
            		Column's data-format-string depending on the type of the column. For example 
            		<see cref="P:Telerik.Web.UI.GridBoundColumn.DataFormatString"/></item> will be copied to 
            		<see cref="P:Telerik.Web.UI.GridGroupByField.FormatString"/>.
            	<item>
            		Column's <see cref="P:Telerik.Web.UI.GridColumn.HeaderText"/> will be copied to <see cref="P:Telerik.Web.UI.GridGroupByField.HeaderText"/>
            		</item>
            	</list>
            </remarks>
            <param name="column">
            the column (and its <strong>DataField</strong> respectively) that will be used
            for grouping Telerik RadGrid
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpression.Parse(System.String)">
            <summary>Calls GridGroupByExpression(expression)</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpression.ToString">
            <summary>The same as the <see cref="P:Telerik.Web.UI.GridGroupByExpression.Expression"/> property</summary>
            <returns>the string representation of the expression.</returns>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpression.IsSame(Telerik.Web.UI.GridGroupByExpression)">
            <summary>
            Compares the current expression against the expression set as parameter and check
            if both expressions contain field with the same name.
            </summary>
            <returns>
            	<strong>true</strong> if both expressions contain field with the same name,
            otherwise false.
            </returns>
            <param name="expression">expression to check against this expression</param>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpression.ContainsSameGroupByField(Telerik.Web.UI.GridGroupByExpression)">
            <summary>Checks if the given expression contains same Group-By field as this one.</summary>
            <returns>
            true if the expression already contains this GroupByField, otherwise
            false.
            </returns>
            <remarks>
            Use this function to determine if two expressions seem to produce the same set of results
            </remarks>
            <param name="expression">Expression to check</param>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByExpression.SelectFields">
            <summary>
            Gets a collection of SelectField objects (field names, aggregates etc.) that form
            the "Select" clause. Standing on the left side of the "Group By" clause.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByExpression.GroupByFields">
            <summary>
                Gets a collection of <see cref="!:GroupByField"/> objects that form the grouping
                clause. Standing on the right side of the "Group By" clause
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByExpression.Expression">
            <summary>String representation of the GroupBy expression.</summary>
            <remarks>
            	<para>Expression syntax:</para>
            	<para>fieldname[ alias]|aggregate(fieldname)[ alias][, ...] Group By fieldname[
                sort][, ...]</para>
            	<list type="bullet">
            		<item>
            			<strong>fieldname</strong>: the name of any field from the
                        <see cref="P:Telerik.Web.UI.RadGrid.DataSource"/>
            		</item>
            		<item><strong>alias</strong>: alas string. This cannot contain blanks or other
                    reserved symbols like ',', '.' etc.</item>
            		<item>
            			<strong>aggregate</strong>: any of - <em>min</em>, <em>max</em>,
                        <em>sum</em>, <em>count</em>, <em>last</em>, <em>first</em> etc (the same
                        as in <see cref="T:Telerik.Web.UI.GridAggregateFunction"/> enumeration )
                    </item>
            		<item><strong>sort</strong>: <em>asc</em> or <em>desc</em> - the sort order of
                    the grouped items</item>
            	</list>
            </remarks>
            <example>
            	<code lang="CS" description="Here is a sample expression:">
            Country, City, count(Country) Items, ContactName Group By Country, City desc
                </code>
            	<code lang="VB" title="[New Example]" description="Here is a sample expression:">
            Country, City, count(Country) Items, ContactName Group By Country, City desc
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByExpression.Index">
            <summary>
                Gets the index of the expression if added in a
                <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/>
            </summary>
            <value>
                integer, representing the index of the collection ni
                <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/>.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.GridGroupByExpressionCollection">
            <summary>
            Collection that stores group by expressions <seealso cref="T:Telerik.Web.UI.GridGroupByExpression"/>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.#ctor">
            <summary>
            <para>
             Initializes a new instance of <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/>.
            </para>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.#ctor(Telerik.Web.UI.GridGroupByExpressionCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> based on another <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.#ctor(Telerik.Web.UI.GridGroupByExpression[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> containing any array of <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> objects.
               </para>
            </summary>
            <param name="value">
                  An array of <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.Add(Telerik.Web.UI.GridGroupByExpression)">
            <summary>
               <para>Adds a <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> with the specified value to the 
               <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridGroupByExpressionCollection.AddRange(Telerik.Web.UI.GridGroupByExpression[])"/>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.Add(System.String)">
            <summary>
               <para>Parses value and adds a <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> to the
               <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> string representation to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridGroupByExpressionCollection.AddRange(Telerik.Web.UI.GridGroupByExpression[])"/>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.AddRange(Telerik.Web.UI.GridGroupByExpression[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridGroupByExpressionCollection.Add(Telerik.Web.UI.GridGroupByExpression)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.AddRange(Telerik.Web.UI.GridGroupByExpressionCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridGroupByExpressionCollection.Add(Telerik.Web.UI.GridGroupByExpression)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.Contains(Telerik.Web.UI.GridGroupByExpression)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> contains the specified <see cref="T:Telerik.Web.UI.GridGroupByExpression"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridGroupByExpressionCollection.IndexOf(Telerik.Web.UI.GridGroupByExpression)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.CopyTo(Telerik.Web.UI.GridGroupByExpression[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> is greater than the available space between <paramref name="array"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="array"/> is less than <paramref name="array"/>"s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.IndexOf(Telerik.Web.UI.GridGroupByExpression)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> in 
                  the <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.GridGroupByExpressionCollection.Contains(Telerik.Web.UI.GridGroupByExpression)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.Insert(System.Int32,Telerik.Web.UI.GridGroupByExpression)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> into the <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.Web.UI.GridGroupByExpressionCollection.Add(Telerik.Web.UI.GridGroupByExpression)"/>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupByExpressionCollection.Remove(Telerik.Web.UI.GridGroupByExpression)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> from the 
               <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.GridGroupByExpression"/> to remove from the <see cref="T:Telerik.Web.UI.GridGroupByExpressionCollection"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupByExpressionCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.Web.UI.GridGroupByExpression"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.Web.UI.GridGroupPanel">
            <summary>
            	<strong>GridGroupPanel</strong> appears on the top of Telerik RadGrid
                when <see cref="P:Telerik.Web.UI.RadGrid.ShowGroupPanel">ShowGroupPanel</see> of RadGrid is set to
                <strong>true</strong> and if <see cref="P:Telerik.Web.UI.GridClientSettings.AllowDragToGroup"/>
                is set to <strong>true</strong>, you can drag column to the panel to group data by
                that column.
            </summary>
            <seealso cref="!:grdBasicGrouping.html" cat="RadGrid Manual">Basic Grouping</seealso>
            <seealso cref="!:grdTraverseItemsInGroupPanel.html" cat="RadGrid Manual">Traversing items in group panel</seealso>
            <example>
            	<code lang="CS" title="Iterate through group panel items in PreRender">
            protected void RadGrid1_PreRender(object sender, System.EventArgs e)
            {
                    TableCell cell;
             
                    foreach (cell in RadGrid1.GroupPanel.GroupPanelItems)
                    {
                        Control ctrl;
                        foreach (ctrl in cell.Controls)
                        {
                            if (ctrl is ImageButton)
                            {
                                ImageButton button = ctrl as ImageButton;
                                button.ImageUrl = "&lt;my_img_url&gt;";
                                button.CausesValidation = false;
                            }
                        }
                    }
            }
                </code>
            	<code lang="VB" title="Iterate through group panel items in PreRender">
            Protected Sub RadGrid1_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles RadGrid1.PreRender
                    Dim cell As TableCell
             
                    For Each cell In RadGrid1.GroupPanel.GroupPanelItems
                        Dim ctrl As Control
                        For Each ctrl In cell.Controls
                            If (Typeof ctrl Is ImageButton) Then
                                Dim button As ImageButton = CType(ctrl, ImageButton)
                                button.ImageUrl = "&lt;my_img_url&gt;"
                                button.CausesValidation = False
                            End If
                        Next ctrl
                    Next cell
            End Sub
                </code>
            </example>
            <remarks>
                Group by fields (displayed in the GroupPanel) are defined through the
                <see cref="P:Telerik.Web.UI.GridTableView.GroupByExpressions">GridGroupByExpressions</see>.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupPanel.#ctor">
            <summary>For internal usage only.</summary>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupPanel.InitializeIn(Telerik.Web.UI.RadGrid,System.Boolean)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupPanel.Ungroup(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.GridGroupPanel.Swap(System.String,System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupPanel.GroupPanelItems">
            <summary>
            Gets a collection of items displayed in the group panel. These items represent
            the <strong>GroupByFields</strong> used for Telerik RadGrid
            grouping.
            </summary>
            <example>
            	<code lang="CS" title="Traversing items in group panel">
            protected void RadGrid1_PreRender(object sender, System.EventArgs e)
            {
                    TableCell cell;
             
                    foreach (cell in RadGrid1.GroupPanel.GroupPanelItems)
                    {
                        Control ctrl;
                        foreach (ctrl in cell.Controls)
                        {
                            if (ctrl is ImageButton)
                            {
                                ImageButton button = ctrl as ImageButton;
                                button.ImageUrl = "&lt;my_img_url&gt;";
                                button.CausesValidation = false;
                            }
                        }
                    }
            }
                </code>
            	<code lang="VB" title="Traversing items in group panel">
            Protected Sub RadGrid1_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles RadGrid1.PreRender
                    Dim cell As TableCell
             
                    For Each cell In RadGrid1.GroupPanel.GroupPanelItems
                        Dim ctrl As Control
                        For Each ctrl In cell.Controls
                            If (Typeof ctrl Is ImageButton) Then
                                Dim button As ImageButton = CType(ctrl, ImageButton)
                                button.ImageUrl = "&lt;my_img_url&gt;"
                                button.CausesValidation = False
                            End If
                        Next ctrl
                    Next cell
            End Sub
                </code>
            </example>
            <seealso cref="!:grdTraverseItemsInGroupPanel.html" cat="RadGrid Manual">Traversing items in group panel</seealso>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupPanel.Text">
            <summary>
            Gets or sets the text displayed in the group panel to urge the user dragging a
            column to group by.
            </summary>
            <example>
            	<pre>
            &lt;GroupPanel Text="Drag here the column you need to group by."&gt;&lt;/GroupPanel&gt;
            </pre>
            </example>
            <remarks>
            Note that the GroupPanel Text has a default value, so you don't need to set it
            generally.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupPanel.PanelStyle">
            <summary>Gets the style that will be used for the group panel.</summary>
            <example>
            	<pre>
                &lt;GroupPanel Text="Drag a column here."&gt;<br/>        &lt;PanelStyle BackColor="Aqua" BorderStyle="Dotted" /&gt;<br/>    &lt;/GroupPanel&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupPanel.PanelItemsStyle">
            <summary>Gets the style that will be used for the group panel items.</summary>
            <example>
            	<pre>
                &lt;GroupPanel Text="Drag a column here."&gt;<br/>        &lt;PanelStyle BackColor="Aqua" BorderStyle="Dotted" /&gt;<br/>        &lt;PanelItemsStyle BackColor="Black" Font-Italic="true"/&gt;<br/>    &lt;/GroupPanel&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.GridGroupPanel.Visible">
            <summary>Gets or sets a value indicating whether the group panel will be displayed.</summary>
            <value>true, if group panel is visible, otherwise false (the default value).</value>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.GridGroupPanelStyle">
            <summary>
            Summary description for GridGroupPanelStyle.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadContextMenu">
            <summary>A navigation control used to create context menus.</summary>
            <remarks>
            	<para>
                    The <b>RadContextMenu</b> control is used to display context-aware options for various targets. Those targets
            		are specified through the <see cref="P:Telerik.Web.UI.RadContextMenu.Targets"/> property. RadContextMenu supports the following targets:
                </para>
            	<list type="bullet">
            		<item>
            			<see cref="T:Telerik.Web.UI.ContextMenuControlTarget"/> - Used to associate a context menu with an ASP.NET Server control. 
            			Accepts the control ID as an argument.
            		</item>
            		<item>
            			<see cref="T:Telerik.Web.UI.ContextMenuElementTarget"/> - Used to associate a context menu with an HTML element. Accepts
            			the HTML element id as an argument.
            		</item>
            		<item>
            			<see cref="T:Telerik.Web.UI.ContextMenuDocumentTarget"/> - Used to specify document-wide context menu.
            		</item>
            		<item>
            			<see cref="T:Telerik.Web.UI.ContextMenuTagNameTarget"/> - Used to associate a context menu with all elements with the specified
            			tag name (e.g. IMG, INPUT).
            		</item>
            	</list>
            </remarks>	
        </member>
        <member name="T:Telerik.Web.UI.RadMenu">
            <summary>A navigation control used to display a menu in a web page.</summary>
            <remarks>
            	<para>
                    The <b>RadMenu</b> control is used to display a list of menu items in a Web Forms
                    page. The <b>RadMenu</b> control supports the following features:
                </para>
            	<list type="bullet">
            		<item>
            			Databinding that allows the control to be populated from various
            			datasources.
            		</item>
            		<item>
            			Programmatic access to the <strong>RadMenu</strong> object model
            			which allows dynamic creation of menus, populating with items and customizing the behavior 
            			by various properties.
            		</item>
            		<item>
            			Customizable appearance through built-in or user-defined skins.
            		</item>
            	</list>
            	<h3>Items</h3>
            	<para>
                    The <strong>RadMenu</strong> control is made up of tree of items represented
                    by <see cref="T:Telerik.Web.UI.RadMenuItem"/> objects. Items at the top level (level 0) are
                    called root items. An item that has a parent item is called a child item. All root
                    items are stored in the <see cref="P:Telerik.Web.UI.RadMenu.Items"/> property of the RadMenu control. Child items are
                    stored in the <see cref="P:Telerik.Web.UI.RadMenuItem.Items">Items</see> property of their parent <see cref="T:Telerik.Web.UI.RadMenuItem"/>.
                </para>
            	<para>
                    Each menu item has a <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> and a <see cref="P:Telerik.Web.UI.RadMenuItem.Value">Value</see> property. 
            		The value of the <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> property is displayed in the <b>RadMenu</b> control, 
            		while the <see cref="P:Telerik.Web.UI.RadMenuItem.Value">Value</see> property is used to store any additional data about the item, 
            		such as data passed to the postback event associated with the item. When clicked, an item can
                    navigate to another Web page indicated by the <see cref="P:Telerik.Web.UI.RadMenuItem.NavigateUrl">NavigateUrl</see> property.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.HierarchicalControlItemContainer.DataSource">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.IRadMenuItemContainer">
            <summary>
                Defines properties that menu item containers (<see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see>,
                <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see>) should implement
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IRadMenuItemContainer.Owner">
            <summary>Gets the parent <see cref="T:Telerik.Web.UI.IRadMenuItemContainer">IRadMenuItemContainer</see>.</summary>
        </member>
        <member name="P:Telerik.Web.UI.IRadMenuItemContainer.Items">
            <summary>Gets the collection of child items.</summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadMenuItemCollection">RadMenuItemCollection</see> that represents the child
                items.
            </value>
            <remarks>
            Use this property to retrieve the child items. You can also use it to
            programmatically add or remove items.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadMenu.LoadContentFile(System.String)">
            <summary>
            Populates the <strong>RadMenu</strong> control from external XML file.
            </summary>
            <remarks>
            The newly added items will be appended after any existing ones.
            </remarks>
            <example>
                The following example demonstrates how to populate <strong>RadMenu</strong> control
                from XML file. 
                <code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                if (!Page.IsPostBack)
                {
                    RadMenu1.LoadContentFile("~/Menu/Examples/Menu.xml");
                }
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(sender As Object, e As EventArgs) Handles MyBase.Load
                If Not Page.IsPostBack Then
                    RadMenu1.LoadContentFile("~/Menu/Examples/Menu.xml")
                End If
            End Sub
                </code>
            </example>
            <param name="xmlFileName">The name of the XML file.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenu.GetAllItems">
            <summary>
            Gets a linear list of all items in the <strong>RadMenu</strong>
            control.
            </summary>
            <returns>
            An <strong>IList&lt;RadMenuItem&gt;</strong> containing all items (from all hierarchy
            levels).
            </returns>
            <remarks>
            Use the <strong>GetAllItems</strong> method to obtain a linear collection of all
            items regardless their place in the hierarchy.
            </remarks>
            <example>
                The following example demonstrates how to disable all items within a
                <strong>RadMenu</strong> control. 
                <code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                foreach (RadMenuItem item in RadMenu1.GetAllItems())
                {
                    item.Enabled = false;
                }
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                For Each childItem As RadMenuItem In RadMenu1.GetAllItems
                    childItem.Enabled = False
                Next
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadMenu.FindItemByText(System.String)">
            <summary>
                Searches the <strong>RadMenu</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> with a <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> property equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> whose <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> property is equal
                to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="text">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenu.FindItemByText(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadMenu</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> with a <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> property equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> whose <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> property is equal
                to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="text">The value to search for.</param> 
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenu.FindItemByValue(System.String)">
            <summary>
                Searches the <strong>RadMenu</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> with a <see cref="P:Telerik.Web.UI.RadMenuItem.Value">Value</see> property equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> whose <see cref="P:Telerik.Web.UI.RadMenuItem.Value">Value</see> property is
                equal to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="value">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenu.FindItemByValue(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadMenu</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> with a <see cref="P:Telerik.Web.UI.RadMenuItem.Value">Value</see> property equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> whose <see cref="P:Telerik.Web.UI.RadMenuItem.Value">Value</see> property is
                equal to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="value">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenu.FindItemByUrl(System.String)">
            <summary>
                Searches the <strong>RadMenu</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadMenuItem">Item</see> with a <see cref="P:Telerik.Web.UI.RadMenuItem.NavigateUrl">NavigateUrl</see>
                property equal to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadMenuItem">Item</see> whose <see cref="P:Telerik.Web.UI.RadMenuItem.NavigateUrl">NavigateUrl</see>
                property is equal to the specified value.
            </returns>
            <remarks>
            The method returns the first Item matching the search criteria. If no Item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="url">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenu.FindItem(System.Predicate{Telerik.Web.UI.RadMenuItem})">
            <summary>
            Returns  the first <strong>RadMenuItem</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindItem</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadMenu1.FindItem(ItemWithEqualsTextAndValue);
            }
            private static bool ItemWithEqualsTextAndValue(RadMenuItem item)
            {
                if (item.Text == item.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadMenu1.FindItem(ItemWithEqualsTextAndValue)
            End Sub
            Private Shared Function ItemWithEqualsTextAndValue(ByVal item As RadMenuItem) As Boolean
                If item.Text = item.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
            </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.ClientChanges">
             <summary>
            		Gets a list of all client-side changes (adding an item, removing an item, changing an item's property) which have occurred.
             </summary>
             <value>
            		A list of <see cref="T:Telerik.Web.UI.ClientOperation`1"/> objects which represent all client-side changes the user has performed. 
            		By default the ClientChanges property returns empty list. Client-changes are recorded if and only if the client-side
            		methods trackChanges()/commitChanges() have been invoked.
             </value>
             <remarks>
            		You can use the ClientChanges property to respond to client-side modifications such as
            		<list type="bullet">
            			<item>adding a new item</item>
            			<item>removing existing item</item>
            			<item>clearing the children of an item or the control itself</item>
            			<item>changing a property of the item</item>
            		</list>
            		The ClientChanges property is available in the first postback (ajax) request after the client-side modifications
            		have taken place. After this moment the property will return empty list.
             </remarks>
             <example>
            		The following example demonstrates how to use the ClientChanges property
            		<code lang="CS">
            		foreach (ClientOperation&lt;RadMenuItem&gt; operation in RadToolBar1.ClientChanges)
            		{
            			RadMenuItem item = operation.Item;
            
            			switch (operation.Type)
            			{
            				case ClientOperationType.Insert:
            					//An item has been inserted - operation.Item contains the inserted item
            				break;
            				case ClientOperationType.Remove:
            					//An item has been inserted - operation.Item contains the removed item. 
                             //Keep in mind the item has been removed from the menu.
            				break;
            				case ClientOperationType.Update:
            					UpdateClientOperation&lt;RadMenuItem&gt; update = operation as UpdateClientOperation&lt;RadMenuItem&gt;
            					//The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            				break;
            				case ClientOperationType.Clear:
            					//All children of have been removed - operation.Item contains the parent item whose children have been removed. If operation.Item is null then the root items have been removed.
            				break;
            			}
            		}
            		</code>
            		<code lang="VB">
            			For Each operation As ClientOperation(Of RadMenuItem) In RadToolBar1.ClientChanges
            				Dim item As RadMenuItem = operation.Item
            				Select Case operation.Type
            					Case ClientOperationType.Insert
            						'An item has been inserted - operation.Item contains the inserted item
            					Exit Select
            					Case ClientOperationType.Remove
            						'An item has been inserted - operation.Item contains the removed item. 
            						'Keep in mind the item has been removed from the menu.
            					Exit Select
            					Case ClientOperationType.Update
            						Dim update As UpdateClientOperation(Of RadMenuItem) = TryCast(operation, UpdateClientOperation(Of RadMenuItem))
            						'The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            					Exit Select
            					Case ClientOperationType.Clear
            						'All children of have been removed - operation.Item contains the parent item whose children have been removed. If operation.Item is Nothing then the root items have been removed.
            					Exist Select
            				End Select
            			Next
            		</code>
             </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.Items">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/> object that contains the root items of the current RadMenu control.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/> that contains the root items of the current RadMenu control. By default
            	the collection is empty (RadMenu has no children).
            </value>
            <remarks>
            	Use the <b>Items</b> property to access the root items of the RadMenu control. You can also use the <b>Items</b> property to
            	manage the root items - you can add, remove or modify items.
            </remarks>
            <example>
                The following example demonstrates how to programmatically modify the properties of a root item.
                <code lang="CS">
            		RadMenu1.Items[0].Text = "Example";
            		RadMenu1.Items[0].NavigateUrl = "http://www.example.com";
                </code>
            	<code lang="VB">
            		RadMenu1.Items(0).Text = "Example"
            		RadMenu1.Items(0).NavigateUrl = "http://www.example.com"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.ItemTemplate">
            <summary>
            Gets or sets the template for displaying the items in
            <strong>RadMenu</strong>.
            </summary>
            <value>
            	<para>
            	An object which implements the <strong>ITemplate</strong> interface.
            	The default value is a null reference (<b>Nothing</b> in
                Visual Basic), which indicates that this property is not set.
            	</para>
            	<para>The <strong>ItemTemplate</strong> property sets a template that will be used
                for all menu items.</para>
            	<para>
                    To specify unique display for individual items use the
                    <see cref="P:Telerik.Web.UI.RadMenuItem.ItemTemplate">ItemTemplate</see> property of the
                    <strong>RadMenuItem</strong> class.
                </para>
            </value>
            <example>
            	<para>The following example demonstrates how to use the
                <strong>ItemTemplate</strong> property to add a CheckBox for each item.</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadMenu runat="server" ID="RadMenu1"&gt;</para>
            	<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            		<para>&lt;ItemTemplate&gt;</para>
            		<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            			<para>&lt;asp:CheckBox runat="server"
                        ID="CheckBox"&gt;&lt;/asp:CheckBox&gt;<br/>
                        &lt;asp:Label runat="server" ID="Label1"</para>
            			<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            				<para>Text='&lt;%# DataBinder.Eval(Container, "Text") %&gt;'</para>
            				<para>&gt;&lt;/asp:Label&gt;</para>
            			</blockquote>
            		</blockquote>
            		<para>&lt;/ItemTemplate&gt;</para>
            		<para>&lt;Items&gt;</para>
            		<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            			<para>&lt;telerik:RadMenuItem Text="News" /&gt;</para>
            			<para>&lt;telerik:RadMenuItem Text="Sports" /&gt;</para>
            			<para>&lt;telerik:RadMenuItem Text="Games" /&gt;</para>
            		</blockquote>
            		<para>&lt;/Items&gt;</para>
            	</blockquote>
            	<para>&lt;/telerik:RadMenu&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.LoadingStatusTemplate">
            <summary>
            	Gets or sets the template displayed when child items are being loaded.
            </summary>
            <example>
            	The following example demonstrates how to use the LoadingStatusTemplate to display an image.
            	<para>
            	&lt;telerik:RadMenu runat="server" ID="RadMenu1"&gt;
            		&lt;LoadingStatusTemplate&gt;
            			&lt;asp:Image runat="server" ID="Image1" ImageUrl="~/Img/loading.gif" /&gt;
            		&lt;/LoadingStatusTemplate&gt;
            	&lt;/telerik:RadMenu&gt;	
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.ExpandAnimation">
            <summary>Gets the settings for the animation played when an item opens.</summary>
            <value>
                An <see cref="T:Telerik.Web.UI.AnimationSettings">AnnimationSettings</see> that represents the
                expand animation.
            </value>
            <remarks>
            	<para>
                    Use the <strong>ExpandAnimation</strong> property to customize the expand
                    animation of <strong>RadMenu</strong>. You can specify the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> and
                    the <see cref="P:Telerik.Web.UI.AnimationSettings.Duration">Duration</see> of the expand animation.
                    To disable expand animation effects you should set the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> to
                    <strong>AnimationType.None</strong>.<br/>
                    To customize the collapse animation you can use the
                    <see cref="P:Telerik.Web.UI.RadMenu.CollapseAnimation">CollapseAnimation</see> property.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to set the <strong>ExpandAnimation</strong>
                of RadMenu. 
                <para>
            		<para><strong>ASPX:</strong></para>
            	</para>
            	<para>
            		<para>&lt;telerik:RadMenu ID="RadMenu1" runat="server"&gt;</para>
            		<para><strong>&lt;ExpandAnimation Type="OutQuint" Duration="300"
                    /&gt;</strong></para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="News" &gt;</para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="CNN" NavigateUrl="http://www.cnn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="Google News" NavigateUrl="http://news.google.com"
                    /&gt;</para>
            		<para>&lt;/Items&gt;</para>
            		<para>&lt;/telerik:RadMenuItem&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="Sport" &gt;</para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="ESPN" NavigateUrl="http://www.espn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="Eurosport" NavigateUrl="http://www.eurosport.com"
                    /&gt;</para>
            		<para>&lt;/Items&gt;</para>
            		<para>&lt;/telerik:RadMenuItem&gt;</para>
            		<para>&lt;/Items&gt;</para>
            	</para>
            	<para>
            		<para>&lt;/telerik:RadMenu&gt;</para>
            	</para>
            	<code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                RadMenu1.ExpandAnimation.Type = AnimationType.Linear;
                RadMenu1.ExpandAnimation.Duration = 300;
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                RadMenu1.ExpandAnimation.Type = AnimationType.Linear
                RadMenu1.ExpandAnimation.Duration = 300
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.ExpandDelay">
            <summary>
            Gets or sets a value indicating the timeout after which a menu item starts to
            open.
            </summary>
            <value>
            An integer specifying the timeout measured in milliseconds. The default value is
            100 milliseconds.
            </value>
            <remarks>
            	<para>Use the <strong>ExpandDelay</strong> property to delay item opening.</para>
            	<para>
                    To customize the timeout prior to item closing use the
                    <see cref="P:Telerik.Web.UI.RadMenu.CollapseDelay">CollapseDelay</see> property.
                </para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to specify a half second (500
                milliseconds) timeout prior to item opening:</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1" runat="server"
                <strong>ExpandDelay="500"</strong> /&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.CollapseAnimation">
            <summary>Gets the settings for the animation played when an item closes.</summary>
            <value>
                An <see cref="T:Telerik.Web.UI.AnimationSettings">AnnimationSettings</see> that represents the
                collapse animation.
            </value>
            <remarks>
            	<para>
                    Use the <strong>CollapseAnimation</strong> property to customize the expand
                    animation of <strong>RadMenu</strong>. You can specify the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see>,
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Duration">Duration</see> and the
                    items are collapsed.<br/>
                    To disable expand animation effects you should set the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> to
                    <strong>AnimationType.None</strong>. To customize the expand animation you can
                    use the <see cref="P:Telerik.Web.UI.RadMenu.ExpandAnimation">ExpandAnimation</see> property.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to set the
                <strong>CollapseAnimation</strong> of RadMenu. 
                <para>
            		<para><strong>ASPX:</strong></para>
            	</para>
            	<para>
            		<para>&lt;telerik:RadMenu ID="RadMenu1" runat="server"&gt;</para>
            		<para><strong>&lt;CollapseAnimation Type="OutQuint" Duration="300"
                    /&gt;</strong></para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="News" &gt;</para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="CNN" NavigateUrl="http://www.cnn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="Google News" NavigateUrl="http://news.google.com"
                    /&gt;</para>
            		<para>&lt;/Items&gt;</para>
            		<para>&lt;/telerik:RadMenuItem&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="Sport" &gt;</para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="ESPN" NavigateUrl="http://www.espn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadMenuItem Text="Eurosport" NavigateUrl="http://www.eurosport.com"
                    /&gt;</para>
            		<para>&lt;/Items&gt;</para>
            		<para>&lt;/telerik:RadMenuItem&gt;</para>
            		<para>&lt;/Items&gt;</para>
            	</para>
            	<para>
            		<para>&lt;/telerik:RadMenu&gt;</para>
            		<code lang="CS">
            		</code>
            		<code lang="VB">
            		</code>
            	</para>
            	<code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                RadMenu1.CollapseAnimation.Type = AnimationType.Linear;
                RadMenu1.CollapseAnimation.Duration = 300;
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                RadMenu1.CollapseAnimation.Type = AnimationType.Linear
                RadMenu1.CollapseAnimation.Duration = 300
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.CollapseDelay">
            <summary>
            Gets or sets a value indicating the timeout after which a menu item starts to
            close.
            </summary>
            <value>
            An integer specifying the timeout measured in milliseconds. The default value is
            500 (half a second).
            </value>
            <remarks>
            	<para>Use the <strong>CollapseDelay</strong> property to delay item closing. To
                cause immediate item closing set this property to 0 (zero).</para>
            	<para>
                    To customize the timeout prior to item closing use the
                    <see cref="P:Telerik.Web.UI.RadMenu.ExpandDelay">ExpandDelay</see> property.
                </para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to specify one second (1000
                milliseconds) timeout prior to item closing:</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1" runat="server"
                <strong>ClosingDelay="1000"</strong> /&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.Flow">
            <summary>Gets or sets a value indicating the way top level items will flow.</summary>
            <value>
                One of the <see cref="T:Telerik.Web.UI.ItemFlow">ItemFlow</see> values. The default value for top
                level items is <strong>Horizontal</strong>.
            </value>
            <remarks>
            Use the <strong>Flow</strong> property to customize the way top level items are
            displayed. If set to <strong>Horizontal</strong> items are positioned one after
            another. <strong>Vertical</strong> causes the items to flow one below the other.
            </remarks>
            <example>
            	<para>The following example demonstrates how to make a vertical menu.</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1" runat="server"
                <strong>Flow="Vertical"</strong> /&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.DefaultGroupSettings">
            <summary>Specifies the default settings for child item behavior.</summary>
            <value>
                An instance of the <see cref="T:Telerik.Web.UI.RadMenuItemGroupSettings">MenuItemGroupSettings</see>
                class.
            </value>
            <remarks>
            	<para>You can customize the following settings</para>
            	<list type="bullet">
            		<item>item flow</item>
            		<item>expand direction</item>
            		<item>horizontal offset from the parent item</item>
            		<item>vertical offset from the parent item</item>
            		<item>width</item>
            		<item>height</item>
            	</list>
            	<para>
                    For more information check
                    <see cref="T:Telerik.Web.UI.RadMenuItemGroupSettings">MenuItemGroupSettings</see>.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.EnableAutoScroll">
            <summary>
            	Gets or sets a value indicating if an automatic scroll is applied if the groups are larger then the screen height.		
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.EnableRootItemScroll">
            <summary>
            	Gets or sets a value indicating if scroll is enabled for the root items.
            	Width must be set for horizontal root group, Height for vertical one.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.AutoScrollMinimumHeight">
            <summary>
            The minimum available height that is needed to enable the auto-scroll.
            </summary>
            <remarks>
            Enabling the auto-scroll when there is very little available space can
            lead to a situation where only the scroll arrows are visible.
            <br />
            If the available space is lower than the specified value, the menu will
            attempt to screen boundary detection first (if enabled).
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.AutoScrollMinimumWidth">
            <summary>
            	The minimum available width that is needed to enable the auto-scroll.
            </summary>
            <value>
            	The minimum width measured in pixels. The default value is 50 pixels.
            </value>
            <remarks>
            	<para>
            		Enabling the auto-scroll when there is very little available space can
            		lead to a situation where only the scroll arrows are visible.
            	</para>
            	<para>
            		If the available space is lower than the specified value, the menu will
            		attempt to screen boundary detection first (if enabled).
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.EnableScreenBoundaryDetection">
            <summary>
            	Gets or sets a value indicating whether the screen boundary detection will be applied when menu items are expanded.
            </summary>
            <remarks>
            	By default RadMenu will check if there is enough space to open a menu item. If there isn't the expand direction of the 
            	item will be inverted - Left to Right, Bottom to Top and vice versa.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.ClickToOpen">
            <summary>
            Gets or sets a value indicating whether root items should open on mouse
            click.
            </summary>
            <value>
            	<strong>True</strong> if the root items open on mouse click; otherwise
            <strong>false</strong>. The default value is <strong>false</strong>.
            </value>
            <remarks>
            Use the <strong>ClickToOpen</strong> property to customize the way root menu
            items are opened. By default menu items are opened on mouse hovering.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.WebServiceSettings">
            <summary>
            	Gets the settings for the web service used to populate items
            	<see cref="P:Telerik.Web.UI.RadMenuItem.ExpandMode">ExpandMode</see> set to
            	<see cref="F:Telerik.Web.UI.MenuItemExpandMode.WebService">MenuItemExpandMode.WebService</see>.
            </summary>
            <value>
                An <see cref="P:Telerik.Web.UI.RadMenu.WebServiceSettings">WebServiceSettings</see> that represents the
                web service used for populating items.
            </value>
            <remarks>
            	<para>
                    Use the <strong>WebServiceSettings</strong> property to configure the web
            		service used to populate items on demand.
            		You must specify both <see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> and
                    <see cref="P:Telerik.Web.UI.WebServiceSettings.Method">Method</see>
            		to fully describe the service.
                </para>
            	<para>
            		You can use the <see cref="P:Telerik.Web.UI.RadMenu.LoadingStatusTemplate">LoadingStatusTemplate</see>
            		property to create a loading template.
            	</para>
            	<para>
            		In order to use the integrated support, the web service should have the following signature:
            		
            		<code lang="CS">
            		[ScriptService]
            		public class WebServiceName : WebService
            		{
            			[WebMethod]
            			public RadMenuItemData[] WebServiceMethodName(RadMenuItemData item, object context)
            			{
            				// We cannot use a dictionary as a parameter, because it is only supported by script services.
            				// The context object should be cast to a dictionary at runtime.
            				IDictionary&lt;string, object&gt; contextDictionary = (IDictionary&lt;string, object&gt;) context;
            				
            				//...
            			}
            		}
            		</code>
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.PersistLoadOnDemandItems">
            <summary>
            	When set to true, the items populated through Load On Demand are persisted on the server.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.EnableOverlay">
            <summary>
            	Gets or sets a value indicating if an overlay should be rendered (only in Internet Explorer).
            </summary>
            <remarks>
            	The overlay is an iframe element that is used to hide select and other elements from overlapping the menu.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.DataBindings">
            <summary>
            	Gets a collection of <see cref="T:Telerik.Web.UI.RadMenuItemBinding"/> objects that define the relationship 
            	between a data item and the menu item it is binding to. 
            </summary>
            <returns>
            	A <see cref="T:Telerik.Web.UI.RadMenuItemBindingCollection"/> that represents the relationship between a data item and the menu item it is binding to.
            </returns>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.MaxDataBindDepth">
            <summary>
            	Gets or sets the maximum number of levels to bind to the <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> control.
            </summary>
            <value>
            	The maximum number of levels to bind to the <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> control. The default is -1, 
            	which binds all the levels in the data source to the control.
            </value>
            <remarks>
            	When binding the <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> control to a data source, use the MaxDataBindDepth 
            	property to limit the number of levels to bind to the control. For example, setting this property to 2 binds only 
            	the root menu items and their immediate children. All remaining records in the data source are ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.PostBackUrl">
            <summary>
            	Gets or sets the URL of the page to post to from the current page when a menu item is clicked.
            </summary>
            <value>
            	The URL of the Web page to post to from the current page when a menu item is clicked.
            	The default value is an empty string (""), which causes the page to post back to itself.
            </value>
        </member>
        <member name="E:Telerik.Web.UI.RadMenu.ItemCreated">
            <summary>
            Occurs on the server when an item in the <strong>RadMenu</strong> control is
            created.
            </summary>
            <remarks>
            	<para>The <b>ItemCreated</b> event is raised every time a new item is
                added.</para>
            	<para>The <b>ItemCreated</b> event is not related to data binding and you
                cannot retrieve the <strong>DataItem</strong> of the item in the event
                handler.</para>
            	<para>The <b>ItemCreated</b> event is often useful in scenarios where you want
                to initialize all items - for example setting the <strong>ToolTip</strong> of each
                <strong>RadMenuItem</strong> to be equal to the <strong>Text</strong> property.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>ItemCreated</strong>
                event to set the <strong>ToolTip</strong> property of each item.
                <code lang="CS">
            private void RadMenu1_ItemCreated(object sender, Telerik.WebControls.RadMenuItemEventArgs e)
            {
                e.Item.ToolTip = e.Item.Text;
            }
                </code>
            	<code lang="VB">
            Sub RadMenu1_ItemCreated(ByVal sender As Object, ByVal e As Telerik.WebControls.RadMenuItemEventArgs) Handles RadMenu1.ItemCreated
                e.Item.ToolTip = e.Item.Text
            End Sub
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadMenu.ItemClick">
            <summary>
                Occurs on the server when a menu item in the <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see>
                control is clicked.
            </summary>
            <remarks>
            	<para>
            		The menu will also postback if you navigate to a menu item
                    using the [menu item] key and then press [enter] on the menu item that is focused. The
                    instance of the clicked menu item is passed to the <strong>MenuItemClick</strong> event
                    handler - you can obtain a reference to it using the eventArgs.RadMenuItem property.
                </para>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadMenu.ItemDataBound">
            <summary>Occurs after a menu item is data bound.</summary>
            <remarks>
            	<para>
                    The <strong>ItemDataBound</strong> event is raised for each menu item upon
                    databinding. You can retrieve the item being bound using the event arguments.
                    The <strong>DataItem</strong> associated with the item can be retrieved using
                    the <see cref="P:Telerik.Web.UI.RadMenuItem.DataItem">DataItem</see> property.
                </para>
            	<para>The <strong>ItemDataBound</strong> event is often used in scenarios when
                you want to perform additional mapping of fields from the <strong>DataItem</strong>
                to their respective properties in the <strong>RadMenuItem</strong> class.</para>
            </remarks>
            <example>
                The following example demonstrates how to map fields from the data item to
                <see cref="T:Telerik.Web.UI.RadMenuItem">item properties using the <strong>ItemDataBound</strong>
                event.</see>
            	<code lang="CS">
            private void RadMenu1_ItemDataBound(object sender, Telerik.WebControls.RadMenuEventArgs e)
            {
                RadMenuItem item = e.RadMenuItem;
                DataRowView dataRow = (DataRowView) e.Item.DataItem;
             
                item.ImageUrl = "image" + dataRow["ID"].ToString() + ".gif";
                item.NavigateUrl = dataRow["URL"].ToString();
            }
                </code>
            	<code lang="VB">
            Sub RadMenu1_ItemDataBound(ByVal sender As Object, ByVal e As RadMenuEventArgs) Handles RadMenu1.ItemDataBound
                Dim item As RadMenuItem = e.RadMenuItem
                Dim dataRow As DataRowView = CType(e.Item.DataItem, DataRowView)
             
                item.ImageUrl = "image" + dataRow("ID").ToString() + ".gif"
                item.NavigateUrl = dataRow("URL").ToString()
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientMouseOver">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the mouse moves over a menu item in the <strong>RadMenu</strong> control.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientMouseOver</strong>
            		<font color="black">client-side event handler is called when the mouse moves over a
                menu item.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with two properties, <strong>get_item()</strong> (the
                    instance of the menu item) and <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientMouseOver</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function onClientMouseOverHandler(sender, eventArgs)<br/>
                         {<br/>
                         alert(eventArgs.get_item().get_text());<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadMenu ID="RadMenu1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientMouseOver="onClientMouseOverHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadMenu&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientMouseOut">
            <remarks>
            	<para>If specified, the <strong>OnClientMouseOut</strong> client-side event handler
                is called when the mouse moves out of a menu item. Two parameters are passed to the
                handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with two properties, <strong>get_item()</strong> (the
                    instance of the menu item) and <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the mouse moves out of a menu item in the <strong>RadMenu</strong> control.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                 function onClientMouseOutHandler(sender, eventArgs)<br/>
                 {<br/>
                 alert(eventArgs.get_item().get_text());<br/>
                 }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1"<br/>
                 runat= "server"<br/>
            		<strong>OnClientMouseOut="onClientMouseOutHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientItemFocus">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a menu item gets focus.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientItemFocusHandler(sender, eventArgs)<br/>
                {<br/>
                alert(eventArgs.get_item().get_text());<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemFocus="onClientItemFocusHandler"&gt;</strong><br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientItemFocus</strong> client-side event
                handler is called when a menu item is selected using either the keyboard (the [TAB]
                or arrow keys) or by clicking it. Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with two properties, <strong>get_item()</strong> (the
                    instance of the menu item) and <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientItemBlur">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            after an item loses focus.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientItemBlur</strong> client-side event handler
                is called when a menu item loses focus as a result of the user pressing a key or
                clicking elsewhere on the page. Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with two properties, <strong>get_item()</strong> (the
                    instance of the menu item) and <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                 function onClientItemBlurHandler(sender, eventArgs)<br/>
                 {<br/>
                 alert(eventArgs.get_item().get_text());<br/>
                 }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1"<br/>
                 runat="server"<br/>
            		<strong>OnClientItemBlur="onClientItemBlurHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientItemClicking">
            <remarks>
            	<para>This event is similar to <strong>OnClientItemFocus</strong> but fires only on
                mouse click.</para>
            	<para>If specified, the <strong>OnClientItemClicking</strong> client-side event
                handler is called before a menu item is clicked upon. Two parameters are passed to
                the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with three properties, <strong>get_item()</strong> (the
                    instance of the menu item), <strong>get_cancel()/set_cancel()</strong> - indicating
            		if the event should be cancelled and <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>The <strong>OnClientItemClicking</strong> event can be cancelled. To do so,
                return <strong>False</strong> from the event handler.</para>
            	<div>
            		<table class="hs-box"></table>
            	</div>
            </remarks>
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a menu item is clicked.
            </summary>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientItemClickingHandler(sender, eventArgs)<br/>
                {<br/>
                if (eventArgs.get_item().get_text() == "News")<br/>
                {</para>
            	<para>return false;</para>
            	<para>}<br/>
                }<br/>
                &lt;/script&gt;<br/>
                &lt;telerik:RadMenu ID="RadMenu1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemClicking="onClientItemClickingHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientItemClicked">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            after a menu item is clicked.
            </summary>
            <remarks>
            	<para>This event is similar to <strong>OnClientItemFocus</strong> but fires only on
                mouse click.</para>
            	<para>If specified, the <strong>OnClientItemClicked</strong> client-side event
                handler is called after a menu item is clicked upon. Two parameters are passed to
                the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with two properties, <strong>get_item()</strong> (the
                    instance of the menu item) and <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
            &lt;script type="text/javascript"&gt;<br/>
            function onClientItemClickedHandler(sender, eventArgs)<br/>
            {<br/>
            alert(eventArgs.get_item().get_text());<br/>
            }<br/>
            &lt;/script&gt;<br/>
            &lt;telerik:RadMenu ID="RadMenu1"<br/>
            runat="server"<br/>
            	<strong>OnClientItemClicked="onClientItemClickedHandler"</strong>&gt;<br/>
            ....<br/>
            &lt;/telerik:RadMenu&gt;
            </example>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientItemOpening">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a group of child items begin to open.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <requirements>
            	<para>If specified, the <strong>OnClientItemOpening</strong> client-side event handler
                is called when a group of child items opens. Two parameters are passed to the
                handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with three properties, <strong>get_item()</strong> (the
                    instance of the menu item), <strong>get_cancel()/set_cancel()</strong> - indicating
            		if the event should be cancelled and <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>This event can be cancelled by calling eventArgs.set_cancel(true).</para>
            </requirements>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientItemOpeningHandler(sender, eventArgs)<br/>
                {<br/>
                alert(eventArgs.get_item().get_text());<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemOpening="onClientItemOpeningHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientItemOpened">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a group of child items opens.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <requirements>
            	<para>If specified, the <strong>OnClientItemOpened</strong> client-side event handler
                is called when a group of child items opens. Two parameters are passed to the
                handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with two properties, <strong>get_item()</strong> (the
                    instance of the menu item) and <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </requirements>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientItemOpenedHandler(sender, eventArgs)<br/>
                {<br/>
                alert(eventArgs.get_item().get_text());<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemOpen="onClientItemOpenedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientItemClosing">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a group of child items is closing.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientItemClosingHandler(sender, eventArgs)<br/>
                {<br/>
                alert(eventArgs.get_item().get_text());<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemClose="onClientItemClosingHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientItemClosing</strong> client-side event
                handler is called when a group of child items closes. Two parameters are passed to
                the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with three properties, <strong>get_item()</strong> (the
                    instance of the menu item), <strong>get_cancel()/set_cancel()</strong> - indicating
            		if the event should be cancelled and <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientItemClosed">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a group of child items closes.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientItemClosedHandler(sender, eventArgs)<br/>
                {<br/>
                alert(eventArgs.get_item().get_text());<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemClose="onClientItemClosedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientItemClosed</strong> client-side event
                handler is called when a group of child items closes. Two parameters are passed to
                the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with two properties, <strong>get_item()</strong> (the
                    instance of the menu item) and <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientItemPopulating">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a menu item children are about to be populated (for example from web service).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientItemPopulatingHandler(sender, eventArgs)<br/>
                {<br/>
            		var item = eventArgs.get_item();<br/>
            		var context = eventArgs.get_context();<br/>
            		context["CategoryID"] = item.get_value();<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemPopulating="onClientItemPopulatingHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientItemPopulating</strong> client-side event
                handler is called when a menu item children are about to be populated.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with three properties:
            			<list type="bullet">
            				<item><strong>get_item()</strong>, the instance of the menu item.</item>
            				<item><strong>get_context()</strong>, an user object that will be passed to the web service.</item>
            				<item><strong>set_cancel()</strong>, used to cancel the event.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientItemPopulated">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a menu item children were just populated (for example from web service).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientItemPopulatedHandler(sender, eventArgs)<br/>
                {<br/>
            		var item = eventArgs.get_item();<br/>
            		alert("Loading finished for " + item.get_text());<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemPopulated="onClientItemPopulatedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientItemPopulated</strong> client-side event
                handler is called when a menu item children were just populated.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with one property:
            			<list type="bullet">
            				<item><strong>get_item()</strong>, the instance of the menu item.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientItemPopulationFailed">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the operation for populating the children of a menu item has failed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientItemPopulationFailedHandler(sender, eventArgs)<br/>
                {<br/>
            		var item = eventArgs.get_item();<br/>
            		var errorMessage = eventArgs.get_errorMessage();<br/>
            		<br/>
            		alert("Error: " + errorMessage);<br/>
            		eventArgs.set_cancel(true);<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemPopulationFailed="onClientItemPopulationFailedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientItemPopulationFailed</strong> client-side event
                handler is called when the operation to populate the children of a menu item has failed.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with two properties:
            			<list type="bullet">
            				<item><strong>get_item()</strong>, the instance of the menu item.</item>
            				<item><strong>set_cancel()</strong>, set to true to suppress the default action (alert message).</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenu.OnClientLoad">
            <remarks>
            	<para>If specified, the <strong>OnClienLoad</strong> client-side event handler is
                called after the menu is fully initialized on the client.</para>
            	<para>A single parameter - the menu client object - is passed to the
                handler.</para>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientLoadHandler(sender)<br/>
                {<br/>
            		alert(sender.get_id());<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadMenu ID="RadMenu1"<br/>
                runat= "server"<br/>
            		<strong>OnClientLoad="onClientLoadHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            after the <strong>RadMenu</strong> client-side object is initialized.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadContextMenu.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadContextMenu.DescribeTargets(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadContextMenu.ResolveControlTargetIds">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadContextMenu.LoadTargetsViewState(System.Object[])">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadContextMenu.SaveTargetsViewState">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadContextMenu.TrackTargetsViewState">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadContextMenu.Targets">
            <summary>
            Gets the collection containing the targets to which right-click
                <strong>RadContextMenu</strong> will attach.
            </summary>
            <value>A <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see>
                containing the targets to which RadContextMenu will attach.</value>
            <remarks>
            	<para>RadContextMenu can attach to four target types: ASP.NET control, element on the page,
            		document, set of client-side elements, specified by tagName.</para>
            </remarks>
            <example>
                This example demonstrates how to specify that the RadContextMenu will be displayed
            		when a specific textbox and all images on the page clicked.
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
            			&lt;img src="http://www.telerik.com/images/Homepage/telerikLogo.gif" /&gt;<br/>
            			&lt;img src="http://www.telerik.com/demos/aspnet/Prometheus/Controls/Img/productLogo.gif" /&gt;<br/>
                        &lt;asp:TextBox ID="TextBox1" runat="server"/gt;<br/>
                        &lt;Telerik:RadContextMenu ID="RadContextMenu1"<br/>
                          runat= "server"&gt;<br/>
                            &lt;Targets&gt;<br/>
                                &lt;Telerik:RadContextMenuControlTarget ControlID="TextBox1"/&gt;<br/>
                                &lt;Telerik:RadContextMenuTagNameTarget TagName="img"/&gt;<br/>
                            &lt;/Targets&gt;<br/>
                        &lt;/Telerik:RadContextMenu&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadContextMenu.OnClientShowing">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadContextMenu</strong> is to be displayed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientShowing</strong> client-side event handler is
                called before the context menu is shown on the client. Two parameters are passed to the
                handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with two properties,
                          <strong>get_cancel()/set_cancel(cancel)</strong> and
            			  <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>The <strong>OnClientShowing</strong> event can be cancelled. To do so,
                set the cancel property to <strong>false</strong> from the event handler (e.g.
                eventArgs.set_cancel(true);).</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientShowing</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         var shouldDisplayContextMenu = confirm("Do you want to enable context menus on this page?");
                         function onClientShowingHandler(sender, eventArgs)<br/>
                         {<br/>
             			     eventArgs.set_cancel(!shouldDisplayContextMenu);<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;Telerik:RadContextMenu ID="RadContextMenu1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientShowing="onClientShowingHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/Telerik:RadContextMenu&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadContextMenu.OnClientShown">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadContextMenu</strong> is displayed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientShown</strong> client-side event handler is
                called after the context menu is shown on the client. Two parameters are passed to the
                handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>get_domEvent</strong>
            			(a reference to the browser event).</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientShown</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;input type="text" id="txtContextMenuState" value="hidden" /&gt;
                        &lt;script type="text/javascript"&gt;<br/>
                         function onClientShownHandler(sender, eventArgs)<br/>
                         {<br/>
             			     document.getElementById("txtContextMenuState").value = "shown";<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;Telerik:RadContextMenu ID="RadContextMenu1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientShown="onClientShownHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/Telerik:RadContextMenu&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadContextMenu.OnClientHiding">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadContextMenu</strong> is to be hidden.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientHiding</strong> client-side event handler is
                called before the context menu is hidden on the client. Two parameters are passed to the
                handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with two properties,
                          <strong>get_cancel()/set_cancel(cancel)</strong> and
            			  <strong>get_domEvent</strong> (a reference to the browser event).</item>
            	</list>
            	<para>The <strong>OnClientHiding</strong> event can be cancelled. To do so,
                set the cancel property to <strong>false</strong> from the event handler (e.g.
                eventArgs.set_cancel(true);).</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientHiding</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function onClientShowingHandler(sender, eventArgs)<br/>
                         {<br/>
                             var shouldHide = confirm("Do you want to hide the context menu?")
             			     eventArgs.set_cancel(!shouldHide);<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;Telerik:RadContextMenu ID="RadContextMenu1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientHiding="onClientHidingHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/Telerik:RadContextMenu&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadContextMenu.OnClientHidden">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadContextMenu</strong> is hidden.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientHidden</strong> client-side event handler is
                called after the context menu is hidden on the client. Two parameters are passed to the
                handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>get_domEvent</strong>
            			(a reference to the browser event).</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientHidden</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;input type="text" id="txtContextMenuState" /&gt;
                        &lt;script type="text/javascript"&gt;<br/>
                         function onClientHiddenHandler(sender, eventArgs)<br/>
                         {<br/>
             			     document.getElementById("txtContextMenuState").value = "hidden";<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;Telerik:RadContextMenu ID="RadContextMenu1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientHidden="onClientHiddenHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/Telerik:RadContextMenu&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadContextMenu.Flow">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.GridHeaderContextMenu">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridFilterMenu">
            <summary>Represents the filtering menu for Telerik RadGrid.</summary>
        </member>
        <member name="T:Telerik.Web.UI.GridNeedDataSourceEventArgs">
            <summary>
            Summary description for NeedDataSourceEvent.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadGrid">
            <summary>
            RadGrid control class.
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridTableView"/>
            <remarks>
            Set properties of RadGrid as default for the corresponding properties of grid's 
            table views <seealso cref="T:Telerik.Web.UI.GridTableView"/>.
            The best approach to bind RadGrid is to handle its <see cref="E:Telerik.Web.UI.RadGrid.NeedDataSource"/> event and set the DataSource property 
            there. This way RadGrid will handle automatically operations like paging, sorting, grouping, etc.
            The main table-view can be accessed through <see cref="P:Telerik.Web.UI.RadGrid.MasterTableView"/> property.
            The group panel and its items can be accessed using GroupPanel property. Note that the group items can be modified only 
            through the <see cref="P:Telerik.Web.UI.GridTableView.GroupByExpressions"/> properties of each GridTableView.
            Hierarchical grid structure can be implemented adding GridTableView objects to <see cref="P:Telerik.Web.UI.GridTableView.DetailTables"/> and handling 
            <see cref="E:Telerik.Web.UI.RadGrid.DetailTableDataBind"/> event, where you should set the DataSource of each bound detail table filtered
            according to the <see cref="P:Telerik.Web.UI.GridTableView.ParentItem"/> property key values.
            The <see cref="P:Telerik.Web.UI.RadGrid.Columns"/> of RadGrid property is a reference to the columns of the MasterTableView and is present in RadGrid for 
            compatibility with the DataGrid server control.
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.RadGrid.CancelCommandName">
            <summary>Represents the <b>Cancel</b> command name. This field is read-only.</summary>
            <remarks>
            Use the <b>CancelCommandName</b> field to represent the "Cancel" command name.
            This command cancels the edit operation and RadGrid returns to normal mode.
            </remarks>
            <example>
            	<para>The example below demonstrates how to use the Cancel command within an
                EditItemTemplate.</para>
            	<pre>
            &lt;radG:GridTemplateColumn UniqueName="TemplateColumn"&gt;
            </pre>
            	<pre>
                &lt;EditItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="Cancel" Text="Cancel Edit" <font color="red">CommandName="Cancel"</font>&gt;
            </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/EditItemTemplate&gt;
            </pre>
            	<pre>
            &lt;/radG:GridTemplateColumn&gt;
            </pre>
            </example>
        </member>
        <member name="F:Telerik.Web.UI.RadGrid.DeleteCommandName">
            <summary>Represents the "Delete" command name. This field is read-only.</summary>
            <remarks>
            Use the <b>DeleteCommandName</b> field to represent the "Delete" command
            name.
            </remarks>
            <example>
            	<para>The example below demonstrates how to use the Delete command within an
                ItemTemplate.</para>
            	<pre>
            &lt;radG:GridTemplateColumn UniqueName="TemplateColumn"&gt;
            </pre>
            	<pre>
                &lt;ItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="Delete" Text="Delete" <font color="red">CommandName="Delete"</font>&gt;
            </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/ItemTemplate&gt;
            </pre>
            	<pre>
            &lt;/radG:GridTemplateColumn&gt;
            </pre>
            </example>
        </member>
        <member name="F:Telerik.Web.UI.RadGrid.EditCommandName">
            <summary>Represents the "Edit" command name. This field is read-only.</summary>
            <remarks>
            Use the <b>EditCommandName</b> field to represent the "Edit" command name. This
            command enters RadGrid in edit mode.
            </remarks>
            <example>
            	<para>The example below demonstrates how to use the "Edit" command within an
                ItemTemplate.</para>
            	<pre>
            &lt;radG:GridTemplateColumn UniqueName="TemplateColumn"&gt;
            </pre>
            	<pre>
                &lt;ItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="Edit" Text="Edit" <font color="red">CommandName="Edit"</font>&gt;
                </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/ItemTemplate&gt;
            </pre>
            	<pre>
            &lt;/radG:GridTemplateColumn&gt;
            </pre>
            </example>
        </member>
        <member name="F:Telerik.Web.UI.RadGrid.InitInsertCommandName">
            <summary>Represents the "InitInsert" command name. This field is read-only.</summary>
            <example>
            	<para>The example below demonstrates how to use the InitInsert command within an
                CommandItemTemplate.</para>
            	<pre>
                &lt;CommandItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="AddNew" Text="Add new record" <font color="red">CommandName="InitInsert"</font>&gt;
            </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/CommandItemTemplate&gt;
            </pre>
            </example>
            <remarks>
            Use the <strong>InitInsertCommandName</strong> field to represent the
            "InitInsert" command name. This command enters RadGrid in edit mode and lets the user
            enter the data for a new record.
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.RadGrid.PerformInsertCommandName">
            <summary>Represents the "PerformInsert" command name. This field is read-only.</summary>
            <remarks>
            Use the <strong>PerformInsertCommandName</strong> field to represent the
            "PerformInsert" command name. This command enters the new record into the
            database.
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.RadGrid.RebindGridCommandName">
            <summary>
            Represents the "RebindGrid" command name. This field is read-only. Forces
            <strong>RadGrid.Rebind</strong>
            </summary>
            <remarks>
            Use the <strong>RebindGridCommandName</strong> field to force rebinding the
            grid.
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.RadGrid.UpdateCommandName">
            <example>
            	<para>The example below demonstrates how to use the Update command within an
                EditItemTemplate.</para>
            	<pre>
            &lt;radG:GridTemplateColumn UniqueName="TemplateColumn"&gt;
                </pre>
            	<pre>
                &lt;EditItemTemplate&gt;
                </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="Update" Text="Update" <font color="red">CommandName="Update"</font>&gt;
                </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
                </pre>
            	<pre>
                &lt;/EditItemTemplate&gt;
                </pre>
            	<pre>
            &lt;/radG:GridTemplateColumn&gt;
            </pre>
            </example>
            <summary>Represents the "Update" command name. This field is read-only.</summary>
            <remarks>
            Use the <b>UpdateCommandName</b> field to represent the "Update" command
            name.
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.RadGrid.UpdateEditedCommandName">
            <summary>
            Represents the "UpdateEdited" command name. Updates all items that are in edit
            mode. This field is read-only.
            </summary>
            <example>
            	<para>The example below demonstrates how to use the UpdateEdited command within an
                CommandItemTemplate.</para>
            	<pre>
                &lt;CommandItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="UpdateEdited" Text="Update Edited" <font color="red">CommandName="UpdateEdited"</font>&gt;
            </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/CommandItemTemplate&gt;
            </pre>
            </example>
            <remarks>
            Use the <b>UpdateCommandName</b> field to represent the "Update" command
            name.
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.RadGrid.DeleteSelectedCommandName">
            <summary>Represents the "DeleteSelected" command name. This field is read-only.</summary>
            <remarks>
            Use the <strong>DeleteSelectedCommandName</strong> field to represent the
            "DeleteSelected" command name.
            </remarks>
            <example>
            	<para>The example below demonstrates how to use the DeleteSelected command within
                an CommandItemTemplate.</para>
            	<pre>
                &lt;CommandItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="DeleteSelected" Text="Delete Selected" <font color="red">CommandName="DeleteSelected"</font>&gt;
                </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/CommandItemTemplate&gt;
            </pre>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadGrid.#ctor">
            <summary>
            Constructs a new instance of RadGrid
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadGrid.DataBind">
            <summary>
            	<para>Data-bind %<strong>MasterTableView</strong>% and its detail
                %<strong>GridTableView</strong>%s. Prior to calling <strong>DataBind</strong>, the
                %<strong>DataSource</strong>% property should be assigned.</para>
            </summary>
            <seealso cref="!:grdSimpleDatabinding.html" cat="Manual">Simple Data-binding</seealso>
            <remarks>
            	<para>You should have in mind, that in case you are using simple data binding (i.e.
                when you are not using <strong>NeedDataSource</strong> event) the correct approach
                is to call the <b>DataBind()</b> method on the first page load when
                <b>!Page.IsPostBack</b> and after handling some event (sort event for
                example).</para>
            	<para>You will need to assign <strong>DataSource</strong> and rebind the grid after
                each operation (paging, sorting, editing, etc.) - this copies exactly MS
                <b>DataGrid</b> behavior.</para>
            	<para>
                    We recommend using the <see cref="M:Telerik.Web.UI.RadGrid.Rebind"/> method instead and handling
                    the <see cref="E:Telerik.Web.UI.RadGrid.NeedDataSource"/> event.
                </para>
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadGrid.RaisePostBackEvent(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadGrid.CreateTableView">
            <summary>
            This method is used by RadGrid internally. Please do not use.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadGrid.Rebind">
            <summary>
            Forces RadGrid to fire
            <a href="Telerik.Web.UI~Telerik.Web.UI.RadGrid~NeedDataSource_EV.html">NeedDataSource</a>
            event then calls
            <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~DataBind.html">DataBind</a>
            	<!--DXMETADATA end -->
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadGrid.SetStyleClasses">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.CancelCommand">
            <summary>
            	<para>Occurs when the Cancel button is clicked for an item in the
                Telerik RadGrid control.</para>
            </summary>
            <remarks>
            	<para>The CancelCommand event is raised when the Cancel button is clicked for an
                item in the Telerik RadGrid control.</para>
            </remarks>
            <example>
            	<br/>
                The following code example demonstrates how to specify and code a handler for the
                CancelCommand event to cancel edits made to an item in the
                Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_CancelCommand(ByVal source As Object, ByVal e As Telerik.Web.UI.GridCommandEventArgs)
                    Response.Write("Cancel")
                End Sub
             
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnCancelCommand="RadGrid1_CancelCommand" &gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;radG:GridEditCommandColumn&gt;
                                &lt;/radG:GridEditCommandColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.CreateColumnEditor">
            <summary>
            Fires when each editable column creates its column editor, prior to initializing its controls in the cells of the grid
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.NeedDataSource">
            <summary>
            	<para>Fires when the grid is about to be bound and the data source must be assigned
                (is null/Nothing).</para>
            </summary>
            <remarks>
            	<para>
                    Using this event eliminates the need for calling <see cref="M:Telerik.Web.UI.RadGrid.DataBind"/>
                    when the grid content should be refreshed, due to a structural change.<br/>
                    For example if Edit command bubbles, grid will automatically rebind and display
                    the item in edit mode, with no additional code.
                </para>
            	<para>Note that when you use <strong>NeedDataSource</strong> you need to assign
                manually the DataSource property only once in the event handler!</para>
            	<para><strong>Important:</strong> You should never call <strong>Rebind()</strong>
                method in <strong>NeedDataSource</strong> event handler or
                <strong>DataBind</strong>() for <font style="BACKGROUND-COLOR: #ffffff">the grid
                <u>at any stage</u> of the page lifecycle</font>!</para>
            	<para>For more information related to Advanced Data Binding (i.e. with
                NeedDataSource) see the following <a href="grdAdvancedDataBinding.html">Data
                binding</a> article.</para>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ItemEvent">
            <summary>
            Fires when various item events occur - for example, before Pager item is
            initialized, before EditForm is initialized, etc.
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.DetailTableDataBind">
            <summary>
            Fires when a detail-table in the hierarchy is about to be bound. You should only assign the DataSource property of the detail table to a
            data-source properly filtered to display ony child records related to the parent item.
            </summary>
            <remarks>
            You can find the instance of the detail table in the event argument (e). You can
            find the parent item using e.DetailTable.ParentItem property. For more information see
            <a href="grdBindingHierarchicalGrids.html">Hierarchical Binding</a>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.DeleteCommand">
            <summary>
            Occurs when the Delete button is clicked for an item in the
            Telerik RadGrid control.
            </summary>
            <remarks>
            	<para>The DeleteCommand event is raised when the Delete button is clicked for an
                item in the Telerik RadGrid control.</para>
            	<para>A typical handler for the DeleteCommand event removes the selected item from
                the data source.</para>
            </remarks>
            <example>
                The following code example demonstrates how to specify and code a handler for the
                CancelCommand event to cancel a Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_DeleteCommand(ByVal source As Object, ByVal e As Telerik.Web.UI.GridCommandEventArgs)
                    Response.Write("Delete")
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnDeleteCommand="RadGrid1_DeleteCommand"  &gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;radG:GridButtonColumn Text="Delete" CommandName="Delete" UniqueName="Delete"&gt;&lt;/radG:GridButtonColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.EditCommand">
            <summary>
            Occurs when the Edit button is clicked for an item in the
            Telerik RadGrid control.
            </summary>
            <remarks>
            	<para>The EditCommand event is raised when the Edit button is clicked for an item
                in the Telerik RadGrid control.</para>
            	<para>A typical handler for the EditCommand event edites the selected item from the
                data source.</para>
            </remarks>
            <example>
                The following code example demonstrates how to specify and code a handler for the
                EditCommand event to edit a Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_EditCommand(ByVal source As Object, ByVal e As Telerik.Web.UI.GridCommandEventArgs)
                    Response.Write("Edit")
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnEditCommand="RadGrid1_EditCommand"  &gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;radG:GridEditCommandColumn&gt;
                                &lt;/radG:GridEditCommandColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ItemCommand">
            <summary>
            	<para>Occurs when a button is clicked in a Telerik RadGrid
                control.</para>
            </summary>
            <remarks>
            	<para>The ItemCommand event is raised when a button is clicked in the
                Telerik RadGrid control. This allows you to provide an event-handling
                method that performs a custom routine whenever this event occurs.</para>
            	<para>Buttons within a Telerik RadGrid control can also invoke some of
                the built-in functionality of the control. Fires if any control inside
                Telerik RadGrid rises a bubble event. This can be a command button
                (like Edit, Update button, Expand/Collapse of an items) The command arguemtn
                carries a reference to the item which rised the event, the command name and
                argument object.</para>
            	<para>A GridCommandEventArgs object is passed to the event-handling method, which
                allows you to determine the command name and command argument of the button
                clicked.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the ItemCommand event to add the
                name of a customer from a Telerik RadGrid control to a ListBox control when a item's Add
                button is clicked.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" &lt;see cref="&gt; &lt;"/&gt;@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
             
                Protected Sub RadGrid1_ItemCreated(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs)
                    If e.Item.ItemType = GridItemType.AlternatingItem Or e.Item.ItemType = GridItemType.Item Then
                        Dim item As Telerik.Web.UI.GridDataItem
                        item = e.Item
                        Dim LinkButton1 As LinkButton
                        LinkButton1 = item("LinkColumn").FindControl("LinkButton1")
                        LinkButton1.CommandArgument = e.Item.ItemIndex.ToString()
                    End If
                End Sub
             
                Protected Sub RadGrid1_ItemCommand(ByVal source As Object, ByVal e As Telerik.Web.UI.GridCommandEventArgs)
                    ' If multiple buttons are used in a Telerik RadGrid control, use the
                    ' CommandName property to determine which button was clicked.
                    If e.CommandName = "Add" Then
                
                        ' Convert the row index stored in the CommandArgument
                        ' property to an Integer.
                        Dim index As Integer = Convert.ToInt32(e.CommandArgument)
                        
                        ' Retrieve the item that contains the button clicked 
                        ' by the user from the Items collection.
                        Dim item As Telerik.Web.UI.GridDataItem = RadGrid1.Items(index)
                        
                        ' Create a new ListItem object for the customer in the item.     
                        Dim nitem As New ListItem()
                        nitem.Text = Server.HtmlDecode(item("CustomerID").Text)
                        
                        ' If the customer is not already in the ListBox, add the ListItem 
                        ' object to the Items collection of the ListBox control. 
                        If Not CustomersListBox.Items.Contains(nitem) Then
                  
                            CustomersListBox.Items.Add(nitem)
                    
                        End If
                  
                    End If
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnItemCreated="RadGrid1_ItemCreated" OnItemCommand="RadGrid1_ItemCommand"&gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;radG:GridTemplateColumn 
                                    UniqueName="LinkColumn" 
                                    HeaderText="LinkColumn"&gt;
                                    &lt;ItemTemplate&gt;
                                        &lt;asp:LinkButton CommandName="Add" Text="click" ID="LinkButton1" runat="server"&gt;LinkButton&lt;/asp:LinkButton&gt;
                                    &lt;/ItemTemplate&gt;
                                &lt;/radG:GridTemplateColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;asp:listbox id="CustomersListBox" runat="server"/&gt; 
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ItemCreated">
            <summary>
            	<para>Occurs when an item is created in a Telerik RadGrid
                control.</para>
            </summary>
            <remarks>
            	<para>Before the Telerik RadGrid control can be rendered, a GridItem
                object must be created for each row in the control. The ItemCreated event is raised
                when each row in the Telerik RadGrid control is created. This allows
                you to provide an event-handling method that performs a custom routine, such as
                adding custom content to a item, whenever this event occurs.</para>
            	<para>A GridItemEventArgs object is passed to the event-handling method, which
                allows you to access the properties of the row being created. You can determine
                which item type (header item, data pager item, and so on) is being bound by using
                the Item.ItemType property.</para>
            	<para><strong>Note</strong> that the changes made to the item control and its
                children at this stage does not persist into the ViewState.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the ItemCreated event to store
                the index of the item being created in the CommandArgument property of a LinkButton
                control contained in the item. This allows you to determine the index of the item
                that contains the LinkButton control when the user clicked the button.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
             
                Protected Sub RadGrid1_ItemCreated(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs)
                    If e.Item.ItemType = GridItemType.AlternatingItem Or e.Item.ItemType = GridItemType.Item Then
                        Dim item As Telerik.Web.UI.GridDataItem
                        item = e.Item
                        Dim LinkButton1 As LinkButton
                        LinkButton1 = item("LinkColumn").FindControl("LinkButton1")
                        LinkButton1.CommandArgument = e.Item.ItemIndex.ToString()
                    End If
                End Sub
             
                Protected Sub RadGrid1_ItemCommand(ByVal source As Object, ByVal e As Telerik.Web.UI.GridCommandEventArgs)
                    ' If multiple buttons are used in a Telerik RadGrid control, use the
                    ' CommandName property to determine which button was clicked.
                    If e.CommandName = "Add" Then
                
                        ' Convert the row index stored in the CommandArgument
                        ' property to an Integer.
                        Dim index As Integer = Convert.ToInt32(e.CommandArgument)
                        
                        ' Retrieve the item that contains the button clicked 
                        ' by the user from the Items collection.
                        Dim item As Telerik.Web.UI.GridDataItem = RadGrid1.Items(index)
                        
                        ' Create a new ListItem object for the customer in the item.     
                        Dim nitem As New ListItem()
                        nitem.Text = Server.HtmlDecode(item("CustomerID").Text)
                        
                        ' If the customer is not already in the ListBox, add the ListItem 
                        ' object to the Items collection of the ListBox control. 
                        If Not CustomersListBox.Items.Contains(nitem) Then
                  
                            CustomersListBox.Items.Add(nitem)
                    
                        End If
                  
                    End If
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnItemCreated="RadGrid1_ItemCreated" OnItemCommand="RadGrid1_ItemCommand"&gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;radG:GridTemplateColumn 
                                    UniqueName="LinkColumn" 
                                    HeaderText="LinkColumn"&gt;
                                    &lt;ItemTemplate&gt;
                                        &lt;asp:LinkButton CommandName="Add" Text="click" ID="LinkButton1" runat="server"&gt;LinkButton&lt;/asp:LinkButton&gt;
                                    &lt;/ItemTemplate&gt;
                                &lt;/radG:GridTemplateColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;asp:listbox id="CustomersListBox" runat="server"/&gt; 
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ColumnCreating">
            <summary>
            Fires <strong>before</strong> a custom column is created. You can handle the
            event to replace or modify the instance of the column that should be created and added
            into the collection of column in the corresponding
            <strong>GridTableView</strong>.
            </summary>
            <remarks>
            	<para>The <strong>ColumnCreating</strong> event of Telerik RadGrid is
                fired <strong>only for custom grid columns.</strong> It is not designed to be used
                to cancel the creation of auto-generated columns. Its purpose is to have place
                where to define your custom columns (extending the default grid columns)
                programmatically and add them to the grid <strong>Columns</strong>
                collection.</para>
            	<para>See the manual part of Telerik RadGrid documentation for details
                about Telerik RadGrid inheritance.</para>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ColumnCreated">
            <remarks>
            The <strong>ColumnCreated</strong> event of Telerik RadGrid is
            designated to customize auto-generated columns at runtime (for example
            <strong>DataFormatString</strong>, <strong>ReadOnly</strong> or other properties of
            these auto-generated columns).
            </remarks>
            <summary>
            This event is fired <strong>after</strong> the creation of auto-generated
            columns.
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ItemDataBound">
            <summary>
            	<para>Occurs when a data item is bound to data in a Telerik RadGrid
                control.</para>
            </summary>
            <remarks>
            	<para>Before the Telerik RadGrid control can be rendered, each item in
                the control must be bound to a record in the data source. The ItemDataBound event
                is raised when a data item (represented by a GridItem object) is bound to data in
                the Telerik RadGrid control. This allows you to provide an
                event-handling method that performs a custom routine, such as modifying the values
                of the data bound to the item, whenever this event occurs.</para>
            	<para>A GridItemEventArgs object is passed to the event-handling method, which
                allows you to access the properties of the item being bound. You can determine
                which item type (header item, data pager item, and so on) is being bound by using
                the Item.ItemType property.</para>
            	<para>Note that the changes made to the item control and its children does persist
                into the ViewState. This event is fired as a result of a data-binding of Telerik RadGrid
                contorl. This event is fired for items of type:</para>
            	<list type="bullet">
            		<item>GridDataItem</item>
            		<item>GridEditFormItem</item>
            		<item>GridHeaderItem</item>
            		<item>GridPagerItem</item>
            		<item>GridFooterItem</item>
            	</list>
            </remarks>
            <example>
                The following code example demonstrates how to use the ItemDataBound event to
                modify the value of a field in the data source before it is displayed in a
                Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
            Protected Sub RadGrid1_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs)
                    If e.Item.ItemType = GridItemType.AlternatingItem Or e.Item.ItemType = GridItemType.Item Then
                        Dim item As Telerik.Web.UI.GridDataItem
                        item = e.Item
                        item("CustomerID").Text = "Telerik"
                    End If
            End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnItemDataBound="RadGrid1_ItemDataBound"&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.PageIndexChanged">
            <summary>Fires when a paging action has been performed.</summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.PageSizeChanged">
            <summary>
            Fires when
            <a href="RadGridNet2~Telerik.Web.UI.RadGrid~PageSize.html">PageSize</a> property
            value has been changed.
            </summary>
            <remarks>
            	<para>The <em>PageSizeChanged</em> event is rised when the value of the property
                PageSize is changed. You can cancel the event if the new <em>PageSize</em> value is
                invalid and it will not be saved. For example:</para>
            	<pre>
            protected void RadGrid1_PageSizeChanged(object source, GridPageSizeChangedEventArgs e)<br/>{<br/>    if(e.NewPageSize &lt; 1)<br/>
            		<strong>e.Canceled = true;<br/></strong>}
            </pre>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.SortCommand">
            <summary>Occurs when a column is sorted.</summary>
            <remarks>
            	<para>The SortCommand event is raised when a column is sorted.</para>
            	<para>A typical handler for the SortCommand event sorts the list.</para>
            </remarks>
            <example>
                The following code example demonstrates how to specify and code a handler for the
                SortCommand event to sort a Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_SortCommand(ByVal source As Object, ByVal e As Telerik.Web.UI.GridSortCommandEventArgs)
                    Response.Write("Sort")
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" AllowSorting="true" 
                        runat="server" OnSortCommand="RadGrid1_SortCommand" &gt;
                    &lt;/radG:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.UpdateCommand">
            <summary>
            Occurs when the Update button is clicked for an item in the
            Telerik RadGrid control.
            </summary>
            <remarks>
            	<para>The UpdateCommand event is raised when the Update button is clicked for an
                item in the Telerik RadGrid control.</para>
            	<para>A typical handler for the UpdateCommand event updates the selected item from
                the data source.</para>
            </remarks>
            <example>
                The following code example demonstrates how to specify and code a handler for the
                UpdateCommand event to update a Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_UpdateCommand(ByVal source As Object, ByVal e As Telerik.Web.UI.GridCommandEventArgs)
                    Response.Write("Update")
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnUpdateCommand="RadGrid1_UpdateCommand"  &gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;radG:GridEditCommandColumn&gt;
                                &lt;/radG:GridEditCommandColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.InsertCommand">
            <summary>
            Occurs when the Insert button is clicked for an item in the
            Telerik RadGrid control.
            </summary>
            <remarks>
            	<para>The InsertCommand event is raised when the Insert button is clicked for an
                item in the Telerik RadGrid control.</para>
            	<para>A typical handler for the InsertCommand event insert the item into the data
                source.</para>
            </remarks>
            <example>
                The following code example demonstrates how to specify and code a handler for the
                InsertCommand event to insert a Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
             
                Protected Sub RadGrid1_InsertCommand(ByVal source As Object, ByVal e As Telerik.Web.UI.GridCommandEventArgs)
                    Response.Write("Insert")
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnInsertCommand="RadGrid1_InsertCommand"   &gt;
                        &lt;MasterTableView CommandItemDisplay="TopAndBottom"&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.GroupsChanging">
            <summary>
            Fires when a grouping action has been performed. For example when a column header
            was dragged in the GroupPanel.
            </summary>
            <remarks>
            You can use this event to set your own
            <a href="RadGridNet2~Telerik.Web.UI.GridGroupByExpression.html">GridGroupByExpression</a>
            when the user tries to group the grid.
            </remarks>
            <example>
            	<code lang="CS" title="CS">
            protected void RadGrid1_GroupsChanging(object source, Telerik.Web.UI.GridGroupsChangingEventArgs e)
            {
             //Expression is added (by drag/grop on group panel)
             
              if (e.Action == GridGroupsChangingAction.Group)
             {
              if (e.Expression.GroupByFields[0].FieldName != "CustomerID")
              {
               GridGroupByField countryGroupField = new GridGroupByField();
               countryGroupField.FieldName = "Country";
               GridGroupByField cityGroupField = new GridGroupByField();
               cityGroupField.FieldName = "City";
             
               e.Expression.SelectFields.Clear();
               e.Expression.SelectFields.Add(countryGroupField);
               e.Expression.SelectFields.Add(cityGroupField);
             
               e.Expression.GroupByFields.Clear();
               e.Expression.GroupByFields.Add(countryGroupField);
               e.Expression.GroupByFields.Add(cityGroupField);
              }
             
             }
            }
                </code>
            	<code lang="VB" title="VB">
            Protected Sub RadGrid1_GroupsChanging(ByVal source As Object, ByVal e As Telerik.Web.UI.GridGroupsChangingEventArgs)
             'Expression is added (by drag/grop on group panel)
              If (e.Action = GridGroupsChangingAction.Group) Then
              If (e.Expression.GroupByFields(0).FieldName &lt;&gt; "CustomerID") Then
               Dim countryGroupField As GridGroupByField = New GridGroupByField
               countryGroupField.FieldName = "Country"
               Dim cityGroupField As GridGroupByField = New GridGroupByField
               cityGroupField.FieldName = "City"
               e.Expression.SelectFields.Clear
               e.Expression.SelectFields.Add(countryGroupField)
               e.Expression.SelectFields.Add(cityGroupField)
               e.Expression.GroupByFields.Clear
               e.Expression.GroupByFields.Add(countryGroupField)
               e.Expression.GroupByFields.Add(cityGroupField)
              End If
             End If
            End Sub
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ItemUpdated">
            <summary>Fires when a grid item has been updated.</summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ItemInserted">
            <summary>Fires when a grid item has been inserted.</summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ItemDeleted">
            <summary>Fires when a grid item has been deleted.</summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ExcelMLExportStylesCreated">
            <summary>Fires when a grid is exported to excelML and styles collections is created.</summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ExcelMLExportRowCreated">
            <summary>Fires when a grid is exported to excelML and row is created.</summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.GridExporting">
            <summary>Fires when a grid is exporting.</summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.PdfExporting">
            <summary>Fires when a grid is exporting.</summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ExcelExportCellFormatting">
            <summary>
            
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadGrid.ColumnsReorder">
            <summary>Fires when a columns reorder action has been performed.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.DataSource">
            <summary>
            Gets or sets the object from which the Telerik RadGrid control
            retrieves its list of data items.
            </summary>
            <remarks>
            	<para>You should have in mind, that in case you are using simple data binding (i.e.
                when you are not using <strong>NeedDataSource</strong> event) the correct approach
                is to call the <b>DataBind()</b> method on the first page load when
                <b>!Page.IsPostBack</b> and after handling some event (sort event for
                example).</para>
            	<para>You will need to assign <strong>DataSource</strong> and rebind the grid after
                each operation (paging, sorting, editing, etc.) - this copies exactly MS
                <b>DataGrid</b> behavior.</para>
            </remarks>
            <value>
            An object that represents the data source from which the
            Telerik RadGrid control retrieves its data. The default is a null reference
            (Nothing in Visual Basic).
            </value>
            <example>
            The following code example demonstrates how the DataSource property of a
            Telerik RadGrid control is used. In this example, the
            Telerik RadGrid control is bound to a DataSet object. After the DataSource
            property is set, the DataBind method is called explicitly.
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.DataMember">
            <summary>
            Gets or sets the name of the list of data that the Telerik RadGrid
            control binds to, in cases where the data source contains more than one distinct list
            of data items.
            </summary>
            <value>
            The name of the specific list of data that the Telerik RadGrid
            control binds to, if more than one list is supplied by a data source control. The
            default value is String.Empty.
            </value>
            <remarks>
            	<para>
                    Use the <b>DataMember</b> property to specify a member from a multimember data
                    source to bind to the list control. For example, if you have a data source with
                    more than one table specified in the <see cref="P:Telerik.Web.UI.RadGrid.DataSource">DataSource</see>
                    property, use the <b>DataMember</b> property to specify which table to bind to
                    a data listing control.
                </para>
            	<para>The value of the DataMember property is stored in view state.</para>
            	<para>This property cannot be set by themes or style sheet themes. For more
                information, see <strong>ThemeableAttribute</strong> and <strong>Themes and Skins
                Overview</strong> in MSDN.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.GroupingSettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.Web.UI.GridGroupingSettings"/> object that
                    allows you to set the properties of the grouping operation in a
                    Telerik RadGrid control.
                </para>
            </summary>
            <example>
                The following code example demonstrates how to set the GroupingSettings property
                declaratively. It sets the tooltips of the group expand control of the
                Telerik RadGrid. 
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1"
                        runat="server"&gt;
                        &lt;GroupingSettings ExpandTooltip="ExpandTooltip" /&gt;
                        &lt;MasterTableView&gt;
                            &lt;GroupByExpressions&gt;
                                &lt;radG:GridGroupByExpression&gt;
                                    &lt;SelectFields&gt;
                                        &lt;radG:GridGroupByField FieldAlias="CompanyName" FieldName="CompanyName" &gt;&lt;/radG:GridGroupByField&gt;
                                    &lt;/SelectFields&gt;
                                    &lt;GroupByFields&gt;
                                        &lt;radG:GridGroupByField FieldName="CompanyName" SortOrder="Descending"&gt;&lt;/radG:GridGroupByField&gt;
                                    &lt;/GroupByFields&gt;
                                &lt;/radG:GridGroupByExpression&gt;
                            &lt;/GroupByExpressions&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <value>
                A reference to the <see cref="T:Telerik.Web.UI.GridGroupingSettings"/> that allows you to set
                the properties of the grouping operation in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the <strong>GroupingSettings</strong> property to control the settings of
                the grouping operations in a Telerik RadGrid control. This property is
                read-only; however, you can set the properties of the
                <strong>GridGroupingSettings</strong> object it returns. The properties can be set
                declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridGroupingSettings object (for example,
                    GroupingSettings-ExpandTooltip).</item>
            		<item>Nest a &lt;GroupingSettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, GroupingSettings.ExpandTooltip). Common settings
                usually include the tool tips for the sorting controls.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.SortingSettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.Web.UI.GridSortingSettings"/> object that
                    allows you to set the properties of the sorting operation in a
                    Telerik RadGrid control.
                </para>
            </summary>
            <value>
                A reference to the <see cref="T:Telerik.Web.UI.GridSortingSettings"/> that allows you to set
                the properties of the sorting operation in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the SortingSettings property to control the settings of the sorting
                operations in a Telerik RadGrid control. This property is read-only;
                however, you can set the properties of the GridSortingSettings object it returns.
                The properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridSortingSettings object (for example,
                    SortingSettings-SortedAscToolTip).</item>
            		<item>Nest a &lt;SortingSettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, SortingSettings.SortedAscToolTip). Common
                settings usually include the tool tips for the sorting controls.</para>
            </remarks>
            <example>
                The following code example demonstrates how to set the SortingSettings property
                declaratively. It sets the tooltips of the sorting control of the
                Telerik RadGrid control. 
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        AllowSorting="true"&gt;
                        &lt;SortingSettings SortToolTip="SortToolTip" SortedAscToolTip="SortedAscToolTip" SortedDescToolTip="SortedDescToolTip" /&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.HierarchySettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.Web.UI.GridHierarchySettings"/> object that
                    allows you to set the properties of the hierarchical
                    Telerik RadGrid control.
                </para>
            </summary>
            <value>
            A reference to the GridHierarchySettings that allows you to set the properties of
            the hierarchical Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the HierarchySettings property to control the settings of the
                hierarchical Telerik RadGrid control. This property is read-only;
                however, you can set the properties of the GridHierarchySettings object it returns.
                The properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridHierarchySettings object (for example,
                    HierarchySettings-CollapseTooltip).</item>
            		<item>Nest a &lt;HierarchySettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, HierarchySettings.CollapseTooltip). Common
                settings usually include the tool tips for the hierarchical
                Telerik RadGrid control.</para>
            </remarks>
            <example>
            	<code lang="VB" title="VB">
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ExportSettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.Web.UI.GridExportSettings"/> object that
                    allows you to set the properties of the grouping operation in a
                    Telerik RadGrid control.
                </para>
            </summary>
            <value>
            A reference to the GridExportSettings that allows you to set the properties of
            the grouping operation in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the ExportSettings property to control the settings of the grouping
                operations in a Telerik RadGrid control. This property is read-only;
                however, you can set the properties of the GridGroupingSettings object it returns.
                The properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridExportSettings object (for example,
                    GroupingSettings-ExpandTooltip).</item>
            		<item>Nest a &lt;GroupingSettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, GroupingSettings.ExpandTooltip). Common settings
                usually include the tool tips for the sorting controls.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ValidationSettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.Web.UI.GridValidationSettings"/> object that
                    allows you to set the properties of the validate operation in a
                    Telerik RadGrid control.
                </para>
            </summary>
            <value>
                A reference to the <see cref="T:Telerik.Web.UI.GridValidationSettings"/> that allows you to set
                the properties of the validate operation in a Telerik RadGrid control.
            </value>
            <example>
                The following code example demonstrates how to set the
                <strong>ValidationSettings</strong> property declaratively. It sets the validation
                for the <strong>PerformInsert</strong> command event of the TextBox1 control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        AutoGenerateColumns="false" 
                        runat="server"&gt;
                        &lt;ValidationSettings 
                            EnableValidation="true" 
                            CommandsToValidate="PefrormInsert" /&gt;
                            &lt;MasterTableView CommandItemDisplay="TopAndBottom"&gt;
                                &lt;Columns&gt;
                                    &lt;radG:GridEditCommandColumn&gt;
                                    &lt;/radG:GridEditCommandColumn&gt;
                                    &lt;radG:GridTemplateColumn HeaderText="ContactName" UniqueName="ContactName" DataField="ContactName"&gt;
                                        &lt;ItemTemplate&gt;
                                            &lt;%# Eval("ContactName") &lt;see cref="TextBox Text='&lt;"&gt;&gt;
                                        &lt;/ItemTemplate&gt;
                                        &lt;EditItemTemplate&gt;
                                            &lt;asp&lt;/see&gt;# Bind("ContactName") %&gt;' ID="TextBox1" runat="server"&gt;&lt;/asp:TextBox&gt;
                                            &lt;asp:RequiredFieldValidator ControlToValidate="TextBox1" ID="RequiredFieldValidator1" runat="server" ErrorMessage="RequiredFieldValidator"&gt;&lt;/asp:RequiredFieldValidator&gt;
                                        &lt;/EditItemTemplate&gt;
                                    &lt;/radG:GridTemplateColumn&gt;
                                &lt;/Columns&gt;
                            &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT TOP 3 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <remarks>
            	<para>Use the ValidationSettings property to control the settings of the validate
                operations in a Telerik RadGrid control. This property is read-only;
                however, you can set the properties of the GridValidationSettings object it
                returns. The properties can be set declaratively using one of the following
                methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridValidationSettings object (for example,
                    ValidationSettings-EnableValidation).</item>
            		<item>Nest a &lt;ValidationSettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, ValidationSettings.EnableValidation). Common
                settings usually include the propeties for the validation logic in
                Telerik RadGrid control.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ShowDesignTimeSmartTagMessage">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.AllowCustomPaging">
            <summary>
            Gets or sets a value indicating whether custom paging should be performed instead
            of the integrated automatic paging.
            </summary>
            <remarks>
            	<para>
            		<a href="http://www.telerik.com/r.a.d.controls/Grid/Examples/Programming/CustomPaging/DefaultCS.aspx">
                This online example</a> demonstrates an approach to implementing custom paging with
                Telerik RadGrid. The simulated "DataLayer" wraps the logic of extracting records
                for only the specified page and deleting records. Telerik RadGrid
                maintains the pager buttons, changing of pager and other presentation specific
                features.</para>
            	<para>Another available option for custom paging support is represented in the
                <a href="grdCustomPagingThroughObjectDataSourcePopulation.html">how-to
                section</a>.</para>
            	<para><strong>Note:</strong> There is no universal mechanism for grouping when
                custom paging is allowed. The reason for this is that with the custom paging
                mechanism you fetch only part of the whole information from the grid datasource.
                Thus, when you trigger the grouping event the grid is restricted from operating
                with the whole available source data and is not able to group the items accurately.
                Furthermore, the aggregate functions as Count, Sum, etc. (covering operations with
                the whole set of grid items) will return incorrect results.</para>
            	<para>A workaround solution for you could be to use hierarchy in the grid instead
                of grouping to single out the grid items logically and visually according to custom
                criteria. Thus you will be able to use custom paging without further
                limitations.</para>
            	<para>Another approach is to build your own complex SQL statements which to get the
                whole available data from the grid datasource and then group the items in the grid
                with custom code logic.<br/>
            		<br/>
                Finally, you can use standard paging instead of custom paging to ensure the
                consistency of the data on grouping.</para>
            </remarks>
            <value>
            	<strong>true</strong>, if custom paging is allowed; otherwise
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.AllowPaging">
            <summary>
            Gets or sets a value indicating whether the automatic paging feature is
            enabled.
            </summary>
            <value>
            	<strong>true</strong> if the paging feature is enabled; otherwise,
            <strong>false</strong>. The default is <strong>false</strong>
            </value>
            <remarks>
            	<para>Instead of displaying all the records in the data source at the same time,
                the Telerik RadGrid control can automatically break the records up into
                pages. If the data source supports the paging capability, the
                Telerik RadGrid control can take advantage of that and provide built-in
                paging functionality. The paging feature can be used with any data source object
                that supports the System.Collections.ICollection interface or a data source that
                supports paging capability.</para>
            	<para>To enable the paging feature, set the <strong>AllowPaging</strong> property
                to <strong>true</strong>. By default, the Telerik RadGrid control
                displays 10 records on a page at a time. You can change the number of records
                displayed on a page by setting the PageSize property. To determine the total number
                of pages required to display the data source contents, use the PageCount property.
                You can determine the index of the currently displayed page by using the
                CurrentPageIndex property.</para>
            	<para>When paging is enabled, an additional item called the pager item is
                automatically displayed in the Telerik RadGrid control. The pager item contains controls
                that allow the user to navigate to the other pages. You can control the settings of
                the pager item by using the <strong>PagerItemStyle</strong> property. The pager
                item can be displayed at the top, bottom, or both the top and bottom of the control
                by setting the Position property. You can also select from one of four built-in
                pager display modes by setting the Mode property.</para>
            	<para>The Telerik RadGrid control also allows you to define a custom
                template for the pager item.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the <strong>AllowPaging</strong>
                property to declaratively enable the paging feature in the
                Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        AllowPaging="true" &gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
            <seealso cref="P:Telerik.Web.UI.RadGrid.AllowCustomPaging" cat="Custom Paging">AllowCustomPaging Property</seealso>
            <seealso cref="!:grdBasicPaging.html" cat="Telerik RadGrid Manual">Basic Paging</seealso>
            <seealso cref="!:grdPagerItem.html" cat="Telerik RadGrid Manual">Pager Item</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.AllowSorting">
            <summary>Gets or sets a value indicating whether the sorting feature is enabled.</summary>
            <value>
            	<strong>true</strong> if the sorting feature is enabled; otherwise,
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
            <remarks>
            	<para>When a data source control that supports sorting is bound to the
                Telerik RadGrid control, the Telerik RadGrid control can
                take advantage of the data source control's capabilities and provide automatic
                sorting functionality.</para>
            	<para>To enable sorting, set the <strong>AllowSorting</strong> property to
                <strong>true</strong>. When sorting is enabled, the heading text for each column
                field with its SortExpression property set is displayed as a link button.</para>
            	<para>Clicking the link button for a column causes the items in the
                Telerik RadGrid control to be sorted based on the sort expression.
                Typically, the sort expression is simply the name of the field displayed in the
                column, which causes the Telerik RadGrid control to sort with respect
                to that column. To sort by multiple fields, use a sort expression that contains a
                comma-separated list of field names. You can determine the sort expression that the
                Telerik RadGrid control is applying by using the SortExpression
                property. Clicking a column's link button repeatedly toggles the sort direction
                between ascending and descending order.</para>
            </remarks>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
            <example>
                The following code example demonstrates how to use the AllowSorting property to
                enable sorting in a Telerik RadGrid control when automatically
                generated columns are used.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        AllowSorting="true"&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <seealso cref="!:grdSortingExpressions.html" cat="Telerik RadGrid Manual">Sorting Expressions</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ClientSettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.Web.UI.GridClientSettings"/> object that
                    allows you to set the properties of the client-side behavior and appearance in
                    a Telerik RadGrid control.
                </para>
            </summary>
            <value>
                A reference to the <see cref="T:Telerik.Web.UI.GridClientSettings"/> that allows you to set the
                properties of the the client-side behavior and appearance in a
                Telerik RadGrid control.
            </value>
            <example>
            	<para>Use the ClientSettings property to control the settings of the client-side
                behavior and appearance in a Telerik RadGrid control. This property is
                read-only; however, you can set the properties of the GridClientSettings object it
                returns. The properties can be set declaratively using one of the following
                methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridClientSettings object (for example,
                    ClientSettings-AllowDragToGroup).</item>
            		<item>Nest a &lt;ClientSettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, SortingSettings.AllowDragToGroup). Common
                settings usually include the behavior and appearance on the client-side.</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.AlternatingItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of alternating data items in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of alternating
            data items in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the AlternatingItemStyle property to control the appearance of
                alternating data items in a Telerik RadGrid control. When this property
                is set, the data items are displayed alternating between the ItemStyle settings and
                the AlternatingItemStyle settings. This property is read-only; however, you can set
                the properties of the GridTableItemStyle object it returns. The properties can be
                set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example,
                    AlternatingItemStyle-ForeColor).</item>
            		<item>Nest an &lt;AlternatingItemStyle&gt; element between the opening and
                    closing tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, AlternatingItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the AlternatingItemStyle
                property to declaratively define the style for alternating data items in a
                Telerik RadGrid control. 
                <code lang="VB" title="VB">
            &lt;%@ Page language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
            &lt;html  &gt;
              &lt;head id="Head1" runat="server"&gt;
                &lt;title&gt;GridView ItemStyle and AlternatingItemStyle Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                  &lt;h3&gt;GridView ItemStyle and AlternatingItemStyle Example&lt;/h3&gt;
             
                  &lt;radG:RadGrid id="CustomersGridView" 
                    datasourceid="CustomersSource" 
                    autogeneratecolumns="true" 
                    Skin=""
                    runat="server"&gt;
                            
                    &lt;itemstyle backcolor="LightCyan"  
                       forecolor="DarkBlue"
                       font-italic="true"/&gt;
                                
                    &lt;alternatingitemstyle backcolor="PaleTurquoise"  
                      forecolor="DarkBlue"
                      font-italic="true"/&gt;
                                        
                  &lt;/radG:RadGrid&gt;
                        
                  &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                  &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                  &lt;!-- expression to retrieve the connection string value   --&gt;
                  &lt;!-- from the Web.config file.                            --&gt;
                  &lt;asp:sqldatasource id="CustomersSource"
                    selectcommand="Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]"
                    connectionstring="&lt;&lt;see cref="NorthWindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;" 
                    runat="server"/&gt;
                    
                &lt;/form&gt;
              &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.GroupHeaderItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the group-header item in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the
            group-header item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the GroupHeaderItemStyle property to control the appearance of the
                group-header item in a Telerik RadGrid control. This property is
                read-only; however, you can set the properties of the GridTableItemStyle object it
                returns. The properties can be set declaratively using one of the following
                methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example,
                    GroupHeaderItemStyle-ForeColor).</item>
            		<item>Nest a &lt;GroupHeaderItemStyle&gt; element between the opening and
                    closing tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, GroupHeaderItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the group-header item in a Telerik RadGrid
                control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="None" &gt;
                        &lt;GroupHeaderItemStyle BackColor="red"  /&gt; 
                        &lt;MasterTableView&gt;
                            &lt;GroupByExpressions&gt;
                                &lt;radG:GridGroupByExpression&gt;
                                    &lt;SelectFields&gt;
                                        &lt;radG:GridGroupByField FieldAlias="CompanyName" FieldName="CompanyName" &gt;&lt;/radG:GridGroupByField&gt;
                                    &lt;/SelectFields&gt;
                                    &lt;GroupByFields&gt;
                                        &lt;radG:GridGroupByField FieldName="CompanyName" SortOrder="Descending"&gt;&lt;/radG:GridGroupByField&gt;
                                    &lt;/GroupByFields&gt;
                                &lt;/radG:GridGroupByExpression&gt;
                            &lt;/GroupByExpressions&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.AutoGenerateColumns">
            <summary>
            Gets or sets a value indicating whether bound fields are automatically created
            for each field in the data source.
            </summary>
            <remarks>
            	<para>When the AutoGenerateColumns property is set to true, an
                <strong>GridBoundColumn</strong> object is automatically created for each field in
                the data source. Each field is then displayed as a column in the
                Telerik RadGrid control in the order that the fields appear in the data
                source. This option provides a convenient way to display every field in the data
                source; however, you have limited control of how an automatically generated column
                field is displayed or behaves.</para>
            	<para>This set of columns can be accessed using the
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridTableView~AutoGeneratedColumns.html">AutoGeneratedColumns</a>
                collection.</para>
            	<div>
            		<list type="table">
            			<item>
            				<term><img src="images/grd_hs-note.gif"/></term>
            				<description>Runtime auto-generated columns will always appear after
                            the user-specified columns, unless the columns are ordered
                            programmatically.</description>
            			</item>
            		</list>
            	</div>
            	<para>Instead of letting the Telerik RadGrid control automatically
                generate the column fields, you can manually define the column fields by setting
                the <strong>AutoGenerateColumns</strong> property to <strong>false</strong> and
                then creating a custom Columns collection. In addition to bound column fields, you
                can also display a button column, a check box column, a button column, a hyperlink
                column, an image column, or a column based on your own custom-defined template
                etc.</para>
            </remarks>
            <value>
            	<strong>true</strong> to automatically create bound fields for each field in the
            data source; otherwise, <strong>false</strong>. The default is
            <strong>true</strong>.
            </value>
            <example>
                The following code example demonstrates how to use the AutoGenerateColumns property
                to automatically create bound columns in a Telerik RadGrid control for
                each field in the data source. 
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        AutoGenerateColumns="true" 
                        AllowSorting="true"&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.BackImageUrl">
            <summary>
            Gets or sets the URL to an image to display in the background of a
            Telerik RadGrid control.
            </summary>
            <value>
            The URL of an image to display in the background of the
            Telerik RadGrid control. The default is an empty string (""), which
            indicates that this property is not set.
            </value>
            <remarks>
            	<para>Use the <strong>BackImageUrl</strong> property to specify the URL to an image
                to display in the background of a Telerik RadGrid control.</para>
            	<para>If the specified image is smaller than the Telerik RadGrid
                control, the image is tiled to fill in the background. If the image is larger than
                the control, the image is cropped.</para>
            </remarks>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.GroupPanel">
            <summary>
                Gets group panel control instance - visible only if grouping is enabled in grid
                (<see cref="P:Telerik.Web.UI.RadGrid.GroupingEnabled"/>). Each <see cref="T:Telerik.Web.UI.GridTableView"/>'s
                Group-By-Expression is visualized in this panel.
            </summary>
            <seealso cref="T:Telerik.Web.UI.GridClientSettings"/>
            <remarks>
                If grouping is enabled grid allows grouping by column(s) by drag-and-drop of
                columns from it's detail tables in this panel For this purpose set
                <a href="Telerik.Web.UI~Telerik.Web.UI.GridClientSettings~AllowDragToGroup.html">AllowDragToGroup</a>
                property to <strong>true</strong>. You can modify panel's appearance using
                <see cref="P:Telerik.Web.UI.GridGroupPanel.PanelStyle"/> and
                <see cref="P:Telerik.Web.UI.GridGroupPanel.PanelItemsStyle"/>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ShowGroupPanel">
            <seealso cref="P:Telerik.Web.UI.RadGrid.GroupPanel"/>
            <summary>
            	<para>
                    Gets or sets a value indicating whether the <see cref="T:Telerik.Web.UI.GridGroupPanel"/>
                    would be shown in Telerik RadGrid.
                </para>
            </summary>
            <value>
            	<strong>true</strong>, when Telerik RadGrid will display the panel; otherwise
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.GroupingEnabled">
            <seealso cref="P:Telerik.Web.UI.RadGrid.GroupPanel">GroupPanel</seealso>
            <summary>Gets or sets a value indicating whether the grouping is enabled.</summary>
            <remarks>
                Most often this property is used in conjunction with
                <see cref="P:Telerik.Web.UI.RadGrid.ShowGroupPanel"/> property set to <strong>true</strong>. The
                easiest way to turn the grouping on is by using the grid's SmartTag option for
                enabling the grouping.
            </remarks>
            <seealso cref="!:grdBasicGrouping.html" cat="Telerik RadGrid Manual">Basic Grouping</seealso>
            <value>
            	<strong>true</strong>, when the automatic grouping is enabled; otherwise
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.AllowAutomaticUpdates">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will perform
            automatic updates to the data source.
            </summary>
            <value>
            	<strong>true</strong>, when the automatic updates are allowed; otherwise
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
            <remarks>
            See <a href="grdAutomaticDataSourceOperations.html">Automatic Data Source
            Operations</a> for details.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.AllowAutomaticInserts">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will perform
            automatic insert of records to the data source.
            </summary>
            <remarks>
            See <a href="grdAutomaticDataSourceOperations.html">Automatic Data Source
            Operations</a> for details.
            </remarks>
            <value>
            	<strong>true</strong>, when automatic insert into the database would be
            performed; otherwise <strong>false</strong>. The default is
            <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.AllowAutomaticDeletes">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will
            automatically delete records from the specified data source.
            </summary>
            <remarks>
            See <a href="grdAutomaticDataSourceOperations.html">Automatic Data Source
            Operations</a> for details.
            </remarks>
            <value>
            	<strong>true</strong>, when automatic delete from the database would be
            performed; otherwise <strong>false</strong>. The default is
            <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.MasterTableView">
            <summary>
                The instance of <see cref="T:Telerik.Web.UI.GridTableView"/> that represents the main
                grid-table view in RadGrid.
            </summary>
            <remarks>
            	<para class="">
                    Telerik RadGrid introduces a new approach to hierarchical data
                    structures. The innovative in Telerik RadGrid is having a so called
                    <strong>MasterTableView</strong>. This is the topmost table of the hierarchical
                    structure. It is a <see cref="T:Telerik.Web.UI.GridTableView"/> with
                    <see cref="T:Telerik.Web.UI.GridTableViewCollection"/>. The collection holds the so called
                    DetailTables - tables related to the fields of the MasterTable. Each
                    DetailTable can have its own <strong>GridTableViewCollection</strong> with
                    other Detail Tables, thus forming the hierarchical structure.
                </para>
            	<div>
            		<list type="table">
            			<item>
            				<description><strong>Note:</strong> There is only one Master Table for
                            a single Telerik RadGrid. This is the topmost table. All
                            inner tables are referred as a Detail Tables regardless of whether they
                            have related (inner) tables or not.</description>
            			</item>
            		</list>
            	</div>
            </remarks>
            <value>
                A reference to the topmost <see cref="T:Telerik.Web.UI.GridTableView"/>, i.e the
                <strong>MasterTableView</strong>.
            </value>
            <seealso cref="!:grdRadGridMasterTableViewDifference.html" cat="Telerik RadGrid Manual">RadGrid and MasterTableView difference</seealso>
            <example>
            	<pre>
            &lt;radg:radgrid id="RadGrid1" runat="server"<br/>
            CssClass= "RadGrid" Width="100%" AutoGenerateColumns="False" PageSize="3" AllowSorting="True"<br/>  
            AllowMultiRowSelection= "False" AllowPaging="True" GridLines="None" AllowFilteringByColumn="true"&gt;<br/> 
            &lt;PagerStyle Mode="NumericPages" CssClass="Pager"&gt;&lt;/PagerStyle&gt;<br/>  
            &lt;HeaderStyle CssClass="Header"&gt;&lt;/HeaderStyle&gt;<br/>  
            &lt;ItemStyle CssClass="Row"&gt;&lt;/ItemStyle&gt;<br/>
            &lt;AlternatingItemStyle CssClass="AltRow"&gt;&lt;/AlternatingItemStyle&gt;<br/>  
            &lt;MasterTableView DataKeyNames="CustomerID" AllowMultiColumnSorting="True"&gt;<br/> 
            &lt;DetailTables&gt;<br/>     
            &lt;radG:GridTableView DataKeyNames="OrderID" DataMember="Orders"&gt;<br/>  
            &lt;ParentTableRelation&gt;<br/>   
            &lt;radG:GridRelationFields DetailKeyField="CustomerID" MasterKeyField="CustomerID" /&gt;<br/>  
            &lt;/ParentTableRelation&gt;<br/>                        &lt;DetailTables&gt;<br/>    
            &lt;radG:GridTableView DataKeyNames="OrderID" DataMember="OrderDetails"&gt;<br/>    
            &lt;ParentTableRelation&gt;<br/>        
            &lt;radG:GridRelationFields DetailKeyField="OrderID" MasterKeyField="OrderID" /&gt;<br/>    
            &lt;/ParentTableRelation&gt;<br/>              
            &lt;Columns&gt;<br/>                   
            &lt;radG:GridBoundColumn SortExpression="UnitPrice" HeaderText="Unit Price" HeaderButtonType="TextButton"<br/> 
            DataField= "UnitPrice"&gt;<br/>    
            &lt;/radG:GridBoundColumn&gt;<br/>          
            &lt;radG:GridBoundColumn SortExpression="Quantity" HeaderText="Quantity" HeaderButtonType="TextButton"<br/>     
            DataField= "Quantity"&gt;<br/>                                    &lt;/radG:GridBoundColumn&gt;<br/>    
            &lt;radG:GridBoundColumn SortExpression="Discount" HeaderText="Discount" HeaderButtonType="TextButton"<br/>     
            DataField= "Discount"&gt;<br/>                                    &lt;/radG:GridBoundColumn&gt;<br/>          
            &lt;/Columns&gt;<br/>                                &lt;SortExpressions&gt;<br/>                           
            &lt;radG:GridSortExpression FieldName="Quantity" SortOrder="Descending"&gt;&lt;/radG:GridSortExpression&gt;<br/>    
            &lt;/SortExpressions&gt;<br/>                                &lt;ItemStyle BackColor="#A7B986"&gt;&lt;/ItemStyle&gt;<br/>  
            &lt;HeaderStyle CssClass="Header1"&gt;&lt;/HeaderStyle&gt;<br/>     
            &lt;AlternatingItemStyle BackColor="#D9E8C4"&gt;&lt;/AlternatingItemStyle&gt;<br/>    
            &lt;/radG:GridTableView&gt;<br/>              
            &lt;/DetailTables&gt;<br/>      
            &lt;Columns&gt;<br/>               
            &lt;radG:GridBoundColumn SortExpression="OrderID" HeaderText="OrderID" HeaderButtonType="TextButton"<br/>   
            DataField= "OrderID"&gt;<br/>                            &lt;/radG:GridBoundColumn&gt;<br/>        
            &lt;radG:GridBoundColumn SortExpression="OrderDate" HeaderText="Date Ordered" HeaderButtonType="TextButton"<br/>    
            DataField= "OrderDate"&gt;<br/>                            &lt;/radG:GridBoundColumn&gt;<br/>       
            &lt;radG:GridBoundColumn SortExpression="EmployeeID" HeaderText="EmployeeID" HeaderButtonType="TextButton"<br/>  
            DataField= "EmployeeID"&gt;<br/>                            &lt;/radG:GridBoundColumn&gt;<br/>     
            &lt;/Columns&gt;<br/>                        &lt;SortExpressions&gt;<br/>          
            &lt;radG:GridSortExpression FieldName="OrderDate"&gt;&lt;/radG:GridSortExpression&gt;<br/>        
            &lt;/SortExpressions&gt;<br/>                        &lt;ItemStyle Height="19px" BackColor="#FCEDB0"&gt;&lt;/ItemStyle&gt;<br/> 
            &lt;HeaderStyle CssClass="Header2" ForeColor="#ffffff"&gt;&lt;/HeaderStyle&gt;<br/>       
            &lt;AlternatingItemStyle Height="19px" BackColor="#D5B96A"&gt;&lt;/AlternatingItemStyle&gt;<br/>  
            &lt;/radG:GridTableView&gt;<br/>                &lt;/DetailTables&gt;<br/>      
            &lt;Columns&gt;<br/>        
            &lt;radG:GridBoundColumn SortExpression="CustomerID" HeaderText="CustomerID" HeaderButtonType="TextButton"<br/>  
            DataField= "CustomerID"&gt;<br/>        
            &lt;/radG:GridBoundColumn&gt;<br/>    
            &lt;radG:GridBoundColumn SortExpression="ContactName" HeaderText="Contact Name" HeaderButtonType="TextButton"<br/>    
            DataField= "ContactName"&gt;<br/>   
            &lt;/radG:GridBoundColumn&gt;<br/>       
            &lt;radG:GridBoundColumn SortExpression="CompanyName" HeaderText="Company" HeaderButtonType="TextButton"<br/>  
            DataField= "CompanyName"&gt;<br/>       
            &lt;/radG:GridBoundColumn&gt;<br/>                &lt;/Columns&gt;<br/>      
            &lt;SortExpressions&gt;<br/>          
            &lt;radG:GridSortExpression FieldName="CompanyName"&gt;&lt;/radG:GridSortExpression&gt;<br/>    
            &lt;/SortExpressions&gt;<br/>            &lt;/MasterTableView&gt;<br/>   
            &lt;SelectedItemStyle ForeColor="White" BackColor="DarkBlue" CssClass=""&gt;&lt;/SelectedItemStyle&gt;<br/>
            &lt;/radg:radgrid&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.CurrentPageIndex">
            <summary>Gets or sets an integer value representing the current page index.</summary>
            <remarks>
                Note that the Paging must be enabled (<see cref="P:Telerik.Web.UI.RadGrid.AllowPaging"/> must
                be true) in order to use this property.
            </remarks>
            <value>zero-based int representing the index of the current page.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.EditItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the item selected for editing in a Telerik RadGrid
            control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the item being
            edited in a Telerik RadGrid control.
            </value>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
            <remarks>
            	<para>Use the EditItemStyle property to control the appearance of the item being
                edited in a Telerik RadGrid control. This property is read-only;
                however, you can set the properties of the GridTableItemStyle object it returns.
                The properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, EditItemStyle-ForeColor).</item>
            		<item>Nest a &lt;EditItemStyle&gt; element between the opening and closing tags
                    of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, EditItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the EditItemStyle property to
                define a custom style for the item being edited in a Telerik RadGrid
                control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="" &gt;
                        &lt;EditItemStyle BackColor="red" /&gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;radG:GridEditCommandColumn&gt;
                                &lt;/radG:GridEditCommandColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.FooterStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the footer item in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the footer
            item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the FooterItemStyle property to control the appearance of the footer item
                in a Telerik RadGrid control. This property is read-only; however, you
                can set the properties of the GridTableItemStyle object it returns. The properties
                can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, FooterItemStyle-ForeColor).</item>
            		<item>Nest a &lt;FooterItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, FooterItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the footer item in a Telerik RadGrid
                control.
                <code title="[New Example]">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="" 
                        ShowFooter="true" &gt;
                        &lt;FooterStyle BackColor="red" /&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.HeaderStyle">
            <summary>Gets the style properties of the heading section in the RadGrid control.</summary>
            <value>
                A reference to the <see cref="T:Telerik.Web.UI.GridTableItemStyle"/> that represents the style
                of the header item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the HeaderItemStyle property to control the appearance of the header item
                in a Telerik RadGrid control. This property is read-only; however, you
                can set the properties of the GridTableItemStyle object it returns. The properties
                can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, HeaderItemStyle-ForeColor).</item>
            		<item>Nest a &lt;HeaderItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, HeaderItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <notes>
            The <strong>ShowHeader</strong> property must be set to true for this property to
            be visible.
            </notes>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the header item in a Telerik RadGrid
                control. 
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="" &gt;
                        &lt;HeaderStyle BackColor="red" /&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.FilterItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the filter item in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the filter
            item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the FilterItemStyle property to control the appearance of the filter item
                in a Telerik RadGrid control. This property is read-only; however, you
                can set the properties of the GridTableItemStyle object it returns. The properties
                can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, FilterItemStyle-ForeColor).</item>
            		<item>Nest a &lt;FilterItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, FilterItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the filter item in a Telerik RadGrid
                control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="" 
                        AllowFilteringByColumn="true"&gt;
                        &lt;FilterItemStyle BackColor="red" /&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.CommandItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the command item in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the command
            item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the CommandItemStyle property to control the appearance of the command
                item in a Telerik RadGrid control. This property is read-only; however,
                you can set the properties of the GridTableItemStyle object it returns. The
                properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, CommandItemStyle-ForeColor).</item>
            		<item>Nest a &lt;CommandItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, CommandItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the command item in a Telerik RadGrid
                control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin=""&gt;
                        &lt;CommandItemStyle BackColor="red" /&gt;
                        &lt;MasterTableView CommandItemDisplay="TopAndBottom"&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ActiveItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the active item in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the actibe
            item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the ActiveItemStyle property to control the appearance of the active item
                in a Telerik RadGrid control. This property is read-only; however, you
                can set the properties of the GridTableItemStyle object it returns. The properties
                can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, ActiveItemStyle-ForeColor).</item>
            		<item>Nest a &lt;ActiveItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, ActiveItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
            The following code example demonstrates how to use the SelectedItemStyle property
            to define a custom style for the active item in a Telerik RadGrid
            control.
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.Items">
            <summary>Gets a collection of all <strong>GridDataItems</strong>.</summary>
            <remarks>
            	<para>The RadGrid control automatically populates the Items collection by creating
                a GridDataItem object for each record in the data source and then adding each
                object to the collection. This property is commonly used to access a specific item
                in the control or to iterate though the entire collection of items.</para>
            	<para>
                    You cannot use this collection to get special Items like Header, Pager, Footer,
                    etc. Handle <see cref="E:Telerik.Web.UI.RadGrid.ItemCreated"/> event and use the event arguments to
                    get a reference to such items.
                </para>
            </remarks>
            <value>all grid data items as <see cref="T:Telerik.Web.UI.GridDataItemCollection"/></value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the data items in a RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the data items
            in a Telerik RadGrid control.
            </value>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
            <example>
            	<code lang="VB" title="VB">
            &lt;%@ Page language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
            &lt;html  &gt;
              &lt;head id="Head1" runat="server"&gt;
                &lt;title&gt;GridView ItemStyle And AlternatingItemStyle Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                  &lt;h3&gt;GridView ItemStyle And AlternatingItemStyle Example&lt;/h3&gt;
             
                  &lt;radG:RadGrid id="CustomersGridView" 
                    datasourceid="CustomersSource" 
                    autogeneratecolumns="true" 
                    Skin=""
                    runat="server"&gt;
                            
                    &lt;itemstyle backcolor="LightCyan"  
                       forecolor="DarkBlue"
                       font-italic="true"/&gt;
                                
                    &lt;alternatingitemstyle backcolor="PaleTurquoise"  
                      forecolor="DarkBlue"
                      font-italic="true"/&gt;
                                        
                  &lt;/radG:RadGrid&gt;
                        
                  &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                  &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                  &lt;!-- expression To retrieve the connection String value   --&gt;
                  &lt;!-- from the Web.config file.                            --&gt;
                  &lt;asp:sqldatasource id="CustomersSource"
                    selectcommand="Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]"
                    connectionstring="&lt;&lt;see cref="NorthWindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;" 
                    runat="server"/&gt;
                    
                &lt;/form&gt;
              &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <remarks>
            Use the ItemStyle property to control the appearance of the data items in a
            Telerik RadGrid control. When the AlternatingItemStyle property is also set, the data
            items are displayed alternating between the ItemStyle settings and the
            AlternatingItemStyle settings. This property is read-only; however, you can set the
            properties of the GridTableItemStyle object it returns.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.PageCount">
            <summary>
            	<para>Gets the number of pages required to display the records of the data source
                in a Telerik RadGrid control.</para>
            </summary>
            <remarks>
            When the paging feature is enabled (by setting the AllowPaging property to true),
            use the PageCount property to determine the total number of pages required to display
            the records in the data source. This value is calculated by dividing the total number
            of records in the data source by the number of records displayed in a page (as
            specified by the PageSize property) and rounding up.
            </remarks>
            <value>The number of pages in a Telerik RadGrid control.</value>
            <example>
                The following code example demonstrates how to use the PageCount property to
                determine the total number of pages displayed in the Telerik RadGrid
                control.
                <code lang="CS" title="C#">
            &lt;%@ Page Language="C#" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
                protected void RadGrid1_PreRender(object sender, EventArgs e)
                {
                    Label1.Text = RadGrid1.PageCount.ToString();
                }
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        AllowPaging="true" 
                        runat="server" OnPreRender="RadGrid1_PreRender"&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                    &lt;asp:Label ID="Label1" runat="server" Text="Label"&gt;&lt;/asp:Label&gt;&lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            	<code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_PreRender(ByVal sender As Object, ByVal e As System.EventArgs)
                    Label1.Text = RadGrid1.PageCount.ToString()
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        AllowPaging="true" 
                        runat="server" OnPreRender="RadGrid1_PreRender" &gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                    &lt;asp:Label ID="Label1" runat="server" Text="Label"&gt;&lt;/asp:Label&gt;&lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.PagerStyle">
            <summary>
            Gets a reference to the <strong>GridPagerStyle</strong> object that allows you to
            set the appearance of the page item in a Telerik RadGrid control.
            </summary>
            <value>
            A <strong>GridPagerStyle</strong> object that contains the style properties of
            the paging section of the <strong>RadGrid</strong> control. The default value is an
            empty <strong>GridPagerStyle</strong> object.
            </value>
            <remarks>
            	<para>Use this property to provide a custom style for the paging section of the
                <strong>RadGrid</strong> control. Common style attributes that can be adjusted
                include forecolor, backcolor, font, and content alignment within the cell.
                Providing a different style enhances the appearance of the <strong>RadGrid</strong>
                control.</para>
            	<para>To specify a custom style for the paging section, place the
                <strong>&lt;PagerStyle&gt;</strong> tags between the opening and closing tags of
                the <strong>RadGrid</strong> control. You can then list the style attributes within
                the opening <strong>&lt;PagerStyle&gt;</strong> tag.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the <strong>PagerStyle</strong>
                property to specify a custom style for the page selection elements of the
                <strong>RadGrid</strong> control. 
                <code lang="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Import Namespace="System.Data" &lt;see cref="&gt; &lt;"/&gt;@ Register TagPrefix="telerik" Namespace="Telerik.Web.UI" Assembly="Telerik.Web.UI" %&gt;
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
            &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
             
            &lt;script runat="server"&gt;
             
                Function CreateDataSource() As ICollection
                    Dim dt As New DataTable()
                    Dim dr As DataRow
                
                    dt.Columns.Add(New DataColumn("IntegerValue", GetType(Int32)))
                    dt.Columns.Add(New DataColumn("StringValue", GetType(String)))
                    dt.Columns.Add(New DataColumn("DateTimeValue", GetType(String)))
                    dt.Columns.Add(New DataColumn("BoolValue", GetType(Boolean)))
                
                    Dim i As Integer
                    For i = 0 To 99
                        dr = dt.NewRow()
                    
                        dr(0) = i
                        dr(1) = "Item " &amp; i.ToString()
                        dr(2) = DateTime.Now.ToShortDateString()
                        If i Mod 2 &lt;&gt; 0 Then
                            dr(3) = True
                        Else
                            dr(3) = False
                        End If
                    
                        dt.Rows.Add(dr)
                    Next i
                
                    Dim dv As New DataView(dt)
                    Return dv
                End Function 'CreateDataSource
             
                Sub ShowStats()
                    lblEnabled.Text = "AllowPaging is " &amp; RadGrid1.AllowPaging
                    lblCurrentIndex.Text = "CurrentPageIndex is " &amp; RadGrid1.CurrentPageIndex
                    lblPageCount.Text = "PageCount is " &amp; RadGrid1.PageCount
                    lblPageSize.Text = "PageSize is " &amp; RadGrid1.PageSize
                End Sub 'ShowStats
             
             
                Protected Sub RadGrid1_NeedDataSource(ByVal source As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGrid1.NeedDataSource
                    RadGrid1.DataSource = CreateDataSource()
                    ShowStats()
                End Sub
             
                Protected Sub CheckBox1_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles CheckBox1.CheckedChanged
                    If CheckBox1.Checked Then
                        RadGrid1.PagerStyle.Mode = GridPagerMode.NumericPages
                    Else
                        RadGrid1.PagerStyle.Mode = GridPagerMode.NextPrev
                    End If
                    
                    RadGrid1.Rebind()
                End Sub
            &lt;/script&gt;
             
            &lt;head id="Head1" runat="server"&gt;
                &lt;title&gt;RadGrid Paging Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;h3&gt;
                    RadGrid Paging Example&lt;/h3&gt;
                &lt;form id="form1" runat="server"&gt;
                    &lt;radG:RadGrid ID="RadGrid1" runat="server" AllowPaging="True"&gt;
                        &lt;PagerStyle Mode="NumericPages" HorizontalAlign="Right"&gt;&lt;/PagerStyle&gt;
                        &lt;HeaderStyle BackColor="#aaaadd"&gt;&lt;/HeaderStyle&gt;
                        &lt;AlternatingItemStyle BackColor="#eeeeee"&gt;&lt;/AlternatingItemStyle&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;br /&gt;
                    &lt;asp:CheckBox ID="CheckBox1" runat="server" Text="Show numeric page navigation buttons"
                        AutoPostBack="true" /&gt;
                    &lt;br /&gt;
                    &lt;table style="background-color: #eeeeee; padding: 6"&gt;
                        &lt;tr&gt;
                            &lt;td style="display: inline"&gt;
                                &lt;asp:Label ID="lblEnabled" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblCurrentIndex" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblPageCount" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblPageSize" runat="server" /&gt;&lt;br /&gt;
                            &lt;/td&gt;
                        &lt;/tr&gt;
                    &lt;/table&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            	<code lang="CS">
            &lt;%@ Page Language="C#" %&gt;
             
            &lt;%@ Import Namespace="System.Data" &lt;see cref="&gt; &lt;"/&gt;@ Register TagPrefix="telerik" Namespace="Telerik.Web.UI" Assembly="Telerik.Web.UI" %&gt;
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
            &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
             
            &lt;script runat="server"&gt;
                ICollection CreateDataSource()
                {
                    DataTable dt = new DataTable();
                    DataRow dr;
                    dt.Columns.Add(new DataColumn("IntegerValue", typeof(Int32)));
                    dt.Columns.Add(new DataColumn("StringValue", typeof(string)));
                    dt.Columns.Add(new DataColumn("DateTimeValue", typeof(string)));
                    dt.Columns.Add(new DataColumn("BoolValue", typeof(bool)));
                    int i;
                    for (i = 0; (i &lt;= 99); i++)
                    {
                        dr = dt.NewRow();
                        dr[0] = i;
                        dr[1] = ("Item " + i.ToString());
                        dr[2] = DateTime.Now.ToShortDateString();
                        if (((i % 2)
                                    != 0))
                        {
                            dr[3] = true;
                        }
                        else
                        {
                            dr[3] = false;
                        }
                        dt.Rows.Add(dr);
                    }
                    DataView dv = new DataView(dt);
                    return dv;
                }
             
                // CreateDataSource
                void ShowStats()
                {
                    lblEnabled.Text = ("AllowPaging is " + RadGrid1.AllowPaging);
                    lblCurrentIndex.Text = ("CurrentPageIndex is " + RadGrid1.CurrentPageIndex);
                    lblPageCount.Text = ("PageCount is " + RadGrid1.PageCount);
                    lblPageSize.Text = ("PageSize is " + RadGrid1.PageSize);
                }
             
                // ShowStats
                protected void RadGrid1_NeedDataSource(object source, Telerik.Web.UI.GridNeedDataSourceEventArgs e)
                {
                    RadGrid1.DataSource = CreateDataSource();
                    ShowStats();
                }
             
                protected void CheckBox1_CheckedChanged(object sender, System.EventArgs e)
                {
                    if (CheckBox1.Checked)
                    {
                        RadGrid1.PagerStyle.Mode = GridPagerMode.NumericPages;
                    }
                    else
                    {
                        RadGrid1.PagerStyle.Mode = GridPagerMode.NextPrev;
                    }
                    RadGrid1.Rebind();
                }
            &lt;/script&gt;
             
            &lt;head id="Head1" runat="server"&gt;
                &lt;title&gt;RadGrid Paging Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;h3&gt;
                    RadGrid Paging Example&lt;/h3&gt;
                &lt;form id="form1" runat="server"&gt;
                    &lt;radG:RadGrid ID="RadGrid1" runat="server" AllowPaging="True" OnNeedDataSource="RadGrid1_NeedDataSource"&gt;
                        &lt;PagerStyle Mode="NumericPages" HorizontalAlign="Right"&gt;&lt;/PagerStyle&gt;
                        &lt;HeaderStyle BackColor="#aaaadd"&gt;&lt;/HeaderStyle&gt;
                        &lt;AlternatingItemStyle BackColor="#eeeeee"&gt;&lt;/AlternatingItemStyle&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;br /&gt;
                    &lt;asp:CheckBox ID="CheckBox1" runat="server" Text="Show numeric page navigation buttons"
                        AutoPostBack="true" OnCheckedChanged="CheckBox1_CheckedChanged" /&gt;
                    &lt;br /&gt;
                    &lt;table style="background-color: #eeeeee; padding: 6"&gt;
                        &lt;tr&gt;
                            &lt;td style="display: inline"&gt;
                                &lt;asp:Label ID="lblEnabled" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblCurrentIndex" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblPageCount" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblPageSize" runat="server" /&gt;&lt;br /&gt;
                            &lt;/td&gt;
                        &lt;/tr&gt;
                    &lt;/table&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.PageSize">
            <summary>
            Gets or sets an integer value indicating the number of Items that a single page
            in Telerik RadGrid will contain.
            </summary>
            <remarks>
                Note that the Paging must be enabled (<see cref="P:Telerik.Web.UI.RadGrid.AllowPaging"/> must
                be true) in order to use this property.
            </remarks>
            <value>
            integer, indicating the number of the Items that a single grid page would
            contain.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.AllowMultiRowSelection">
            <summary>
            Gets or sets a value indicating whether you will be able to select multiple rows
            in Telerik RadGrid. By default this property is set to
            <strong>false</strong>.
            </summary>
            <value>
            	<strong>true</strong> if you can have multiple rows selected at once. Otherwise,
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
            <remarks>
            	<strong>Note:</strong> You will not be able to select the Header, Footer or Pager
            rows.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.AllowMultiRowEdit">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will allow
            you to have multiple rows in edit mode. The default value is
            <strong>false</strong>.
            </summary>
            <value>
            	<strong>true</strong> if you can have more than one row in edit mode. Otherwise,
            <strong>false</strong>. The default value is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.SelectedIndexes">
            <example>
                You can see an example usage of this property in the following online example: 
                <para>
            		<a href="http://www.telerik.com/r.a.d.controls/Grid/Examples/Hierarchy/ThreeLevel/DefaultCS.aspx">
                http://www.telerik.com/r.a.d.controls/Grid/Examples/Hierarchy/ThreeLevel/DefaultCS.aspx</a></para>
            	<code lang="CS" title="CS" description="Setting the selected index prior to binding Telerik RadGrid:&#xA;            If the index is in a detail table, parent items will be expanded automatically">
            private void Page_Load(object sender, EventArgs e)
                {
                   if (!IsPostBack)
                   {                
                      RadGrid1.SelectedIndexes.Add(1, 0, 1, 0, 1);
                      //Index of 1, 0, 1, 0, 1 means:
                      //1 - item with index 1 in the MasterTabelView
                      //0 - detail table with index 0
                      //1 - item with index 1 (the second item) in the first detail table
                      //0 - 0 the third-level detail table
                      //1 - the item with index 1 in the third-level table
                   }
                }
                </code>
            	<code lang="VB" title="VB" description="Setting the selected index prior to binding Telerik RadGrid:&#xA;            If the index Is In a detail table, parent items will be expanded automatically">
            Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
               If Not IsPostBack Then
                  RadGrid1.SelectedIndexes.Add(1, 0, 1, 0, 1)
                  'Index of 1, 0, 1, 0, 1 means:
                  '1 - item With index 1 In the MasterTabelView
                  '0 - detail table With index 0
                  '1 - item With index 1 (the second item) In the first detail table
                  '0 - 0 the third-level detail table
                  '1 - the item With index 1 In the third-level table   
               End If
            End Sub
                </code>
            </example>
            <summary>Gets a collection of indexes of the selected items.</summary>
            <value>
                returns <see cref="T:Telerik.Web.UI.GridIndexCollection"/> of the indexes of all selected
                Items.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.EditIndexes">
            <summary>Gets a collection of the indexes of the Items that are in edit mode.</summary>
            <example>
            	<para>
                    The following example demonstrates how to hide "Add New" button in the
                    <strong>CommandItemTemplate</strong> when Telerik RadGrid is in
                    edit/insert mode. The easiest way to check if Telerik RadGrid is in
                    edit mode is to check whether the <see cref="T:Telerik.Web.UI.GridIndexCollection"/>
                    (<strong>EditIndexes</strong> gives a reference to this) is empty.
                </para>
            	<pre>
            &lt;CommandItemTemplate&gt;
                </pre>
            	<pre>
                &lt;asp:LinkButton ID="LinkButton1" Visible="&lt;%# (!(RadGrid1.MasterTableView.IsItemInserted || <font color="red">RadGrid1.EditIndexes.Count &gt;0</font> )) %&gt;"
                </pre>
            	<pre>
            runat="server" CommandName="InitInsert"&gt;Add New&lt;/asp:LinkButton&gt;
                </pre>
            	<pre>
            &lt;/CommandItemTemplate&gt;
                </pre>
            </example>
            <value>
                returns <see cref="T:Telerik.Web.UI.GridIndexCollection"/> of all data items that are in edit
                mode.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.SelectedItems">
            <summary>Gets a collection of the currently selected GridDataItems</summary>
            <value>Returns a <see cref="T:Telerik.Web.UI.GridItemCollection"/> of all selected data items.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.SelectedValue">
            <summary>Gets the data key value of the selected row in a RadGrid control.</summary>
            <value>The data key value of the selected row in a RadGrid control.</value>
            <example>
                The following code example demonstrates how to use the
                <strong>SelectedValue</strong> property to determine the data key value of the
                selected row in a <strong>RadGrid</strong> control. 
                <code lang="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
              Sub RadGrid1_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
                    
                ' Display the primary key value of the selected row.
                Label1.Text = "The primary key value of the selected row is " &amp; _
                  RadGrid1.SelectedValue.ToString() &amp; "."
             
              End Sub
             
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;RadGrid SelectedValue Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                    &lt;h3&gt;
                        RadGrid SelectedValue Example&lt;/h3&gt;
                    &lt;asp:Label ID="Label1" ForeColor="Red" runat="server" /&gt;
                    &lt;radG:RadGrid ID="RadGrid1" DataSourceID="SqlDataSource1" 
                        OnSelectedIndexChanged="RadGrid1_SelectedIndexChanged"
                        runat="server"&gt;
                        &lt;MasterTableView DataKeyNames="CustomerID"&gt;
                            &lt;Columns&gt;
                                &lt;radG:GridButtonColumn CommandName="Select" Text="Select" /&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;
                    &lt;asp:SqlDataSource ID="SqlDataSource1" SelectCommand="SELECT * FROM [Customers]"
                        runat="server" ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;" /&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            	<code lang="CS" inline="False">
            	</code>
            	<code lang="CS">
            &lt;%@ Page Language="C#" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
            protected void RadGrid1_SelectedIndexChanged(object sender, EventArgs e)
            {
                // Display the primary key value of the selected row.
                Label1.Text = "The primary key value of the selected row is " +
                    RadGrid1.SelectedValue.ToString() + ".";
            }
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;RadGrid SelectedValue Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                    &lt;h3&gt;
                        RadGrid SelectedValue Example&lt;/h3&gt;
                    &lt;asp:Label ID="Label1" ForeColor="Red" runat="server" /&gt;
                    &lt;radG:RadGrid ID="RadGrid1" DataSourceID="SqlDataSource1" OnSelectedIndexChanged="RadGrid1_SelectedIndexChanged"
                        runat="server"&gt;
                        &lt;MasterTableView DataKeyNames="CustomerID"&gt;
                            &lt;Columns&gt;
                                &lt;radG:GridButtonColumn CommandName="Select" Text="Select" /&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;
                    &lt;asp:SqlDataSource ID="SqlDataSource1" SelectCommand="SELECT * FROM [Customers]"
                        runat="server" ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;" /&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.EditItems">
            <remarks>
            	<para>The <strong>EditItems</strong> collection contains <strong>InPlace</strong>
                edit mode items. When you switch the edit type to <strong>EditForms,</strong> the
                <strong>EditItems</strong> collection holds the currently edited items but not
                their <strong>EditFormItems</strong> (which in this case hold the new values). See
                <a href="grdUpdatingInPlaceAndEditForms.html">this</a> help article for more
                details.</para>
            	<para>
                    You should not use this property to check whether there are items in edit mode.
                    The better approach is to use <see cref="P:Telerik.Web.UI.RadGrid.EditIndexes"/> property instead.
                </para>
            </remarks>
            <summary>
            Gets a collection of all <strong>GridItems</strong> in edit mode. See the Remarks
            for more info.
            </summary>
            <value><see cref="T:Telerik.Web.UI.GridItemCollection"/> of all items that are in edit mode.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.SelectedItemStyle">
            <summary>
                Gets a reference to the <see cref="T:Telerik.Web.UI.GridTableItemStyle"/> object that allows
                you to set the appearance of the selected item in a Telerik RadGrid
                control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the selected
            item in a Telerik RadGrid control.
            </value>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the selected item in a Telerik RadGrid
                control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin=""&gt;
                        &lt;SelectedItemStyle BackColor="red" /&gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;radG:GridButtonColumn 
                                    Text="Select" 
                                    UniqueName="Select" 
                                    CommandName="Select"&gt;
                                &lt;/radG:GridButtonColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <remarks>
            	<para>Use the SelectedItemStyle property to control the appearance of the selected
                item in a Telerik RadGrid control. This property is read-only; however,
                you can set the properties of the GridTableItemStyle object it returns. The
                properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example,
                    SelectedItemStyle-ForeColor).</item>
            		<item>Nest a &lt;SelectedItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, SelectedItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ShowFooter">
            <summary>
            Gets or set a value indicating whether the footer item of the grid will be
            shown.
            </summary>
            <remarks>
            Setting this property will affect all grid tables, unless they specify otherwise
            explicitly.
            </remarks>
            <value>The default value of this property is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ShowStatusBar">
            <summary>
            Gets or set a value indicating whether the statusbar item of the grid will be
            shown.
            </summary>
            <remarks>
            	<para>
                    This property is meaningful when the grid is in AJAX mode, i.e. when
                    <see cref="!:EnableAjax"/> is set to <strong>true</strong>.
                </para>
            	<para>See <a href="grdStatusBarItem.html">this</a> help topic for more
                details.</para>
            </remarks>
            <value>
            	<strong>true</strong> if the status bar item would be shown, otherwise
            <strong>false</strong>. The default value of this property is
            <strong>false</strong>.
            </value>
            <seealso cref="!:grdStatusBarItem.html" cat="Telerik RadGrid Manual">Status bar item</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.StatusBarSettings">
            <summary>
                Gets a <see cref="T:Telerik.Web.UI.GridStatusBarItemSettings"/> object that contains variable
                settings related to the status bar.
            </summary>
            <example>
            	<pre>
            &lt;radG:RadGrid ID="RadGrid1" runat="server" DataSourceID="SqlDataSource1" ShowStatusBar="true" EnableAjax="true"&gt;<br/>      &lt;StatusBarSettings LoadingText="Loading... Please wait!" ReadyText="Online" /&gt;              <br/> &lt;/radG:RadGrid&gt;
                </pre>
            </example>
            <value>returns a reference to <see cref="T:Telerik.Web.UI.GridStatusBarItemSettings"/> object.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ShowHeader">
            <summary>
            Gets or set a value indicating whether the header item of the grid will be
            shown.
            </summary>
            <value>This default value for this property is <strong>true.</strong></value>
            <remarks>
            Setting this property will affect all grid tables, unless they specify otherwise
            explicitly.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.VirtualItemCount">
            <summary>
            Gets or sets a value, indicating the total number of items in the data source
            when custom paging is used. Thus the grid "understands" that the data source contains
            the specified number of records and it should fetch merely part of them at a time to
            execute requested operation.
            </summary>
            <value>
            	<strong>int</strong>, representing the total number of items in the datasource.
            The default value is 0.
            </value>
            <remarks>
            	<para>If you set a value that is greater than the actual number of items, RadGrid
                will show all available items plus empty pages (or whatever other content you set)
                for the items that exceed the actual number.</para>
            	<para>For example you have a data source with 9'000 items and you set
                VirtualItemCount to 10'000. If your page size is 1000, the grid will render 10
                pages and the last page will be empty (or with NoRecordsTemplate if you're using
                such).</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.FilterMenu">
            <summary>
                Gets a reference to <see cref="T:Telerik.Web.UI.GridFilterMenu"/> object. The filtering menu
                appears when the filter button on the <see cref="!:GridFilterItem"/> is clicked.
            </summary>
            <value>returns a reference to <see cref="T:Telerik.Web.UI.GridFilterMenu"/> object.</value>
            <remarks>
            	<para>This property is meaningful only when you have filtering enabled (by setting
                <strong>AllowFilteringByColumn</strong>="true").</para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to customize the filtering
                menu:</para>
            	<para><font face="Courier New"><strong>[ASPX/ASCX]<br/></strong>&lt;head
                runat=<font class="string" color="black">"server"</font>&gt;<br/>
                 &lt;title&gt;Filter menu change&lt;/title&gt;<br/>
                 &lt;style type=<font class="string" color="black">"text/css"</font>&gt;<br/>
                 .FilterMenuClass1 td<br/>
                 {<br/>
                 background-color: white;<br/>
                 color: green;<br/>
                 font-size: 10px;<br/>
                 }<br/>
                 .FilterMenuClass2 td<br/>
                 {<br/>
                 background-color: blue;<br/>
                 color: white;<br/>
                 font-size: 15px;<br/>
                 }<br/>
                 &lt;/style&gt;<br/>
                &lt;/head&gt;<br/>
                &lt;body&gt;<br/>
                 &lt;form id=<font class="string" color="black">"form1"</font>
                runat=<font class="string" color="black">"server"</font>&gt;<br/>
                 &lt;div&gt;<br/>
                 &lt;script type=<font class="string" color="black">"text/javascript"</font>&gt;<br/>
            			<font class="keyword" color="black">function</font> GridCreated()<br/>
                 {<br/>
                 window.setTimeout(SetFilterMenuClass(this), 500);<br/>
                 }<br/>
            			<font class="keyword" color="black">function</font>
                SetFilterMenuClass(gridObject)<br/>
                 {<br/>
                 gridObject.FilterMenu.SelectColumnBackColor = <font class="string" color="black">""</font>;<br/>
                 gridObject.FilterMenu.TextColumnBackColor = <font class="string" color="black">""</font>;<br/>
            			<br/>
                 }<br/>
                 &lt;/script&gt;<br/>
                 &lt;radG:RadGrid ID=<font class="string" color="black">"RadGrid1"</font>
                AllowFilteringByColumn=<font class="string" color="black">"true"</font>
                DataSourceID=</font><font color="black"><font face="Courier New"><font class="string">
                "AccessDataSource1"</font><br/>
                 AllowSorting= <font class="string">"True"</font>
                runat=<font class="string">"server"</font>&gt;<br/>
                 &lt;FilterMenu
                CssClass=<font class="string">"FilterMenuClass1"</font>&gt;&lt;/FilterMenu&gt;<br/>
                 &lt;ClientSettings&gt;<br/>
                 &lt;ClientEvents OnGridCreated=<font class="string">"GridCreated"</font>
                /&gt;<br/>
                 &lt;/ClientSettings&gt;<br/>
                 &lt;/radG:RadGrid&gt;<br/>
                 &lt;br /&gt;<br/>
                 &lt;asp:AccessDataSource ID=<font class="string">"AccessDataSource1"</font>
                DataFile=<font class="string">"~/Grid/Data/Access/Nwind.mdb"</font><br/>
                 SelectCommand= <font class="string">"SELECT TOP 10 CustomerID, CompanyName,
                ContactName, ContactTitle, Address, PostalCode FROM Customers"</font><br/>
                 runat= <font class="string">"server"</font>&gt;&lt;/asp:AccessDataSource&gt;<br/>
                 &lt;radG:RadGrid ID=<font class="string">"RadGrid2"</font>
                DataSourceID=<font class="string">"AccessDataSource1"</font>
                AllowSorting=<font class="string">"True"</font><br/>
                 AllowFilteringByColumn= <font class="string">"true"</font>
                Skin=<font class="string">"Windows"</font>
                runat=<font class="string">"server"</font>&gt;<br/>
                 &lt;ClientSettings&gt;<br/>
                 &lt;ClientEvents OnGridCreated=<font class="string">"GridCreated"</font>
                /&gt;<br/>
                 &lt;/ClientSettings&gt;<br/>
                 &lt;FilterMenu
                CssClass=<font class="string">"FilterMenuClass2"</font>&gt;&lt;/FilterMenu&gt;<br/>
                 &lt;/radG:RadGrid&gt;<br/>
                 &lt;/div&gt;<br/>
                 &lt;/form&gt;<br/>
                &lt;/body&gt;<br/>
                &lt;/html&gt;</font></font></para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.HeaderContextMenu">
            <summary>
            Represents a HeaderContextMenu
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.Columns">
            <summary>
                Gets a collection (<see cref="T:Telerik.Web.UI.GridColumnCollection"/>) of all columns in
                Telerik RadGrid.
            </summary>
            <remarks>
            This is one of the three columns collections in Telerik RadGrid. The
            other two are <strong>AutoGeneratedColumns</strong> and
            <strong>RenderColumns</strong>.
            </remarks>
            <value>returns a <see cref="T:Telerik.Web.UI.GridColumnCollection"/> of all grid columns.</value>
            <example>
            	<para><font face="Courier New">The example below demonstrates how to use the
                columns collection to define columns declaratively (in the ASPX)</font></para>
            	<pre>
            		<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">radG:RadGrid</span> ID="RadGrid1" DataSourceID="AccessDataSource1" AllowPaging="True" ShowFooter="True"<br/>runat="server" AutoGenerateColumns="False" AllowSorting="True" PageSize="3" Width="925px"<br/>GridLines="None" CellPadding="0" Skin="Default" AllowMultiRowSelection="true"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">MasterTableView</span> ShowFooter="True"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">RowIndicatorColumn</span> Visible="False" UniqueName="RowIndicator"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">HeaderStyle</span> Width="20px"<span style="COLOR: blue">&gt;</span><span style="COLOR: blue">&lt;/</span>
            		<span style="COLOR: maroon">HeaderStyle</span><span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">RowIndicatorColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">Columns</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">radG:GridEditCommandColumn</span> FooterText="EditCommand footer" UniqueName="EditCommandColumn"<br/>HeaderText="Edit&amp;#160;Command Column"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">radG:GridEditCommandColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">radG:GridClientSelectColumn</span> UniqueName="CheckboxSelectColumn" HeaderText="CheckboxSelect column <span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">br</span>
            		<span style="COLOR: blue">/&gt;</span>" <span style="COLOR: blue">/&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">radG:GridBoundColumn</span> FooterText="BoundColumn footer" UniqueName="CustomerID" SortExpression="CustomerID"<br/>HeaderText="Bound<span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">br/</span>
            		<span style="COLOR: blue">&gt;</span>Column" DataField="CustomerID"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">radG:GridBoundColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">radG:GridCheckBoxColumn</span> FooterText="CheckBoxColumn footer" UniqueName="Bool" HeaderText="CheckBox<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>Column"<br/>DataField="Bool"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">radG:GridCheckBoxColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">radG:GridDropDownColumn</span> FooterText="DropDownColumn footer" UniqueName="DropDownListColumn"<br/>ListTextField="ContactName" ListValueField="CustomerID" DataSourceID="AccessDataSource2"<br/>HeaderText="DropDown<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>Column" DataField="CustomerID"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">radG:GridDropDownColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">radG:GridButtonColumn</span> FooterText="PushButtonColumn<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>footer" DataTextFormatString="Select {0}"<br/>ButtonType="PushButton" UniqueName="column" HeaderText="PushButton<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>Column"<br/>CommandName="Select" DataTextField="CustomerID"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">radG:GridButtonColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">radG:GridButtonColumn</span> FooterText="LinkButtonColumn footer" DataTextFormatString="Remove selection"<br/>UniqueName="column1" HeaderText="LinkButton<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>Column" CommandName="Deselect"<br/>DataTextField="CustomerID"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">radG:GridButtonColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">radG:GridHyperLinkColumn</span> FooterText="HyperLinkColumn footer" DataTextFormatString="Search Google for '{0}'"<br/>DataNavigateUrlField="CompanyName" UniqueName="CompanyName" DataNavigateUrlFormatString="http://www.google.com/search?hl=en&amp;amp;q={0}&amp;amp;btnG=Google+Search"<br/>HeaderText="HyperLink<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>Column" DataTextField="CompanyName"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">radG:GridHyperLinkColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">radG:GridTemplateColumn</span> UniqueName="TemplateColumn" SortExpression="CompanyName"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">FooterTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">img</span> src="Img/image.gif" alt="" style="vertical-align: middle" <span style="COLOR: blue">/&gt;</span><br/>Template footer<br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">FooterTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">HeaderTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">table</span> id="Table1" cellspacing="0" cellpadding="0" width="300" border="1"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> colspan="2" align="center"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">b</span>
            		<span style="COLOR: blue">&gt;</span>Contact details<span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">b</span>
            		<span style="COLOR: blue">&gt;</span><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">td</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> style="width: 50%" align="center"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;asp:LinkButton CssClass="Button" Width="140" ID="btnContName" Text="Contact name"<br/>Tooltip="Sort by ContactName" CommandName='Sort' CommandArgument='ContactName' runat="server" /&gt;&lt;/td&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> style="width: 50%" align="center"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;asp:LinkButton CssClass="Button" Width="140" ID="btnContTitle" Text="Contact title"<br/>Tooltip="Sort by ContactTitle" CommandName='Sort' CommandArgument='ContactTitle'<br/>runat="server" /&gt;&lt;/td&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">table</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">HeaderTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">ItemTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">table</span> cellpadding="1" cellspacing="1" class="customTable"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> style="width: 50%"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span>%#<span style="COLOR: red">Eval("ContactName")</span> %<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">td</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> style="width: 50%"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span>%#<span style="COLOR: red">Eval("ContactTitle")</span> %<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">td</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> colspan="2" align="center"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">a</span> href='<span style="COLOR: blue">&lt;</span>%#<span style="COLOR: red">"http://www.google.com/search?hl=en&amp;amp;q=" + DataBinder.Eval(Container.DataItem, "ContactName") + "&amp;amp;btnG=Google+Search"</span>%<span style="COLOR: blue">&gt;</span>' <span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">em</span>
            		<span style="COLOR: blue">&gt;</span>Search Google for<br/><span style="COLOR: blue">&lt;</span>%#<span style="COLOR: red">Eval("ContactName")</span> %<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">em</span>
            		<span style="COLOR: blue">&gt;</span><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">a</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">td</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> colspan="2" align="center"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">img</span> src="Img/image.gif" alt="" <span style="COLOR: blue">/&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">td</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">table</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">ItemTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">radG:GridTemplateColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">Columns</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">MasterTableView</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">ClientSettings</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">Selecting</span> AllowRowSelect="true" <span style="COLOR: blue">/&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">ClientSettings</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">radG:RadGrid</span>
            		<span style="COLOR: blue">&gt;</span>
            	</pre>
            	<code lang="CS" title="Create column in the code-behind" description="The following example demonstrates how to set up a grid in the code-behind and how to create a column and add it to the Columns collection.">
            this.RadGrid1 = new RadGrid();
             
            this.RadGrid1.NeedDataSource += new GridNeedDataSourceEventHandler(this.RadGrid1_NeedDataSource);
             
            this.RadGrid1.AutoGenerateColumns = false;
            this.RadGrid1.MasterTableView.DataMember = "Customers";
             
            GridBoundColumn boundColumn;
            boundColumn = new GridBoundColumn();
            boundColumn.DataField = "CustomerID";
            boundColumn.HeaderText = "CustomerID";
            this.RadGrid1.MasterTableView.Columns.Add(boundColumn);
             
            ....
            //Add to page controls collection
            this.PlaceHolder1.Controls.Add( RadGrid1 );
                </code>
            	<code lang="VB" title="Create column in the code-behind" description="The following example demonstrates how to set up a grid in the code-behind and how to create a column and add it to the Columns collection.">
            Me.RadGrid1 = New RadGrid
             
            AddHandler RadGrid1.NeedDataSource, AddressOf Me.RadGrid1_NeedDataSource
            AddHandler RadGrid1.DetailTableDataBind, AddressOf Me.RadGrid1_DetailTableDataBind
             
            Me.RadGrid1.AutoGenerateColumns = False
            Me.RadGrid1.MasterTableView.DataMember = "Customers"
             
            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CustomerID"
            boundColumn.HeaderText = "CustomerID"
            Me.RadGrid1.MasterTableView.Columns.Add(boundColumn)
             
             
            ....'Add to page controls collection
            Me.PlaceHolder1.Controls.Add(RadGrid1)
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.IsDetailDataBindingInProgress">
            <exclude/>
            <excludetoc/>
            <summary>Gets a value indicating whether a detail table is currently binding.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.DataSourceIsAssigned">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.DataSourceID">
            <summary>
            	<para>Gets or sets the ID of the control from which the Telerik RadGrid
                control retrieves its list of data items.</para>
            </summary>
            <value>
            The ID of a control that represents the data source from which the
            Telerik RadGrid control retrieves its data. The default is
            String.Empty.
            </value>
            <remarks>
            	<para>If the Telerik RadGrid control has already been initialized when
                you set the DataSourceID property.</para>
            	<para>This property cannot be set by themes or style sheet themes.</para>
            </remarks>
            <example>
                The following code example demonstrates how the DataSourceID property of a
                Telerik RadGrid control is used. The Telerik RadGrid
                control is associated to the SqlDataSource control by setting its DataSourceID
                property to "SqlDataSource1", the ID of the SqlDataSource control. When the
                DataSourceID property is set (instead of the DataSource property), the
                Telerik RadGrid control automatically binds to the data source control
                at run time.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" &lt;see cref="&gt; &lt;"/&gt;@ Register Assembly="Telerik.Web.UI" Namespace="Telerik.Web.UI" TagPrefix="telerik" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;radG:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server"&gt;
                    &lt;/radG:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                    &lt;asp:Label ID="Label1" runat="server" Text="Label"&gt;&lt;/asp:Label&gt;&lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ViewStateSize">
            <exclude/>
            <excludetoc/>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Telerik.Web.UI.RadGrid.Skin" -->
        <member name="P:Telerik.Web.UI.RadGrid.AllowFilteringByColumn">
            <summary>
            Gets or sets a value indicating whether the filtering of all tables in the
            hierarchy will be enabled, unless specified other by
            <strong>GridTableView.AllowFilteringByColumn.</strong>
            </summary>
            <value>
            	<strong>true</strong>, enables filtering for the whole grid. Otherwise,
            <strong>false</strong>. Default is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.EnableHeaderContextMenu">
            <summary>
             	<para>Gets or sets a value indicating whether the header context menu should be 
                 enabled.</para>
             </summary>
             <value>
             	<para>
             		<strong>true</strong> if the header context menu feature is enabled; otherwise,
                     <strong>false</strong>. Default is <strong>false</strong>.
                 </para>
             </value>
        </member>
        <member name="P:Telerik.Web.UI.RadGrid.ImagesPath">
            <summary>Gets or sets default path for the grid images when EnableEmbeddedSkins is set to false.</summary>
            <value>A string containing the path for the grid images. The default is string.Empty.</value>
            <remarks>
            <para>
            If this property is not set and EnableEmbeddedSkins is set to false the control will raise exception.
            </para>
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.InputIncrementSettings.Step">
            <summary>
                <para>Gets or sets the value to increment or decrement the spin box when the up or down buttons are clicked.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.InputIncrementSettings.InterceptArrowKeys">
            <summary>
                <para>Gets or sets a value indicating whether the user can use the UP ARROW and DOWN ARROW keys to increment/decrement values.</para>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.InputIncrementSettings.InterceptMouseWheel">
            <summary>
                <para>Gets or sets a value indicating whether the user can use the MOUSEWHEEL to increment/decrement values.</para>
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ExpandDirection">
            <summary>This enumeration determines the direction in which child items will open.</summary>
            <remarks>
            	<para>When set to <strong>Auto</strong> the direction is determined by the
                following rules</para>
            	<list type="bullet">
            		<item>If the item is top level and the parent item flow is
                    <strong>Horizontal</strong> the direction will be <strong>Down</strong>.</item>
            		<item>If the item is top level and the parent item flow is
                    <strong>Vertical</strong> the direction will be <strong>Right</strong>.</item>
            		<item>If the item is subitem (a child of another menu item rather than the
                    <strong>RadMenu</strong> itself) the direction is
                    <strong>Right</strong>.</item>
            	</list>
            	<para class="xmldocbulletlist">Note:</para>
            	<para class="xmldocbulletlist">If there is not enough room for the child items to
                open the expand direction is inverted. For example <strong>Right</strong> becomes
                <strong>Left</strong>, <strong>Down</strong> becomes <strong>Up</strong> and vice
                versa.</para>
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.ExpandDirection.Auto">
            <summary>
                The direction is determined by parent's <see cref="T:Telerik.Web.UI.ItemFlow">ItemFlow</see> and
                level.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ExpandDirection.Up">
            <summary>Child items open above their parent.</summary>
        </member>
        <member name="F:Telerik.Web.UI.ExpandDirection.Down">
            <summary>Child items open below their parent.</summary>
        </member>
        <member name="F:Telerik.Web.UI.ExpandDirection.Left">
            <summary>Child items open from the left side of their parent.</summary>
        </member>
        <member name="F:Telerik.Web.UI.ExpandDirection.Right">
            <summary>Child items open from the right side of their parent.</summary>
        </member>
        <member name="T:Telerik.Web.UI.ItemFlow">
            <summary>Represents the different ways menu items can flow.</summary>
            <remarks>
            The <strong>ItemFlow</strong> enumeration is used to specify the flow of submenu
            items.
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.ItemFlow.Vertical">
            <summary>
            Items will flow one below the other
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ItemFlow.Horizontal">
            <summary>
            Items will flow one after another
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadMenuItemConverter">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.ExplicitJavaScriptConverter">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadMenuEventArgs">
            <summary>
            Provides data for the events of the <see cref="T:Telerik.Web.UI.RadMenu"/> control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuEventArgs.#ctor(Telerik.Web.UI.RadMenuItem)">
            <summary>
                Initializes a new instance of the
                <see cref="T:Telerik.Web.UI.RadMenuEventArgs">RadMenuEventArgs</see> class.
            </summary>
            <param name="item">
                A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> which represents an item in the
                <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> control.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuEventArgs.Item">
            <summary>
                Gets the referenced <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> in the
                <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> control when the event is raised.
            </summary>
            <value>
                The referenced item in the <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> control when
                the event is raised.
            </value>
            <remarks>
                Use this property to programmatically access the item referenced in the
                <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> when the event is raised.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadMenuEventHandler">
            <summary>
            Represents the method that handles the events provided by the <see cref="T:Telerik.Web.UI.RadMenu"/> control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadMenuItem">
            <summary>Represents an item in the <see cref="T:Telerik.Web.UI.RadMenu"/> control.</summary>
            <remarks>
            	<para>
            		The <see cref="T:Telerik.Web.UI.RadMenu"/> control is made up of items. Items which are immediate children
            		of the menu are root items. Items which are children of root items are child items.
            	</para>
            	<para>
            		An item usually stores data in two properties, the <see cref="P:Telerik.Web.UI.RadMenuItem.Text"/> property and 
            		the <see cref="P:Telerik.Web.UI.RadMenuItem.Value"/> property. The value of the <see cref="P:Telerik.Web.UI.RadMenuItem.Text"/>property is displayed 
            		in the <see cref="T:Telerik.Web.UI.RadMenu"/> control, and the <see cref="P:Telerik.Web.UI.RadMenuItem.Value"/> 
            		property is used to store additional data.
            	</para>
            	<para>To create items, use one of the following methods:</para>
            	<list type="bullet">
            		<item>
            			Use declarative syntax to define items inline in your page or user control.
            		</item>
            		<item>
            			Use one of the constructors to dynamically create new instances of the
            			<see cref="T:Telerik.Web.UI.RadMenuItem"/> class. These items can then be added to the
            			<b>Items</b> collection of another item or menu.
            		</item>
            		<item>
            			Data bind the <see cref="T:Telerik.Web.UI.RadMenu"/> control to a data source.
            		</item>
            	</list>
            	<para>
                    When the user clicks an item, the <see cref="T:Telerik.Web.UI.RadMenu"/> control can navigate
                    to a linked Web page, post back to the server or select that item. If the
                    <see cref="P:Telerik.Web.UI.RadMenuItem.NavigateUrl"/> property of an item is set, the
                    <b>RadMenu</b> control navigates to the linked page. By default, a linked page
                    is displayed in the same window or frame. To display the linked content in a different 
            		window or frame, use the <see cref="P:Telerik.Web.UI.RadMenuItem.Target"/> property.
                </para>
            </remarks>
            <summary>Represents a single item in the RadMenu class.</summary>
            <remarks>
            	<para>
                    The <strong>RadMenu</strong> control is made up of a hierarchy of menu items
                    represented by <b>RadMenuItem</b> objects. Menu items at the top level (level 0)
                    that do not have a parent menu item are called root or top-level menu items. A
                    menu item that has a parent menu item is called a submenu item. All root menu
                    items are stored in the <see cref="P:Telerik.Web.UI.RadMenu.Items">Items</see> collection of the
                    menu. Submenu items are stored in a parent menu item's
                    <see cref="P:Telerik.Web.UI.RadMenuItem.Items">Items</see> collection. You can access a menu item's parent
                    menu item by using the <see cref="P:Telerik.Web.UI.RadMenuItem.Owner">Owner</see> property.
                </para>
            	<para>To create the menu items for a <b>RadMenu</b> control, use one of the
                following methods:</para>
            	<list type="bullet">
            		<item>Use declarative syntax to create static menu items.</item>
            		<item>Use a constructor to dynamically create new instances of the
                    <b>RadMenuItem</b> class. These <b>RadMenuItem</b> objects can then be added to the
                    <b>Items</b> collection of their owner.</item>
            		<item>Bind the <b>Menu</b> control to a data source.</item>
            	</list>
            	<para>
                    When the user clicks a menu item, the <b>Menu</b> control can either navigate
                    to a linked Web page or simply post back to the server. If the
                    <see cref="P:Telerik.Web.UI.RadMenuItem.NavigateUrl">NavigateUrl</see> property of a menu item is set, the
                    <b>RadMenu</b> control navigates to the linked page. By default, a linked page
                    is displayed in the same window or frame as the <strong>RadMenu</strong>
                    control. To display the linked content in a different window or frame, use the
                    <see cref="P:Telerik.Web.UI.RadMenuItem.Target">Target</see> property.
                </para>
            	<para>
                    Each menu item has a <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> and a
                    <see cref="P:Telerik.Web.UI.RadMenuItem.Value">Value</see> property. The value of the <b>Text</b> property
                    is displayed in the <b>RadMenu</b> control, while the <b>Value</b> property is
                    used to store any additional data about the menu item.
                </para>
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItem.HighlightPath">
            <summary>
            Highlights the path from the item to the top of the menu.
            </summary>
            <remarks>
            The <c>HighlightPath</c> method applies the "rmFocused" CSS class to the item and
            his ancestor items. As a results the "path" from the top level to that specific item
            is highlighted.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItem.Clone">
            <summary>Creates a copy of the current <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> object.</summary>
            <returns>A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> which is a copy of the current one.</returns>
            <remarks>
            Use the <strong>Clone</strong> method to create a copy of the current item. All
            properties of the clone are set to the same values as the current ones. Child items are
            not cloned.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItem.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> class.</summary>
            <remarks>
                Use this constructor to create and initialize a new instance of the
                <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> class using default values.
            </remarks>
            <example>
                The following example demonstrates how to add items to
                <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> controls. 
                <code lang="CS" title="[New Example]">
            RadMenuItem item = new RadMenuItem();
            item.Text = "News";
            item.NavigateUrl = "~/News.aspx";
             
            RadMenu1.Items.Add(item);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim item As New RadMenuItem()
            item.Text = "News"
            item.NavigateUrl = "~/News.aspx"
             
            RadMenu1.Items.Add(item)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItem.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> class with the
                specified text data.
            </summary>
            <remarks>
            	<para>
                    Use this constructor to create and initialize a new instance of the
                    <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> class using the specified text.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to add items to
                <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> controls. 
                <code lang="CS" title="[New Example]">
            RadMenuItem item = new RadMenuItem("News");
             
            RadMenu1.Items.Add(item);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim item As New RadMenuItem("News")
             
            RadMenu1.Items.Add(item)
                </code>
            </example>
            <param name="text">
                The text of the item. The <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> property is set to the value
                of this parameter.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItem.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> class with the
                specified text and URL to navigate to.
            </summary>
            <remarks>
            	<para>
                    Use this constructor to create and initialize a new instance of the
                    <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> class using the specified text and URL.
                </para>
            </remarks>
            <example>
                This example demonstrates how to add items to <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see>
                controls. 
                <code lang="CS" title="[New Example]">
            RadMenuItem item = new RadMenuItem("News", "~/News.aspx");
             
            RadMenu1.Items.Add(item);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim item As New RadMenuItem("News", "~/News.aspx")
             
            RadMenu1.Items.Add(item)
                </code>
            </example>
            <param name="text">
                The text of the item. The <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> property is set to the value
                of this parameter.
            </param>
            <param name="navigateUrl">
                The url which the item will navigate to. The
                <see cref="P:Telerik.Web.UI.RadMenuItem.NavigateUrl">NavigateUrl</see> property is set to the value of this
                parameter.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.Items">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/> object that contains the child items of the current RadMenuItem.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/> that contains the child items of the current RadMenuItem. By default
            	the collection is empty (the item has no children).
            </value>
            <remarks>
            	Use the <b>Items</b> property to access the child items of the RadMenuItem. You can also use the <b>Items</b> property to
            	manage the child items - you can add, remove or modify items.
            </remarks>
            <example>
                The following example demonstrates how to programmatically modify the properties of a child item.
                <code lang="CS">
            		RadMenuItem item = RadMenu1.FindItemByText("Test");
            		item.Items[0].Text = "Example";
            		item.Items[0].NavigateUrl = "http://www.example.com";
                </code>
            	<code lang="VB">
            		Dim item As RadMenuItem = RadMenu1.FindItemByText("Test")
            		item.Items(0).Text = "Example"
            		item.Items(0).NavigateUrl = "http://www.example.com"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.Owner">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.IRadMenuItemContainer"/> object which contains the current menu item.
            </summary>
            <value>
                The object which contains the menu item. It might be an instance of the
                <see cref="T:Telerik.Web.UI.RadMenu"/> class or the <see cref="T:Telerik.Web.UI.RadMenuItem"/>
                class depending on the hierarchy level.
            </value>
            <remarks>
                The value is of the <see cref="T:Telerik.Web.UI.IRadMenuItemContainer"/> type which is
                implemented by the <see cref="T:Telerik.Web.UI.RadMenu"/> and the
                <see cref="T:Telerik.Web.UI.RadMenuItem"/> classes. Use the <b>Owner</b> property when
                recursively traversing items in the <b>RadMenu</b> control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.DataItem">
            <summary>Gets or sets the data item represented by the item.</summary>
            <value>
                An object representing the data item to which the Item is bound to. The
                <strong>DataItem</strong> property will always return <strong>null</strong> when
                accessed outside of <see cref="E:Telerik.Web.UI.RadMenu.ItemDataBound">MenuItemDataBound</see>
                event handler.
            </value>
            <remarks>
                This property is applicable only during data binding. Use it along with the
                <see cref="E:Telerik.Web.UI.RadMenu.ItemDataBound">MenuItemDataBound</see> event to perform
                additional mapping of fields from the data item to
                <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> properties.
            </remarks>
            <example>
                The following example demonstrates how to map fields from the data item to
                <see cref="T:Telerik.Web.UI.RadMenuItem">
            		<strong>RadMenuItem</strong> properties. It assumes the user has subscribed to the
                    MenuItemDataBound:RadMenu.MenuItemDataBound
                    <see cref="E:Telerik.Web.UI.RadMenu.ItemDataBound">event.</see>
            	</see>
            	<code lang="CS">
            private void RadMenu1_MenuItemDataBound(object sender, Telerik.WebControls.ItemStripEventArgs e)
            {
                RadMenuItem item = e.Item;
                DataRowView dataRow = (DataRowView) e.Item.DataItem;
             
                item.ImageUrl = "image" + dataRow["ID"].ToString() + ".gif";
                item.NavigateUrl = dataRow["URL"].ToString();
            }
                </code>
            	<code lang="VB">
            Sub RadMenu1_MenuItemDataBound(ByVal sender As Object, ByVal e As ItemStripEventArgs) Handles RadMenu1.MenuItemDataBound
                Dim item As RadMenuItem = e.Item
                Dim dataRow As DataRowView = CType(e.Item.DataItem, DataRowView)
             
                item.ImageUrl = "image" + dataRow("ID").ToString() + ".gif"
                item.NavigateUrl = dataRow("URL").ToString()
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.Text">
            <summary>Gets or sets the text caption for the menu item.</summary>
            <value>The text of the item. The default value is empty string.</value>
            <example>
                This example demonstrates how to set the text of the item using the
                <strong>Text</strong> property. 
                <para>
            		<para class="sourcecode">&lt;telerik:RadMenu ID="RadMenu1"
                    runat="server"&gt;<br/>
                    &lt;Items&gt;<br/>
                    &lt;telerik:RadMenuItem <strong>Text="News"</strong> /&gt;<br/>
                    &lt;telerik:RadMenuItem <strong>Text="News"</strong> /&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadMenu&gt;</para>
            	</para>
            </example>
            <remarks>
            Use the <strong>Text</strong> property to specify the text to display for the
            item.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.Value">
            <summary>Gets or sets the value associated with the menu item.</summary>
            <value>The value associated with the item. The default value is empty string.</value>
            <remarks>
            	<para>Use the <b>Value</b> property to specify or determine the value associated
                with the item.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.ItemTemplate">
            <summary>Gets or sets the template for displaying the item.</summary>
            <value>
            	<para>A <strong>ITemplate</strong> implemented object that contains the template
                for displaying the item. The default value is a null reference (<b>Nothing</b> in
                Visual Basic), which indicates that this property is not set.</para>
            	<para>
                    To specify common display for all menu items use the
                    <see cref="P:Telerik.Web.UI.RadMenu.ItemTemplate">ItemTemplate</see> property of the
                    <strong>RadMenu</strong> class.
                </para>
            </value>
            <example>
            	<para>The following template demonstrates how to add a Calendar control in certain
                menu item.</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadMenu runat="server" ID="RadMenu1"&gt;</para>
            	<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            		<para>&lt;Items&gt;</para>
            		<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            			<para>&lt;telerik:RadMenuItem Text="Date"&gt;</para>
            			<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            				<para>&lt;Items&gt;</para>
            				<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            					<para>&lt;telerik:RadMenuItem Text="SelectDate"&gt;</para>
            					<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            						<para>&lt;ItemTemplate&gt;</para>
            						<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            							<para>&lt;asp:Calendar runat="server" ID="Calendar1"
                                        /&gt;</para>
            						</blockquote>
            						<para>&lt;/ItemTemplate&gt;</para>
            					</blockquote>
            					<para>&lt;/telerik:RadMenuItem&gt;</para>
            				</blockquote>
            				<para>&lt;/Items&gt;</para>
            			</blockquote>
            			<para>&lt;/telerik:RadMenuItem&gt;</para>
            		</blockquote>
            		<para>&lt;/Items&gt;</para>
            	</blockquote>
            	<para>&lt;/telerik:RadMenu&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.GroupSettings">
            <summary>Specifies the settings for child item behavior.</summary>
            <value>
                An instance of the <see cref="T:Telerik.Web.UI.RadMenuItemGroupSettings">MenuItemGroupSettings</see>
                class.
            </value>
            <remarks>
            	<para>You can customize the following settings</para>
            	<list type="bullet">
            		<item>item flow</item>
            		<item>expand direction</item>
            		<item>horizontal offset from the parent item</item>
            		<item>vertical offset from the parent item</item>
            		<item>width</item>
            		<item>height</item>
            	</list>
            	<para>
                    For more information check
                    <see cref="T:Telerik.Web.UI.RadMenuItemGroupSettings">MenuItemGroupSettings</see>.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.ExpandMode">
            <summary>
            Gets or sets the expand behavior of the menu item.
            
            When set to ExpandMode.WebService the RadMenuItem will populate its children from the web service specified by the RadMenu.WebService and RadMenu.WebServiceMethod properties.
            </summary>
            <value>
            On of the <see cref="T:Telerik.Web.UI.MenuItemExpandMode">MenuItemExpandMode</see> values. The default value is <c>ClientSide</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.NavigateUrl">
            <summary>Gets or sets the URL to link to when the item is clicked.</summary>
            <value>
            The URL to link to when the item is clicked. The default value is empty
            string.
            </value>
            <example>
                The following example demonstrates how to use the <strong>NavigateUrl</strong>
                property 
                <para>
            		<para class="sourcecode">&lt;telerik:RadMenu id="RadMenu1"
                    runat="server"&gt;<br/>
                    &lt;Items&gt;<br/>
                    &lt;telerik:RadMenuItem Text="News" <strong>NavigateUrl="~/News.aspx"</strong>
                    /&gt;<br/>
                    &lt;telerik:RadMenuItem Text="External URL"
                    <strong>NavigateUrl="http://www.example.com"</strong> /&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadMenu&gt;</para>
            	</para>
            </example>
            <remarks>
            Use the <strong>NavigateUrl</strong> property to specify the URL to link to when
            the item is clicked. Use "~" (tilde) in front of an URL within the same ASP.NET
            application. When specifying external URL do not forget the protocol (e.g.
            "http://").
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.PostBack">
            <summary>
            Gets or sets a value indicating whether clicking on the item will
            postback.
            </summary>
            <value>
            	<strong>True</strong> if the menu item should postback; otherwise
                <strong>false</strong>. By default all the items will postback provided the user
                has subscribed to the <see cref="E:Telerik.Web.UI.RadMenu.ItemClick">ItemClick</see> event.
            </value>
            <remarks>
                If you subscribe to the <see cref="E:Telerik.Web.UI.RadMenu.ItemClick">ItemClick</see> all menu
                items will postback. To turn off that behavior you should set the
                <strong>PostBack</strong> property to <strong>false</strong>. This property cannot
                be set in design time.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.Menu">
            <summary>Gets the <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> instance which contains the item.</summary>
            <remarks>
                Use this property to obtain an instance to the
                <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> object containing the item.
            </remarks>		
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.IsSeparator">
            <summary>
            Sets or gets whether the item is separator. It also represents a logical state of
            the item. Might be used in some applications for keyboard navigation to omit processing
            items that are marked as separators.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.DisabledCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the menu item is
            disabled.
            </summary>
            <value>
            The CSS class applied when the menu item is disabled. The default value is
            <strong>"disabled"</strong>.
            </value>
            <remarks>
            By default the visual appearance of disabled menu items is defined in the skin CSS
            file. You can use the <strong>DisabledCssClass</strong> property to specify unique
            appearance for the menu item when it is disabled.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.ExpandedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the menu item is
            opened (its child items are visible).
            </summary>
            <value>
            The CSS class applied when the menu item is opened. The default value is
            <strong>"expanded"</strong>.
            </value>
            <remarks>
            By default the visual appearance of opened menu items is defined in the skin CSS
            file. You can use the <strong>ExpandedCssClass</strong> property to specify unique
            appearance for the menu item when it is opened.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.FocusedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the menu item is
            focused.
            </summary>
            <value>
            The CSS class applied when the menu item is focused. The default value is
            <strong>"focused"</strong>.
            </value>
            <remarks>
            By default the visual appearance of focused menu items is defined in the skin CSS
            file. You can use the <strong>FocusedCssClass</strong> property to specify unique
            appearance for the menu item when it is focused.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.ClickedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the menu item is
            clicked.
            </summary>
            <value>
            The CSS class applied when the menu item is clicked. The default value is
            <strong>"clicked"</strong>.
            </value>
            <example>
            By default the visual appearance of clicked menu items is defined in the skin CSS
            file. You can use the <strong>ClickedCssClass</strong> property to specify unique
            appearance for the menu item when it is clicked.
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.Target">
            <summary>
            Gets or sets the target window or frame to display the Web page content linked to
            when the menu item is clicked.
            </summary>
            <value>
            	<para>The target window or frame to load the Web page linked to when the Item is
                selected. Values must begin with a letter in the range of a through z (case
                insensitive), except for the following special values, which begin with an
                underscore:</para>
            	<para>
            		<list type="Itemle">
            			<item>
            				<term>_blank</term>
            				<description>Renders the content in a new window without
                            frames.</description>
            			</item>
            			<item>
            				<term>_parent</term>
            				<description>Renders the content in the immediate frameset
                            parent.</description>
            			</item>
            			<item>
            				<term>_self</term>
            				<description>Renders the content in the frame with focus.</description>
            			</item>
            			<item>
            				<term>_top</term>
            				<description>Renders the content in the full window without
                            frames.</description>
            			</item>
            		</list>
            	</para>The default value is empty string.
            </value>
            <remarks>
            	<para>
                    Use the <b>Target</b> property to specify the frame or window that displays the
                    Web page linked to when the menu item is clicked. The Web page is specified by
                    setting the <see cref="P:Telerik.Web.UI.RadMenuItem.NavigateUrl">NavigateUrl</see> property.
                </para>
            	<para>If this property is not set, the Web page specified by the
                <strong>NavigateUrl</strong> property is loaded in the current window.</para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to use the <strong>Target</strong>
                property</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadMenu runat="server" ID="RadMenu1"&gt;</para>
            	<para>&lt;Items&gt;</para>
            	<para>&lt;telerik:RadMenuItem <strong>Target="_blank"</strong>
                NavigateUrl="http://www.google.com" /&gt;</para>
            	<para>&lt;/Items&gt;</para>
            	<para>&lt;/telerik:RadMenu&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.Level">
            <summary>
            Manages the item level of a particular Item instance. This property allows easy
            implementation/separation of the menu items in levels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.ImageUrl">
            <summary>Gets or sets the path to an image to display for the item.</summary>
            <value>
            The path to the image to display for the item. The default value is empty
            string.
            </value>
            <remarks>
            Use the <strong>ImageUrl</strong> property to specify the image for the item. If
            the <strong>ImageUrl</strong> property is set to empty string no image will be
            rendered. Use "~" (tilde) when referring to images within the current ASP.NET
            application.
            </remarks>
            <example>
            	<para>The following example demonstrates how to specify the image to display for
                the item using the <strong>ImageUrl</strong> property.</para>
            	<para>
            		<para class="sourcecode">&lt;telerik:RadMenu id="RadMenu1"
                    runat="server"&gt;<br/>
                    &lt;Items&gt;<br/>
                    &lt;telerik:RadMenuItem <strong>ImageUrl="~/Img/inbox.gif"</strong> Text="Index"
                    /&gt;<br/>
                    &lt;telerik:RadMenuItem <strong>ImageUrl="~/Img/outbox.gif"</strong> Text="Outbox"
                    /&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadMenu&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.HoveredImageUrl">
            <summary>
            Gets or sets the path to an image to display for the item when the user moves the
            mouse over the item.
            </summary>
            <value>
            The path to the image to display when the user moves the mouse over the item. The
            default value is empty string.
            </value>
            <example>
            	<para class="sourcecode">&lt;telerik:RadMenu id="RadMenu1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadMenuItem ImageUrl="~/Img/inbox.gif"
                <strong>HoveredImageUrl="~/Img/inboxOver.gif"</strong> Text="Index" /&gt;<br/>
                &lt;telerik:RadMenuItem ImageUrl="~/Img/outbox.gif"
                <strong>HoveredImageUrl="~/Img/outboxOver.gif"</strong> Text="Outbox" /&gt;<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
            <remarks>
            Use the <strong>HoveredImageUrl</strong> property to specify the image that will be
            used when the user moves the mouse over the item. If the <strong>HoveredImageUrl</strong>
            property is set to empty string the image specified by the <strong>ImageUrl</strong>
            property will be used. Use "~" (tilde) when referring to images within the current
            ASP.NET application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.ClickedImageUrl">
            <summary>
            Gets or sets the path to an image to display for the item when the user clicks the
            item.
            </summary>
            <value>
            The path to the image to display when the user clicks the item. The default value
            is empty string.
            </value>
            <example>
            	<para class="sourcecode">&lt;telerik:RadMenu id="RadMenu1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadMenuItem ImageUrl="~/Img/inbox.gif"
                <strong>ClickedImageUrl="~/Img/inboxClicked.gif"</strong> Text="Index" /&gt;<br/>
                &lt;telerik:RadMenuItem ImageUrl="~/Img/outbox.gif"
                <strong>ClickedImageUrl="~/Img/outboxClicked.gif"</strong> Text="Outbox"
                /&gt;<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
            <remarks>
            Use the <strong>ClickedImageUrl</strong> property to specify the image that will be
            used when the user clicks the item. If the <strong>ClickedImageUrl</strong>
            property is set to empty string the image specified by the <strong>ImageUrl</strong>
            property will be used. Use "~" (tilde) when referring to images within the current
            ASP.NET application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.DisabledImageUrl">
            <summary>Gets or sets the path to an image to display when the items is disabled.</summary>
            <value>
            The path to the image to display when the item is disabled. The default value is
            empty string.
            </value>
            <remarks>
            Use the <strong>DisabledImageUrl</strong> property to specify the image that will
            be used when the item is disabled. If the <strong>DisabledImageUrl</strong> property is
            set to empty string the image specified by the <strong>ImageUrl</strong> property will
            be used. Use "~" (tilde) when referring to images within the current ASP.NET
            application.
            </remarks>
            <example>
            	<para class="sourcecode">&lt;telerik:RadMenu id="RadMenu1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadMenuItem ImageUrl="~/Img/inbox.gif"
                <strong>DisabledImageUrl="~/Img/inboxDisabled.gif"</strong> Text="Index"
                /&gt;<br/>
                &lt;telerik:RadMenuItem ImageUrl="~/Img/outbox.gif"
                <strong>DisabledImageUrl="~/Img/outboxDisabled.gif"</strong> Text="Outbox"
                /&gt;<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItem.ExpandedImageUrl">
            <summary>Gets or sets the path to an image to display when the items is expanded.</summary>
            <value>
            The path to the image to display when the item is expanded. The default value is
            empty string.
            </value>
            <example>
            	<para class="sourcecode">&lt;telerik:RadMenu id="RadMenu1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadMenuItem ImageUrl="~/Img/inbox.gif"
                <strong>ExpandedImageUrl="~/Img/inboxExpanded.gif"</strong> Text="Index"
                /&gt;<br/>
                &lt;telerik:RadMenuItem ImageUrl="~/Img/outbox.gif"
                <strong>ExpandedImageUrl="~/Img/outboxExpanded.gif"</strong> Text="Outbox"
                /&gt;<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadMenu&gt;</para>
            </example>
            <remarks>
            Use the <strong>ExpandedImageUrl</strong> property to specify the image that will
            be used when the item is expanded. If the <strong>ExpandedImageUrl</strong> property is
            set to empty string the image specified by the <strong>ImageUrl</strong> property will
            be used. Use "~" (tilde) when referring to images within the current ASP.NET
            application.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadMenuItemCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> objects in a
                <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> control.
            </summary>
            <remarks>
            	<para>The <strong>RadMenuItemCollection</strong> class represents a collection of
                <strong>RadMenuItem</strong> objects. The <strong>RadMenuItem</strong> objects in turn represent 
                menu items within a <strong>RadMenu</strong> control.</para>
            	<list type="bullet">
            		<item>
                        Use the <see cref="P:Telerik.Web.UI.RadMenuItemCollection.Item(System.Int32)">indexer</see> to programmatically retrieve a
                        single RadMenuItem from the collection, using array notation.
                    </item>
            		<item>
                        Use the <strong>Count</strong> property to determine the total
                        number of menu items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadMenuItemCollection.Add(Telerik.Web.UI.RadMenuItem)">Add</see> method to add menu items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadMenuItemCollection.Remove(Telerik.Web.UI.RadMenuItem)">Remove</see> method to remove menu items from the
                        collection.
                    </item>
            	</list>
            </remarks>
            <moduleiscollection/>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/> class.
            </summary>
            <param name="parent">The owner of the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.Add(Telerik.Web.UI.RadMenuItem)">
            <summary>
            	Appends the specified <see cref="T:Telerik.Web.UI.RadMenuItem"/> object to the end of the current <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/>.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadMenuItem"/> to append to the end of the current <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/>.
            </param>
            <example>
            	The following example demonstrates how to programmatically add items in a
                <strong>RadMenu</strong> control.
            	<code lang="CS">
            		RadMenuItem newsItem = new RadMenuItem("News");
            		RadMenu1.Items.Add(newsItem);
                </code>
            	<code lang="VB">
            		Dim newsItem As RadMenuItem = New RadMenuItem("News")
            		RadMenu1.Items.Add(newsItem)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.FindItemByText(System.String)">
            <summary>
                Searches the <strong>RadMenuItemCollection</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> with a <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> property equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> whose <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> property is equal
                to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. This method is not recursive. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="text">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.FindItemByText(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadMenu</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> with a <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> property equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> whose <see cref="P:Telerik.Web.UI.RadMenuItem.Text">Text</see> property is equal
                to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="text">The value to search for.</param> 
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.FindItemByValue(System.String)">
            <summary>
                Searches the <strong>RadMenuItemCollection</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> with a <see cref="P:Telerik.Web.UI.RadMenuItem.Value">Value</see> property equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> whose <see cref="P:Telerik.Web.UI.RadMenuItem.Value">Value</see> property is
                equal to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. This method is not recursive. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="value">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.FindItemByValue(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadMenu</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> with a <see cref="P:Telerik.Web.UI.RadMenuItem.Value">Value</see> property equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> whose <see cref="P:Telerik.Web.UI.RadMenuItem.Value">Value</see> property is
                equal to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="value">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.FindItemByAttribute(System.String,System.String)">
            <summary>
            Searches the items in the collection for a <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> which contains the specified attribute and attribute value.
            </summary>
            <param name="attributeName">The name of the target attribute.</param>
            <param name="attributeValue">The value of the target attribute</param>
            <returns>The <c>RadMenuItem</c> that matches the specified arguments. Null (Nothing) is returned if no node is found.</returns>
            <remarks>This method is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.FindItem(System.Predicate{Telerik.Web.UI.RadMenuItem})">
            <summary>
            Returns  the first <strong>RadMenuItem</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindItem</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadMenu1.FindItem(ItemWithEqualsTextAndValue);
            }
            private static bool ItemWithEqualsTextAndValue(RadMenuItem item)
            {
                if (item.Text == item.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadMenu1.FindItem(ItemWithEqualsTextAndValue)
            End Sub
            Private Shared Function ItemWithEqualsTextAndValue(ByVal item As RadMenuItem) As Boolean
                If item.Text = item.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
            </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.Contains(Telerik.Web.UI.RadMenuItem)">
            <summary>
            	Determines whether the specified <see cref="T:Telerik.Web.UI.RadMenuItem"/> object is in the current 
            	<see cref="T:Telerik.Web.UI.RadMenuItemCollection"/>.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadMenuItem"/> object to find.
            </param>
            <returns>
            	<c>true</c> if the current collection contains the specified <see cref="T:Telerik.Web.UI.RadMenuItem"/> object; 
            	otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.CopyTo(Telerik.Web.UI.RadMenuItem[],System.Int32)">
            <summary>
            Copies the contents of the current <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/> into the 
            specified array of <see cref="T:Telerik.Web.UI.RadMenuItem"/> objects.
            </summary>
            <param name="array">The target array.</param>
            <param name="index">The index to start copying from.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Web.UI.RadMenuItem})">
            <summary>Appends the specified array of <see cref="T:Telerik.Web.UI.RadMenuItem"/> objects to the end of the 
            current <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/>.
            </summary>
            <example>
                The following example demonstrates how to use the <strong>AddRange</strong> method
                to add multiple items in a single step. 
                <code lang="CS">
            		RadMenuItem[] items = new RadMenuItem[] { new RadMenuItem("First"), new RadMenuItem("Second"), new RadMenuItem("Third") };
            		RadMenu1.Items.AddRange(items);
                </code>
            	<code lang="VB">
                    Dim items() As RadMenuItem = {New RadMenuItem("First"), New RadMenuItem("Second"), New RadMenuItem("Third")}
                    RadMenu1.Items.AddRange(items)
                </code>
            </example>
            <param name="items">
                The array of <see cref="T:Telerik.Web.UI.RadMenuItem"/> to append to the end of the current <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.IndexOf(Telerik.Web.UI.RadMenuItem)">
            <summary>
            Determines the index of the specified <see cref="T:Telerik.Web.UI.RadMenuItem"/> object in the collection.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadMenuItem"/> to locate.
            </param>
            <returns>
            	The zero-based index of item within the current <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/>,
            	if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.Insert(System.Int32,Telerik.Web.UI.RadMenuItem)">
            <summary>
            Inserts the specified <see cref="T:Telerik.Web.UI.RadMenuItem"/> object in the current 
            <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/> at the specified index location.
            </summary>
            <param name="index">
            	The zero-based index location at which to insert the <see cref="T:Telerik.Web.UI.RadMenuItem"/>.
            </param>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadMenuItem"/> to insert.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.Remove(Telerik.Web.UI.RadMenuItem)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadMenuItem"/> object from the current
            	<see cref="T:Telerik.Web.UI.RadMenuItemCollection"/>.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> object to remove.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Telerik.Web.UI.RadMenuItem"/> object at the specified index 
            from the current <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/>.
            </summary>
            <param name="index">
            	The zero-based index of the index to remove.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadMenuItem"/> object at the specified index in 
            	the current <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/>.
            </summary>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadMenuItem"/> to retrieve.
            </param>
            <returns>
            	The <see cref="T:Telerik.Web.UI.RadMenuItem"/> at the specified index in the 
            	current <see cref="T:Telerik.Web.UI.RadMenuItemCollection"/>.
            </returns>
        </member>
        <member name="T:Telerik.Web.UI.RadMenuItemGroupSettings">
            <summary>Represents settings controlling child item behavior.</summary>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemGroupSettings.#ctor">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemGroupSettings.#ctor(System.Web.UI.StateBag)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemGroupSettings.#ctor(System.Web.UI.StateBag,Telerik.Web.UI.RadMenuItem)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemGroupSettings.DefaultSettings">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemGroupSettings.Flow">
            <summary>Gets or sets the flow of child items.</summary>
            <value>
                One of the <see cref="T:Telerik.Web.UI.ItemFlow">ItemFlow</see> enumeration values. The default
                value is <strong>Vertical</strong>.
            </value>
            <remarks>
            Use the <strong>Flow</strong> property to customize the flow of child menu items.
            By default <strong>RadMenu</strong> mimics the behavior of Windows and child items
            (apart from top level ones) flow vertically.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemGroupSettings.ExpandDirection">
            <summary>Gets or sets the direction in which child items will open.</summary>
            <value>
                One of the <see cref="P:Telerik.Web.UI.RadMenuItemGroupSettings.ExpandDirection">ExpandDirection</see> enumeration values.
                The default value is <strong>Auto</strong>.
            </value>
            <remarks>
                Use the <strong>ExpandDirection</strong> property to specify different expand
                direction than the automatically determined one. See the
                <see cref="P:Telerik.Web.UI.RadMenuItemGroupSettings.ExpandDirection">ExpandDirection</see> description for more information.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemGroupSettings.OffsetX">
            <summary>
            Gets or sets a value indicating the horizontal offset of child menu items
            considering their parent.
            </summary>
            <value>
            An integer specifying the horizontal offset of child menu items (measured in
            pixels). The default value is 0 (no offset).
            </value>
            <remarks>
            	<para>Use the <strong>OffsetX</strong> property to change the position where child
                items will appear.</para>
            	<para>
                    To customize the vertical offset use the <see cref="P:Telerik.Web.UI.RadMenuItemGroupSettings.OffsetY">OffsetY</see>
                    property.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemGroupSettings.OffsetY">
            <summary>
            Gets or sets a value indicating the vertical offset of child menu items
            considering their parent.
            </summary>
            <value>
            An integer specifying the vertical offset of child menu items (measured in
            pixels). The default value is 0 (no offset).
            </value>
            <remarks>
            	<para>Use the <strong>OffsetY</strong> property to change the position where child
                items will appear.</para>
            	<para>
                    To customize the horizontal offset use the <see cref="P:Telerik.Web.UI.RadMenuItemGroupSettings.OffsetX">OffsetX</see>
                    property.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemGroupSettings.Width">
            <summary>
            Gets or sets a value indicating the width of child menu items (the whole item
            group).
            </summary>
            <value>
            A <strong>Unit</strong> that represents the width of the child item group. The
            default value is <strong>Unit.Empty</strong>.
            </value>
            <remarks>
            If the total width of menu items exceeds the <strong>Width</strong> property
            scrolling will be applied.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemGroupSettings.Height">
            <summary>
            Gets or sets a value indicating the height of child menu items (the whole item
            group).
            </summary>
            <value>
            A <strong>Unit</strong> that represents the height of the child item group. The
            default value is <strong>Unit.Empty</strong>.
            </value>
            <remarks>
            If the total height of menu items exceeds the <strong>Height</strong> property
            scrolling will be applied.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.SchedulerStrings">
            <summary>
            The localization strings to be used in RadScheduler.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.SchedulerViewType">
            <summary>Specifies the view mode of a RadScheduler control.</summary>
        </member>
        <member name="F:Telerik.Web.UI.SchedulerViewType.DayView">
            <summary>
            A view that spans a single day. All day-events are displayed in a separate row on
            top.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SchedulerViewType.WeekView">
            <summary>
            A view that spans seven days. Each day is displayed as in DayView mode and the
            current date is highlighted.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SchedulerViewType.MonthView">
            <summary>A view that spans a whole month. The current date is highlighted.</summary>
        </member>
        <member name="F:Telerik.Web.UI.SchedulerViewType.ResourceView">
            <summary>A view that spans a single day with appointments grouped by resource</summary>
        </member>
        <member name="F:Telerik.Web.UI.SchedulerViewType.TimelineView">
            <summary>
            The Timeline view spans an arbitrary time period. It is divided in slots with
            user selectable duration.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadScriptManager">
            <summary>
            ScriptManager derived class to add the ability to combine multiple
            smaller scripts into a larger one as a way to reduce the number
            of files the client must download
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScriptManager.EnableHandlerDetection">
            <summary>
            	Gets or sets a value indicating if RadScriptManager should check the Telerik.Web.UI.WebResource
            	handler existence in the application configuration file.
            </summary>
            <remarks>
            	When EnableHandlerDetection set to true, RadScriptManager automatically checks if the
            	HttpHandler it uses is registered to the application configuration file and throws
            	an exception if the HttpHandler registration missing. Set this property to false
            	if your scenario uses a file to output the combined scripts, or when running in Medium trust.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScriptManager.EnableScriptCombine">
            <summary>
            Specifies whether or not multiple script references should be combined into a single file
            </summary>
            <remarks>
            	When EnableScriptCombine set to true, the script references of the controls
            	on the page are combined to a single file, so that only one &lt;script&gt;
            	tag is output to the page HTML
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScriptManager.OutputCompression">
            <summary>
            	Specifies whether or not the combined output will be compressed.
            </summary>
            <remarks>
            	<para>In some cases the browsers do not recognize compressed streams (e.g. if IE 6 lacks
            	an update installed). In some cases the Telerik.Web.UI.WebResource handler
            	cannot determine if to compress the stream. Set this property
            	to <see cref="F:Telerik.Web.UI.OutputCompression.Disabled">Disabled</see>
            	if you encounter that problem.</para>
            	<para>The <strong>OutputCompression</strong> property works only when
            	<see cref="P:Telerik.Web.UI.RadScriptManager.EnableScriptCombine">EnableScriptCombine</see> is set to <strong>true</strong>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScriptManager.HttpHandlerUrl">
            <summary>
            Specifies the URL of the HTTPHandler that combines and serves the scripts.
            </summary>
            <remarks>
            	<para>
            		The HTTPHandler should either be registered in the application configuration
            		file, or a file with the specified name should exist at the location, which
            		HttpHandlerUrl points to.
            	</para>
            	<para>
            		If a file is to serve the files, it should inherit the class Telerik.Web.UI.WebResource
            	</para>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.Dictionaries.DictionaryImporter">
            <summary>
            Summary description for DictionarySorter.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DictionaryImporter.Save(System.String)">
            <summary>
            Saves the dictionary to a file.
            </summary>
            <param name="outputFile">The output file name.</param>
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DictionaryImporter.Load(System.String)">
            <summary>
            Load a word list from a file.
            </summary>
            <param name="inputFile">The import file name.</param>
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DictionaryImporter.Load(System.IO.TextReader)">
            <summary>
            Load a word list from a StreamReader.
            </summary>
            <param name="input">The import reader.</param>
        </member>
        <member name="F:Telerik.Web.UI.Dictionaries.DoubleMetaphone.VOWELS">
            "Vowels" to test for
        </member>
        <member name="F:Telerik.Web.UI.Dictionaries.DoubleMetaphone.SILENT_START">
            Prefixes when present which are not pronounced
        </member>
        <member name="F:Telerik.Web.UI.Dictionaries.DoubleMetaphone.maxCodeLen">
            Maximum length of an encoding, default is 4
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.Encode(System.String)">
             Encode a value with Double Metaphone
            
             @param value string to encode
             @return an encoded string
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.Encode(System.String,System.Boolean)">
             Encode a value with Double Metaphone, optionally using the alternate
             encoding.
            
             @param value string to encode
             @param alternate use alternate encode
             @return an encoded string
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.IsDoubleMetaphoneEqual(System.String,System.String)">
            Check if the Double Metaphone values of two <code>string</code> values
            are equal.
            
            @param value1 The left-hand side of the encoded {@link string#equals(Object)}.
            @param value2 The right-hand side of the encoded {@link string#equals(Object)}.
            @return <code>true</code> if the encoded <code>string</code>s are equal;
                     <code>false</code> otherwise.
            @see #isDoubleMetaphoneEqual(string,string,bool)
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.IsDoubleMetaphoneEqual(System.String,System.String,System.Boolean)">
            Check if the Double Metaphone values of two <code>string</code> values
            are equal, optionally using the alternate value.
            
            @param value1 The left-hand side of the encoded {@link string#equals(Object)}.
            @param value2 The right-hand side of the encoded {@link string#equals(Object)}.
            @param alternate use the alternate value if <code>true</code>.
            @return <code>true</code> if the encoded <code>string</code>s are equal;
                     <code>false</code> otherwise.
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.GetMaxCodeLen">
            Returns the maxCodeLen.
            @return int
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.SetMaxCodeLen(System.Int32)">
            Sets the maxCodeLen.
            @param maxCodeLen The maxCodeLen to set
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleAEIOUY(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'A', 'E', 'I', 'O', 'U', and 'Y' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleC(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'C' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleCC(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'CC' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleCH(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'CH' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleD(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'D' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleG(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32,System.Boolean)">
            Handles 'G' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleGH(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'GH' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleH(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'H' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleJ(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32,System.Boolean)">
            Handles 'J' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleL(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'L' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleP(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'P' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleR(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32,System.Boolean)">
            Handles 'R' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleS(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32,System.Boolean)">
            Handles 'S' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleSC(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'SC' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleT(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'T' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleW(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'W' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleX(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32)">
            Handles 'X' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.HandleZ(System.String,Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult,System.Int32,System.Boolean)">
            Handles 'Z' cases
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.ConditionC0(System.String,System.Int32)">
            Complex condition 0 for 'C'
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.ConditionCH0(System.String,System.Int32)">
            Complex condition 0 for 'CH'
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.ConditionCH1(System.String,System.Int32)">
            Complex condition 1 for 'CH'
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.ConditionL0(System.String,System.Int32)">
            Complex condition 0 for 'L'
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.ConditionM0(System.String,System.Int32)">
            Complex condition 0 for 'M'
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.IsSlavoGermanic(System.String)">
            Determines whether or not a value is of slavo-germanic orgin. A value is
            of slavo-germanic origin if it contians any of 'W', 'K', 'CZ', or 'WITZ'.
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.IsVowel(System.Char)">
            Determines whether or not a character is a vowel or not
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.IsSilentStart(System.String)">
            Determines whether or not the value starts with a silent letter.  It will
            return <code>true</code> if the value starts with any of 'GN', 'KN',
            'PN', 'WR' or 'PS'.
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.CleanInput(System.String)">
            Cleans the input
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.CharAt(System.String,System.Int32)">
            Gets the character at index <code>index</code> if available, otherwise
            it returns <code>Character.MIN_VALUE</code> so that there is some sort
            of a default
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.Contains(System.String,System.Int32,System.Int32,System.String)">
            Shortcut method with 1 criteria
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.Contains(System.String,System.Int32,System.Int32,System.String,System.String)">
            Shortcut method with 2 criteria
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.Contains(System.String,System.Int32,System.Int32,System.String,System.String,System.String)">
            Shortcut method with 3 criteria
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.Contains(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            Shortcut method with 4 criteria
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.Contains(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            Shortcut method with 5 criteria
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.Contains(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            Shortcut method with 6 criteria
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.DoubleMetaphone.Contains(System.String,System.Int32,System.Int32,System.String[])">
            		* Determines whether <code>value</code> contains any of the criteria 
            		starting
            		* at index <code>start</code> and matching up to length <code>length</code>
        </member>
        <member name="T:Telerik.Web.UI.Dictionaries.DoubleMetaphoneResult">
            Inner class for storing results, since there is the optional alternate
            encoding.
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.EditDistanceDictionary.InitArrays">
            <summary>
            	Initializes the length and offset arrays as well as the distance matrix.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.EditDistanceDictionary.GetSimilar(System.String)">
            <summary>
            	Finds possible suggestions for a misspelled word.
            </summary>
            <param name="word">the misspelled word string</param>
            <returns>array of suggestion replacement strings</returns>
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.EditDistanceDictionary.CalculateEditDistance(System.String,System.String)">
            <summary>
            	Calculates Levenshtein distance for two given strings.
            </summary>
            <param name="first">String 1.</param>
            <param name="second">String 2.</param>
            <returns>Edit Distance.</returns>
        </member>
        <member name="T:Telerik.Web.UI.Dictionaries.ICustomDictionarySource">
            <summary>
            A custom interface that defines the access to the custom dictionary.  
            It can be used to replace the custom dictionary storage mechanism and store the words in a database or on a remote computer.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.ICustomDictionarySource.ReadWord">
            <summary>
            Reads a word from the storage.  It should return null if no more words are present.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.Dictionaries.ICustomDictionarySource.AddWord(System.String)">
            <summary>
            Adds a new custom word.
            </summary>
            <param name="word">the new word</param>
        </member>
        <member name="P:Telerik.Web.UI.Dictionaries.ICustomDictionarySource.DictionaryPath">
            <summary>
            The directory that contains the custom dictionary file.
            Necessary only for file based storage -- it is set to the physical directory corresponding to RadSpell's DictPath property setting.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Dictionaries.ICustomDictionarySource.Language">
            <summary>
            The language for the custom dictionary.  It is usually a culture name like en-US or de-DE.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Dictionaries.ICustomDictionarySource.CustomAppendix">
            <summary>
            A custom appendix string that can be used to distinguish different custom dictionaries.  It is passed the CustomAppendix of the RadSpell object.  This way one can create different dictionaries for John and Mary.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Dictionaries.SorterObjectArray">
            <summary>
            This is the .NET 1.x implementation.
            The .NET 2.0 one gets into an infinite loop when using the WordComparer.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Dictionaries.WordComparer">
            <summary>
            Summary description for WordComparer.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ISpellCheckProvider">
            <summary>
            ISpellCheckProvider interface -- defines the behavior that we need
            from a component to do spell checking.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.TelerikSpellCheckProvider">
            <summary>
            Summary description for TelerikSpellCheckProvider.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.SpellChecker.#ctor(System.String)">
            <summary>
            Create a new RadSpellChecker object.  You need to pass a correct path to the folder that contains the dictionary files (*.TDF)
            </summary>
            <remarks>
            The method expects local paths. E.g. "C:\SomeFolder\RadControls\Spell\TDF".  Transform URL's to local paths with the <see cref="M:System.Web.HttpServerUtility.MapPath(System.String)"/> method.
            C#
            <code>
            SpellChecker checker = new SpellChecker(Server.MapPath("~/RadControls/Spell/TDF"));
            </code>
            VB.NET
            <code>
            </code>
            Dim checker As SpellChecker
            checker = New SpellChecker(Server.MapPath("~/RadControls/Spell/TDF"))
            </remarks>
            <param name="dictionaryPath"></param>
        </member>
        <member name="M:Telerik.Web.UI.SpellChecker.Close">
            <summary>
            Cleans up any resources held by the SpellChecker object.  It is an alias of the Dispose method.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.SpellChecker.CheckText">
            <summary>
            Performs the actual spellchecking.  It will be automatically called by the Errors property accessor.
            </summary>
            <returns><see cref="T:Telerik.Web.UI.SpellCheckErrors"/> -- a collection with all the errors found.</returns>
        </member>
        <member name="M:Telerik.Web.UI.SpellChecker.AddToCustom(System.String)">
            <summary>
            Adds a new word to the custom dictionary.  It first checks if the word is already present in the current base or custom dictionaries.
            </summary>
            <param name="word">The new custom word.</param>
        </member>
        <member name="M:Telerik.Web.UI.SpellChecker.Dispose">
            <summary>
            Clean up used resources.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.Text">
             <summary>
             Sets the text to be spellchecked.  It can be plain text or HTML.
             </summary>
             <remarks>
             This property can be used to pass the text to the spellchecker engine programmatically.  The engine can deal with plaintext or any HTML-like format.  
             It ignores text inside angle brackets (&lt;&gt;) and transforms HTML entities to their character values.  E.g. &amp;amp; becomes &amp;
             C#:
             <code>
            using (SpellChecker checker = new SpellChecker(Server.MapPath("~/RadControls/Spell/TDF")))
            {
            	checker.Text = text;
            	return checker.Errors;
            }
             </code>
             VB.NET
             <code>
            Dim checker As SpellChecker
            Try
            	checker = New SpellChecker(Server.MapPath("~/RadControls/Spell/TDF"))
            	checker.Text = text
            	Return checker.Errors
            Finally
            	checker.Dispose()
            End Try 
             </code>
             </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.DictionaryLanguage">
            <summary>
            The language of the dictionary to be used for spellchecking.  It usually is the same as the corresponding TDF file (without the extension).
            </summary>
            <remarks>
            To spellcheck in German you have to have de-DE.tdf inside your dictionary folder, and set DictionaryLanguage to "de-DE"
            C#:
            <code>
            spellChecker.DictionaryLanguage = "de-DE";
            </code>
            VB.NET
            <code>
            spellChecker.DictionaryLanguage = "de-DE"
            </code>
            </remarks>
            <value>The default is <b>en-US</b></value>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.DictionaryPath">
            <summary>
            The folder path that contains the TDF files.
            </summary>
            <remarks>
            The method expects local paths. E.g. "C:\SomeFolder\RadControls\Spell\TDF".  Transform URL's to local paths with the <see cref="M:System.Web.HttpServerUtility.MapPath(System.String)"/> method.
            C#
            <code>
            SpellChecker checker = new SpellChecker(Server.MapPath("~/RadControls/Spell/TDF"));
            </code>
            VB.NET
            <code>
            </code>
            Dim checker As SpellChecker
            checker = New SpellChecker(Server.MapPath("~/RadControls/Spell/TDF"))
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.CustomAppendix">
            <summary>
            The suffix that gets appended to the custom dictionary file name.  It is usually a user specific string that allows to distinguish dictionaries for different users.
            Default filenames are Language + CustomAppendix + ".txt".
            <value>The default is <b>-Custom</b></value>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.EditDistance">
            <summary>
            	Specifies the edit distance. If you increase the value, the checking speed decreases but more suggestions are presented.  It does not do anything for the phonetic spellchecking.
            </summary>
            <value>The default is <b>1</b></value>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.CheckAllCaps">
            <summary>
            	Specifies whether or not to check words in CAPITALS (e.g. "UNESCO")
            </summary>
            <value>The default is <b>false</b></value>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.CheckForRepeatWords">
            <summary>
            	Specifies whether or not to count repeating words as errors (e.g. "very very")
            </summary>
            <value>The default is <b>false</b></value>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.CheckCapital">
            <summary>
            	Specifies whether or not to check words in Capitals (e.g. "Washington")
            </summary>
            <value>The default is <b>true</b></value>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.CheckWordsWNumbers">
            <summary>
            	Specifies whether or not to check words containing numbers (e.g. "l8r")
            </summary>
            <value>The default is <b>false</b></value>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.SpellCheckProviderTypeName">
            <summary>
            	Specifies the type name for the custom spell check provider
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.SpellCheckProvider">
            <summary>
            	Specifies whether RadSpell should use the internal spellchecking algorithm or try to use Microsoft Word. The possible values are defined in the <see cref="T:Telerik.Web.UI.SpellCheckProvider"/> enum.
            </summary>
            <value>The default is <b>PhoneticProvider</b></value>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.FragmentIgnoreOptions">
            <summary>
            Configures the spellchecker engine, so that it knows whether to skip URL's, email addresses, and filenames and not flag them as erros.
            <see cref="P:Telerik.Web.UI.SpellChecker.FragmentIgnoreOptions"/>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.CustomDictionarySource">
            <summary>
            Manipulate the custom dictionary source.  The new value must implement ICustomDictionarySource.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.CustomDictionarySourceType">
            <summary>
            The fully qualified name of the type that will be used for the custom dictionary storage.  The type name must include the assembly, culture and public key token.
            A new instance will be created internally unless you set <see cref="P:Telerik.Web.UI.SpellChecker.CustomDictionarySource"/> CustomDictionarySource directly.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SpellChecker.Errors">
            <summary>
            The errors after the last spellcheck.  The getter method will call <see cref="M:Telerik.Web.UI.SpellChecker.CheckText"/> automatically that.
            </summary>
            <value><see cref="T:Telerik.Web.UI.SpellCheckErrors"/></value>
        </member>
        <member name="T:Telerik.Web.UI.SpellCheckError">
            <summary>
            Contains the information about a spellcheck error.  The most important properties are the mistaken word and its offset in the source text.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SpellCheckError.OffsetInText">
            <summary>
            The offset in the source text.  It is useful for locating the original word and replacing it with one of the suggestions.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SpellCheckError.MistakenWord">
            <summary>
            The original word that the spellchecker has determined to be wrong.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.SpellCheckError.Suggestions">
            <summary>
            Suggestions for replacing the mistaken word.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.SpellCheckErrors">
            <summary>
                <para>
                  A collection that stores <see cref="T:Telerik.Web.UI.SpellCheckError"/> objects.
               </para>
            </summary>
            <seealso cref="T:Telerik.Web.UI.SpellCheckErrors"/>
        </member>
        <member name="M:Telerik.Web.UI.SpellCheckErrors.#ctor">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.Web.UI.SpellCheckErrors"/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.SpellCheckErrors.#ctor(System.Boolean)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.Web.UI.SpellCheckErrors"/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.SpellCheckErrors.Add(Telerik.Web.UI.SpellCheckError)">
            <summary>
               <para>Adds a <see cref="T:Telerik.Web.UI.SpellCheckError"/> with the specified value to the 
               <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.SpellCheckError"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.SpellCheckErrors.AddRange(Telerik.Web.UI.SpellCheckErrors)"/>
        </member>
        <member name="M:Telerik.Web.UI.SpellCheckErrors.AddRange(Telerik.Web.UI.SpellCheckError[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.Web.UI.SpellCheckErrors"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.Web.UI.SpellCheckError"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.SpellCheckErrors.Add(Telerik.Web.UI.SpellCheckError)"/>
        </member>
        <member name="M:Telerik.Web.UI.SpellCheckErrors.AddRange(Telerik.Web.UI.SpellCheckErrors)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.SpellCheckErrors.Add(Telerik.Web.UI.SpellCheckError)"/>
        </member>
        <member name="M:Telerik.Web.UI.SpellCheckErrors.Contains(Telerik.Web.UI.SpellCheckError)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> contains the specified <see cref="T:Telerik.Web.UI.SpellCheckError"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.SpellCheckError"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.Web.UI.SpellCheckError"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.SpellCheckErrors.IndexOf(Telerik.Web.UI.SpellCheckError)"/>
        </member>
        <member name="M:Telerik.Web.UI.SpellCheckErrors.CopyTo(Telerik.Web.UI.SpellCheckError[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> is greater than the available space between <paramref name="arrayIndex"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than <paramref name="array"/>'s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.Web.UI.SpellCheckErrors.IndexOf(Telerik.Web.UI.SpellCheckError)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.Web.UI.SpellCheckError"/> in 
                  the <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.SpellCheckError"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.Web.UI.SpellCheckError"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.Web.UI.SpellCheckErrors"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.Web.UI.SpellCheckErrors.Contains(Telerik.Web.UI.SpellCheckError)"/>
        </member>
        <member name="M:Telerik.Web.UI.SpellCheckErrors.Insert(System.Int32,Telerik.Web.UI.SpellCheckError)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.Web.UI.SpellCheckError"/> into the <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.Web.UI.SpellCheckError"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.Web.UI.SpellCheckErrors.Add(Telerik.Web.UI.SpellCheckError)"/>
        </member>
        <member name="M:Telerik.Web.UI.SpellCheckErrors.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.Web.UI.SpellCheckErrors.Remove(Telerik.Web.UI.SpellCheckError)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.Web.UI.SpellCheckError"/> from the 
               <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.Web.UI.SpellCheckError"/> to remove from the <see cref="T:Telerik.Web.UI.SpellCheckErrors"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.Web.UI.SpellCheckErrors.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.Web.UI.SpellCheckError"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.Web.UI.SpellCheckProvider">
            <summary>
            The spellcheck provider enumeration.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SpellCheckProvider.TelerikProvider">
            <summary>
            The default provider.  The same as PhoneticProvider
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SpellCheckProvider.EditDistanceProvider">
            <summary>
            This provider uses the edit distance algorithm. It will work for non-western
            languages.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SpellCheckProvider.PhoneticProvider">
            <summary>
            This provider uses phonetic codes to provide "sounds like" word suggestions.  Really effective for English, and less so for other languages.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SpellCheckProvider.MicrosoftWordProvider">
            <summary>
            This provider automates Microsoft Word via its COM Interop interface.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.WordIgnoreOptions.UPPERCASE">
            <summary>
            Specifies whether or not to check words in CAPITALS (e.g. 'UNESCO')
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.WordIgnoreOptions.WordsWithCapitalLetters">
            <summary>
            Specifies whether or not to check words in Capitals (e.g. 'Washington')
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.WordIgnoreOptions.RepeatedWords">
            <summary>
            Specifies whether or not to count repeating words as errors (e.g. 'very very')
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.WordIgnoreOptions.WordsWithNumbers">
            <summary>
            Specifies whether or not to check words containing numbers (e.g. 'l8r')
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadStyleSheetManager">
            <summary>
            A control allowing the ability to combine multiple embedded stylesheet references
            into a larger one as a way to reduce the number of files the client must download
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadStyleSheetManager.EnableHandlerDetection">
            <summary>
            	Gets or sets a value indicating if RadStyleSheetManager should check the Telerik.Web.UI.WebResource
            	handler existence in the application configuration file.
            </summary>
            <remarks>
            	When EnableHandlerDetection set to true, RadStyleSheetManager automatically checks if the
            	HttpHandler it uses is registered to the application configuration file and throws
            	an exception if the HttpHandler registration missing. Set this property to false
            	if your scenario uses a file to output the combined skins, or when running in Medium trust.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadStyleSheetManager.EnableStyleSheetCombine">
            <summary>
            Specifies whether or not multiple embedded stylesheet references should be combined into a single file
            </summary>
            <remarks>
            	When EnableStyleSheetCombine set to true, the stylesheet references of the controls
            	on the page are combined to a single file, so that only one &lt;link&gt;
            	tag is output to the page HTML
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadStyleSheetManager.OutputCompression">
            <summary>
            	Specifies whether or not the combined output will be compressed.
            </summary>
            <remarks>
            	<para>In some cases the browsers do not recognize compressed streams (e.g. if IE 6 lacks
            	an update installed). In some cases the Telerik.Web.UI.WebResource handler
            	cannot determine if to compress the stream. Set this property
            	to <see cref="F:Telerik.Web.UI.OutputCompression.Disabled">Disabled</see>
            	if you encounter that problem.</para>
            	<para>The <strong>OutputCompression</strong> property works only when
            	<see cref="P:Telerik.Web.UI.RadStyleSheetManager.EnableStyleSheetCombine">EnableStyleSheetCombine</see> is set to <strong>true</strong>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadStyleSheetManager.HttpHandlerUrl">
            <summary>
            Specifies the URL of the HTTPHandler that combines and serves the stylesheets.
            </summary>
            <remarks>
            	<para>
            		The HTTPHandler should either be registered in the application configuration
            		file, or a file with the specified name should exist at the location, which
            		HttpHandlerUrl points to.
            	</para>
            	<para>
            		If a file is to serve the files, it should inherit the class Telerik.Web.UI.WebResource
            	</para>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.IRadTreeNodeContainer">
            <summary>
                Defines properties that menu item containers (<see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see>,
                <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see>) should implement
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IRadTreeNodeContainer.Owner">
            <summary>Gets the parent <see cref="T:Telerik.Web.UI.IRadTreeNodeContainer">IMenuItemContainer</see>.</summary>
        </member>
        <member name="P:Telerik.Web.UI.IRadTreeNodeContainer.Nodes">
            <summary>Gets the collection of child items.</summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadTreeNodeCollection">RadTreeNodeCollection</see> that represents the child
                items.
            </value>
            <remarks>
            Use this property to retrieve the child items. You can also use it to
            programmatically add or remove items.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeNode">
            <summary>Represents a node in the <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control.</summary>
            <remarks>
            	<para>
            		The <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control is made up of nodes. Nodes which are immediate children
            		of the treeview are root nodes. Nodes which are children of root nodes are child nodes.
            	</para>
            	<para>
            		A node usually stores data in two properties, the <see cref="P:Telerik.Web.UI.RadTreeNode.Text">Text</see> property and 
            		the <see cref="P:Telerik.Web.UI.RadTreeNode.Value">Value</see> property. The value of the <see cref="P:Telerik.Web.UI.RadTreeNode.Text">Text</see> property is displayed 
            		in the <b>RadTreeView</b> control, and the <see cref="P:Telerik.Web.UI.RadTreeNode.Value">Value</see> property is used to store additional data.
            	</para>
            	<para>To create tree nodes, use one of the following methods:</para>
            	<list type="bullet">
            		<item>
            			Use declarative syntax to define nodes inline in your page or user control.
            		</item>
            		<item>
            			Use one of the constructors to dynamically create new instances of the
            			<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> class. These nodes can then be added to the
            			<b>Nodes</b> collection of another node or treeview.
            		</item>
            		<item>
            			Data bind the <b>RadTreeView</b> control to a data source.
            		</item>
            	</list>
            	<para>
                    When the user clicks a tree node, the <b>RadTreeView</b> control can navigate
                    to a linked Web page, post back to the server or select that node. If the
                    <see cref="P:Telerik.Web.UI.RadTreeNode.NavigateUrl">NavigateUrl</see> property of a node is set, the
                    <b>RadTreeView</b> control navigates to the linked page. By default, a linked page
                    is displayed in the same window or frame. To display the linked content in a different 
            		window or frame, use the <see cref="P:Telerik.Web.UI.RadTreeNode.Target">Target</see> property.
                </para>
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> class.</summary>
            <remarks>
                Use this constructor to create and initialize a new instance of the
                <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> class using default values.
            </remarks>
            <example>
                The following example demonstrates how to add node to
                <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> controls. 
                <code lang="CS">
            		RadTreeNode node = new RadTreeNode();
            		node.Text = "News";
            		node.NavigateUrl = "~/News.aspx";
             
            		RadTreeView1.Nodes.Add(node);
                </code>
            	<code lang="VB">
            		Dim node As New RadTreeNode()
            		node.Text = "News"
            		node.NavigateUrl = "~/News.aspx"
             
            		RadTreeView1.Nodes.Add(node)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> class with the
            	specified text data.
            </summary>
            <remarks>
            	Use this constructor to create and initialize a new instance of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> class using the specified text.
            </remarks>
            <example>
                The following example demonstrates how to add nodes to
                <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> controls. 
                <code lang="CS">
            		RadTreeNode node = new RadTreeNode("News");
             
            		RadTreeView1.Nodes.Add(node);
                </code>
            	<code lang="VB">
            		Dim node As New RadTreeNode("News")
             
            		RadTreeView1.Nodes.Add(node)
                </code>
            </example>
            <param name="text">
                The text of the node. The <see cref="P:Telerik.Web.UI.RadTreeNode.Text">Text</see> property is set to the value
                of this parameter.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> class with the
                specified text and value.
            </summary>
            <remarks>
            	Use this constructor to create and initialize a new instance of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> class using the specified text and value.
            </remarks>
            <example>
                This example demonstrates how to add nodes to <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see>
                controls. 
                <code lang="CS">
            		RadTreeNode node = new RadTreeNode("News", "NewsValue");
             
            		RadTreeView1.Nodes.Add(node);
                </code>
            	<code lang="VB">
            		Dim node As New RadTreeNode("News", "NewsValue")
             
            		RadTreeView1.Nodes.Add(node)
                </code>
            </example>
            <param name="text">
                The text of the node. The <see cref="P:Telerik.Web.UI.RadTreeNode.Text">Text</see> property is set to the value
                of this parameter.
            </param>
            <param name="value">
                The value of the node. The <see cref="P:Telerik.Web.UI.RadTreeNode.Value">Value</see> property is set to the value of this
                parameter.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.#ctor(System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> class with the
                specified text, value and URL.
            </summary>
            <remarks>
                Use this constructor to create and initialize a new instance of the
                <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> class using the specified text, value and URL.
            </remarks>
            <example>
                This example demonstrates how to add nodes to <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see>
                controls. 
                <code lang="CS">
            		RadTreeNode node = new RadTreeNode("News", "NewsValue", "~/News.aspx");
             
            		RadTreeView1.Nodes.Add(node);
                </code>
            	<code lang="VB">
            		Dim node As New RadTreeNode("News", "NewsValue", "~/News.aspx")
             
            		RadTreeView1.Nodes.Add(node)
                </code>
            </example>
            <param name="text">
                The text of the node. The <see cref="P:Telerik.Web.UI.RadTreeNode.Text">Text</see> property is set to the value
                of this parameter.
            </param>
            <param name="value">
                The value of the node. The <see cref="P:Telerik.Web.UI.RadTreeNode.Value">Value</see> property is set to the value of this
                parameter.
            </param>
            <param name="navigateUrl">
                The url which the node will navigate to. The
                <see cref="P:Telerik.Web.UI.RadTreeNode.NavigateUrl">NavigateUrl</see> property is set to the value of this
                parameter.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.GetFullPath(System.String)">
            <summary>
            Returns the full path (location) of the node delimited by the specified character.
            </summary>
            <param name="delimiter">The character to use as a delimiter</param>
            <returns>Returns the full path of the node delimited by the specified character.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.CollapseChildNodes">
            <summary>
            Collapses recursively all child nodes of the node.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.CollapseParentNodes">
            <summary>
            Expands all parent nodes of the node.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.InsertBefore(Telerik.Web.UI.RadTreeNode)">
            <summary>
            Inserts a node before the current node.
            </summary>
            <param name="node">The node to be inserted.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.InsertAfter(Telerik.Web.UI.RadTreeNode)">
            <summary>
            Inserts a node after the current node.
            </summary>
            <param name="node">The node to be inserted.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.IsAncestorOf(Telerik.Web.UI.RadTreeNode)">
            <summary>
            Checks if the current node is ancestor of another node.
            </summary>
            <param name="node">The node to check for.</param>
            <returns>
            <c>True</c> if the current node is ancestor of the other node; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.IsDescendantOf(Telerik.Web.UI.RadTreeNode)">
            <summary>
            Checks if the current node is descendant of another node node.
            </summary>
            <param name="node">The node to check for.</param>
            <returns>
            <c>True</c> if the current node is descendant of the other node; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.Toggle">
            <summary>
            Toggles Expand/Collapse state of the node.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.ExpandChildNodes">
            <summary>
            Expands  all child nodes of the node.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.ExpandParentNodes">
            <summary>
            Expands  all parent nodes of the node.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.Remove">
            <summary>
            Removes the node from the Nodes collection of its parent
            </summary>
            <example>
            The following example demonstrates how to remove a node.
                <code lang="CS">
            		RadTreeNode node = RadTreeView1.Nodes[0];
            		node.Remove();
                </code>
            	<code lang="VB">
            		Dim node As RadTreeNode = RadTreeView1.Nodes(0)
            		node.Remove()
                </code>		
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.Clone">
            <summary>
            	Creates a copy of the current <see cref="T:Telerik.Web.UI.RadTreeNode"/> object.</summary>
            <returns>
            	A <see cref="T:Telerik.Web.UI.RadTreeNode"/> which is a copy of the current one.</returns>
            <remarks>
            	Use the <strong>Clone</strong> method to create a copy of the current node. All
            	properties of the clone are set to the same values as the current ones. Child nodes are
            	copied as well.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.CheckChildNodes">
            <summary>
            Checks all child nodes of the current node.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNode.UncheckChildNodes">
            <summary>
            Unchecks all child nodes of the current node.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.CssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied by default to the node.
            </summary>
            <remarks>
            By default the visual appearance of hovered nodes is defined in the skin CSS
            file. You can use the <strong>CssClass</strong> property to specify unique
            appearance for the node.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.ToolTip">
            <summary>
            Gets or sets the tooltip shown for the node when the user hovers it with the mouse
            </summary>
            <value>
            A string representing the tooltip. The default value is empty string.
            </value>
            <remarks>
            	The ToolTip property is also used as the alt attribute of the node image (in case <see cref="P:Telerik.Web.UI.RadTreeNode.ImageUrl"/> is set)
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Enabled">
            <summary>
            	Gets or sets a value indicating whether the node is enabled.
            </summary>
            <value>
            	<c>true</c> if the node is enabled; otherwise <c>false</c>. The default value is <c>true</c>.
            </value>
            <remarks>
            	Disabled nodes cannot be clicked, or expanded.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Nodes">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/> object that contains the child nodes of the current RadTreeNode.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/> that contains the child nodes of the current RadTreeNode. By default
            	the collection is empty (the node has no children).
            </value>
            <remarks>
            	Use the <b>Nodes</b> property to access the child nodes of the RadTreeNode. You can also use the <b>Nodes</b> property to
            	manage the child nodes - you can add, remove or modify nodes.
            </remarks>
            <example>
                The following example demonstrates how to programmatically modify the properties of a child node.
                <code lang="CS">
            		RadTreeNode node = RadTreeView1.FindNodeByText("Test");
            		node.Nodes[0].Text = "Example";
            		node.Nodes[0].NavigateUrl = "http://www.example.com";
                </code>
            	<code lang="VB">
            		Dim node As RadTreeNode = RadTreeView1.FindNodeByText("Test")
            		node.Nodes(0).Text = "Example"
            		node.Nodes(0).NavigateUrl = "http://www.example.com"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.DataItem">
            <summary>Gets the data item that is bound to the node</summary>
            <value>
            	An Object that represents the data item that is bound to the node. The default value is null (Nothing in Visual Basic), 
            	which indicates that the node is not bound to any data item. The return value will always be null unless accessed within
            	a <see cref="E:Telerik.Web.UI.RadTreeView.NodeDataBound">NodeDataBound</see> event handler.
            </value>
            <remarks>
                This property is applicable only during data binding. Use it along with the
                <see cref="E:Telerik.Web.UI.RadTreeView.NodeDataBound">NodeDataBound</see> event to perform additional
                mapping of fields from the data item to <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> properties.
            </remarks>
            <example>
                The following example demonstrates how to map fields from the data item to
                <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> properties. It assumes the user has subscribed to the
                <see cref="E:Telerik.Web.UI.RadTreeView.NodeDataBound">NodeDataBound</see> event. 
                <code lang="CS">
            		private void RadTreeView1_NodeDataBound(object sender, Telerik.Web.UI.RadTreeNodeEventArgs e)
            		{
            			e.Node.ImageUrl = "image" + (string)DataBinder.Eval(e.Node.DataItem, "ID") + ".gif";
            			e.Node.NavigateUrl = (string)DataBinder.Eval(e.Node.DataItem, "URL");
            		}
                </code>
            	<code lang="VB">
            		Sub RadTreeView1_NodeDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadTreeNodeEventArgs ) Handles RadTreeView1.NodeDataBound
            			e.Node.ImageUrl = "image" &amp; DataBinder.Eval(e.Node.DataItem, "ID") &amp; ".gif"
            			e.Node.NavigateUrl = CStr(DataBinder.Eval(e.Node.DataItem, "URL"))
            		End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Text">
            <summary>
            	Gets or sets the text displayed for the current node.
            </summary>
            <value>
            	The text displayed for the node in the <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control. The default is empty string.
            </value>
            <remarks>
            	Use the <b>Text</b> property to specify or determine the text that is displayed for the node
            	in the <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Value">
            <summary>
            	Gets or sets custom (user-defined) data associated with the current node.
            </summary>
            <value>
            	A string representing the user-defined data. The default value is emptry string.
            </value>
            <remarks>
            	Use the <b>Value</b> property to associate custom data with a <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> object. 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.NavigateUrl">
            <summary>
            	Gets or sets the URL to navigate to when the current node is clicked.
            </summary>
            <value>
            	The URL to navigate to when the node is clicked. The default value is empty string which means that
            	clicking the current node will not navigate.
            </value>
            <remarks>
            	<para>
            		Setting the <b>NavigateUrl</b> property will disable node selection and as a result the 
            		<see cref="E:Telerik.Web.UI.RadTreeView.NodeClick">NodeClick</see> event won't be raised for the current node.
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Target">
            <summary>
            	Gets or sets the target window or frame in which to display the Web page content associated with the current node.
            </summary>
            <value>
            	<para>The target window or frame to load the Web page linked to when the node is
                clicked. Values must begin with a letter in the range of a through z (case
                insensitive), except for the following special values, which begin with an
                underscore:</para>
            	<para>
            		<list type="table">
            			<item>
            				<term>_blank</term>
            				<description>Renders the content in a new window without frames.</description>
            			</item>
            			<item>
            				<term>_parent</term>
            				<description>Renders the content in the immediate frameset parent.</description>
            			</item>
            			<item>
            				<term>_self</term>
            				<description>Renders the content in the frame with focus.</description>
            			</item>
            			<item>
            				<term>_top</term>
            				<description>Renders the content in the full window without frames.</description>
            			</item>
            		</list>
            	</para>
            	The default value is empty string which means the linked resource will be loaded in the current window.
            </value>
            <remarks>
            	<para>
                    Use the <b>Target</b> property to target window or frame in which to display the 
            		Web page content associated with the current node. The Web page is specified by
                    the <see cref="P:Telerik.Web.UI.RadTreeNode.NavigateUrl">NavigateUrl</see> property.
                </para>
            	<para>
            		If this property is not set, the Web page specified by the
            		<see cref="P:Telerik.Web.UI.RadTreeNode.NavigateUrl">NavigateUrl</see> property is loaded in the current window.
            	</para>
            	<para>
            		The <b>Target</b> property is taken into consideration only when the <see cref="P:Telerik.Web.UI.RadTreeNode.NavigateUrl">NavigateUrl</see> 
            		property is set.
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to use the <b>Target</b> property 
                <para>
            		<para class="sourcecode">
            		&lt;telerik:RadTreeView id="RadTreeView1" runat="server"&gt;<br/>
                    &lt;Nodes&gt;<br/>
                    &lt;telerik:RadTreeNode Text="News" NavigateUrl="~/News.aspx"
                    <strong>Target="_self"</strong> /&gt;<br/>
                    &lt;telerik:RadTreeNode Text="External URL" NavigateUrl="http://www.example.com"
                    <strong>Target="_blank"</strong> /&gt;<br/>
                    &lt;/Nodes&gt;<br/>
                    &lt;/telerik:RadTreeView&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.ImageUrl">
            <summary>
            	Gets or sets the URL to an image which is displayed next to the text of a node.
            </summary>
            <value>
            	The URL to the image to display for the node. The default value is empty
            	string which means by default no image is displayed.
            </value>
            <remarks>
            	Use the <b>ImageUrl</b> property to specify a custom image that will be
            	displayed before the text of the current node.
            </remarks>
            <example>
            	<para>
            		The following example demonstrates how to specify the image to display for
            		the node using the <b>ImageUrl</b> property.
            	</para>
                <para class="sourcecode">
               		 &lt;telerik:RadTreeView id="RadTreeView1" runat="server"&gt;<br/>
               		  &lt;Nodes&gt;<br/>
               		  &lt;telerik:RadTreeNode<strong>ImageUrl="~/Img/inbox.gif"</strong>
               		 Text="Index"&gt;&lt;/telerik:RadTreeNode&gt;<br/>
               		  &lt;telerik:RadTreeNode<strong>ImageUrl="~/Img/outbox.gif"</strong>
               		 Text="Outbox"&gt;&lt;/telerik:RadTreeNode&gt;<br/>
               		  &lt;telerik:RadTreeNode<strong>ImageUrl="~/Img/trash.gif"</strong>
               		 Text="Trash"&gt;&lt;/telerik:RadTreeNode&gt;<br/>
               		  &lt;telerik:RadTreeNode<strong>ImageUrl="~/Img/meetings.gif"</strong>
               		 Text="Meetings"&gt;&lt;/telerik:RadTreeNode&gt;<br/>
               		  &lt;/Nodes&gt;<br/>
               		 &lt;/telerik:RadTreeView&gt;
                </para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Category">
            <summary>
            Gets or sets the category of the node.
            </summary>
            <remarks>
            The <c>Category</c> property is similar to the <see cref="P:Telerik.Web.UI.RadTreeNode.Value">Value</see> property. You
            can use it to associate custom data with the node.
            </remarks>
            <example>
             This example illustrates how to use the Category property during the <see cref="E:Telerik.Web.UI.RadTreeView.NodeDataBound">NodeDataBound</see> event.
            </example>
            <code lang="CS">
            protected void RadTreeView1_NodeDataBound(object sender, RadTreeNodeEventArgs e)
            {
            	//"NodeCategory" is the database column which provides data for the Category property.
            	e.Node.Category = DataBinder.Eval(e.Node.DataItem, "NodeCategory").ToString();
            }
            </code>
            <code lang="VB">
            Protected Sub RadTreeView1_NodeDataBound(ByVal sender As Object, ByVal e As RadTreeNodeEventArgs) Handles RadTreeView1.NodeDataBound
            	' "NodeCategory" is the database column which provides data for the Category property.
            	e.Node.Category = DataBinder.Eval(e.Node.DataItem, "NodeCategory")
            End Sub
            </code>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.HoveredCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied to the node when the mouse hovers it.
            </summary>
            <remarks>
            By default the visual appearance of hovered nodes is defined in the skin CSS
            file. You can use the <strong>HoveredCssClass</strong> property to specify unique
            appearance for a node when it is hoevered.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.DisabledCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied to the node when it is disabled.
            </summary>
            <remarks>
            By default the visual appearance of disabled nodes is defined in the skin CSS
            file. You can use the <strong>DisabledCssClass</strong> property to specify unique
            appearance for a node when it is disabled.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.ContentCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied to the content
            wrapper of the node.
            </summary>
            <remarks>
            You can use the <strong>ContentCssClass</strong> property to specify unique
            appearance for a node content area and its children. Useful when using 
            CSS sprites.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.SelectedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when node is
            selected.
            </summary>
            <remarks>
            By default the visual appearance of selected nodes is defined in the skin CSS
            file. You can use the <strong>SelectedCssClass</strong> property to specify unique
            appearance for a node when it is selected.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.ExpandedImageUrl">
            <summary>
            Gets or sets a value specifying the URL of the image rendered when the node is expanded.
            </summary>
            <remarks>
            If the <c>ExpandedImageUrl</c> property is not set the <see cref="P:Telerik.Web.UI.RadTreeNode.ImageUrl">ImageUrl</see> property will be 
            used when the node is expanded.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.SelectedImageUrl">
            <summary>
            Gets or sets a value specifying the URL of the image rendered when the node is selected.
            </summary>
            <remarks>
            If the <c>SelectedImageUrl</c> property is not set the <see cref="P:Telerik.Web.UI.RadTreeNode.ImageUrl">ImageUrl</see> property will be 
            used when the node is selected.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.HoveredImageUrl">
            <summary>
            Gets or sets a value specifying the URL of the image rendered when the node is hovered with the mouse.
            </summary>
            <remarks>
            If the <c>HoveredImageUrl</c> property is not set the <see cref="P:Telerik.Web.UI.RadTreeNode.ImageUrl">ImageUrl</see> property will be 
            used when the node is hovered.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.DisabledImageUrl">
            <summary>
            Gets or sets a value specifying the URL of the image rendered when the node is disabled.
            </summary>
            <remarks>
            If the <c>DisabledImageUrl</c> property is not set the <see cref="P:Telerik.Web.UI.RadTreeNode.ImageUrl">ImageUrl</see> property will be 
            used when the node is disabled.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Level">
            <summary>
            Gets the level of the node.
            </summary>
            <value>
            An integer representing the level of the node. Root nodes are level 0 (zero).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.TreeView">
            <summary>
            Gets the <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> which the node is part of.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.PostBack">
            <summary>
            Gets or sets a value indicating whether clicking on the node will
            postback.
            </summary>
            <value>
            	<strong>True</strong> if the node should postback; otherwise
                <strong>false</strong>.
            </value>
            <remarks>
                If you subscribe to the <see cref="E:Telerik.Web.UI.RadTreeView.NodeClick">NodeClick</see> all nodes
                will postback. To turn off that behavior you can set the
                <strong>PostBack</strong> property to <strong>false</strong>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Expanded">
            <summary>Gets or sets a value indicating whether the node is expanded.</summary>
            <value>
            	<strong>true</strong> if the node is expanded; otherwise,
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Checked">
            <summary>
            Gets or sets a value indicating whether the node is checked or not.
            </summary>
            <value>
            <c>True</c> if the node is checked; otherwise <c>false</c>. The default value
            is <c>false</c>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.CheckState">
            <summary>
            Gets the checked state of the tree node
            </summary>
            <value>
            One of the <see cref="T:Telerik.Web.UI.TreeNodeCheckState">TreeNodeExpandMode</see> values.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Checkable">
            <summary>
            Gets or sets a value indicating whether the node is checkable. A checkbox control is rendered
            for checkable nodes.
            </summary>
            <remarks>
            If the <see cref="P:Telerik.Web.UI.RadTreeView.CheckBoxes">CheckBoxes</see> property set to <c>true</c>, RadTreeView automatically displays a checkbox next to each node. 
            You can set the <c>Checkable</c> property to <c>false</c> for nodes that do not need to display a checkbox.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Selected">
            <summary>
            Gets or sets a value indicating whether the node is selected.
            If the current node is selected. 
            </summary>
            <value>
            <c>True</c> if the node is selected; otherwise <c>false</c>. The default value is
            <c>false</c>.
            </value>
            <remarks>
            By default, only one node can be selected. You can enable multiple node selection by setting the
            <see cref="P:Telerik.Web.UI.RadTreeView.MultipleSelect">MultipleSelect</see> property of the 
            parent RadTreeView to <c>true</c>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.AllowDrag">
            <summary>
            Gets or sets a value indicating whether the node can be dragged and dropped.
            </summary>
            <value>
            <c>True</c> if the user is able drag and drop the node; otherwise <c>false</c>.
            The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.AllowDrop">
            <summary>
            Gets or sets a value indicating whether the use can drag and drop nodes over this
            node.
            </summary>
            <value>
            <c>True</c> if the user is able to drag and drop nodes over this node; otherwise
            <c>false</c>. The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.AllowEdit">
            <summary>
            Gets or sets a value indicating whether the use can edit the text of the node.
            </summary>
            <value>
            <c>True</c> if the node is editable; otherwise <c>false</c>. The default value
            is <c>true</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.ExpandMode">
            <summary>
            Gets or sets the expand behavior of the tree node.
            
            When set to ExpandMode.ServerSide the RadTreeView will fire a server event (NodeExpand) so you can populate the node on demand.
            </summary>
            <value>
            On of the <see cref="T:Telerik.Web.UI.TreeNodeExpandMode">TreeNodeExpandMode</see> values. The default value is
            <c>ClientSide</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.LongDesc">
            <summary>
            A Section 508 element
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Prev">
            <summary>
            Gets the previous sibling of the node.
            Gets the previous node sibling in the tree structure or returns null if this is the first node in the respective node group.
            </summary>
            <value>
            The previous sibling of the node or null (Nothing) if the node is first in its
            parent <see cref="T:Telerik.Web.UI.RadTreeNodeCollection">RadTreeNodeCollection</see>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.Next">
            <summary>
            Gets the next sibling of the node.
            </summary>
            <value>
            The next sibling of the node or null (Nothing) if the node is last in its
            parent <see cref="T:Telerik.Web.UI.RadTreeNodeCollection">RadTreeNodeCollection</see>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.NodeTemplate">
             <summary>Gets or sets the template for displaying the node.</summary>
             <value>
             	<para>
            		An object implementing the <strong>ITemplate</strong> interface. The default value is a null reference 
            		(<b>Nothing</b> in Visual Basic), which indicates that this property is not set.
            		</para>
             	<para>
                     To specify common display for all nodes use the <see cref="P:Telerik.Web.UI.RadTreeView.NodeTemplate"/> property of 
            			the <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
                 </para>
             </value>
             <example>
             	<para>The following template demonstrates how to add a Calendar control in certain
                 node.</para>
             	<para>ASPX:</para>
            		<para>
            &lt;telerik: RadTreeView runat="server" ID="RadTreeView1"&gt;
                &lt;Nodes&gt;
                    &lt;telerik:RadTreeNode Text="Root Node" Expanded="True" &gt;
                        &lt;Nodes&gt;
                            &lt;telerik:RadTreeNode&gt;
                                &lt;NodeTemplate&gt;
                                    &lt;asp:Calendar ID="Calendar1" runat="server"&gt;&lt;/asp:Calendar&gt;
                                &lt;/NodeTemplate&gt;
                            &lt;/telerik:RadTreeNode&gt;
                        &lt;/Nodes&gt;
                    &lt;/telerik:RadTreeNode&gt;
                &lt;/Nodes&gt;
            &lt;/telerik:RadTreeView&gt;
            		</para>
             </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.FullPath">
            <summary>
            Gets the full path (location) of the node.
            </summary>
            <value>
            A slash delimited path of the node. The path is constructed based on the <see cref="P:Telerik.Web.UI.RadTreeNode.Text">Text</see> property
            of the node and its parents. For example if the Text of the node it "Houston", its parent node is "Texas" and its parent (root) 
            is "U.S.A", FullPath will return "U.S.A/Texas/Houston"
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.ParentNode">
            <summary>
            Gets the parent node of the current node.
            </summary>
            <value>
            The parent node. If the the node is a root node null (Nothing) is returned.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.ContextMenuID">
            <summary>
            	Gets or sets a value indicating the ID of the <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu"/> displayed for the current node.
            </summary>
            <value>
            	A string representing the ID of the context menu associated with the current node. The default value is empty string.
            </value>
            <remarks>
            	If the <b>ContextMenuID</b> property is not set the first context menu from the <see cref="P:Telerik.Web.UI.RadTreeView.ContextMenus"/> collection
            	will be used.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNode.EnableContextMenu">
            <summary>
            Gets or sets a value indicating whether a context menu should be displayed for the current node.
            </summary>
            <value>
            	<c>True</c> if a context menu should be displayed for the current node; otherwise <c>false</c>. The default
            	value is <c>false</c>.
            </value>
            <remarks>
            	Use the <b>EnableContextMenu</b> property to disable the context menu for particular nodes.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeNodeCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> objects in a
                <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
            </summary>
            <remarks>
            	The <strong>RadTreeNodeCollection</strong> class represents a collection of
                <strong>RadTreeNode</strong> objects.
            	<list type="bullet">
            		<item>
                        Use the <see cref="P:Telerik.Web.UI.RadTreeNodeCollection.Item(System.Int32)">indexer</see> to programmatically retrieve a
                        single RadTreeNode from the collection, using array notation.
                    </item>
            		<item>
                        Use the <strong>Count</strong> property to determine the total
                        number of menu items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadTreeNodeCollection.Add(Telerik.Web.UI.RadTreeNode)">Add</see> method to add nodes in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadTreeNodeCollection.Remove(Telerik.Web.UI.RadTreeNode)">Remove</see> method to remove nodes from the
                        collection.
                    </item>
            	</list>
            </remarks>
            <moduleiscollection/>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/> class.
            </summary>
            <param name="parent">The owner of the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.Add(Telerik.Web.UI.RadTreeNode)">
            <summary>
            	Appends the specified <see cref="T:Telerik.Web.UI.RadTreeNode"/> object to the end of the current 
            	<see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/>.
            </summary>
            <param name="node">
            	The <see cref="T:Telerik.Web.UI.RadTreeNode"/> to append to the end of the current 
            	<see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/>.
            </param>
            <example>
            	The following example demonstrates how to programmatically add nodes in a <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
            	<code lang="CS">
            		RadTreeNode newsNode = new RadTreeNode("News");
            		RadTreeView1.Nodes.Add(newsNode);
                </code>
            	<code lang="VB">
            		Dim newsNode As RadTreeNode = New RadTreeNode("News")
            		RadTreeView1.Nodes.Add(newsNode)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.Remove(Telerik.Web.UI.RadTreeNode)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadTreeNode"/> object from the current
            	<see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/>.
            </summary>
            <param name="node">
            	The <see cref="T:Telerik.Web.UI.RadTreeNode"/> object to remove.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Telerik.Web.UI.RadTreeNode"/> object at the specified index 
            from the current <see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/>.
            </summary>
            <param name="index">
            	The zero-based index of the node to remove.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.Contains(Telerik.Web.UI.RadTreeNode)">
            <summary>
            	Determines whether the specified <see cref="T:Telerik.Web.UI.RadTreeNode"/> object is in the current 
            	<see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/>.
            </summary>
            <param name="node">
            	The <see cref="T:Telerik.Web.UI.RadTreeNode"/> object to find.
            </param>
            <returns>
            	<c>true</c> if the current collection contains the specified <see cref="T:Telerik.Web.UI.RadTreeNode"/> object; 
            	otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.CopyTo(Telerik.Web.UI.RadTreeNode[],System.Int32)">
            <summary>
            	Copies the <see cref="T:Telerik.Web.UI.RadTreeNode"/> instances stored in the current
            	<see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/> object to an System.Array object, beginning at the specified 
            	index location in the System.Array. 
            </summary>
            <param name="array">The System.Array to copy the <see cref="T:Telerik.Web.UI.RadTreeNode"/> instances to.</param>
            <param name="index">The zero-based relative index in array where copying begins.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Web.UI.RadTreeNode})">
            <summary>Appends the specified array of <see cref="T:Telerik.Web.UI.RadTreeNode"/> objects to the end of the 
            current <see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/>.
            </summary>
            <example>
                The following example demonstrates how to use the <strong>AddRange</strong> method
                to add multiple nodes in a single step. 
                <code lang="CS">
            		RadTreeNode[] nodes = new RadTreeNode[] { new RadTreeNode("First"), new RadTreeNode("Second"), new RadTreeNode("Third") };
            		RadTreeView1.Nodes.AddRange(nodes);
                </code>
            	<code lang="VB">
                    Dim nodes() As RadTreeNode = {New RadTreeNode("First"), New RadTreeNode("Second"), New RadTreeNode("Third")}
                    RadTreeView1.Nodes.AddRange(nodes)
                </code>
            </example>
            <param name="nodes">
                The array of <see cref="T:Telerik.Web.UI.RadTreeNode"/> to append to the end of the current 
            	<see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.IndexOf(Telerik.Web.UI.RadTreeNode)">
            <summary>
            Determines the index of the specified <see cref="T:Telerik.Web.UI.RadTreeNode"/> object in the collection.
            </summary>
            <param name="node">
            	The <see cref="T:Telerik.Web.UI.RadTreeNode"/> to locate.
            </param>
            <returns>
            	The zero-based index of tab within the current <see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/>, 
            	if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.Insert(System.Int32,Telerik.Web.UI.RadTreeNode)">
            <summary>
            	Inserts the specified <see cref="T:Telerik.Web.UI.RadTreeNode"/> object in the current 
            	<see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/> at the specified index location.
            </summary>
            <param name="index">The zero-based index location at which to insert the <see cref="T:Telerik.Web.UI.RadTreeNode"/>.</param>
            <param name="node">The <see cref="T:Telerik.Web.UI.RadTreeNode"/> to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.FindNodeByText(System.String)">
            <summary>
            Searches all nodes for a <cee cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</cee> with a <see cref="P:Telerik.Web.UI.RadTreeNode.Text">Text</see> property
            equal to the specified text.
            </summary>
            <param name="text">The text to search for</param>
            <returns>A <c>RadTreeNode</c> whose <c>Text</c> property equals to the specified argument. Null (Nothing) is returned when no matching node is found.</returns>
            <remarks>This method is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.FindNodeByText(System.String,System.Boolean)">
            <summary>
            Searches all nodes for a <cee cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</cee> with a <see cref="P:Telerik.Web.UI.RadTreeNode.Text">Text</see> property
            equal to the specified text.
            </summary>
            <param name="text">The text to search for</param>
            <returns>A <c>RadTreeNode</c> whose <c>Text</c> property equals to the specified argument. Null (Nothing) is returned when no matching node is found.</returns>
            <remarks>This method is not recursive.</remarks> 
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.FindNodeByValue(System.String)">
            <summary>
            Searches all nodes for a <cee cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</cee> with a <see cref="P:Telerik.Web.UI.RadTreeNode.Value">Value</see> property
            equal to the specified value.
            </summary>
            <param name="value">The value to search for</param>
            <returns>A <c>RadTreeNode</c> whose <c>Value</c> property equals to the specified argument. Null (Nothing) is returned when no matching node is found.</returns>
            <remarks>This method is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.FindNodeByValue(System.String,System.Boolean)">
            <summary>
            Searches all nodes for a <cee cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</cee> with a <see cref="P:Telerik.Web.UI.RadTreeNode.Value">Value</see> property
            equal to the specified value.
            </summary>
            <param name="value">The value to search for</param>
            <returns>A <c>RadTreeNode</c> whose <c>Value</c> property equals to the specified argument. Null (Nothing) is returned when no matching node is found.</returns>
            <remarks>This method is not recursive.</remarks>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.FindNodeByAttribute(System.String,System.String)">
            <summary>
            Searches the nodes in the collection for a <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> which contains the specified attribute and attribute value.
            </summary>
            <param name="attributeName">The name of the target attribute.</param>
            <param name="attributeValue">The value of the target attribute</param>
            <returns>The <c>RadTreeNode</c> that matches the specified arguments. Null (Nothing) is returned if no node is found.</returns>
            <remarks>This method is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.FindNode(System.Predicate{Telerik.Web.UI.RadTreeNode})">
            <summary>
            Returns  the first <strong>RadTreeNode</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindNode</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadTreeView1.FindNode(NodeWithEqualsTextAndValue);
            }
            private static bool NodeWithEqualsTextAndValue(RadTreeNode node)
            {
                if (node.Text == node.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadTreeView1.FindNode(NodeWithEqualsTextAndValue)
            End Sub
            Private Shared Function NodeWithEqualsTextAndValue(ByVal node As RadTreeNode) As Boolean
                If node.Text = node.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
            </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.SetOwner(Telerik.Web.UI.ControlItem)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeCollection.AddItemToParentControls(System.Int32,Telerik.Web.UI.ControlItem)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadTreeNode"/>object at the specified index in 
            	the current <see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/>.
            </summary>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadTreeNode"/> to retrieve.
            </param>
            <returns>
            	The <see cref="T:Telerik.Web.UI.RadTreeNode"/> at the specified index in the 
            	current <see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/>.
            </returns>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeView">
            <summary>A hierarchical control used to display a tree of nodes in a web page.</summary>
            <remarks>
            	<para>
                    The <b>RadTreeView</b> control is used to display a list of nodes in a Web Forms
                    page. The <b>RadTreeView</b> control supports the following features:
                </para>
            	<list type="bullet">
            		<item>
            			Danodeinding that allows the control to be populated from various
            			datasources.
            		</item>
            		<item>
            			Programmatic access to the <strong>RadTreeView</strong> object model
            			which allows dynamic creation of treeviews, populating with nodes and customizing the behavior 
            			by various properties.
            		</item>
            		<item>
            			Customizable appearance through built-in or user-defined skins.
            		</item>
            	</list>
            	<h3>nodes</h3>
            	<para>
                    The <strong>RadTreeView</strong> control is made up of tree of nodes represented
                    by <see cref="T:Telerik.Web.UI.RadTreeNode"/> objects. Nodes at the top level (level 0) are
                    called root nodes. An node that has a parent node is called a child node. All root
                    nodes are stored in the <see cref="P:Telerik.Web.UI.RadTreeView.Nodes"/> property of the RadTreeView control. Child nodes are
                    stored in the <see cref="P:Telerik.Web.UI.RadTreeNode.Nodes"/> property of their parent <see cref="T:Telerik.Web.UI.RadTreeNode"/>.
                </para>
            	<para>
                    Each node has a <see cref="P:Telerik.Web.UI.RadTreeNode.Text"/> and a <see cref="P:Telerik.Web.UI.RadTreeNode.Value"/> property. 
            		The value of the <see cref="P:Telerik.Web.UI.RadTreeNode.Text"/> property is displayed in the <b>RadTreeView</b> control, 
            		while the <see cref="P:Telerik.Web.UI.RadTreeNode.Value"/> property is used to store any additional data about the node, 
            		such as data passed to the postback event associated with the node. When clicked, a node can
                    navigate to another Web page indicated by the <see cref="P:Telerik.Web.UI.RadTreeNode.NavigateUrl"/> property.
                </para>
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.#ctor">
             <summary>
            		Initializes a new instance of the RadTreeView class.
             </summary>
             <remarks>
            		Use this constructor to create and initialize a new instance of the RadTreeView
            		control.
             </remarks>
             <example>
                 The following example demonstrates how to programmatically create a RadTreeView
                 control. 
                 <code lang="CS">
            			void Page_Load(object sender, EventArgs e)
            			{
            				RadTreeView RadTreeView1 = new RadTreeView();
            				RadTreeView1.ID = "RadTreeView1";
             
            				if (!Page.IsPostBack)
            				{
            					//RadTreeView persist its nodes in ViewState (if EnableViewState is true). 
            					//Hence nodes should be created only on initial load.
             
            					RadTreeNode sportNode = new RadTreeNode("Sport");
            					RadTreeView1.Nodes.Add(sportNode);
            			     
            					RadTreeNode newsNode = new RadTreeNode("News");
            					RadTreeView1.Nodes.Add(newsNode);
            				}
             
            				PlaceHolder1.Controls.Add(RadTreeView1);
            			}
                 </code>
             	<code lang="VB">
            			Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
            				Dim RadTreeView1 As RadTreeView = New RadTreeView()
            				RadTreeView1.ID = "RadTreeView1"
            				
            				If Not Page.IsPostBack Then
            					'RadTreeView persist its nodes in ViewState (if EnableViewState is true).				
             				'Hence nodes should be created only on initial load.
             
            					Dim sportNode As RadTreeNode = New RadTreeNode("Sport")
            					RadTreeView1.Nodes.Add(sportNode)
            
            					Dim newsNode As RadTreeNode = New RadTreeNode("News")
            					RadTreeView1.Nodes.Add(newsNode)
            				End If
             
            				PlaceHolder1.Controls.Add(RadTreeView1)
            			 End Sub
                 </code>
             </example>
        </member>
        <member name="F:Telerik.Web.UI.RadTreeView._loadingStatusTemplate">
            <summary>
            	Gets or sets the template displayed when child nodes are being loaded.
            </summary>
            <example>
            	The following example demonstrates how to use the LoadingStatusTemplate to display an image.
            	<para>
            	&lt;telerik:RadTreeView runat="server" ID="RadTreeView1"&gt;
            		&lt;LoadingStatusTemplate&gt;
            			&lt;asp:Image runat="server" ID="Image1" ImageUrl="~/Img/loading.gif" /&gt;
            		&lt;/LoadingStatusTemplate&gt;
            	&lt;/telerik:RadTreeView&gt;	
            	</para>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.GetAllNodes">
            <summary>
            Gets a linear list of all nodes in the <strong>RadTreeView</strong> control.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IList`1">IList&lt;RadTreeNode&gt;</see> containing all nodes (from all hierarchy levels).</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.FindNodeByText(System.String)">
            <summary>
            Searches all nodes for a <cee cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</cee> with a <see cref="P:Telerik.Web.UI.RadTreeNode.Text">Text</see> property
            equal to the specified text.
            </summary>
            <param name="text">The text to search for</param>
            <returns>A <c>RadTreeNode</c> whose <c>Text</c> property equals to the specified argument. Null (Nothing) is returned when no matching node is found.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.FindNodeByText(System.String,System.Boolean)">
            <summary>
            Searches all nodes for a <cee cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</cee> with a <see cref="P:Telerik.Web.UI.RadTreeNode.Text">Text</see> property
            equal to the specified text.
            </summary>
            <param name="text">The text to search for</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
            <returns>A <c>RadTreeNode</c> whose <c>Text</c> property equals to the specified argument. Null (Nothing) is returned when no matching node is found.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.FindNodeByValue(System.String)">
            <summary>
            Searches all nodes for a <cee cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</cee> with a <see cref="P:Telerik.Web.UI.RadTreeNode.Value">Value</see> property
            equal to the specified value.
            </summary>
            <param name="value">The value to search for</param>  
            <returns>A <c>RadTreeNode</c> whose <c>Value</c> property equals to the specified argument. Null (Nothing) is returned when no matching node is found.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.FindNodeByValue(System.String,System.Boolean)">
            <summary>
            Searches all nodes for a <cee cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</cee> with a <see cref="P:Telerik.Web.UI.RadTreeNode.Value">Value</see> property
            equal to the specified value.
            </summary>
            <param name="value">The value to search for</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
            <returns>A <c>RadTreeNode</c> whose <c>Value</c> property equals to the specified argument. Null (Nothing) is returned when no matching node is found.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.FindNodeByUrl(System.String)">
            <summary>
            Searches all nodes for a <cee cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</cee> with a <see cref="P:Telerik.Web.UI.RadTreeNode.NavigateUrl">NavigateUrl</see> property
            equal to the specified URL.
            </summary>
            <param name="url">The URL to search for</param>
            <returns>A <c>RadTreeNode</c> whose <c>NavigateUrl</c> property equals to the specified argument. Null (Nothing) is returned when no matching node is found.</returns>
            <remarks>
            The ResolveUrl method is used to resolve NavigateUrl property before comparing it to the specified URL.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.FindNode(System.Predicate{Telerik.Web.UI.RadTreeNode})">
            <summary>
            Returns  the first <strong>RadTreeNode</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindNode</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadTreeView1.FindNode(NodeWithEqualsTextAndValue);
            }
            private static bool NodeWithEqualsTextAndValue(RadTreeNode node)
            {
                if (node.Text == node.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadTreeView1.FindNode(NodeWithEqualsTextAndValue)
            End Sub
            Private Shared Function NodeWithEqualsTextAndValue(ByVal node As RadTreeNode) As Boolean
                If node.Text = node.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
            </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.LoadXmlString(System.String)">
            <summary>
            Populates the control from the specified XML string.
            </summary>
            <param name="xml">The XML string to populate from.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.LoadContentFile(System.String)">
            <summary>
            Populates the control from the specified XML file.
            </summary>
            <param name="fileName">The name of the XML file.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.FindNodeByAttribute(System.String,System.String)">
            <summary>
            Searches all nodes for a <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> which contains the specified attribute and attribute value.
            </summary>
            <param name="attributeName">The name of the target attribute.</param>
            <param name="attributeValue">The value of the target attribute</param>
            <returns>The <c>RadTreeNode</c> that matches the specified arguments. Null (Nothing) is returned if no node is found.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.ClearSelectedNodes">
            <summary>
            This methods clears the selected nodes of the current RadTreeView instance. Useful when you need to clear node selection after postback.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.ClearCheckedNodes">
            <summary>
            This methods clears the checked nodes of the current RadTreeView instance. Useful when you need to clear check selection after postback.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.CheckAllNodes">
            <summary>
            Checks all nodes of the current RadTreeView object.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.ExpandAllNodes">
            <summary>
            Expands all nodes in the tree.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeView.CollapseAllNodes">
            <summary>
            Collapses all nodes in the tree.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.ClientChanges">
             <summary>
            		Gets a list of all client-side changes (adding a node, removing a node, changing a node's property) which have occurred.
             </summary>
             <value>
            		A list of <see cref="T:Telerik.Web.UI.ClientOperation`1"/> objects which represent all client-side changes the user has performed. 
            		By default the ClientChanges property returns empty list. Client-changes are recorded if and only if the client-side
            		methods trackChanges()/commitChanges() have been invoked.
             </value>
             <remarks>
            		You can use the ClientChanges property to respond to client-side modifications such as
            		<list type="bullet">
            			<item>adding a new item</item>
            			<item>removing existing item</item>
            			<item>clearing the children of an item or the control itself</item>
            			<item>changing a property of the item</item>
            		</list>
            		The ClientChanges property is available in the first postback (ajax) request after the client-side modifications
            		have taken place. After this moment the property will return empty list.
             </remarks>
             <example>
            		The following example demonstrates how to use the ClientChanges property
            		<code lang="CS">
            		foreach (ClientOperation&lt;RadTreeNode&gt; operation in RadTreeView1.ClientChanges)
            		{
            			RadTreeNode node = operation.Item;
            
            			switch (operation.Type)
            			{
            				case ClientOperationType.Insert:
            					//A node has been inserted - operation.Item contains the inserted node
            				break;
            				case ClientOperationType.Remove:
            					//A node has been inserted - operation.Item contains the removed node. 
                             //Keep in mind the node has been removed from the treeview.
            				break;
            				case ClientOperationType.Update:
            					UpdateClientOperation&lt;RadTreeNode&gt; update = operation as UpdateClientOperation&lt;RadTreeNode&gt;
            					//The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            				break;
            				case ClientOperationType.Clear:
            					//All children of have been removed - operation.Item contains the parent node whose children have been removed. If operation.Item is null then the root nodes have been removed.
            				break;
            			}
            		}
            		</code>
            		<code lang="VB">
            			For Each operation As ClientOperation(Of RadTreeNode) In RadTreeView1.ClientChanges
            				Dim node As RadTreeNode = operation.Item
            				Select Case operation.Type
            					Case ClientOperationType.Insert
            						'A node has been inserted - operation.Item contains the inserted node
            					Exit Select
            					Case ClientOperationType.Remove
            						'A node has been inserted - operation.Item contains the removed node. 
            						'Keep in mind the node has been removed from the treeview.
            					Exit Select
            					Case ClientOperationType.Update
            						Dim update As UpdateClientOperation(Of RadTreeNode) = TryCast(operation, UpdateClientOperation(Of RadTreeNode))
            						'The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            					Exit Select
            					Case ClientOperationType.Clear
            						'All children of have been removed - operation.Item contains the parent node whose children have been removed. If operation.Item is Nothing then the root nodes have been removed.
            					Exist Select
            				End Select
            			Next
            		</code>
             </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.CheckedNodes">
            <summary>
            Gets a collection of RadTreeNode objects that represent the nodes in the control
            that display a selected check box.
            </summary>
            <returns>An IList&lt;RadTreeNode&gt; containing the checked nodes.</returns>
            <remarks>
            	<para>
                    When check boxes are displayed in the RadTreeView control (by setting the
                    <see cref="P:Telerik.Web.UI.RadTreeView.CheckBoxes">CheckBoxes</see> property to true), use the CheckedNodes
                    property to determine which nodes display a selected check box. This collection
                    is commonly used to iterate through all the nodes that have a selected check
                    box in the tree.
                </para>
            	<para>
                The CheckedNodes collection is populated using a depth-first traversal of the tree
                structure: each parent node is processed down to its child nodes before the next
                parent node is populated.</para>
            </remarks>
            <example>
            	<code lang="VB" title="[New Example]">
            Protected Sub ShowCheckedNodes(ByVal sender As Object, ByVal e As System.EventArgs)
                Dim message As String = String.Empty
                Dim node As RadTreeNode
                For Each node In RadTree1.CheckedNodes
                    message += node.FullPath
                Next node
                nodes.Text = message
            End Sub
                </code>
            	<code lang="CS" title="[New Example]">
            protected void ShowCheckedNodes(object sender, System.EventArgs e)
            {
                string message = string.Empty;
                foreach (RadTreeNode node in RadTree1.CheckedNodes)
                {
                    message += node.FullPath + "&lt;br/&gt;";
                }
                nodes.Text = message;        
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.SelectedValue">
            <summary>
            Gets the <see cref="P:Telerik.Web.UI.RadTreeNode.Value">Value</see> of the selected node.
            </summary>
            <returns>
            The <see cref="P:Telerik.Web.UI.RadTreeNode.Value">Value</see> of the selected node. If there is no selected node returns empty string.
            </returns>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.SelectedNodes">
            <summary>
            Gets a collection of RadTreeNode objects that represent the nodes in the control
            that are currently selected.
            </summary>
            <returns>An IList&lt;RadTreeNode&gt; containing the selected nodes.</returns>
            <remarks>
            	<para>This collection is commonly used to iterate through all the nodes that have
                been selected in the tree.</para>
            	<para>The SelectedNodes collection is populated using a
                depth-first traversal of the tree structure: each parent node is processed down to
                its child nodes before the next parent node is populated.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.SelectedNode">
            <summary>
            Gets a RadTreeNode object that represents the selected node in the RadTreeView
            control.
            </summary>
            <remarks>
            	<para>When a node is in selection mode, the user can select a node by clicking on
                the text in the node. Use the SelectedNode property to determine which node is
                selected in the TreeView control.</para>
            	<para>
                A node cannot be selected when the TreeView control displays hyperlinks. When
                hyperlinks are displayed, the SelectedNode property always returns a null reference
                (Nothing in Visual Basic).</para>
            	<para>
                    When the user selects a different node in the RadTreeView control by clicking
                    the text in the new node, the <see cref="E:Telerik.Web.UI.RadTreeView.NodeClick">NodeClick</see> event is
                    raised, by default. If you set the
                    <see cref="P:Telerik.Web.UI.RadTreeView.MultipleSelect">MultipleSelect</see> property of the treeview to
                    true, end-users can select multiple nodes by holding the Ctrl / Shift keys
                    while selecting.
                </para>
            </remarks>
            <example>
            	<code lang="VB" title="[New Example]">
            &lt;radT:RadTreeView
                ID="RadTree1"
                runat="server"
                OnNodeClick="NodeClick"
            /&gt;
             
            Protected Sub NodeClick(ByVal sender As Object, ByVal NodeEventArgs As RadTreeNodeEventArgs)
                info.Text = String.Empty
                Dim NodeClicked As RadTreeNode = NodeEventArgs.NodeClicked
                info.Text = NodeClicked.Text
            End Sub
                </code>
            	<code lang="CS" title="[New Example]">
            &lt;radT:RadTreeView
                ID="RadTree1"
                runat="server"
                OnNodeClick="NodeClick"
            /&gt;
             
            protected void NodeClick(object sender, RadTreeNodeEventArgs NodeEventArgs)
            {
                info.Text = string.Empty;
                RadTreeNode NodeClicked = NodeEventArgs.NodeClicked;
                info.Text = NodeClicked.Text;
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.IsEmpty">
            <summary>Gets a value indicating whether the RadTreeView control has no nodes.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.NodeTemplate">
            <summary>Gets or sets the template for displaying all node in the current RadTreeView.</summary>
            <value>
            	<para>
            	An object implementing the <strong>ITemplate</strong> interface. The default value is a null reference 
            	(<b>Nothing</b> in Visual Basic), which indicates that this property is not set.
            	</para>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.LoadingMessage">
            <summary>
            Gets or sets the loading message that is displayed when child nodes are retrieved
            on AJAX calls.
            </summary>
            <remarks>
            This property can be used for localization purposes (e.g. "Loading..." in
            different languages).
            </remarks>
            <example>
            	<code lang="VB" title="[New Example]">
            Protected Sub LoadingMessagePositionChanged(ByVal sender As Object, ByVal e As System.EventArgs)
                Select Case LoadingMessagePos.SelectedItem.Value
                    Case "Before"
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.BeforeNodeText
                        RadTree1.LoadingMessage = "(loading ..)"
                    Case "After"
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.AfterNodeText
                        RadTree1.LoadingMessage = "(loading ...)"
                    Case "Below"
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.BelowNodeText
                        RadTree1.LoadingMessage = "(loading ...)"
                    Case "None"
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.None
                End Select
            End Sub
                </code>
            	<code lang="CS" title="[New Example]">
            protected void LoadingMessagePositionChanged(object sender, System.EventArgs e) 
            {
                switch (LoadingMessagePos.SelectedItem.Value)
                {
                    case "Before" : 
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.BeforeNodeText; 
                        RadTree1.LoadingMessage = "(loading ..)";
                        break;
                    case "After" :    
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.AfterNodeText;
                        RadTree1.LoadingMessage = "(loading ...)";
                        break;
                    case "Below" :    
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.BelowNodeText; 
                        RadTree1.LoadingMessage = "(loading ...)";
                        break;
                    case "None" :                        
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.None; 
                        break;
                }
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.Nodes">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/> object that contains the root nodes of the current RadTreeView control.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadTreeNodeCollection"/> that contains the root nodes of the current RadTreeView control. By default
            	the collection is empty (RadTreeView has no children).
            </value>
            <remarks>
            	Use the <b>nodes</b> property to access the root nodes of the RadTreeView control. You can also use the <b>nodes</b> property to
            	manage the root nodes - you can add, remove or modify nodes.
            </remarks>
            <example>
                The following example demonstrates how to programmatically modify the properties of a root node.
                <code lang="CS">
            		RadTreeView1.Nodes[0].Text = "Example";
            		RadTreeView1.Nodes[0].NavigateUrl = "http://www.example.com";
                </code>
            	<code lang="VB">
            		RadTreeView1.Nodes(0).Text = "Example"
            		RadTreeView1.Nodes(0).NavigateUrl = "http://www.example.com"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.LoadingStatusPosition">
            <summary>
            Gets or sets the position of the loading message when child nodes are retrieved
            on AJAX calls.
            </summary>
            <example>
            	<code lang="VB" title="[New Example]">
            Protected Sub LoadingMessagePositionChanged(ByVal sender As Object, ByVal e As System.EventArgs)
                Select Case LoadingMessagePos.SelectedItem.Value
                    Case "Before"
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.BeforeNodeText
                        RadTree1.LoadingMessage = "(loading ..)"
                    Case "After"
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.AfterNodeText
                        RadTree1.LoadingMessage = "(loading ...)"
                    Case "Below"
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.BelowNodeText
                        RadTree1.LoadingMessage = "(loading ...)"
                    Case "None"
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.None
                End Select
            End Sub
                </code>
            	<code lang="CS" title="[New Example]">
            protected void LoadingMessagePositionChanged(object sender, System.EventArgs e) 
            {
                switch (LoadingMessagePos.SelectedItem.Value)
                {
                    case "Before" : 
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.BeforeNodeText; 
            			RadTree1.LoadingMessage = "(loading ...)";
                        break;
                    case "After" :    
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.AfterNodeText;
            			RadTree1.LoadingMessage = "(loading ...)";
            			break;
                    case "Below" :    
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.BelowNodeText; 
            			RadTree1.LoadingMessage = "(loading ...)";
                        break;
                    case "None" :                        
                        RadTree1.LoadingStatusPosition = TreeViewLoadingStatusPosition.None; 
                        break;
                }
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.AllowNodeEditing">
            <summary>
            Gets a value indicating whether the text of the tree nodes are edinodele in the
            browser.
            </summary>
            <remarks>
            	<para>End-users can edit the text of tree-nodes by pressing F2 when the node is
                selected or by clicking on a node that is already selected (slow double
                click).</para>
            	<para>
                    You can disable / enable node editing for specific tree nodes by setting the
                    <see cref="P:Telerik.Web.UI.RadTreeNode.AllowEdit">AllowEdit</see> property of the specific
                    RadTreeNode.
                </para>
            	<para>
            		<br/>
                    After node editing, RadTreeView fires the <see cref="E:Telerik.Web.UI.RadTreeView.NodeEdit">NodeEdit</see>
                    event and you can change the text of the node - the RadTreeNode instance is
                    contained in the NodeEdited property of the event arguments and the new text is
                    in the NewText property of the event arguments.
                </para>
            </remarks>
            <example>
            	<code lang="VB" title="[New Example]">
            &lt;radT:RadTreeView
                ID="RadTree1"
                Runat="server"
                AllowNodeEditing="True"
                OnNodeEdit="HandleNodeEdit"
            /&gt;
             
            Protected Sub HandleNodeEdit(ByVal sender As Object, ByVal NodeEvents As RadTreeNodeEventArgs)
                Dim nodeEdited As RadTreeNode = NodeEvents.NodeEdited
                Dim newText As String = NodeEvents.NewText
             
                nodeEdited.Text = newText
            End Sub
                </code>
            	<code lang="CS" title="[New Example]">
            &lt;radT:RadTreeView
                ID="RadTree1"
                Runat="server"
                AllowNodeEditing="True"
                OnNodeEdit="HandleNodeEdit"
            /&gt;
             
            protected void HandleNodeEdit(object sender, RadTreeNodeEventArgs NodeEvents)
            {            
                RadTreeNode nodeEdited = NodeEvents.NodeEdited;
                string newText = NodeEvents.NewText;
             
                nodeEdited.Text = newText;
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.ShowLineImages">
            <summary>
            Gets a value indicating whether the dotted lines indenting the nodes should be
            displayed or not.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.SingleExpandPath">
            <summary>
            Gets a value indicating whether only the current branch of the treeview is
            expanded.
            </summary>
            <remarks>
            The property closes all nodes that are not parents of the last expanded node.
            This property is only effective on the client browser - in postback modes you need to
            handle the logic yourself.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.CheckBoxes">
            <summary>
            When set to true displays a checkbox next to each treenode.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.CheckChildNodes">
            <summary>
            Gets or sets a value indicating whether checking (unchecking) a node will check (uncheck) its child nodes.
            </summary>
            <value><c>true</c> if child nodes will be checked (checked) when the user checks (unchecks) their parent node; 
            otherwise, <c>false</c>. The default value is <c>false</c>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.TriStateCheckBoxes">
            <summary>
            Gets or sets a value indicating whether RadTreeView should display tri-state checkboxes.
            </summary>
            <value>
            	<c>true</c> if tri-state checkboxes should be displayed; otherwise, <c>false</c>. The default value is
            	<c>false</c>.
            </value>
            <remarks>
            	Enabling three state checkbox support requires the <see cref="P:Telerik.Web.UI.RadTreeView.CheckBoxes"/> property to be set to <c>true</c>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.MultipleSelect">
            <summary>
            When set to true the treeview allows multiple node selection (by holding down ctrl key while selecting nodes)
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.EnableDragAndDrop">
            <summary>
            When set to true enables drag-and-drop functionality
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.EnableDragAndDropBetweenNodes">
            <summary>
            When set to true enables drag-and-drop visual clue (underline) between nodes while draggin
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.ContextMenus">
            <summary>
            	Gets a collection of <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> objects
            	that represent the context menus of a <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control.
            </summary>
            <value>A <see cref="T:Telerik.Web.UI.RadTreeViewContextMenuCollection">RadTreeViewContextMenuCollection</see> that
            	contains all the context menus of the <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control.
            </value>
            <remarks>
            	<para>By default, if the <strong>ContextMenus</strong> collection contains <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see>s,
            	the first one is displayed on the right-click of each <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see>. To disable a context menu for a
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see>, set its <see cref="P:Telerik.Web.UI.RadTreeNode.EnableContextMenu">EnableContextMenu</see>
            	property to false. To specify a different context menu for a <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see>, use its
            	<see cref="P:Telerik.Web.UI.RadTreeNode.ContextMenuID">ContextMenuID</see> property.
            </para>
            </remarks>
            <example>The following code example demonstrates how to populate the <see cref="P:Telerik.Web.UI.RadTreeView.ContextMenus">ContextMenus</see>
            collection declaratively.
            <code lang="html">
            	&lt;%@ Page Language="C#" AutoEventWireup="true" %&gt;
            	&lt;%@ Register TagPrefix="Telerik" Namespace="Telerik.Web.UI" Assembly="Telerik.Web.UI" %&gt;
            	
            	&lt;html&gt;
            	&lt;body&gt;
            	&lt;form id="form1" runat="server"&gt;
            	&lt;Telerik:RadScriptManager ID="RadScriptManager1" runat="server"&gt;&lt;/Telerik:RadScriptManager&gt;
            	&lt;br /&gt;
            	&lt;Telerik:RadTreeView ID="RadTreeView1" runat="server"&gt;
            		&lt;ContextMenus&gt;
            			&lt;Telerik:RadTreeViewContextMenu ID="ContextMenu1"&gt;
            				&lt;nodes&gt;
            					&lt;Telerik:RadTreeNode Text="Menu1Item1"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;Telerik:RadTreeNode Text="Menu1Item2"&gt;&lt;/Telerik:RadTreeNode&gt;
            				&lt;/nodes&gt;
            			&lt;/Telerik:RadTreeViewContextMenu&gt;
            			&lt;Telerik:RadTreeViewContextMenu Skin="Outlook" ID="ContextMenu2"&gt;
            				&lt;nodes&gt;
            					&lt;Telerik:RadTreeNode Text="Menu2Item1"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;Telerik:RadTreeNode Text="Menu2Item2"&gt;&lt;/Telerik:RadTreeNode&gt;
            				&lt;/nodes&gt;
            			&lt;/Telerik:RadTreeViewContextMenu&gt;
            		&lt;/ContextMenus&gt;
            		&lt;Nodes&gt;
            			&lt;Telerik:RadTreeNode Text="Node1" ContextMenuID="ContextMenu2"&gt;
            				&lt;Nodes&gt;
            					&lt;Telerik:RadTreeNode Text="Node11" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;Telerik:RadTreeNode Text="Node12" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            				&lt;/Nodes&gt;
            			&lt;/Telerik:RadTreeNode&gt;
            			&lt;Telerik:RadTreeNode Text="Node2" ContextMenuID="ContextMenu2"&gt;
            				&lt;Nodes&gt;
            					&lt;Telerik:RadTreeNode Text="Node21" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;Telerik:RadTreeNode Text="Node22" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            				&lt;/Nodes&gt;
            			&lt;/Telerik:RadTreeNode&gt;
            		&lt;/Nodes&gt;
            	&lt;/Telerik:RadTreeView&gt;
            	
            	&lt;/form&gt;
            	&lt;/body&gt;
            	&lt;/html&gt;
            </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.WebServiceSettings">
            <summary>
            	Gets the settings for the web service used to populate nodes when
            	<see cref="P:Telerik.Web.UI.RadTreeNode.ExpandMode">ExpandMode</see> set to
            	<see cref="F:Telerik.Web.UI.TreeNodeExpandMode.WebService">TreeNodeExpandMode.WebService</see>.
            </summary>
            <value>
                An <see cref="P:Telerik.Web.UI.RadTreeView.WebServiceSettings">WebServiceSettings</see> that represents the
                web service used for populating nodes.
            </value>
            <remarks>
            	<para>
                    Use the <strong>WebServiceSettings</strong> property to configure the web
            		service used to populate nodes on demand.
            		You must specify both
                    <see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> and
                    <see cref="P:Telerik.Web.UI.WebServiceSettings.Method">Method</see>
            		to fully describe the service.
                </para>
            	<para>
            		You can use the <see cref="P:Telerik.Web.UI.RadTreeView.LoadingStatusTemplate">LoadingStatusTemplate</see>
            		property to create a loading template.
            	</para>
            	<para>
            		In order to use the integrated support, the web service should have the following signature:
            		
            		<code lang="CS">
            		[ScriptService]
            		public class WebServiceName : WebService
            		{
            			[WebMethod]
            			public RadTreeNodeData[] WebServiceMethodName(RadTreeNodeData item, object context)
            			{
            				// We cannot use a dictionary as a parameter, because it is only supported by script services.
            				// The context object should be cast to a dictionary at runtime.
            				IDictionary&lt;string, object&gt; contextDictionary = (IDictionary&lt;string, object&gt;) context;
            				
            				//...
            			}
            		}
            		</code>
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.PersistLoadOnDemandNodes">
            <summary>
            When set to true, the nodes populated through Load On Demand are persisted on the server.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.ExpandAnimation">
            <summary>Gets the settings for the animation played when a node opens.</summary>
            <value>
                An <see cref="T:Telerik.Web.UI.AnimationSettings">AnnimationSettings</see> that represents the
                expand animation.
            </value>
            <remarks>
            	<para>
                    Use the <strong>ExpandAnimation</strong> property to customize the expand
                    animation of <strong>RadTreeView</strong>. You can specify the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> and
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Duration">Duration</see>.
                    To disable expand animation effects you should set the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> to
                    <strong>AnimationType.None</strong>.<br/>
                    To customize the collapse animation you can use the
                    <see cref="P:Telerik.Web.UI.RadTreeView.CollapseAnimation">CollapseAnimation</see> property.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to set the <strong>ExpandAnimation</strong>
                of RadTreeView. 
                <para>
            		<para><strong>ASPX:</strong></para>
            	</para>
            	<para>
            		<para>&lt;telerik:RadTreeView ID="RadTreeView1" runat="server"&gt;</para>
            		<para><strong>&lt;ExpandAnimation Type="OutQuint" Duration="300"
                    /&gt;</strong></para>
            		<para>&lt;Nodes&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="News" &gt;</para>
            		<para>&lt;Nodes&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="CNN" NavigateUrl="http://www.cnn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="Google News" NavigateUrl="http://news.google.com"
                    /&gt;</para>
            		<para>&lt;/Nodes&gt;</para>
            		<para>&lt;/telerik:RadTreeViewNode&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="Sport" &gt;</para>
            		<para>&lt;Nodes&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="ESPN" NavigateUrl="http://www.espn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="Eurosport" NavigateUrl="http://www.eurosport.com"
                    /&gt;</para>
            		<para>&lt;/Nodes&gt;</para>
            		<para>&lt;/telerik:RadTreeViewNode&gt;</para>
            		<para>&lt;/Nodes&gt;</para>
            	</para>
            	<para>
            		<para>&lt;/telerik:RadTreeView&gt;</para>
            	</para>
            	<code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                RadTreeView1.ExpandAnimation.Type = AnimationType.Linear;
                RadTreeView1.ExpandAnimation.Duration = 300;
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                RadTreeView1.ExpandAnimation.Type = AnimationType.Linear
                RadTreeView1.ExpandAnimation.Duration = 300
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.CollapseAnimation">
            <summary>Gets the settings for the animation played when a node closes.</summary>
            <value>
                An <see cref="T:Telerik.Web.UI.AnimationSettings">AnnimationSettings</see> that represents the
                collapse animation.
            </value>
            <remarks>
            	<para>
                    Use the <strong>CollapseAnimation</strong> property to customize the expand
                    animation of <strong>RadTreeView</strong>. You can specify the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> and
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Duration">Duration</see>.
            		<br/>
                    To disable expand animation effects you should set the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> to
                    <strong>AnimationType.None</strong>. To customize the expand animation you can
                    use the <see cref="P:Telerik.Web.UI.RadTreeView.ExpandAnimation">ExpandAnimation</see> property.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to set the
                <strong>CollapseAnimation</strong> of RadTreeView. 
                <para>
            		<para><strong>ASPX:</strong></para>
            	</para>
            	<para>
            		<para>&lt;telerik:RadTreeView ID="RadTreeView1" runat="server"&gt;</para>
            		<para><strong>&lt;CollapseAnimation Type="OutQuint" Duration="300"
                    /&gt;</strong></para>
            		<para>&lt;Nodes&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="News" &gt;</para>
            		<para>&lt;Nodes&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="CNN" NavigateUrl="http://www.cnn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="Google News" NavigateUrl="http://news.google.com"
                    /&gt;</para>
            		<para>&lt;/Nodes&gt;</para>
            		<para>&lt;/telerik:RadTreeViewNode&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="Sport" &gt;</para>
            		<para>&lt;Nodes&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="ESPN" NavigateUrl="http://www.espn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadTreeViewNode Text="Eurosport" NavigateUrl="http://www.eurosport.com"
                    /&gt;</para>
            		<para>&lt;/Nodes&gt;</para>
            		<para>&lt;/telerik:RadTreeViewNode&gt;</para>
            		<para>&lt;/Nodes&gt;</para>
            	</para>
            	<para>
            		<para>&lt;/telerik:RadTreeView&gt;</para>
            		<code lang="CS">
            		</code>
            		<code lang="VB">
            		</code>
            	</para>
            	<code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                RadTreeView1.CollapseAnimation.Type = AnimationType.Linear;
                RadTreeView1.CollapseAnimation.Duration = 300;
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                RadTreeView1.CollapseAnimation.Type = AnimationType.Linear
                RadTreeView1.CollapseAnimation.Duration = 300
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.DataBindings">
            <summary>
            	Gets a collection of <see cref="T:Telerik.Web.UI.RadTreeNodeBindingCollection"/> objects that define the relationship 
            	between a data item and the tree node it is binding to. 
            </summary>
            <returns>
            	A <see cref="T:Telerik.Web.UI.RadTreeNodeBindingCollection"/> that represents the relationship between a data item and the tree node it is binding to.
            </returns>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.MaxDataBindDepth">
            <summary>
            	Gets or sets the maximum number of levels to bind to the <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control.
            </summary>
            <value>
            	The maximum number of levels to bind to the <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control. The default is -1, which binds all the levels in the data source to the control.
            </value>
            <remarks>
            	When binding the <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control to a data source, use the MaxDanodeindDepth 
            	property to limit the number of levels to bind to the control. For example, setting this property to 2 binds only 
            	the root nodes and their immediate children. All remaining records in the data source are ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.PostBackUrl">
            <summary>
            	Gets or sets the URL of the page to post to from the current page when a tree node is clicked.
            </summary>
            <value>
            	The URL of the Web page to post to from the current page when a tree node is clicked.
            	The default value is an empty string (""), which causes the page to post back to itself.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeEditStart">
            <summary>
            Gets or sets the name of the JavaScript function called when a node starts being edited
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeDataBound">
            <summary>
            Gets or sets the name of the JavaScript function called when a node is databound during load on demand
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientLoad">
            <summary>
            Gets or sets the name of the JavaScript function called when the control is fully
            initialized on the client side.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeClicking">
            <summary>
            The name of the JavaScript function that will be called upon click on a treenode. The function must accept a single parameter which is the instance of the node clicked.
            For example if you define OnClientClick="ProcessClientClick", you must define a javascript function defined in the following way (example):<br/><br/>
            function ProcessClientClick(node)
            {
            	alert("You clicked on: " + node.Text);
            }
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeClicked">
            <summary>
            The name of the JavaScript function that will be called after click on a treenode. Used for AJAX/callback hooks.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientMouseOver">
            <summary>
            The name of the JavaScript function that will be called when the user highlights a treenode.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientDoubleClick">
            <summary>
            The name of the JavaScript function that will be called when the user double clicks on a node.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientMouseOut">
            <summary>
            The name of the JavaScript function that will be called when the mouse hovers away from the TreeView.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeEditing">
            <summary>
            The name of the JavaScript function that will be called before the user edits a node 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeEdited">
            <summary>
            The name of the JavaScript function that will be called after the user edits a node 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeExpanding">
            <summary>
            The name of the JavaScript function that will be called before a node is expanded. 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeExpanded">
            <summary>
            The name of the JavaScript function that will be called after a node is expanded. 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeCollapsing">
            <summary>
            The name of the JavaScript function that will be called before a node is collapsed. 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeCollapsed">
            <summary>
            The name of the JavaScript function that will be called after a node is collapsed. 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeDropping">
            <summary>
            The name of the JavaScript function that will be called when the user drops a node onto another node.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeDropped">
            <summary>
            The name of the JavaScript function that will be called after the user drops a node onto another node.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeChecking">
            <summary>
            The name of the JavaScript function that will be called when the user checks (checkbox) a treenode.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeChecked">
            <summary>
            The name of the JavaScript function that will be called after the user checks (checkbox) a treenode.
            </summary>	
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeDragStart">
            <summary>
            The name of the JavaScript function that will be called when the user starts dragging a node.
            </summary>	
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodeDragging">
            <summary>
            The name of the JavaScript function that will be called when the user moves the mouse while dragging a node.
            </summary>		
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientContextMenuItemClicking">
            <summary>
            The name of the JavaScript function that will be called when the user clicks on a context menu item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientContextMenuItemClicked">
            <summary>
            The name of the JavaScript function that will be called after the user clicks on a context menu item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientContextMenuShowing">
            <summary>
            The name of the JavaScript function that will be called when a context menu is to be displayed.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientContextMenuShown">
            <summary>
            The name of the JavaScript function that will be called after context menu is displayed.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodePopulating">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the children of a tree node are about to be populated (for example from web service).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientNodePopulatingHandler(sender, eventArgs)<br/>
                {<br/>
            		var node = eventArgs.get_node();<br/>
            		var context = eventArgs.get_context();<br/>
            		context["CategoryID"] = node.get_value();<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadTreeView ID="RadTreeView1"<br/>
                runat="server"<br/>
            		<strong>OnClientNodePopulating="onClientNodePopulatingHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadTreeView&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientNodePopulating</strong> client-side event
                handler is called when the children of a tree node are about to be populated.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<node><strong>sender</strong>, the menu client object;</node>
            		<node><strong>eventArgs</strong> with three properties:
            			<list type="bullet">
            				<node><strong>get_node()</strong>, the instance of the node.</node>
            				<node><strong>get_context()</strong>, an user object that will be passed to the web service.</node>
            				<node><strong>set_cancel()</strong>, used to cancel the event.</node>
            			</list>
            		</node>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodePopulated">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the children of a tree node were just populated (for example from web service).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientNodePopulatedHandler(sender, eventArgs)<br/>
                {<br/>
            		var node = eventArgs.get_node();<br/>
            		alert("Loading finished for " + node.get_text());<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadTreeView ID="RadTreeView1"<br/>
                runat="server"<br/>
            		<strong>OnClientNodePopulated="onClientNodePopulatedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadTreeView&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientNodePopulated</strong> client-side event
                handler is called when the children of a tree node were just populated.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with one property:
            			<list type="bullet">
            				<item><strong>get_node()</strong>, the instance of the tree node.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientNodePopulationFailed">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the operation for populating the children of a tree node has failed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientNodePopulationFailedHandler(sender, eventArgs)<br/>
                {<br/>
            		var node = eventArgs.get_node();<br/>
            		var errorMessage = eventArgs.get_errorMessage();<br/>
            		<br/>
            		alert("Error: " + errorMessage);<br/>
            		eventArgs.set_cancel(true);<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadTreeView ID="RadTreeView1"<br/>
                runat="server"<br/>
            		<strong>OnClientNodePopulationFailed="onClientNodePopulationFailedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadTreeView&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientNodePopulationFailed</strong> client-side event
                handler is called when the operation to populate the children of a tree node has failed.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the menu client object;</item>
            		<item><strong>eventArgs</strong> with three properties:
            			<list type="bullet">
            				<item><strong>get_node()</strong>, the instance of the tree node.</item>
            				<item><strong>set_cancel()</strong>, set to true to suppress the default action (alert message).</item>
            			</list>
            		</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeView.OnClientKeyPressing">
            <summary>
            The name of the JavaScript function that will be called when a key is pressed.
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadTreeView.NodeClick">
            <summary>
                Occurs on the server when a node in the <see cref="T:Telerik.Web.UI.RadTreeView"/>
                control is clicked.
            </summary>
            <example>
            	The following example demonstrates how to use the <b>NodeClick</b> event to determine the clicked node.
            	<code lang="CS">
            		protected void RadTreeView1_NodeClick(object sender, Telerik.Web.UI.RadTreeNodeEventArgs e)
            		{
            			Response.Write("Clicked node is " + e.Node.Text);
            		}
            	</code>
            	<code lang="VB">
            		Sub RadTreeView1_NodeClick(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadTreeNodeEventArgs) Handles RadTreeView1.NodeClick
            			Response.Write("Clicked node is " &amp; e.Node.Text)
            		End Sub		
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadTreeView.NodeDataBound">
            <summary>Occurs when a node is data bound.</summary>
            <remarks>
            	<para>
                    The <strong>NodeDataBound</strong> event is raised for each node upon
                    danodeinding. You can retrieve the node being bound using the event arguments.
                    The <strong>DataItem</strong> associated with the node can be retrieved using
                    the <see cref="P:Telerik.Web.UI.RadTreeNode.DataItem"/> property.
                </para>
            	<para>The <strong>NodeDataBound</strong> event is often used in scenarios when you
                want to perform additional mapping of fields from the DataItem to their respective
                properties in the <see cref="T:Telerik.Web.UI.RadTreeNode"/> class.
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to map fields from the data item to
                <see cref="T:Telerik.Web.UI.RadTreeNode"/> properties using the <strong>NodeDataBound</strong> event.
            	<code lang="CS">
            		protected void RadTreeView1_NodeDataBound(object sender, Telerik.Web.UI.RadTreeNodeEventArgs e)
            		{
            			e.Node.ImageUrl = "image" + (string)DataBinder.Eval(e.Node.DataItem, "ID") + ".gif";
            			e.Node.NavigateUrl = (string)DataBinder.Eval(e.Node.DataItem, "URL");
            		}
                </code>
            	<code lang="VB">
            		Sub RadTreeView1_NodeDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadTreeNodeEventArgs) Handles RadTreeView1.NodeDataBound
            			e.Node.ImageUrl = "image" &amp; DataBinder.Eval(e.Node.DataItem, "ID") &amp; ".gif"
            			e.Node.NavigateUrl = CStr(DataBinder.Eval(e.Node.DataItem, "URL"))
            		End Sub
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadTreeView.NodeCreated">
            <summary>Occurs when a node is created.</summary>
            <remarks>
            	The NodeCreated event is raised when an node in the <see cref="T:Telerik.Web.UI.RadTreeView"/> control is created, 
            	both during round-trips and at the time data is bound to the control. The NodeCreated event is not raised for nodes
            	which are defined inline in the page or user control.
            	<para>The NodeCreated event is commonly used to initialize node properties.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>NodeCreated</strong> event
                to set the <strong>ToolTip</strong> property of each node. 
                <code lang="CS">
            		 protected void RadTreeView1_NodeCreated(object sender, Telerik.Web.UI.RadTreeNodeEventArgs e)
            		 {
            		     e.Node.ToolTip = e.Node.Text;
            		 }
                </code>
            	<code lang="VB">
            		 Sub RadTreeView1_NodeCreated(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadTreeNodeEventArgs) Handles RadTreeView1.NodeCreated
            		     e.Node.ToolTip = e.Node.Text
            		 End Sub
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadTreeView.NodeExpand">
            <summary>
            	Occurs when a node is expanded.
            </summary>
            <remarks>
            	<para>
            		The <b>NodeExpand</b> event will be raised for nodes whose <see cref="P:Telerik.Web.UI.RadTreeNode.ExpandMode"/> property is set to 
            		<c>ServerSide</c> or <c>ServerSideCallback</c>.
            	</para>
            	<para>
            		The <b>NodeExpand</b> event is commonly used to populate nodes on demand.
            	</para>
            </remarks>
            <example>
            	The following example demonstrates how to use the <b>NodeExpand</b> event to populate nodes on demand.
            	<code lang="CS">
            	protected void RadTreeView1_NodeExpanded(object sender, Telerik.Web.UI.RadTreeNodeEventArgs e)
            	{
            		RadTreeNode nodeCreatedOnDemand = new RadTreeNode("Node created on demand");
            		e.Node.Nodes.Add(nodeCreatedOnDemand);
            	}
            	</code>
            	<code lang="VB">
            	Sub RadTreeView1_NodeExpanded(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadTreeNodeEventArgs) Handles RadTreeView1.NodeExpanded
            		Dim nodeCreatedOnDemand As RadTreeNode = New RadTreeNode("Node created on demand")
            		e.Node.Nodes.Add(nodeCreatedOnDemand)
            	End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadTreeView.NodeCollapse">
            <summary>
            	Occurs when a node is collapsed.
            </summary>
            <remarks>
            	The <b>NodeCollapse</b> event is raised only for nodes whose <see cref="P:Telerik.Web.UI.RadTreeNode.ExpandMode"/> property
            	is set to <c>ServerSide</c>.
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadTreeView.NodeCheck">
            <summary>
            	Occurs when a node is checked.
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadTreeView.NodeDrop">
            <summary>
            	Occurs when a node (or nodes) is dragged and dropped.
            </summary>
            <remarks>
            	The <b>NodeDrop</b> event is commonly used to move nodes from one location into other.
            </remarks>
            <example>
            	The following example demonstrates how to move the dragged nodes in the destination node.
            	<code lang="CS">
            	protected void RadTreeView1_NodeDrop(object sender, RadTreeNodeDragDropEventArgs e)
            	{
            		foreach (RadTreeNode sourceNode in e.DraggedNodes)
            		{
            			if (!sourceNode.IsAncestorOf(e.DestDragNode))
            			{
            				sourceNode.Remove();
            				e.DestDragNode.Nodes.Add(sourceNode);
            			}
            		}
            	}
            	</code>
            	<code lang="VB">
            	Protected Sub RadTreeView1_NodeDrop(ByVal sender As Object, ByVal e As RadTreeNodeDragDropEventArgs) Handles RadTreeView1.NodeDrop
            		For Each sourceNode As RadTreeNode In e.DraggedNodes
            			If Not sourceNode.IsAncestorOf(e.DestDragNode) Then
            				sourceNode.Remove()
            				e.DestDragNode.Nodes.Add(sourceNode)
            			End If
            		Next
            	End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadTreeView.NodeEdit">
            <summary>
            	Occurs when a node's text is edited.
            </summary>
            <remarks>
            	The <b>NodeEdit</b> event is commonly used to update the <see cref="P:Telerik.Web.UI.RadTreeNode.Text"/> property after editing.
            </remarks>
            <example>
            	The following example demonstrates how to update the <see cref="P:Telerik.Web.UI.RadTreeNode.Text"/> property after editing
            	<code lang="CS">
            	protected void RadTreeView1_NodeEdit(object sender, RadTreeNodeEditEventArgs e)
            	{
            		RadTreeNode nodeEdited = e.Node;
            		string newText = e.Text;
            		nodeEdited.Text = newText;
            	}
            	</code>
            	<code lang="VB">
            	Protected Sub HandleNodeEdit(ByVal sender As Object, ByVal e As RadTreeNodeEditEventArgs) Handles RadTreeView1.NodeEdit
            		Dim nodeEdited As RadTreeNode = e.Node
            		Dim newText As String = e.Text
            		nodeEdited.Text = newText
            	End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadTreeView.ContextMenuItemClick">
            <summary>
                Occurs on the server when a item in the	<see cref="T:Telerik.Web.UI.RadTreeViewContextMenu"/> is clicked.
            </summary>
            <remarks>
            		The context menu will also postback if you navigate to a menu item
                    using the [menu item] key and then press [enter] on the menu item that is focused. The
                    instance of the clicked menu item is passed to the <strong>ContextMenuItemClick</strong> event
                    handler - you can obtain a reference to it using the eventArgs.Item property.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadEditor">
            <summary>
            Telerik RadEditor
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.GetDialogDefinition(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.RemoveDialogDefinition(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.AddDialogDefinition(System.String,Telerik.Web.UI.DialogDefinition)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.GetScriptDescriptors">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.GetScriptReferences">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriterTag"></see>. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"></see> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="F:Telerik.Web.UI.RadEditor.originalEnabled">
            <summary>
            The Enabled property is reset in AddAttributesToRender in order
            to avoid setting disabled attribute in the control tag (this is
            the default behavior). This property has the real value of the 
            Enabled property in that moment.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.RegisterScriptControl">
            <summary>
            Registers the control with the ScriptManager
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.RegisterCssReferences">
            <summary>
            Registers the CSS styles for the control
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.RegisterScriptDescriptors">
            <summary>
            Registers the script descriptors.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.RenderClientStateField(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs the content of a server control's children to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the rendered content.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.RenderBottomZone(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.RenderEditModes(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.FindTool(System.String)">
            <summary>
            Finds the tool with the given name.
            </summary>
            <param name="name">The name of the tool to find.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.ContainsTool(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Executed when post data is loaded from the request
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.DisableFilter(Telerik.Web.UI.EditorFilters)">
            <summary>
            Removes a specific filter from the <see cref="P:Telerik.Web.UI.RadEditor.ContentFilters">ContentFilters</see>.
            </summary>
            <param name="filter">An <see cref="T:Telerik.Web.UI.EditorFilters">EditorFilters</see> value</param>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.EnableFilter(Telerik.Web.UI.EditorFilters)">
            <summary>
            Add a specific filter to the <see cref="P:Telerik.Web.UI.RadEditor.ContentFilters">ContentFilters</see>.
            </summary>
            <param name="filter">An <see cref="T:Telerik.Web.UI.EditorFilters">EditorFilters</see> value</param>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous request that was saved with the System.Web.UI.WebControls.WebControl.SaveViewState() method.
            </summary>
            <param name="state">An object that represents the control state to restore.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.SaveViewState">
            <summary>
            Saves any state that was modified after the System.Web.UI.WebControls.Style.TrackViewState() method was invoked.
            </summary>
            <returns>An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's System.Web.UI.Control.ViewState property.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadEditor.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag"></see> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag"></see> enumeration values.</returns>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.CssClassFormatString">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.ExportSettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.Web.UI.EditorExportSettings"/> object that
                    allows you to set the export file properties 
                </para>
            </summary>
            <value>
            A reference to the EditorExportSettings that allows you to set the export file properties
            </value>
            <remarks>
            	<para>Use the ExportSettings property to control the export file settings 
                This property is read-only;
                however, you can set the properties of the EditorExportSettings object it returns.
                The properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadEditor
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the EditorExportSettings object (for example,
                    ExportSettings-FileName).</item>
            		<item>Nest a &lt;ExportSettings&gt; element between the opening and closing
                    tags of the Telerik RadEditor control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, ExportSettings.FileName).</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.ToolProviderID">
            <summary>
            Gets or sets a string containing the ID (will search for both server or client ID) of a client object that should be used as a tool provider. 
            </summary>
            <remarks>
            	<para>
            	This property helps significantly reduce the HTML markup and JSON sent from server to the
                client when multiple RadEditor objects with the same tools are used on the same page.
            	</para>
            	<para>The ToolProviderID can be set to the ID of another RadEditor, or to a custom
                control that implements two clientside methods get_toolHTML and get_toolJSON.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.CssFiles">
            <summary>
            Gets or sets the list of external CSS files that should be made available in the
            editor's content area.
            </summary>
            <remarks>
            	<para>By default, RadEditor uses the CSS classes available in the current page.
                However, it can be configured to load external CSS files instead. This scenario is
                very common for editors integrated in back-end administration areas, which have one
                set of CSS classes, while the content is being saved in a database and displayed on
                the public area, which has a different set of CSS classes.</para>
            	<para>If this property is set the RadEditor loads <strong>only</strong> the styles
                defined in these files. The styles defined in the current page are not loaded in
                the dropdown.</para>
            	<para>
                    If you want to load only a subset of the defined classes you can use the
                    <see cref="P:Telerik.Web.UI.RadEditor.CssClasses">CssClasses</see> property.
                </para>
            </remarks>
            <example>
            	<para>This example demonstrates how to set the CssFiles property from the
                code-behind.</para>
            	<para>If you want to set it in the ASPX/ASCX use the following syntax</para>
            	<para class="sourcecode">&lt;rade:RadEditor
                cssfiles="~/styles/1.css,~/styles/2.css" ... &gt;&lt;rade:RadEditor&gt;</para>
            	<code lang="VB">
            RadEditor1.CssFiles = New String(2) {"~/styles/1.css", "~/styles/2.css"}
                </code>
            	<code lang="CS">
            RadEditor1.CssFiles = new string[2] {"~/styles/1.css", "~/styles/2.css"};
                </code>
            </example>
            <requirements>RadEditor 5.0 and above.</requirements>
            <value>
            A string array containing the names of the external CSS files that should be
            available in the editor's content area.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Colors">
            <summary>
            Gets the collection containing the colors to put in the Foreground and Background color dropdowns.
            </summary>
            <value>
            A StringCollection containing the colors to put in the Foreground and Background
            color dropdowns. Default is an <strong>empty</strong> StringCollection.
            </value>
            <remarks>
            	<para>The contents of this collection will override the default colors available in
                the Foreground and Background color dropdowns. In order to extend the default set
                you should add the default colors and the new colors.</para>
            	<para><strong>Note</strong>: Setting this property will affect all color pickers of
                the RadEditor, including those in the table proprties dialogs.</para>
            </remarks>
            <example>
                This example demonstrates how to put only Red, Green and Blue into the Foreground
                and Background dropdowns.
                <code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles MyBase.Load
                RadEditor1.Colors.Add("Red")
                RadEditor1.Colors.Add("Green")
                RadEditor1.Colors.Add("Blue")
            End Sub
                </code>
            	<code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                RadEditor1.Colors.Add("Red");
                RadEditor1.Colors.Add("Green");
                RadEditor1.Colors.Add("Blue");
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Symbols">
            <summary>Gets the collection containing the symbols to put in the Symbols dropdown.</summary>
            <value>
            A SymbolCollection containing the symbols to put in the Symbols dropdown. Default
            is an <strong>empty</strong> SymbolCollection.
            </value>
            <remarks>
            	<para>The contents of this collection will override the default symbols available
                in the Symbols dropdown.</para>
            	<para><strong>Note</strong>: multiple symbols can be added at once by using the
                SymbolCollection.Add() method.</para>
            </remarks>
            <example>
                This example demonstrates how to put only the english alphabet symbols to the
                Symbols dropdown.
                <code lang="VB">
            Private Sub Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
                For i As Integer = 65 To 90
                    RadEditor1.Symbols.Add(Convert.ToChar(i))
                Next
            End Sub
                </code>
            	<code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                for (int i=65; i&lt;=90; i++)
                {
                    RadEditor1.Symbols.Add(Convert.ToChar(i));
                }
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Links">
            <summary>
            Gets the collection containing the links to put in the Custom Links dropdown.
            </summary>
            <value>A Link object containing the links to put in the Custom Links dropdown.</value>
            <remarks>
            	<para>The Custom Links dropdown of the RadEditor is a very convenient tool for
                inserting predefined hyperlinks.</para>
            	<para><strong>Note</strong>: the links can be organized in a tree like
                structure.</para>
            </remarks>
            <example>
                This example demonstrates how to create a tree like structure of custom links.
                <code lang="VB">
            Private Sub Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
                'Add the root
                RadEditor1.Links.Add("Telerik", "http://www.telerik.com")
                'Add the Products node And its children
                RadEditor1.Links("Telerik").Add("Products", "http://www.telerik.com/products")
                RadEditor1.Links("Telerik")("Products").Add("RadControls", "http://www.telerik.com/radcontrols")
                RadEditor1.Links("Telerik")("Products").Add("RadEditor", "http://www.telerik.com/RadEditor")
                RadEditor1.Links("Telerik")("Products")("RadEditor").Add("QSF", "http://www.telerik.com/demos/aspnet/Editor/Examples/Default/DefaultCS.aspx")
                'Add Purchase, Support And Client.Net nodes
                RadEditor1.Links("Telerik").Add("Purchase", "http://www.telerik.com/purchase")
                RadEditor1.Links("Telerik").Add("Support", "http://www.telerik.com/support")
                RadEditor1.Links("Telerik").Add("Client.Net", "http://www.telerik.com/clientnet")
            End Sub
                </code>
            	<code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                //Add the root
                RadEditor1.Links.Add("Telerik", "http://www.telerik.com");
                //Add the Products node and its children
                RadEditor1.Links["Telerik"].Add("Products", "http://www.telerik.com/products");
                RadEditor1.Links["Telerik"]["Products"].Add("RadControls", "http://www.telerik.com/radcontrols");
                RadEditor1.Links["Telerik"]["Products"].Add("RadEditor", "http://www.telerik.com/RadEditor");
                RadEditor1.Links["Telerik"]["Products"]["RadEditor"].Add("QSF", "http://www.telerik.com/demos/aspnet/Editor/Examples/Default/DefaultCS.aspx");
                //Add Purchase, Support and Client.Net nodes
                RadEditor1.Links["Telerik"].Add("Purchase", "http://www.telerik.com/purchase");
                RadEditor1.Links["Telerik"].Add("Support", "http://www.telerik.com/support");
                RadEditor1.Links["Telerik"].Add("Client.Net", "http://www.telerik.com/clientnet");
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.FontSizes">
            <summary>
            Gets the collection containing the custom font sizes to put in the [Size] dropdown.
            </summary>
            <value>
            A string collection containing the custom font sizes to put in the Size dropdown.
            Default is an <strong>empty</strong> StringCollection.
            </value>
            <remarks>
            	<para>The contents of this collection will override the default font sizes
                available in the [Size] dropdown. In order to extend the default set you should add
                the default font sizes and the new font sizes. The default font sizes are: 1, 2, 3,
                4, 5, 6 and 7.</para>
            	<para><strong>Note</strong>: the minimum font size is 1, the maximum is 7.</para>
            </remarks>
            <example>
                This example demonstrates how to remove the font size 1 from the Size dropdown.
                <code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles MyBase.Load
                RadEditor1.FontSizes.Add(2)
                RadEditor1.FontSizes.Add(3)
                RadEditor1.FontSizes.Add(4)
                RadEditor1.FontSizes.Add(5)
                RadEditor1.FontSizes.Add(6)
                RadEditor1.FontSizes.Add(7)
            End Sub
                </code>
            	<code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                RadEditor1.FontSizes.Add(2);
                RadEditor1.FontSizes.Add(3);
                RadEditor1.FontSizes.Add(4);
                RadEditor1.FontSizes.Add(5);
                RadEditor1.FontSizes.Add(6);
                RadEditor1.FontSizes.Add(7);
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.FontNames">
            <summary>
            Gets the collection containing the custom font names to put in the Font dropdown.
            </summary>
            <value>
            A string collection containing the custom font names to put in the Font dropdown.
            Default is an <strong>empty</strong> StringCollection.
            </value>
            <remarks>
            	<para>The contents of this collection will override the default fonts available in
                the Font dropdown. In order to extend the default set you should add the default
                font names and the new font names. The default font names are: Arial, Comic Sans
                MS, Courier New, Tahoma, Times New Roman, Verdana.</para>
            	<para><strong>Note</strong>: the fonts must exist on the client computer.</para>
            </remarks>
            <example>
                This example demonstrates how to add Arial Narrow font to the Font dropdown.
                <code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles MyBase.Load
                RadEditor1.FontNames.Add("Arial")
                RadEditor1.FontNames.Add("Arial Narrow")
                RadEditor1.FontNames.Add("Comic Sans MS")
                RadEditor1.FontNames.Add("Courier New")
                RadEditor1.FontNames.Add("Tahoma")
                RadEditor1.FontNames.Add("Times New Roman")
                RadEditor1.FontNames.Add("Verdana")
            End Sub
                </code>
            	<code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                RadEditor1.FontNames.Add("Arial");
                RadEditor1.FontNames.Add("Arial Narrow");
                RadEditor1.FontNames.Add("Comic Sans MS");
                RadEditor1.FontNames.Add("Courier New");
                RadEditor1.FontNames.Add("Tahoma");
                RadEditor1.FontNames.Add("Times New Roman");
                RadEditor1.FontNames.Add("Verdana");
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Paragraphs">
            <summary>
            Gets the collection containing the paragraph styles to put in the Paragraph Style
            dropdown.
            </summary>
            <value>
            A NameValueCollection containing the paragraph styles to put in the Paragraph
            Style dropdown. Default is an <strong>empty</strong> NameValueCollection.
            </value>
            <remarks>
            	<para>The contents of this collection will override the default paragraph styles
                available in the Paragraph Style dropdown.</para>
            	<para><strong>Note</strong>: RadEditor also supports block format with css class
                set. See the example below.</para>
            </remarks>
            <example>
                This example demonstrates how to put several paragraph styles in the Paragraph
                Style dropdown.
                <code lang="VB">
            Private Sub Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
                'Add clear formatting
                RadEditor1.Paragraphs.Add("Clear Formatting", "body")
                'Add the standard paragraph styles
                RadEditor1.Paragraphs.Add("Heading 1", "&lt;h1&gt;")
                RadEditor1.Paragraphs.Add("Heading 2", "&lt;h2&gt;")
                RadEditor1.Paragraphs.Add("Heading 3", "&lt;h3&gt;")
                'Add paragraph style With block Format And css Class
                RadEditor1.Paragraphs.Add("Heading 2 Bordered", "&lt;h2 class=\"bordered\"&gt;")
            End Sub
                </code>
            	<code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                //Add clear formatting
                RadEditor1.Paragraphs.Add("Clear Formatting", "body");
                //Add the standard paragraph styles
                RadEditor1.Paragraphs.Add("Heading 1", "&lt;h1&gt;");
                RadEditor1.Paragraphs.Add("Heading 2", "&lt;h2&gt;");
                RadEditor1.Paragraphs.Add("Heading 3", "&lt;h3&gt;");
                //Add paragraph style with block format and css class
                RadEditor1.Paragraphs.Add("Heading 2 Bordered", "&lt;h2 class=\"bordered\"&gt;");
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.RealFontSizes">
            <summary>
            Gets the collection containing the custom real font sizes to put in the RealFontSize dropdown.
            </summary>
            <value>
            A string collection containing the custom real font sizes to put in the RealFontSize dropdown.
            Default is an <strong>empty</strong> StringCollection.
            </value>
            <remarks>
            	<para>The contents of this collection will override the default real font sizes available in
                the RealFontSize dropdown.</para>
            </remarks>
            <example>
                This example demonstrates how to add custom font sizes to the RealFontSize dropdown.
                <code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles MyBase.Load
                RadEditor1.RealFontSizes.Add("8pt")
                RadEditor1.RealFontSizes.Add("9pt")
                RadEditor1.RealFontSizes.Add("11pt")
                RadEditor1.RealFontSizes.Add("13pt")
            End Sub
                </code>
            	<code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                RadEditor1.RealFontSizes.Add("8pt")
                RadEditor1.RealFontSizes.Add("9pt")
                RadEditor1.RealFontSizes.Add("11pt")
                RadEditor1.RealFontSizes.Add("13pt")
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.CssClasses">
            <summary>
            Gets the collection containing the CSS classes to put in the [Apply CSS Class] dropdown.
            </summary>
            <value>
            A NameValueCollection containing the CSS classes to put in the [Apply CSS Class]
            dropdown. Default is an <strong>empty</strong> NameValueCollection .
            </value>
            <remarks>
            	<para>The contents of this collection will override the default CSS classes
                available in the Apply CSS Class dropdown.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Snippets">
            <summary>
            Gets the collection containing the snippets to put in the Code Snippet
            dropdown.
            </summary>
            <value>
            A NameValueCollection containing the snippets to put in the Code Snippet dropdown.
            Default is an <strong>empty</strong> NameValueCollection.
            </value>
            <remarks>
            	<para>The Code Snippet dropdown is a very convenient tool for inserting predefined
                chunks of HTML content like signatures, product description templates, custom
                tables, etc.</para>
            	<para>The contents of this collection will override the default snippets available
                in the Code Snippet dropdown.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Languages">
            <summary>Gets the collection containing the available languages for spellchecking.</summary>
            <remarks>
            RadEditor has integrated support for the multi-language mode of RadSpell. When
            working with content in different languages you can select the proper spellchecking
            dictionary from a dropdown button on the RadEditor toolbar.
            </remarks>
            <value>
            A NameValueCollection containing the available languages for spellchecking.
            Default value is <strong>empty</strong> NameValueCollection.
            </value>
            <example>
                This example demonstrates how to enable spellchecking for English, French and German languages
                in RadEditor spellchecker.
                <code lang="VB">
            Private Sub Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
                RadEditor1.Languages.Add("en-US", "English");
                RadEditor1.Languages.Add("fr-FR", "French");
                RadEditor1.Languages.Add("de-DE", "German");
            End Sub
                </code>
            	<code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                RadEditor1.Languages.Add("en-US", "English");
                RadEditor1.Languages.Add("fr-FR", "French");
                RadEditor1.Languages.Add("de-DE", "German");
            }
                </code>
            </example>        /// 
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.ToolsFile">
            <summary>
            Gets or sets a string containing the path to the XML toolbar configuration file.
            </summary>
            <remarks>
            	<para>This property is provided for backwards compatibility. Please, use either 
            	inline toolbar declaration or code-behind to configure the toolbars. To configure 
            	multiple RadEditor controls with the same settings you could use either Theme, 
            	UserControl with inline declaration, or CustomControl.
            	</para>
            	<para>Use "~" (tilde) as a substitution of the web-application's root
                directory.</para>
            	<para>You can also provide this property with an URL which returns a valid XML
                toolbar configuration file, e.g. /MyApplication/Tools/MyToolsFile.aspx</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Language">
            <summary>
            Gets or sets a string containing the localization language for the RadEditor UI
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.ContentAreaCssFile">
            <summary>
            Gets or sets a string, containing the location of the content area CSS styles. 
            You need to set this property only if you are using a custom skin.
            </summary>
            <value>The content area CSS file.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.LocalizationPath">
            <summary>
            Gets or sets a value indicating where the editor will look for its .resx localization files.
            By default these files should be in the App_GlobalResources folder. However, if you cannot put
            the resource files in the default location or .resx files compilation is disabled for some reason 
            (e.g. in a DotNetNuke environment), this property should be set to the location of the resource files.
            </summary>
            <value>
            A relative path to the dialogs location. For example: "~/controls/RadEditorResources/".
            </value>
            <remarks>
            	<para>If specified, the <strong>LocalizationPath</strong>
            property will allow you to load the editor localization files from any location in the 
            web application.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.AllowScripts">
            <summary>
            Gets or sets the value indicating whether script tags will be allowed in the editor content.
            This property is now obsolete. Please use the ContentFilters property or the EnableFilter and DisableFilter methods
            </summary>
            <value>
            The default value is <strong>false</strong>. This means that script tags will be removed from the content.
            </value> 
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.AutoResizeHeight">
            <summary>
            Gets or sets the value indicating whether the RadEditor will auto-resize its height to match content height 
            </summary>
            <value>
            The default value is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.EnableResize">
            <summary>
            Gets or sets the value indicating whether the users will be able to resize the RadEditor control on the client 
            </summary>
            <value>
            The default value is <strong>true</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.NewLineBr">
            <summary>
            Gets or sets the value indicating whether the RadEditor will insert a new line or
            a paragraph when the [Enter] key is pressed.
            </summary>
            <value>
            	<strong>true</strong> when the RadEditor will insert &lt;br&gt; tag when the
            [Enter] key is pressed; otherwise <strong>false</strong>. The default
            value is <strong>true</strong>.
            </value>
            <remarks>
            	<para><strong>Note</strong>: this property is intended for use only in Internet Explorer.
            	The gecko-based browsers always insert &lt;BR&gt; tags.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.ToolbarMode">
            <summary>
            Gets or sets the value indicating how the editor toolbar will be rendered and will act on the client
            </summary>
            <value>
            	<strong>Default</strong> Toolbars are rendered around the editor content area.<br/>
            	<strong>Floating</strong> Toolbars are rendered in a moveable window.<br/>
            	<strong>PageTop</strong> Toolbars appear on top of page when editor gets focus.<br/>
            	<strong>ShowOnFocus</strong> Toolbars appear right above the editor when it focus.
            </value>
            <remarks>
            <para>
            	Several editors can simulate usage of the same toolbar if this property has the same value everywhere
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.OnClientLoad">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when editor is loaded on the client.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientLoad</strong>
            		<font color="black">client-side event handler is called when editor is loaded on the client.
            </font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadEditor object.</item>
            		<item><strong>args</strong>.</item>
            	</list>        
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientLoad</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientLoad(sender, args)<br/>
                         {<br/>
                         var editor = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadEditor ID="RadEditor1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientLoad="OnClientLoad"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadEditor&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.OnClientInit">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when editor starts to load on the client.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientInit</strong>
            		<font color="black">client-side event handler is called when editor starts to load on the client.
            </font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadEditor object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientInit</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientInit(sender, args)<br/>
                         {<br/>
                         var editor = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadEditor ID="RadEditor1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientInit="OnClientInit"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadEditor&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.OnClientPasteHtml">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when a dialog is closed, but before its value returned would be pasted into the editor.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientPasteHtml</strong>
            		<font color="black">client-side event handler is called when a dialog is closed, but before its value returned would be pasted into the editor.
            </font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadEditor object.</item>
            		<item><strong>args</strong>.</item>
            	</list>        
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientPasteHtml</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientPasteHtml(sender, args)<br/>
                         {<br/>
                         var editor = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadEditor ID="RadEditor1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientPasteHtml="OnClientPasteHtml"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadEditor&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.OnClientSubmit">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when the content is submitted.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientPasteHtml</strong>
            		<font color="black">client-side event handler is called when a dialog is closed, but before its value returned would be pasted into the editor.
            </font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadEditor object.</item>
            		<item><strong>args</strong>.</item>
            	</list>        
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientSubmit</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientSubmit(sender, args)<br/>
                         {<br/>
                         var editor = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadEditor ID="RadEditor1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientSubmit="OnClientSubmit"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadEditor&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.OnClientModeChange">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when the content is submitted.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientModeChange</strong>
            		<font color="black">client-side event handler is called when the mode of the editor is changing..
            </font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadEditor object.</item>
            		<item><strong>args</strong>.</item>
            	</list>        
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientModeChange</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientModeChange(sender, args)<br/>
                         {<br/>
                         var editor = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadEditor ID="RadEditor1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientModeChange="OnClientModeChange"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadEditor&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.OnClientSelectionChange">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when selection inside editor content area changes        
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientSelectionChange</strong>
            		<font color="black">client-side event handler is called when selection inside editor content area changes.
            </font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadEditor object.</item>
            		<item><strong>args</strong>.</item>
            	</list>        
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientSelectionChange</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientSelectionChange(sender, args)<br/>
                         {<br/>
                         var editor = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadEditor ID="RadEditor1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientSelectionChange="OnClientSelectionChange"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadEditor&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.OnClientCommandExecuting">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called before
            an editor command starts executing.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientCommandExecuting</strong>
            		<font color="black">client-side event handler is called before a command starts executing.
            </font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadEditor object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientCommandExecuting</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientCommandExecuting(sender, args)<br/>
                         {<br/>
                         var editor = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadEditor ID="RadEditor1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientCommandExecuting="OnClientCommandExecuting"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadEditor&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.OnClientCommandExecuted">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called 
            after an editor command was executed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientCommandExecuted</strong>
            		<font color="black">client-side event handler that is called 
            when after an editor command was executed.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadEditor object.</item>
            		<item><strong>args</strong>.</item>
            	</list>                
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientCommandExecuted</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientCommandExecuted(sender, args)<br/>
                         {<br/>
                         var editor = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadEditor ID="RadWindow1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientCommandExecuted="OnClientCommandExecuted"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadEditor&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Height">
            <summary>
            Gets or sets the height of the Web server control. The default height is 400 pixels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Width">
            <summary>
            Gets or sets the width of the Web server control. The default width is 680 pixels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.ToolsWidth">
            <summary>
            Gets or sets the width of the editor's toolbar (should be used when ToolbarMode != Default). 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Skin">
            <summary>Gets or sets the skin name for the control user interface.</summary>
            <value>A string containing the skin name for the control user interface. The default is string.Empty.</value>
            <remarks>
            <para>
            If this property is not set, the control will render using the skin named "Default".
            If EnableEmbeddedSkins is set to false, the control will not render skin.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.EnableAjaxSkinRendering">
            <summary>Gets or sets the value, indicating whether to render the skin CSS files during Ajax requests</summary>
            <remarks>
            <para>
            If EnableAjaxSkinRendering is set to false you will have to register the needed control base CSS file by hand when adding/showing the control with Ajax.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.EnableEmbeddedScripts">
            <summary>Gets or sets the value, indicating whether to render links to the embedded client scripts or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedScripts is set to false you will have to register the needed script files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.EnableEmbeddedSkins">
            <summary>Gets or sets the value, indicating whether to render links to the embedded skins or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedSkins is set to false you will have to register the needed CSS files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.EnableEmbeddedBaseStylesheet">
            <summary>Gets or sets the value, indicating whether to render the link to the embedded base stylesheet of the control or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedBaseStylesheet is set to false you will have to register the needed control base CSS file by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Text">
            <summary>Gets the text content of the RadEditor control without the HTML markup.</summary>
            <value>
            The text displayed in the RadEditor without the HTML markup. The default is
            <strong>string.Empty</strong>.
            </value>
            <remarks>
            	<para>
                    The text returned by this property contains no HTML markup. If only the HTML
                    markup in the text is needed use the Html property.
                </para>
            	<para>
                    You can set the text content of the RadEditor by using the
                    Html property or inline between its opening and closing
                    tags. In this case setting the Html property in the code
                    behind will override the inline content.
                </para>
            </remarks>
            <example>
                For an example see the Html property.
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.EditModes">
            <summary>
            Gets or sets the value indicating which will be the available EditModes.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Html">
            <summary>
            	Gets or sets the text content of the RadEditor control inlcuding the HTML
            	markup. The Html property is deprecated in RadEditor.
            	Use <see cref="P:Telerik.Web.UI.RadEditor.Content">Content</see> instead.
            </summary>
            <value>
            	The text content of the RadEditor control including the HTML markup. The default is
            	<strong>string.Empty</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.Content">
            <summary>
            	Gets or sets the text content of the RadEditor control inlcuding the HTML
            	markup.
            </summary>
            <value>
            	The text content of the RadEditor control including the HTML markup. The default is
            	<strong>string.Empty</strong>.
            </value>
            <remarks>
            	<para>
                    The text returned by this property contains HTML markup. If only the text is
                    needed use the <see cref="P:Telerik.Web.UI.RadEditor.Text">Text</see> property.
                </para>
            	<para>You can also set the text content of the RadEditor inline between the
            		&lt;Content&gt;&lt;/Content&gt; tags. In this case setting this property
            		in the code behind will override the inline content.</para>
            </remarks>
            <example>
                This example demonstrates how to set the content of the RadEditor inline and the
                differences between the Content and <see cref="P:Telerik.Web.UI.RadEditor.Text">Text</see> 
                <para class="sourcecode">&lt;rade:RadEditor id="RadEditor1" runat="server"
                    &gt;<br/>
                    &lt;Content&gt;<br/>
                    Telerik RadEditor&lt;br&gt;<br/>
                    the best &lt;span style="COLOR: red"&gt;html editor&lt;/span&gt; in the
                    world<br/>
                    &lt;/Content&gt;<br/>
                    &lt;/rade:RadEditor&gt;<br/>
                    &lt;asp:button id="btnSave" runat="server" text="Submit"
                    onclick="btnSave_Click" /&gt;&lt;br /&gt;<br/>
                    Content:&lt;asp:label runat="server" id="LabelContent"&gt;&lt;/asp:label&gt;&lt;br
                    /&gt;<br/>
                    Text:&lt;asp:label runat="server" id="LabelText"&gt;&lt;/asp:label&gt;&lt;br
                    /&gt;<br/>
            	</para>
            	<code lang="VB" title="[New Example]">
            Private Sub btnSave_Click(sender As Object, e As System.EventArgs)
                'HtmlEncode the content of the editor to display the HTML tags
                LabelContent.Text = Server.HtmlEncode(RadEditor1.Content);
                LabelText.Text = Server.HtmlEncode(RadEditor1.Text);
            End Sub
                </code>
            	<code lang="CS" title="[New Example]">
            private void btnSave_Click(object sender, System.EventArgs e)
            {
                //HtmlEncode the content of the editor to display the HTML tags
                LabelContent.Text = Server.HtmlEncode(RadEditor1.Content);
                LabelText.Text = Server.HtmlEncode(RadEditor1.Text);
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.ImageManager">
            <summary>
            Contains the configuration of the ImageManager dialog.
            </summary>
            <value>
            An <see cref="T:Telerik.Web.UI.ImageManagerDialogConfiguration">ImageManagerDialogConfiguration</see>
            instance, containing the configuration of the ImageManager dialog
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.DocumentManager">
            <summary>
            Contains the configuration of the DocumentManager dialog.
            </summary>
            <value>
            An <see cref="T:Telerik.Web.UI.FileManagerDialogConfiguration">FileManagerDialogConfiguration</see>
            instance, containing the configuration of the DocumentManager dialog
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.FlashManager">
            <summary>
            Contains the configuration of the FlashManager dialog.
            </summary>
            <value>
            An <see cref="T:Telerik.Web.UI.FileManagerDialogConfiguration">FileManagerDialogConfiguration</see>
            instance, containing the configuration of the FlashManager dialog
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.SilverlightManager">
            <summary>
            Contains the configuration of the SilverlightManager dialog.
            </summary>
            <value>
            An <see cref="T:Telerik.Web.UI.FileManagerDialogConfiguration">FileManagerDialogConfiguration</see>
            instance, containing the configuration of the SilverlightManager dialog
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.MediaManager">
            <summary>
            Contains the configuration of the MediaManager dialog.
            </summary>
            <value>
            An <see cref="T:Telerik.Web.UI.FileManagerDialogConfiguration">FileManagerDialogConfiguration</see>
            instance, containing the configuration of the MediaManager dialog
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.TemplateManager">
            <summary>
            Contains the configuration of the TemplateManager dialog.
            </summary>
            <value>
            An <see cref="T:Telerik.Web.UI.FileManagerDialogConfiguration">FileManagerDialogConfiguration</see>
            instance, containing the configuration of the TemplateManager dialog
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.SpellCheckSettings">
            <summary>
            Contains the configuration of the spell checker.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.DialogDefinitions">
            <summary>
            Gets the collection of the dialog definitions (configurations) of the editor.
            </summary>
            <value>
            A DialogDefinitionDictionary, specifying the definitions of the dialogs of the editor.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.StripFormattingOnPaste">
            <summary>
            This property is obsolete. Please, use the StripFormattingOptions property instead.
            </summary>
            <value>
            	The default value is <strong>EditorStripFormattingOptions.None</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.StripFormattingOptions">
            <summary>
            Gets or sets the value indicating how the editor should clear the HTML formatting
            when the user pastes data into the content area.
            </summary>
            <value>
            	The default value is <strong>EditorStripFormattingOptions.None</strong>.
            </value>
            <remarks>
            	<para>
            		<see cref="T:Telerik.Web.UI.EditorStripFormattingOptions">EditorStripFormattingOptions</see>
                    enum members
                    <list type="table">
            			<listheader>
            				<term>Member</term>
            				<description>Description</description>
            			</listheader>
            			<item>
            				<term><strong>None</strong></term>
            				<description>Doesn't strip anything, asks a question when MS Word
                            formatting was detected.</description>
            			</item>
            			<item>
            				<term><strong>NoneSupressCleanMessage</strong></term>
            				<description>Doesn't strip anything and does not ask a
                            question.</description>
            			</item>
            			<item>
            				<term><strong>MSWord</strong></term>
            				<description>Strips only MSWord related attributes and
                            tags.</description>
            			</item>
            			<item>
            				<term><strong>MSWordNoFonts</strong></term>
            				<description>Strips the MSWord related attributes and tags and font
                            tags.</description>
            			</item>
            			<item>
            				<term><strong>MSWordRemoveAll</strong></term>
            				<description>Strips MSWord related attributes and tags, font tags and
                            font size attributes.</description>
            			</item>
            			<item>
            				<term><strong>Css</strong></term>
            				<description>Removes style attributes.</description>
            			</item>
            			<item>
            				<term><strong>Font</strong></term>
            				<description>Removes Font tags.</description>
            			</item>
            			<item>
            				<term><strong>Span</strong></term>
            				<description>Clears Span tags.</description>
            			</item>
            			<item>
            				<term><strong>AllExceptNewLines</strong></term>
            				<description>Clears all tags except "br" and new lines (\n) on paste.</description>
            			</item>
            			<item>
            				<term><strong>All</strong></term>
            				<description>Remove all HTML formatting.</description>
            			</item>
            		</list>
            	</para>
            	<para><strong>Note:</strong> In Gecko-based browsers you will see the mandatory
                dialog box where you need to paste the content.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.DialogHandlerUrl">
            <summary>
            Gets or sets the URL which the AJAX call will be made to. Check the help for more information.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.DialogsCssFile">
            <summary>
            Gets or sets the location of a CSS file, that will be added in the dialog window. If you need to include 
            more than one file, use the CSS @import url(); rule to add the other files from the first.
            <remarks>This property is needed if you are using a custom skin. It allows you to include your custom skin
            CSS in the dialogs, which are separate from the main page.</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.DialogsScriptFile">
            <summary>
            Gets or sets the location of a JavaScript file, that will be added in the dialog window. If you need to include 
            more than one file, you will need to combine the scripts into one first.
            <remarks>This property is needed if want to override some of the default functionality without loading the dialog
            from an external ascx file.</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.DialogOpener">
            <summary>
            A read-only property that returns the DialogOpener instance used in the editor control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.ContentFilters">
            <summary>
            Gets or sets a value indicating which content filters will be active when the editor is loaded in the browser.
            </summary>
            <value>
            	The default value is <strong>EditorFilters.DefaultFilters</strong>.
            </value>
            <remarks>
            	<para><see cref="T:Telerik.Web.UI.EditorStripFormattingOptions">EditorFilters</see> enum members
            		<list type="table">
            			<listheader>
            				<term>Member</term>
            				<description>Description</description>
            			</listheader>
            			<item>
            				<term><strong>RemoveScripts</strong></term>
            				<description>This filter removes script tags from the editor content. Disable the filter if you want to insert script tags in the content.</description>
            			</item>
            			<item>
            				<term><strong>MakeUrlsAbsolute</strong></term>
            				<description>This filter makes all URLs in the editor content absolute (e.g. "http://server/page.html" instead of "page.html"). This filter is DISABLED by default.</description>
            			</item>
            			<item>
            				<term><strong>FixUlBoldItalic</strong></term>
            				<description>This filter changes the deprecated u tag to a span with CSS style.</description>
            			</item>
            			<item>
            				<term><strong>IECleanAnchors</strong></term>
            				<description>Internet Explorer only - This filter removes the current page url from all anchor(#) links to the same page.</description>
            			</item>
            			<item>
            				<term><strong>FixEnclosingP</strong></term>
            				<description>This filter removes a parent paragraph tag if the whole content is inside it.</description>
            			</item>
            			<item>
            				<term><strong>MozEmStrong</strong></term>
            				<description>This filter changes b to strong and i to em in Mozilla browsers.</description>
            			</item>
            			<item>
            				<term><strong>ConvertFontToSpan</strong></term>
            				<description>This filter changes deprecated font tags to compliant span tags.</description>
            			</item>
            			<item>
            				<term><strong>ConvertToXhtml</strong></term>
            				<description>This filter converts the HTML from the editor content area to XHTML.</description>
            			</item>
            			<item>
            				<term><strong>IndentHTMLContent</strong></term>
            				<description>This filter indents the HTML content so it is more readable when you view the code.</description>
            			</item>
            			<item>
            				<term><strong>OptimizeSpans</strong></term>
            				<description>This filter tries to decrease the number of nested spans in the editor content.</description>
            			</item>
            			<item>
            				<term><strong>DefaultFilters</strong></term>
            				<description>The default editor behavior. All content filters except MakeUrlsAbsolute are activated.</description>
            			</item>
            		</list>
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadEditor.ExternalDialogsPath">
            <summary>
            Gets or sets a value indicating where the editor will look for its dialogs.
            </summary>
            <value>
            A relative path to the dialogs location. For example: "~/controls/RadEditorDialogs/".
            </value>
            <remarks>
            	<para>If specified, the <strong>ExternalDialogsPath</strong>
            		property will allow you to customize and load the editor dialogs from normal ASCX files.</para>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadEditor.FileDelete">
            <summary>
            This event is raised before a file is deleted using the current content provider.
            <remarks>The file delete will be canceled if you return false from the event handler.</remarks>
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadEditor.FileUpload">
            <summary>
            This event is raised before the file is stored using the current content provider.
            <remarks>The file upload will be canceled if you return false from the event handler.</remarks>
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadEditor.TextChanged">
            <summary>
            Occurs when the content of the RadEditor changes between posts to the server.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorToolType.Button">
            <summary>
            A tool which will be rendered as a button
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorToolType.DropDown">
            <summary>
            A tool which will be rendered as a dropdown
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorToolType.SplitButton">
            <summary>
            A tool which will be rendered as a split button
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorToolType.Separator">
            <summary>
            A tool which will be rendered as a separator
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorToolType.ToolStrip">
            <summary>
            A tool which will be rendered as a toolstrip
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorToolGroup">
            <summary>
            Represents logical group of EditorTool objects. The default ToolAdapter will
            render the EditorToolGroup object as a toolbar.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorToolGroup.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolGroup.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolGroup.GetAllTools">
            <summary>
            Gets all tools inside the group.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorToolGroup.FindTool(System.String)">
            <summary>
            Finds the tool with the given name.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorToolGroup.Contains(System.String)">
            <summary>
            Determines whether the group a tool with the specified name.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorToolGroup.LoadViewState(System.Object)">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolGroup.SaveViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolGroup.TrackViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorToolGroup.SetDirty">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorToolGroup.Attributes">
            <summary>
            Gets the custom attributes which will be serialized on the client.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.EditorToolGroup.Tag">
            <summary>
            Gets or sets a string which will be used by the ToolAdapter to associate
            the group with the adapter's virtual structure. In the default adapter this 
            is the name of the docking zone where the toolbar should be placed.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.EditorToolGroup.Tools">
            <summary>
            Gets the children of the EditorToolGroup.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorToolGroupCollection">
            <summary>
            State managed collection of EditorToolGroup objects
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorTool">
            <summary>
            Represents a single RadEditor tool.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorTool.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.EditorTool"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorTool.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.EditorTool"/> class.
            </summary>
            <param name="name">The name of the tool.</param>
        </member>
        <member name="M:Telerik.Web.UI.EditorTool.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.EditorTool"/> class.
            </summary>
            <param name="name">The name of the tool.</param>
            <param name="shortCut">The shortcut for the tool.</param>
        </member>
        <member name="M:Telerik.Web.UI.EditorTool.EnsureName">
            <summary>
            Throws an exception if the EditorTool has no name.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.EditorTool.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Telerik.Web.UI.EditorTool"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.EditorTool.Name">
            <summary>
            Gets or sets the <see cref="T:Telerik.Web.UI.EditorTool"/> name. It will be used by RadEditor to find
            the command which should be executed when the user clicks this tool.
            </summary>
            <value>The tool name.</value>
        </member>
        <member name="P:Telerik.Web.UI.EditorTool.Text">
            <summary>
            Gets or sets the title of the <see cref="T:Telerik.Web.UI.EditorTool"/>. The default ToolAdapter will 
            render the value of this property as a tooltip or static text near the
            tool icon.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Telerik.Web.UI.EditorTool.ShortCut">
            <summary>
            Gets or sets the keyboard shortcut which will invoke the associated
            RadEditor command.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.EditorTool.ShowIcon">
            <summary>
            Gets or sets a value indicating whether the tool icon should be displayed.
            </summary>
            <value><c>true</c> if the tool icon should be displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.EditorTool.ShowText">
            <summary>
            Gets or sets a value indicating whether the tool text should be displayed.
            </summary>
            <value><c>true</c> if the tool text should be displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.EditorTool.Type">
            <summary>
            Gets or sets the type of the tool - by default it is a button		
            </summary>
            <value>The type of the tool on the client.</value>
        </member>
        <member name="T:Telerik.Web.UI.DisplayFormatPosition">
            <summary>
            Summary description for DisplayFormatPosition.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.InputClientEvents.OnEnumerationChanged">
            <summary>
            Fired whenever the value of any enumeration mask part has changed.
            </summary>
            <remarks>
            Note this event is effective only for the RadMaskedTextBox control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.InputClientEvents.OnMoveUp">
            <summary>
            Fired whenever the user increases the value of any enumeration or numeric range mask part of RadMaskedTextBox 
            (with either keyboard arrow keys or mouse wheel).
            </summary>
            <remarks>
            Note this event is effective only for the RadMaskedTextBox control.
            </remarks> 
        </member>
        <member name="P:Telerik.Web.UI.InputClientEvents.OnMoveDown">
            <summary>
            Fired whenever the user decreases the value of any enumeration or numeric range mask part of RadMaskedTextBox 
            (with either keyboard arrow keys or mouse wheel).
            </summary>
            <remarks>
            Note this event is effective only for the RadMaskedTextBox control.
            </remarks>  
        </member>
        <member name="T:Telerik.Web.UI.DigitMaskPart">
            <summary>Represents a single character, digit only mask part.</summary>
            <example>
                This example demonstrates how to add a <strong>DigitMaskPart</strong> object in the
                <strong>MaskParts</strong> property of RadMaskedTextBox.
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            { 
                DigitMaskPart digitPart = new DigitMaskPart();
                RadMaskedTextBox1.MaskParts.Add(digitPart);
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                Dim digitPart As New DigitMaskPart()
                RadMaskedTextBox1.MaskParts.Add(digitPart)
            End Sub
                </code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.MaskPart">
            <summary>The abstract base class of all mask parts.</summary>
            <remarks>This class is not intended to be used directly.</remarks>
        </member>
        <member name="P:Telerik.Web.UI.MaskPart.Value">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.DigitMaskPart.ToString">
            <summary>
            Returns the friendly name of the part.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.DigitMaskPart.Value">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.EnumerationMaskPart">
            <summary>
            Represents a MaskPart object which accepts only a predefined set of
            options.
            </summary>
            <example>
                This example demonstrates how to add an <strong>EnumerationMaskPart</strong> object
                in the <strong>MaskParts</strong> property of RadMaskedTextBox. 
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            { 
                EnumerationMaskPart enumPart = new EnumerationMaskPart();
                enumPart.Items.Add("Mon");
                enumPart.Items.Add("Two");
                enumPart.Items.Add("Wed");
                enumPart.Items.Add("Thu");
                enumPart.Items.Add("Fri");
                enumPart.Items.Add("Sat");
                enumPart.Items.Add("Sun");
                
                RadMaskedTextBox1.MaskParts.Add(enumPart);
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                Dim  enumPart As New EnumerationMaskPart
                enumPart.Items.Add("Mon")
                enumPart.Items.Add("Two")
                enumPart.Items.Add("Wed")
                enumPart.Items.Add("Thu")
                enumPart.Items.Add("Fri")
                enumPart.Items.Add("Sat")
                enumPart.Items.Add("Sun")
                
                RadMaskedTextBox1.MaskParts.Add(enumPart)
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.EnumerationMaskPart.ToString">
            <summary>Returns the friendly name of the part.</summary>
        </member>
        <member name="P:Telerik.Web.UI.EnumerationMaskPart.Items">
            <summary>
            Gets the options collection of the part.
            </summary>		
        </member>
        <member name="P:Telerik.Web.UI.EnumerationMaskPart.Value">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.FreeMaskPart">
            <summary>
            Represents a single character MaskPart object which accepting any
            character.
            </summary>
            <example>
                This example demonstrates how to add a <strong>FreeMaskPart</strong> object in the
                <strong>MaskParts</strong> property of RadMaskedTextBox. 
                <code lang="CS" title=" ">
            private void Page_Load(object sender, System.EventArgs e)
            { 
                FreeMaskPart freePart = new FreeMaskPart();
                RadMaskedTextBox1.MaskParts.Add(freePart);
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                Dim fixedPart As New FreeMaskPart()
                RadMaskedTextBox1.MaskParts.Add(fixedPart)
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.FreeMaskPart.ToString">
            <summary>
            Returns the friendly name of the part.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.LiteralMaskPart">
            <summary>Represents a multi character MaskPart whose content cannot be modified.</summary>
            <example>
                This example demonstrates how to add a <strong>LiteralMaskPart</strong> object in
                the <strong>MaskParts</strong> property of RadMaskedTextBox.
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            { 
                LiteralMaskPart literalPart = new LiteralMaskPart();
                literalPart.Text = "(";
                RadMaskedTextBox1.MaskParts.Add(literalPart);
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                Dim literalPart As New LiteralMaskPart()
                RadMaskedTextBox1.MaskParts.Add(literalPart)
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.LiteralMaskPart.ToString">
            <summary>
            Returns the friendly name of the part.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.LiteralMaskPart.Value">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.LiteralMaskPart.Text">
            <summary>Gets or sets the string that the LiteralMaskPart will render.</summary>
        </member>
        <member name="T:Telerik.Web.UI.LowerMaskPart">
            <summary>
            Represents a single character MaskPart. The character is converted to lower upon
            input.
            </summary>
            <example>
                This example demonstrates how to add a <strong>LowerMaskPart</strong> object in the
                <strong>MaskParts</strong> property of RadMaskedTextBox. 
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            { 
                LowerMaskPart lowerPart = new LowerMaskPart();
                RadMaskedTextBox1.MaskParts.Add(lowerPart);
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                Dim lowerPart As New LowerMaskPart()
                RadMaskedTextBox1.MaskParts.Add(lowerPart)
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.LowerMaskPart.ToString">
            <summary>
            Returns the friendly name of the part.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.LowerMaskPart.Value">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.MaskPartCollection">
            <summary>Represents the collection of mask parts in a RadMaskedTextBox.</summary>
        </member>
        <member name="M:Telerik.Web.UI.MaskPartCollection.Add(Telerik.Web.UI.MaskPart)">
            <summary>
                Appends the specified <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see> to
                the end of the collection.
            </summary>
            <param name="part">
                The <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see> to append to the
                collection.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.MaskPartCollection.Insert(System.Int32,Telerik.Web.UI.MaskPart)">
            <summary>
                Inserts the specified <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see> in
                the collection at the specified index location.
            </summary>
            <param name="index">
                The location in the collection to insert the
                <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see>.
            </param>
            <param name="part">
                The <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see> to add to the
                collection.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.MaskPartCollection.Contains(Telerik.Web.UI.MaskPart)">
            <summary>Determines whether the collection contains the specified item</summary>
            <returns>
            	<strong>true</strong> if the collection contains the specified
                <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see>; otherwise
                <strong>false</strong>.
            </returns>
            <param name="part">
                The <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see> to search for in the
                collection.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.MaskPartCollection.Remove(Telerik.Web.UI.MaskPart)">
            <summary>
            	<para>
                    Removes the specified <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see>
                    from the collection.
                </para>
            </summary>
            <param name="part">
                The <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see> to remove from the
                collection.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.MaskPartCollection.IndexOf(Telerik.Web.UI.MaskPart)">
            <summary>
                Determines the index value that represents the position of the specified
                <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see> in the collection.
            </summary>
            <returns>
                The zero-based index position of the specified
                <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see> in the collection.
            </returns>
            <param name="part">
                A <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see> to search for in the
                collection.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.MaskPartCollection.Owner">
            <summary>
            Gets or sets the <strong>RadMaskedInputControl</strong>, which uses the
            collection.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.MaskPartCollection.Item(System.Int32)">
            <summary>
                Gets a <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see> at the specified
                index in the collection.
            </summary>
            <value>
                Use this indexer to get a <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see>
                from the
                <see cref="!:Telerik.WebControls.MaskPartCollection">MaskPartCollection</see> at the
                specified index, using array notation.
            </value>
            <param name="index">
                The zero-based index of the <see cref="!:Telerik.WebControls.MaskPart">MaskPart</see>
                to retrieve from the collection.
            </param>
        </member>
        <member name="T:Telerik.Web.UI.NumericRangeMaskPart">
            <summary>Represents a MaskPart which accepts numbers in a specified range.</summary>
            <example>
                This example demonstrates how to add a <strong>NumericRangeMaskPart</strong> object
                in the <strong>MaskParts</strong> collection of RadMaskedTextBox. 
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            { 
                NumericRangeMaskPart rangePart = new NumericRangeMaskPart();
                rangePart.LowerLimit = 0;
                rangePart.UpperLimit = 255;
                RadMaskedTextBox1.MaskParts.Add(rangePart);
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                Dim rangePart As New NumericRangeMaskPart()
                rangePart.LowerLimit = 0
                rangePart.UpperLimit = 255
                RadMaskedTextBox1.MaskParts.Add(rangePart)
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.NumericRangeMaskPart.ToString">
            <summary>Returns the friendly name of the part.</summary>
        </member>
        <member name="P:Telerik.Web.UI.NumericRangeMaskPart.Value">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.NumericRangeMaskPart.LowerLimit">
            <summary>Gets or sets the smallest possible value the part can accept.</summary>
            <value>
            An integer representing the smallest acceptable number that the
            NumericRangeMaskPart can accept. The default value is 0.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.NumericRangeMaskPart.UpperLimit">
            <summary>Gets or sets the largest possible value the part can accept.</summary>
            <value>
            An integer representing the largest acceptable number that the
            NumericRangeMaskPart can accept. The default value is 0.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.UpperMaskPart">
            <summary>
            Represents a single character MaskPart. The character is converted to upper upon
            input. .
            </summary>
            <example>
                This example demonstrates how to add an <strong>UpperMaskPart</strong> object in
                the <strong>MaskParts</strong> collection of RadMaskedTextBox. 
                <code lang="CS">
            private void Page_Load(object sender, System.EventArgs e)
            { 
                UpperMaskPart upperPart = new UpperMaskPart();
                RadMaskedTextBox1.MaskParts.Add(upperPart);
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
                Dim upperPart As New UpperMaskPart()
                RadMaskedTextBox1.MaskParts.Add(upperPart)
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.UpperMaskPart.ToString">
            <summary>Returns the friendly name of the part.</summary>
        </member>
        <member name="T:Telerik.Web.UI.NumericRangeAlign">
            <summary>
            Numeric range alignment options
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.NumericRangeAlign.Left">
            <summary>
            The numbers are aligned left
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.NumericRangeAlign.Right">
            <summary>
            The numbers are aligned right
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadMaskedTextBox">
            <summary>
            Telerik RadInput
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.NumberFormatSettings.DecimalSeparator">
            <summary>Gets or sets the string to use as the decimal separator in values.</summary>
            <value>The string to use as the decimal separator in values.</value>
            <exception cref="!:" caption="ArgumentException">The property is being set to an empty string.</exception>
            <exception cref="!:" caption="ArgumentNullException">The property is being set to null. </exception>
        </member>
        <member name="P:Telerik.Web.UI.NumberFormatSettings.CultureNativeDecimalSeparator">
            <summary>Gets the native decimal separator of the control's culture.</summary>
        </member>
        <member name="P:Telerik.Web.UI.NumberFormatSettings.DecimalDigits">
            <summary>Gets or sets the number of decimal places to use in numeric values</summary>
            <value>The number of decimal places to use in values.</value>
            <permission cref="!:" caption="ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 99. </permission>
        </member>
        <member name="P:Telerik.Web.UI.NumberFormatSettings.GroupSizes">
            <summary>
            Gets or sets the number of digits in each group to the left of the decimal in
            values.
            </summary>
            <value>The number of digits in each group to the left of the decimal in values.</value>
            <exception cref="!:" caption="ArgumentNullException">The property is being set to null. </exception>
        </member>
        <member name="P:Telerik.Web.UI.NumberFormatSettings.GroupSeparator">
            <summary>
            Gets or sets the string that separates groups of digits to the left of the
            decimal in values.
            </summary>
            <value>
            The string that separates groups of digits to the left of the decimal in
            values.
            </value>
            <exception cref="!:" caption="ArgumentNullException">The property is being set to null. </exception>
        </member>
        <member name="P:Telerik.Web.UI.NumberFormatSettings.NegativePattern">
            <summary>Gets or sets the format pattern for negative values.</summary>
            <value>The format pattern for negative percent values.</value>
            <exception cref="!:" caption="ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 11. </exception>
        </member>
        <member name="P:Telerik.Web.UI.NumberFormatSettings.PositivePattern">
            <summary>Gets or sets the format pattern for positive values.</summary>
            <value>The format pattern for positive percent values. The</value>
            <exception cref="!:" caption="ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 3. </exception>
        </member>
        <member name="T:Telerik.Web.UI.RadNumericTextBox">
            <summary>
            Telerik RadNumericTextBox
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadNumericTextBox.NegativeStyle">
            <summary>
            	<para>Gets the style properties for RadInput when when the text is
                negative.</para>
            </summary>
            <value>
            A Telerik.WebControls.TextBoxStyle object that represents the style properties
            for RadInput control. The default value is an empty TextBoxStyle object.
            </value>
            <example>
            	<para>The following code example demonstrates how to set NegativeStyle
                property:</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;<br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;  <br/>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/><br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;<br/>&lt;head runat="server"&gt;<br/>    &lt;title&gt;Untitled Page&lt;/title&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;radI:RadTextBox Text="-1" EmptyMessage="EmptyMessage" ID="RadNumericTextBox1" runat="server"&gt;<br/>            &lt;NegativeStyle BackColor="red" /&gt;<br/>        &lt;/radI:RadTextBox&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
            <remarks>
            	<para>Use this property to provide a custom style for the negative state of
                RadInput control. Common style attributes that can be adjusted include
                foreground color, background color, font, and alignment within the RadInput.
                Providing a different style enhances the appearance of the RadInput
                control.</para>
            	<para>Negative style properties in the RadInput control are inherited from one
                style property to another through a hierarchy. For example, if you specify a red
                font for the EnabledStyle property, all other style properties in the RadInput
                control will also have a red font. This allows you to provide a common appearance
                for the control by setting a single style property. You can override the inherited
                style settings for an item style property that is higher in the hierarchy by
                setting its style properties. For example, you can specify a blue font for the
                NegativeStyle property, overriding the red font specified in the EnabledStyle
                property.</para>
            	<para>To specify a custom style, place the &lt;NegativeStyle&gt; tags between the
                opening and closing tags of the RadInput control. You can then list the style
                attributes within the opening &lt;NegativeStyle&gt; tag.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadNumericTextBox.Value">
            <summary>Gets or sets the value of the RadInput control.</summary>
            <remarks>
            	<para>Use the Text property to specify or determine the text displayed in the
                RadInput control. To limit the number of characters accepted by the control, set
                the MaxLength property. If you want to prevent the text from being modified, set
                the ReadOnly property.</para>
            	<para>The value of this property, when set, can be saved automatically to a
                resource file by using a designer tool.</para>
            </remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
            <value>
            null if the Text property is Empty.The Value property are Nullable Double type. A
            nullable type can represent the normal range of values for its underlying value type,
            plus an additional null value. For example, a Nullable&lt;Double&gt;, pronounced
            "Nullable of Double," can be assigned any value from -2^46 (-70368744177664) to
            2^46 (70368744177664), or it can be assigned the null value.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadNumericTextBox.DbValue">
            <summary>
            Gets or sets the date content of RadNumericTextBox in a database friendly
            way.
            </summary>
            <value>An object that represents the Text property. The default value is null.</value>
            <remarks>
            This property behaves exactly like the Value property. The only difference is
            that it will not throw an exception if the new value is not double object (or null). If
            you assign null to the control you will see blank RadInput.
            </remarks>
            <example>
            	<para>The following example demonstrates how to bind the RadNumericTextBox:</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;<br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/><br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;<br/>&lt;head runat="server"&gt;<br/>&lt;title&gt;Untitled Page&lt;/title&gt;<br/>&lt;script runat="server"&gt;<br/>protected void Page_Load(object sender, EventArgs e)<br/>{<br/>  System.Data.DataTable table = new System.Data.DataTable();<br/>  table.Columns.Add("num");<br/>
            		<br/>    System.Data.DataRow row = table.NewRow();<br/>   row["num"] = (double)12.56;<br/> table.Rows.Add(row);<br/>
            		<br/>    row = table.NewRow();<br/>       row["num"] = (int)12;<br/>       table.Rows.Add(row);<br/>
            		<br/>    row = table.NewRow();<br/>       row["num"] = DBNull.Value;<br/>  table.Rows.Add(row);<br/>
            		<br/>    row = table.NewRow();<br/>       row["num"] = "33";<br/>  table.Rows.Add(row);<br/>
            		<br/>    row = table.NewRow();<br/>       table.Rows.Add(row);<br/>
            		<br/>    Repeater1.DataSource = table;<br/>       Repeater1.DataBind();<br/>}<br/>&lt;/script&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>&lt;form id="form1" runat="server"&gt;<br/>    &lt;asp:Repeater runat="server" ID="Repeater1"&gt;<br/>          &lt;ItemTemplate&gt;<br/>                        &lt;radI:RadNumericTextBox DbValue='&lt;/%# Bind("num") /%&gt;'<br/>                             ID="RadNumericTextBox1" runat="server"&gt;<br/>                  &lt;/radI:RadNumericTextBox&gt;<br/>             &lt;/ItemTemplate&gt;<br/>       &lt;/asp:Repeater&gt;<br/>&lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            	<para>[VisualBasic]</para>
            	<pre>
            &lt;/%@ Page Language="VB" /%&gt;<br/><br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/><br/>&lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/><br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;<br/>&lt;head runat="server"&gt;<br/>&lt;title&gt;Untitled Page&lt;/title&gt;<br/>&lt;script runat="server"&gt;<br/>Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load<br/>      Dim table As System.Data.DataTable = New System.Data.DataTable<br/>      table.Columns.Add("num")<br/>    Dim row As System.Data.DataRow = table.NewRow<br/>       row("num") = CType(12.56,Double)<br/>    table.Rows.Add(row)<br/> row = table.NewRow<br/>  row("num") = CType(12,Integer)<br/>      table.Rows.Add(row)<br/> row = table.NewRow<br/>  row("num") = DBNull.Value<br/>   table.Rows.Add(row)<br/> row = table.NewRow<br/>  row("num") = "33"<br/>   table.Rows.Add(row)<br/> row = table.NewRow<br/>  table.Rows.Add(row)<br/> Repeater1.DataSource = table<br/>        Repeater1.DataBind<br/>End Sub<br/>&lt;/script&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>&lt;form id="form1" runat="server"&gt;<br/> &lt;asp:Repeater runat="server" ID="Repeater1"&gt;<br/>          &lt;ItemTemplate&gt;<br/>                        &lt;radI:RadNumericTextBox DbValue='&lt;/%# Bind("num") /%&gt;'<br/>                             ID="RadNumericTextBox1" runat="server"&gt;<br/>                  &lt;/radI:RadNumericTextBox&gt;<br/>             &lt;/ItemTemplate&gt;<br/>       &lt;/asp:Repeater&gt;<br/>&lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadNumericTextBox.ShowSpinButtons">
            <summary>
            Gets or sets a value indicating whether the button is displayed in the
            RadInput control.
            </summary>
            <value>
            true if the button is displayed; otherwise, false. The default value is true,
            however this property is only examined when the ButtonTemplate property is not a null
            reference (Nothing in Visual Basic).
            </value>
            <remarks>
            	<para>Use the ShowButton property to specify whether the button is displayed in the
                RadInput control.</para>
            	<para>The contents of the button are controlled by the ButtonTemplate
                property.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the ShowButton property to
                display the button in the RadInput control.</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;<br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" &gt;<br/>
            		<br/>&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;<br/>&lt;head id="Head1" runat="server"&gt;<br/>    &lt;title&gt;Untitled Page&lt;/title&gt;<br/>    &lt;script language="javascript" type="text/javascript"&gt;<br/>    function Click(sender)<br/>    {<br/>        alert("click");<br/>    }<br/>    &lt;/script&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;radI:RadTextBox ShowButton="true" ID="RadNumericTextBox1" runat="server"&gt;<br/>            &lt;ClientEvents OnButtonClick="Click" /&gt;<br/>            &lt;ButtonTemplate&gt;<br/>               &lt;input type="button" value="click here"  /&gt;<br/>            &lt;/ButtonTemplate&gt;<br/>        &lt;/radI:RadTextBox&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
            </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements> 
        </member>
        <member name="P:Telerik.Web.UI.RadNumericTextBox.DataType">
            <summary>Type of object that is used to wrap the Db<tt>Value</tt> property.</summary>
            <remarks>
            	<div class="section" id="remarksSection" name="collapseableSection">
            		<para class="body">That property is designed to be used when this control is
                    embedded into grid or other data-bound control.</para>
            		<para class="note">Default value is set to the <tt>Double</tt>.</para>
            	</div>
            </remarks>
            <value>Default value is set to the <tt>Double</tt>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadNumericTextBox.Culture">
            <summary>Gets or sets the culture used by RadNumericTextBox to format the numburs.</summary>
            <value>
            A CultureInfo object that represents the current culture used. The default value
            is System.Threading.Thread.CurrentThread.CurrentUICulture.
            </value>
            <example>
                The following example demonstrates how to use the Culture property. 
                <code lang="CS" title="C#">
            private void Page_Load(object sender, System.EventArgs e)
            {
            RadNumericTextBox.Culture = new CultureInfo("en-US");
            }
                </code>
            	<code lang="VB" title="VB">
            Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
            RadNumericTextBox1.Culture = New CultureInfo("en-US")
            End Sub
                </code>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadNumericTextBox.MaxValue">
            <summary>Gets or sets the largest possible value of a RadNumericTextBox.</summary>
            <value>The default value is positive 2^46.</value>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadNumericTextBox.MinValue">
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
            <summary>
            	<br/>
            Gets or sets the smallest possible value of a RadNumericTextBox.
            </summary>
            <value>The default value is negative -2^46.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadNumericTextBox.Type">
            <summary>Gets or sets the numeric type of the RadNumericTextBox.</summary>
            <value>One of the NumericType enumeration values. The default is Number.</value>
            <remarks>
            Use the Type property to determine the numeric type that the RadNumericTextBox
            represents. The Type property is represented by one of the NumericType enumeration
            values.
            </remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadNumericTextBox.ButtonDownContainer">
            <summary>Gets control that contains the up button of RadInput control</summary>
            <remarks>The ShowButton or ShowSpinButton properties must be set to true</remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadNumericTextBox.ButtonUpContainer">
            <summary>Gets control that contains the up button of RadInput control</summary>
            <remarks>The ShowButton or ShowSpinButton properties must be set to true</remarks>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="T:Telerik.Web.UI.SelectionOnFocus">
            <summary>
            Summary description for AutoPostBackControl.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTextBox">
            <summary>
            Telerik RadTextBox
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTextBox.TextMode">
            <summary>
            Gets or sets the behavior mode (single-line, multiline, or password) of the
            RadTextBox control.
            </summary>
            <value>
            One of the RadInputTextBoxMode enumeration values. The default value is
            SingleLine.
            </value>
            <remarks>
            	<para>Use the TextMode property to specify whether a RadTextBox control is
                displayed as a single-line, multiline, or password text box.</para>
            	<para>When the RadTextBox control is in multiline mode, you can control the number
                of rows displayed by setting the Rows property. You can also specify whether the
                text should wrap by setting the Wrap property.</para>
            	<para>If the RadTextBox control is in password mode, all characters entered in the
                control are masked.</para>
            	<para>This property cannot be set by themes or style sheet themes</para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="System.ArgumentOutOfRangeException">The specified mode is not one of the TextBoxMode enumeration values.</exception>
            <example>
                The following code example demonstrates how to use the RadTextMode property to
                specify a multiline text box. This example has a text box that accepts user input,
                which is a potential security threat. By default, ASP.NET Web pages validate that
                user input does not include script or HTML elements. 
                <code lang="VB" title="Visual Basic">
            &lt;%@ Page Language="VB" AutoEventWireup="True" %&gt;
             
            &lt;%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
            &lt;html&gt;
            &lt;head&gt;
                &lt;title&gt;MultiLine RadTextBox Example &lt;/title&gt;
             
                &lt;script runat="server"&gt;
             
                  Protected Sub SubmitButton_Click(sender As Object, e As EventArgs )
                           
                     Message.Text = "Thank you for your comment: &lt;br /&gt;" + Comment.Text
             
                  End Sub
             
                  Protected Sub Check_Change(sender As Object, e As EventArgs )
                     
                     Comment.Wrap = WrapCheckBox.Checked
                     Comment.ReadOnly = ReadOnlyCheckBox.Checked
             
                  End Sub
             
                &lt;/script&gt;
             
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                    &lt;h3&gt;
                        MultiLine RadTextBox Example
                    &lt;/h3&gt;
                    Please enter a comment and click the submit button.
                    &lt;br /&gt;
                    &lt;br /&gt;
                    &lt;radI:RadTextBox ID="Comment" TextMode="MultiLine" Columns="50" Rows="5" runat="server" /&gt;
                    &lt;br /&gt;
                    &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Comment"
                        ErrorMessage="Please enter a comment.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;
                    &lt;asp:CheckBox ID="WrapCheckBox" Text="Wrap Text" Checked="True" AutoPostBack="True"
                        OnCheckedChanged="Check_Change" runat="server" /&gt;
                      
                    &lt;asp:CheckBox ID="ReadOnlyCheckBox" Text="ReadOnly" Checked="False" AutoPostBack="True"
                        OnCheckedChanged="Check_Change" runat="server" /&gt;
                      
                    &lt;asp:Button ID="SubmitButton" Text="Submit" OnClick="SubmitButton_Click" runat="server" /&gt;
                    &lt;hr /&gt;
                    &lt;asp:Label ID="Message" runat="server" /&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            	<code lang="CS" title="C#">
            &lt;%@ Page Language="C#" AutoEventWireup="True" %&gt;
             
            &lt;%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
            &lt;html&gt;
            &lt;head&gt;
                &lt;title&gt;MultiLine RadTextBox Example &lt;/title&gt;
             
                &lt;script runat="server"&gt;
             
                    protected void SubmitButton_Click(Object sender, EventArgs e)
                    {
             
                        Message.Text = "Thank you for your comment: &lt;br /&gt;" + Comment.Text;
             
                    }
             
                    protected void Check_Change(Object sender, EventArgs e)
                    {
             
                        Comment.Wrap = WrapCheckBox.Checked;
                        Comment.ReadOnly = ReadOnlyCheckBox.Checked;
             
                    }
             
                &lt;/script&gt;
             
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                    &lt;h3&gt;
                        MultiLine RadTextBox Example
                    &lt;/h3&gt;
                    Please enter a comment and click the submit button.
                    &lt;br /&gt;
                    &lt;br /&gt;
                    &lt;radI:RadTextBox ID="Comment" TextMode="MultiLine" Columns="50" Rows="5" runat="server" /&gt;
                    &lt;br /&gt;
                    &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Comment"
                        ErrorMessage="Please enter a comment.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;
                    &lt;asp:CheckBox ID="WrapCheckBox" Text="Wrap Text" Checked="True" AutoPostBack="True"
                        OnCheckedChanged="Check_Change" runat="server" /&gt;
                      
                    &lt;asp:CheckBox ID="ReadOnlyCheckBox" Text="ReadOnly" Checked="False" AutoPostBack="True"
                        OnCheckedChanged="Check_Change" runat="server" /&gt;
                      
                    &lt;asp:Button ID="SubmitButton" Text="Submit" OnClick="SubmitButton_Click" runat="server" /&gt;
                    &lt;hr /&gt;
                    &lt;asp:Label ID="Message" runat="server" /&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadTextBox.AutoCompleteType">
            <summary>
            Gets or sets a value that indicates the AutoComplete behavior of the RadTextBox
            control
            </summary>
            <value>
            One of the System.Web.UI.WebControls.AutoCompleteType enumeration values,
            indicating the AutoComplete behavior for the RadTextBox control. The default value is
            None.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="System.ArgumentOutOfRangeException">The selected value is not one of the System.Web.UI.WebControls.AutoCompleteType enumeration values.</exception>
            <remarks>
            	<para>To assist with data entry, Microsoft Internet Explorer 5 and later and
                Netscape support a feature called AutoComplete. AutoComplete monitors a RadTextBox
                and creates a list of values entered by the user. When the user returns to the
                RadTextBox at a later time, the list is displayed. Instead of retyping a previously
                entered value, the user can simply select the value from this list. Use the
                AutoCompleteType property to control the behavior of the AutoComplete feature for a
                RadTextBox control. The System.Web.UI.WebControls.AutoCompleteType enumeration is
                used to represent the values that you can apply to the AutoCompleteType property.
                Not all browsers support the AutoComplete feature. Check with your browser to
                determine compatibility.</para>
            	<para>By default, the AutoCompleteType property for a RadTextBox control is set to
                AutoCompleteType.None. With this setting, the RadTextBox control shares the list
                with other RadTextBox controls with the same ID property across different pages.
                You can also share a list between RadTextBox controls based on a category, instead
                of an ID property. When you set the AutoCompleteType property to one of the
                category values (such as AutoCompleteType.FirstName, AutoCompleteType.LastName, and
                so on), all RadTextBox controls with the same category share the same list. You can
                disable the AutoComplete feature for a RadTextBox control by setting the
                AutoCompleteType property to AutoCompleteType.Disabled.</para>
            	<para>Refer to your browser documentation for details on configuring and enabling
                the AutoComplete feature. For example, to enable the AutoComplete feature in
                Internet Explorer version 5 or later, select Internet Options from the Tools menu,
                and then select the Content tab. Click the AutoComplete button to view and modify
                the various browser options for the AutoComplete feature.</para>
            	<para>This property cannot be set by themes or style sheet themes.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the AutoCompleteType
                enumeration to specify the AutoComplete category for a RadTextBox control. This
                example has a text box that accepts user input, which is a potential security
                threat. By default, ASP.NET Web pages validate that user input does not include
                script or HTML elements.</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" /%&gt;<br/>
            		<br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/>
            		<br/>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>
            &lt;html&gt;<br/>&lt;head id="Head1" runat="server"&gt;<br/>    &lt;title&gt;AutoCompleteType example&lt;/title&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>
                &lt;form id="form1" runat="server"&gt;<br/>        &lt;!-- You need to enable the AutoComplete feature on --&gt;<br/>
                    &lt;!-- a browser that supports it (such as Internet   --&gt;<br/>        &lt;!-- Explorer 5.0 and later) for this sample to     --&gt;<br/>
                    &lt;!-- work. The AutoComplete lists are created after --&gt;<br/>        &lt;!-- the Submit button is clicked.                  --&gt;<br/>
                    &lt;h3&gt;<br/>            AutoCompleteType example&lt;/h3&gt;<br/>        Enter values in the text boxes and click the Submit<br/>        &lt;br /&gt;<br/>
                    button.<br/>        &lt;br /&gt;<br/>        &lt;br /&gt;<br/>        &lt;!-- The following TextBox controls have different  --&gt;<br/>
                    &lt;!-- categories assigned to their AutoCompleteType  --&gt;<br/>        &lt;!-- properties.                                    --&gt;<br/>
                    First Name:&lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="FirstNameTextBox" AutoCompleteType="FirstName" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>
                    Last Name:&lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="LastNameTextBox" AutoCompleteType="LastName" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>
                    Email:&lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="EmailTextBox" AutoCompleteType="Email" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>
                    &lt;!-- The following TextBox controls have the same   --&gt;<br/>        &lt;!-- categories assigned to their AutoCompleteType  --&gt;<br/>
                    &lt;!-- properties. They share the same AutoComplete   --&gt;<br/>        &lt;!-- list.                                          --&gt;<br/>        Phone Line #1:&lt;br /&gt;<br/>
                    &lt;radI:RadTextBox ID="Phone1TextBox" AutoCompleteType="HomePhone" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>        Phone Line #2:&lt;br /&gt;<br/>
                    &lt;radI:RadTextBox ID="Phone2TextBox" AutoCompleteType="HomePhone" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>
                    &lt;!-- The following TextBox control has its          --&gt;<br/>        &lt;!-- AutoCompleteType property set to               --&gt;<br/>
                    &lt;!-- AutoCompleteType.None. All TextBox controls    --&gt;<br/>
                    &lt;!-- with the same ID across different pages share  --&gt;<br/>        &lt;!-- the same AutoComplete list.                    --&gt;<br/>        Category:&lt;br /&gt;<br/>
                    &lt;radI:RadTextBox ID="CategoryTextBox" AutoCompleteType="None" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>        &lt;!-- The following TextBox control has the          --&gt;<br/>
                    &lt;!-- AutoComplete feature disabled.                 --&gt;<br/>        Comments:&lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="CommentsTextBox" AutoCompleteType="Disabled" runat="server" /&gt;<br/>
                    &lt;br /&gt;<br/>        &lt;br /&gt;<br/>        &lt;br /&gt;<br/>        &lt;asp:Button ID="SubmitButton" Text="Submit" runat="Server" /&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;<br/>
            	</pre>
            	<para>[Visual Basic]</para>
            	<pre>
            &lt;/%@ Page Language="VB" /%&gt;<br/><br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/><br/>
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head id="Head1" runat="server"&gt;<br/>
                &lt;title&gt;AutoCompleteType example&lt;/title&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;!-- You need to enable the AutoComplete feature on --&gt;<br/>
                    &lt;!-- a browser that supports it (such as Internet --&gt;<br/>        &lt;!-- Explorer 5.0 and later) for this sample to --&gt;<br/>        &lt;!-- work. The AutoComplete lists are created after --&gt;<br/>
                    &lt;!-- the Submit button is clicked. --&gt;<br/>        &lt;h3&gt;<br/>            AutoCompleteType example&lt;/h3&gt;<br/>        Enter values in the text boxes and click the Submit<br/>        &lt;br /&gt;<br/>
                    button.<br/>        &lt;br /&gt;<br/>        &lt;br /&gt;<br/>        &lt;!-- The following TextBox controls have different --&gt;<br/>        &lt;!-- categories assigned to their AutoCompleteType --&gt;<br/>
                    &lt;!-- properties. --&gt;<br/>        First Name:&lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="FirstNameTextBox" AutoCompleteType="FirstName" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>
                    Last Name:&lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="LastNameTextBox" AutoCompleteType="LastName" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>        Email:&lt;br /&gt;<br/>
                    &lt;radI:RadTextBox ID="EmailTextBox" AutoCompleteType="Email" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>        &lt;!-- The following TextBox controls have the same --&gt;<br/>
                    &lt;!-- categories assigned to their AutoCompleteType --&gt;<br/>        &lt;!-- properties. They share the same AutoComplete --&gt;<br/>        &lt;!-- list. --&gt;<br/>        Phone Line #1:&lt;br /&gt;<br/>
                    &lt;radI:RadTextBox ID="Phone1TextBox" AutoCompleteType="HomePhone" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>        Phone Line #2:&lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="Phone2TextBox" AutoCompleteType="HomePhone" runat="server" /&gt;<br/>
                    &lt;br /&gt;<br/>        &lt;!-- The following TextBox control has its --&gt;<br/>        &lt;!-- AutoCompleteType property set to --&gt;<br/>        &lt;!-- AutoCompleteType.None. All TextBox controls --&gt;<br/>        &lt;!-- with the same ID across different pages share --&gt;<br/>
                    &lt;!-- the same AutoComplete list. --&gt;<br/>        Category:&lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="CategoryTextBox" AutoCompleteType="None" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>        &lt;!-- The following TextBox control has the --&gt;<br/>
                    &lt;!-- AutoComplete feature disabled. --&gt;<br/>        Comments:&lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="CommentsTextBox" AutoCompleteType="Disabled" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>        &lt;br /&gt;<br/>        &lt;br /&gt;<br/>        &lt;asp:Button ID="SubmitButton" Text="Submit" runat="Server" /&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadTextBox.Rows">
            <summary>Gets or sets the number of rows displayed in a multiline RadTextBox.</summary>
            <value>
            The number of rows in a multiline RadTextBox. The default is 0, which displays a
            two-line text box.
            </value>
            <remarks>
            Use the Rows property to specify the number of rows displayed in a multiline
            RadTextBox. This property is applicable only when the TextMode property is set to
            MultiLine. This property cannot be set by themes or style sheet themes. This example
            has a text box that accepts user input, which is a potential security threat. By
            default, ASP.NET Web pages validate that user input does not include script or HTML
            elements.
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the Rows property to
                specify a height of 5 rows for a multiline RadTextBox control.</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" AutoEventWireup="True" /%&gt;<br/>
            		<br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/>
            		<br/>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>    &lt;title&gt;MultiLine TextBox Example &lt;/title&gt;<br/>
            		<br/>    &lt;script runat="server"&gt;<br/>        protected void SubmitButton_Click(Object sender, EventArgs e)<br/>        {  <br/>            Message.Text = "Thank you for your comment: &lt;br /&gt;" + Comment.Text;  <br/>        }<br/>
            		<br/>        protected void Check_Change(Object sender, EventArgs e)<br/>        {  <br/>            Comment.Wrap = WrapCheckBox.Checked;<br/>            Comment.ReadOnly = ReadOnlyCheckBox.Checked;  <br/>        }<br/>
            		<br/>    &lt;/script&gt;<br/>
            		<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>            MultiLine TextBox Example<br/>        &lt;/h3&gt;<br/>        Please enter a comment and click the submit button.<br/>        &lt;br /&gt;<br/>        &lt;br /&gt;<br/>
                    &lt;radI:RadTextBox ID="Comment" TextMode="MultiLine" Columns="50" Rows="5" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>        &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Comment"<br/>            ErrorMessage="Please enter a comment.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                    &lt;asp:CheckBox ID="WrapCheckBox" Text="Wrap Text" Checked="True" AutoPostBack="True"<br/>            OnCheckedChanged="Check_Change" runat="server" /&gt;<br/>
            		<br/>        &lt;asp:CheckBox ID="ReadOnlyCheckBox" Text="ReadOnly" Checked="False" AutoPostBack="True"<br/>            OnCheckedChanged="Check_Change" runat="server" /&gt;<br/>
            		<br/>        &lt;asp:Button ID="SubmitButton" Text="Submit" OnClick="SubmitButton_Click" runat="server" /&gt;<br/>        &lt;hr /&gt;<br/>        &lt;asp:Label ID="Message" runat="server" /&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            	<para>[Visual Basic]</para>
            	<pre>
            &lt;/%@ Page Language="VB" AutoEventWireup="True" /%&gt;<br/><br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/><br/>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>    &lt;title&gt;MultiLine RadTextBox Example &lt;/title&gt;<br/><br/>    &lt;script runat="server"&gt;<br/><br/>      Protected Sub SubmitButton_Click(sender As Object, e As EventArgs )<br/><br/>
                     Message.Text = "Thank you for your comment: &lt;br /&gt;" + Comment.Text<br/><br/>      End Sub<br/><br/>      Protected Sub Check_Change(sender As Object, e As EventArgs )<br/><br/>         Comment.Wrap = WrapCheckBox.Checked<br/>         Comment.ReadOnly = ReadOnlyCheckBox.Checked<br/><br/>      End Sub<br/><br/>    &lt;/script&gt;<br/><br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>
                &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>            MultiLine RadTextBox Example<br/>        &lt;/h3&gt;<br/>        Please enter a comment and click the submit button.<br/>        &lt;br /&gt;<br/>        &lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="Comment" TextMode="MultiLine" Columns="50" Rows="5" runat="server" /&gt;<br/>
                    &lt;br /&gt;<br/>        &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Comment"<br/>            ErrorMessage="Please enter a comment.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>        &lt;asp:CheckBox ID="WrapCheckBox" Text="Wrap Text" Checked="True" AutoPostBack="True"<br/>            OnCheckedChanged="Check_Change" runat="server" /&gt;<br/><br/>
                    &lt;asp:CheckBox ID="ReadOnlyCheckBox" Text="ReadOnly" Checked="False" AutoPostBack="True"<br/>            OnCheckedChanged="Check_Change" runat="server" /&gt;<br/><br/>        &lt;asp:Button ID="SubmitButton" Text="Submit" OnClick="SubmitButton_Click" runat="server" /&gt;<br/>        &lt;hr /&gt;<br/>        &lt;asp:Label ID="Message" runat="server" /&gt;<br/>
                &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadTextBox.Columns">
            <summary>Gets or sets the display width of the RadTextBox in characters.</summary>
            <value>
            The display width, in characters, of the RadTextBox. The default is 0, which
            indicates that the property is not set.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="System.ArgumentOutOfRangeException">The specified width is less than 0.</exception>
            <example>
            	<para>The following code example demonstrates how to use the Columns property to
                specify a width of 2 characters for the RadTextBox control. This example has a text
                box that accepts user input, which is a potential security threat. By default,
                ASP.NET Web pages validate that user input does not include script or HTML
                elements.</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" AutoEventWireup="True" /%&gt;<br/>
            		<br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/>
            		<br/>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>    &lt;title&gt;RadTextBox Example &lt;/title&gt;<br/>
            		<br/>    &lt;script runat="server"&gt;<br/>
            		<br/>        protected void AddButton_Click(Object sender, EventArgs e)<br/>        {<br/>            int Answer;<br/>
            		<br/>            Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text);<br/>
            		<br/>            AnswerMessage.Text = Answer.ToString();<br/>
            		<br/>        }<br/>
            		<br/>    &lt;/script&gt;<br/>
            		<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>            RadTextBox Example<br/>        &lt;/h3&gt;<br/>
            		<br/>        &lt;table&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/>                    Enter integer values into the text boxes.<br/>                    &lt;br /&gt;<br/>
                                Click the Add button to add the two values.<br/>                    &lt;br /&gt;<br/>                    Click the Reset button to reset the text boxes.<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/>
            		<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>                &lt;td&gt;<br/>                    &lt;radI:RadTextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    +<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    &lt;radI:RadTextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    =<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &lt;asp:Label ID="AnswerMessage" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="2"&gt;<br/>                    &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"<br/>
                                    ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>                    &lt;asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1" Type="Integer"<br/>                        MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>
                                    Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td colspan="2"&gt;<br/>                    &lt;asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"<br/>                        ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2" Type="Integer"<br/>                        MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>                        Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                            &lt;td&gt;<br/>                    &amp;nbsp<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>                &lt;td colspan="4"&gt;<br/>                    &lt;asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>
            		<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;<br/>
            	</pre>
            	<para>[Visual Basic]</para>
            	<pre>
            &lt;/%@ Page Language="VB" AutoEventWireup="True" /%&gt;<br/><br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/><br/>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>
                &lt;title&gt;TextBox Example &lt;/title&gt;<br/><br/>    &lt;script runat="server"&gt;<br/><br/>      Protected Sub AddButton_Click(sender As Object, e As EventArgs)<br/><br/>         Dim Answer As Integer<br/><br/>         Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text)<br/><br/>         AnswerMessage.Text = Answer.ToString()<br/><br/>      End Sub<br/><br/>
                &lt;/script&gt;<br/><br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>            RadTextBox Example<br/>        &lt;/h3&gt;<br/>        &lt;table&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/>                    Enter integer values into the text boxes.<br/>
                                &lt;br /&gt;<br/>                    Click the Add button to add the two values.<br/>                    &lt;br /&gt;<br/>                    Click the Reset button to reset the text boxes.<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="5"&gt;<br/><br/>                &lt;/td&gt;<br/>
                        &lt;/tr&gt;<br/>            &lt;tr align="center"&gt;<br/>                &lt;td&gt;<br/>                    &lt;radI:RadTextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    +<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>
                                &lt;radI:RadTextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    =<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    &lt;asp:Label ID="AnswerMessage" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                        &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td colspan="2"&gt;<br/>                    &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"<br/>                        ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                                &lt;asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1" Type="Integer"<br/>                        MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>                        Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>
                            &lt;td colspan="2"&gt;<br/>                    &lt;asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"<br/>                        ErrorMessage="Please enter a value.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>                    &lt;asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2" Type="Integer"<br/>
                                    MinimumValue="1" MaximumValue="100" ErrorMessage="Please enter an integer &lt;br /&gt; between than 1 and 100.&lt;br /&gt;"<br/>                        Display="Dynamic" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/>                    &amp;nbsp<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>
                        &lt;tr align="center"&gt;<br/>                &lt;td colspan="4"&gt;<br/>                    &lt;asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server" /&gt;<br/>                &lt;/td&gt;<br/>                &lt;td&gt;<br/><br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            </requirements>
            <remarks>
            .NET Framework<br/>
            Supported in: 3.0, 2.0, 1.1, 1.0
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTextBox.Wrap">
            <summary>
            Gets or sets a value indicating whether the text content wraps within a multiline
            RadTextBox.
            </summary>
            <value>
            true if the text content wraps within a multiline RadTextBox; otherwise, false.
            The default is true.
            </value>
            <remarks>
            Use the Wrap property to specify whether the text displayed in a multiline
            RadTextBox control automatically continues on the next line when the text reaches the
            end of the control. This property is applicable only when the RadTextMode property is
            set to MultiLine
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the Wrap property to wrap
                text entered in the RadTextBox control. This example has a text box that accepts
                user input, which is a potential security threat. By default, ASP.NET Web pages
                validate that user input does not include script or HTML elements.</para>
            	<para>[C#]</para>
            	<pre>
            &lt;/%@ Page Language="C#" AutoEventWireup="True" /%&gt;  <br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;  <br/>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>    &lt;title&gt;MultiLine RadTextBox Example &lt;/title&gt;<br/>
            		<br/>    &lt;script runat="server"&gt;<br/>
            		<br/>        protected void SubmitButton_Click(Object sender, EventArgs e)<br/>        {<br/>
            		<br/>            Message.Text = "Thank you for your comment: &lt;br /&gt;" + Comment.Text;<br/>
            		<br/>        }<br/>
            		<br/>        protected void Check_Change(Object sender, EventArgs e)<br/>        {<br/>
            		<br/>            Comment.Wrap = WrapCheckBox.Checked;<br/>            Comment.ReadOnly = ReadOnlyCheckBox.Checked;<br/>
            		<br/>        }<br/>
            		<br/>    &lt;/script&gt;<br/>
            		<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>            MultiLine RadTextBox Example<br/>        &lt;/h3&gt;<br/>
                    Please enter a comment and click the submit button.<br/>        &lt;br /&gt;<br/>        &lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="Comment" TextMode="MultiLine" Columns="50" Rows="5" runat="server" /&gt;<br/>        &lt;br /&gt;<br/>
                    &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Comment"<br/>            ErrorMessage="Please enter a comment.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                    &lt;asp:CheckBox ID="WrapCheckBox" Text="Wrap Text" Checked="True" AutoPostBack="True"<br/>            OnCheckedChanged="Check_Change" runat="server" /&gt;<br/>
            		<br/>        &lt;asp:CheckBox ID="ReadOnlyCheckBox" Text="ReadOnly" Checked="False" AutoPostBack="True"<br/>            OnCheckedChanged="Check_Change" runat="server" /&gt;<br/>
            		<br/>        &lt;asp:Button ID="SubmitButton" Text="Submit" OnClick="SubmitButton_Click" runat="server" /&gt;<br/>        &lt;hr /&gt;<br/>        &lt;asp:Label ID="Message" runat="server" /&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;<br/>
            	</pre>
            	<para>[Visual Basic]</para>
            	<pre>
            &lt;/%@ Page Language="VB" AutoEventWireup="True" /%&gt;<br/><br/>&lt;/%@ Register Assembly="RadInput.Net2" Namespace="Telerik.WebControls" TagPrefix="radI" /%&gt;<br/><br/>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<br/>
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br/>&lt;html&gt;<br/>&lt;head&gt;<br/>    &lt;title&gt;MultiLine RadTextBox Example &lt;/title&gt;<br/><br/>    &lt;script runat="server"&gt;<br/><br/>
                  Protected Sub SubmitButton_Click(sender As Object, e As EventArgs )<br/><br/>         Message.Text = "Thank you for your comment: &lt;br /&gt;" + Comment.Text<br/><br/>      End Sub<br/><br/>      Protected Sub Check_Change(sender As Object, e As EventArgs )<br/><br/>
                     Comment.Wrap = WrapCheckBox.Checked<br/>         Comment.ReadOnly = ReadOnlyCheckBox.Checked<br/><br/>      End Sub<br/><br/>    &lt;/script&gt;<br/><br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>    &lt;form id="form1" runat="server"&gt;<br/>        &lt;h3&gt;<br/>
                        MultiLine RadTextBox Example<br/>        &lt;/h3&gt;<br/>        Please enter a comment and click the submit button.<br/>        &lt;br /&gt;<br/>        &lt;br /&gt;<br/>        &lt;radI:RadTextBox ID="Comment" TextMode="MultiLine" Columns="50" Rows="5" runat="server" /&gt;<br/>
                    &lt;br /&gt;<br/>        &lt;asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Comment"<br/>            ErrorMessage="Please enter a comment.&lt;br /&gt;" Display="Dynamic" runat="server" /&gt;<br/>
                    &lt;asp:CheckBox ID="WrapCheckBox" Text="Wrap Text" Checked="True" AutoPostBack="True"<br/>
                        OnCheckedChanged="Check_Change" runat="server" /&gt;<br/><br/>        &lt;asp:CheckBox ID="ReadOnlyCheckBox" Text="ReadOnly" Checked="False" AutoPostBack="True"<br/>            OnCheckedChanged="Check_Change" runat="server" /&gt;<br/><br/>
                    &lt;asp:Button ID="SubmitButton" Text="Submit" OnClick="SubmitButton_Click" runat="server" /&gt;<br/>        &lt;hr /&gt;<br/>        &lt;asp:Label ID="Message" runat="server" /&gt;<br/>    &lt;/form&gt;<br/>&lt;/body&gt;<br/>&lt;/html&gt;
                </pre>
            </example>
            <requirements>
            	<para>Windows 98, Windows Server 2000 SP4, Windows Server 2003, Windows XP Media
                Center Edition, Windows XP Professional x64 Edition, Windows XP SP2, Windows XP
                Starter Edition</para>
            	<para>The Microsoft .NET Framework 3.0 is supported on Windows Vista, Microsoft
                Windows XP SP2, and Windows Server 2003 SP1.</para>
            	<para>.NET Framework<br/>
                Supported in: 3.0, 2.0, 1.1, 1.0</para>
            </requirements>
        </member>
        <member name="P:Telerik.Web.UI.Appointment.AllowEdit">
            <summary>
            Gets or sets a value indicating whether the editing of this appointment is allowed.
            </summary>
            <value><c>true</c> if editing of this appointment is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.Appointment.AllowDelete">
            <summary>
            Gets or sets a value indicating whether the deleting of this appointment is allowed.
            </summary>
            <value><c>true</c> if the deleting of this appointment is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.Appointment.DataItem">
            <summary>
            Gets or sets the data item represented by the
            <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> object in the
            <see cref="T:Telerik.Web.UI.RadScheduler">RadScheduler</see> control.
            </summary>
            <remarks>
            This property is available only during data binding.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.#ctor">
            <summary>
            Creates an empty <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.Contains(Telerik.Web.UI.Appointment)">
            <summary>
            	Determines whether an element is in the <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>.
            </summary>
            <param name="appointment">
            	The <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> to locate in the <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>.
            </param>
            <returns>true if item is found in the <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>; otherwise, false.</returns>
            <remarks>
            	This method performs a linear search; therefore, this method is an O(n) operation, where n is Count.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.CopyTo(Telerik.Web.UI.Appointment[],System.Int32)">
            <summary>
            	Copies the entire <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see> to a compatible one-dimensional Array,
            	starting at the specified index of the target array.
            </summary>
            <param name="array">
            	The one-dimensional Array that is the destination of the <see cref="T:Telerik.Web.UI.Appointment">Appointment</see>s copied from <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>.
            	The Array must have zero-based indexing.
            </param>
            <param name="index">
            	The zero-based index in array at which copying begins.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.IndexOf(Telerik.Web.UI.Appointment)">
            <summary>
            	Searches for the specified <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> and returns the zero-based index of the
            	first occurrence within the entire <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>.
            </summary>
            <param name="appointment">
            	The <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> to locate in the <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>.
            </param>
            <returns>
            	The zero-based index of the first occurrence of value within the entire <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.FindByID(System.Object)">
            <summary>
            	Searches for an <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> with the specified <see cref="P:Telerik.Web.UI.Appointment.ID">ID</see> and returns a reference to it.
            </summary>
            <param name="id">
            	The <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> <see cref="P:Telerik.Web.UI.Appointment.ID">ID</see> to search for.
            </param>
            <returns>
            	The <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> with the specified <see cref="P:Telerik.Web.UI.Appointment.ID">ID</see>, if found; otherwise, null.
            </returns>
            <remarks>
            	This method determines equality by calling <see cref="M:System.Object.Equals(System.Object)">Object.Equals</see>.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.FindByRecurrenceParentID(System.Object)">
            <summary>
            	Searches for all <see cref="T:Telerik.Web.UI.Appointment">Appointments</see> with the specified <see cref="P:Telerik.Web.UI.Appointment.RecurrenceParentID">RecurrenceParentID</see>
            	and returns a generic IList containing them.
            </summary>
            <param name="parentId">
            	The <see cref="P:Telerik.Web.UI.Appointment.RecurrenceParentID">RecurrenceParentID</see> to search for.
            </param>
            <returns>
            	A generic IList containing the <see cref="T:Telerik.Web.UI.Appointment">Appointments</see> with the specified <see cref="P:Telerik.Web.UI.Appointment.RecurrenceParentID">RecurrenceParentID</see>, if found.
            </returns>
            <remarks>
            	This method determines equality by calling <see cref="M:System.Object.Equals(System.Object)">Object.Equals</see>.
            
            	Appointments with recurrence state <see cref="F:Telerik.Web.UI.RecurrenceState.Exception">Exception</see>
            	are linked to their parents using the <see cref="P:Telerik.Web.UI.Appointment.RecurrenceParentID">RecurrenceParentID</see> property.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.FindByRecurrenceParentID(System.Object,Telerik.Web.UI.RecurrenceState)">
            <summary>
            	Searches for all <see cref="T:Telerik.Web.UI.Appointment">Appointments</see> with the specified
            	<see cref="P:Telerik.Web.UI.Appointment.RecurrenceParentID">RecurrenceParentID</see> and
            	<see cref="P:Telerik.Web.UI.Appointment.RecurrenceState">RecurrenceState</see>.
            </summary>
            <param name="parentId">
            	The <see cref="P:Telerik.Web.UI.Appointment.RecurrenceParentID">RecurrenceParentID</see> to search for.
            </param>
            <param name="state">
            	The <see cref="P:Telerik.Web.UI.Appointment.RecurrenceState">RecurrenceState</see> to search for.
            </param>
            <returns>
            	A generic IList containing the <see cref="T:Telerik.Web.UI.Appointment">Appointments</see>
            	with the specified <see cref="P:Telerik.Web.UI.Appointment.RecurrenceParentID">RecurrenceParentID</see> and
            	<see cref="P:Telerik.Web.UI.Appointment.RecurrenceState">RecurrenceState</see>, if found.
            </returns>
            <remarks>
            	This method determines equality by calling <see cref="M:System.Object.Equals(System.Object)">Object.Equals</see>.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.GetAppointmentsStartingInRange(System.DateTime,System.DateTime)">
            <summary>
            	Searches for all <see cref="T:Telerik.Web.UI.Appointment">Appointments</see> that
            	start in the specified time range and returns a generic IList containing them.
            </summary>
            <param name="rangeStart">
            	The start of the time range.
            </param>
            <param name="rangeEnd">
            	The end of the time range.
            </param>
            <returns>
            	A generic IList containing the <see cref="T:Telerik.Web.UI.Appointment">Appointments</see>
            	that start in the specified time range.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.GetAppointmentsInRange(System.DateTime,System.DateTime)">
            <summary>
            	Searches for all <see cref="T:Telerik.Web.UI.Appointment">Appointments</see> that
            	overlap with the specified time range and returns a generic IList containing them.
            </summary>
            <param name="rangeStart">
            	The start of the time range.
            </param>
            <param name="rangeEnd">
            	The end of the time range.
            </param>
            <returns>
            	A generic IList containing the <see cref="T:Telerik.Web.UI.Appointment">Appointments</see>
            	that overlap with the specified time range.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.GetAppointmentsEnclosingRange(System.DateTime,System.DateTime)">
            <summary>
            	Searches for all <see cref="T:Telerik.Web.UI.Appointment">Appointments</see> that
            	are fully contained within the specified time range.
            </summary>
            <param name="rangeStart">
            	The start of the time range.
            </param>
            <param name="rangeEnd">
            	The end of the time range.
            </param>
            <returns>
            	A generic IList containing the <see cref="T:Telerik.Web.UI.Appointment">Appointments</see>
            	that are fully contained within the specified time range.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.ToArray">
            <summary>
            	Copies the elements of the <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>
            	to a new <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> array.
            </summary>
            <returns>
            	An <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> array containing copies of the elements of the
            	<see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.AppointmentCollection.GetEnumerator">
            <summary>
            	Returns an enumerator for the entire <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>.
            </summary>
            <returns>
            	An <see cref="T:System.Collections.IEnumerator">IEnumerator</see> for the entire <see cref="T:Telerik.Web.UI.AppointmentCollection">AppointmentCollection</see>.
            </returns>
        </member>
        <member name="P:Telerik.Web.UI.AppointmentCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> to get or set.</param>
            <returns>The appointment at the specified index.</returns>
        </member>
        <member name="T:Telerik.Web.UI.FooterControl">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.HeaderControl">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.SchedulerProviderBase.Synchronized">
            <summary>
            Returns a synchronized (thread safe) wrapper for this provider instance.
            </summary>
            <returns>A synchronized (thread safe) wrapper for this provider instance.</returns>
        </member>
        <member name="P:Telerik.Web.UI.SchedulerProviderBase.SupportsMultipleResourceValues">
            <summary>
            Gets a value indicating whether the provider supports multiple resources (of the same type).
            </summary>
            <value>
            	<c>true</c> if the provider supports multiple resources (of the same type); otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.Scheduling.SynchronizedSchedulerProvider">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.XmlSchedulerProvider">
            <summary>
            A RadScheduler provider that uses XML document as a data store.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.XmlSchedulerProvider.DateFormatString">
            <summary>
            Format string for the dates. The "Z" appendix signifies UTC time.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.XmlSchedulerProvider.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.XmlSchedulerProvider"/> class.
            </summary>
            <param name="dataFileName">Name of the data file.</param>
            <param name="persistChanges">if set to <c>true</c> the changes will be persisted.</param>
        </member>
        <member name="M:Telerik.Web.UI.XmlSchedulerProvider.#ctor(System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.XmlSchedulerProvider"/> class.
            </summary>
            <param name="doc">The document instance to use as a data store.</param>
        </member>
        <member name="M:Telerik.Web.UI.XmlSchedulerProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.XmlSchedulerProvider"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.XmlSchedulerProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:Telerik.Web.UI.XmlSchedulerProvider.GetAppointments(Telerik.Web.UI.RadScheduler)">
            <summary>
            Fetches appointments.
            </summary>
            <param name="owner">The owner RadScheduler instance.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.XmlSchedulerProvider.Insert(Telerik.Web.UI.RadScheduler,Telerik.Web.UI.Appointment)">
            <summary>
            Inserts the specified appointment.
            </summary>
            <param name="owner">The owner RadScheduler instance.</param>
            <param name="appointmentToInsert">The appointment to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.XmlSchedulerProvider.Update(Telerik.Web.UI.RadScheduler,Telerik.Web.UI.Appointment)">
            <summary>
            Updates the specified appointment.
            </summary>
            <param name="owner">The owner RadScheduler instance.</param>
            <param name="appointmentToUpdate">The appointment to update.</param>
        </member>
        <member name="M:Telerik.Web.UI.XmlSchedulerProvider.Delete(Telerik.Web.UI.RadScheduler,Telerik.Web.UI.Appointment)">
            <summary>
            Deletes the specified appointment.
            </summary>
            <param name="owner">The owner RadScheduler instance.</param>
            <param name="appointmentToDelete">The appointment to delete.</param>
        </member>
        <member name="M:Telerik.Web.UI.XmlSchedulerProvider.GetResourceTypes(Telerik.Web.UI.RadScheduler)">
            <summary>
            Gets the resource types.
            </summary>
            <param name="owner">The owner RadScheduler instance.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.XmlSchedulerProvider.GetResourcesByType(Telerik.Web.UI.RadScheduler,System.String)">
            <summary>
            Gets the type of the resources by.
            </summary>
            <param name="owner">The owner RadScheduler instance.</param>
            <param name="resourceType">Type of the resource.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Web.UI.RadScheduler">
            <summary>RadScheduler control class.</summary>
        </member>
        <member name="T:Telerik.Web.UI.IScheduler">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ExportToICalendar(Telerik.Web.UI.Appointment)">
            <summary>
            Exports an appointment to iCalendar format.
            </summary>
            <remarks>
            	The return value should be saved as a text file with an "ics" extension.
            </remarks>
            <returns>A string containing the appointment in iCalendar format.</returns>
            <param name="appointment"> The appointment which should be exported.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ExportToICalendar(Telerik.Web.UI.Appointment,System.TimeSpan)">
            <summary>
            Exports an appointment to iCalendar format.
            </summary>
            <remarks>
            	The return value should be saved as a text file with an "ics" extension.
            </remarks>
            <returns>A string containing the appointment in iCalendar format.</returns>
            <param name="appointment">The appointment which should be exported.</param>
            <param name="timeZoneOffset">The time zone offset to apply to the exported appointments.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ExportToICalendar(Telerik.Web.UI.AppointmentCollection)">
            <summary>
            	Exports the specified appointments to iCalendar format.
            </summary>
            <remarks>
            	The return value should be saved as a text file with an "ics" extension.
            </remarks>
            <returns>A string containing the iCalendar representation of the supplied appointments.</returns>
            <param name="appointments">A collection of appointments which should be exported.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ExportToICalendar(System.Collections.Generic.IEnumerable{Telerik.Web.UI.Appointment})">
            <summary>
            	Exports the specified appointments to iCalendar format.
            </summary>
            <remarks>
            	The return value should be saved as a text file with an "ics" extension.
            </remarks>
            <returns>A string containing the iCalendar representation of the supplied appointments.</returns>
            <param name="appointments">An IEnumerable of appointments which should be exported.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ExportToICalendar(Telerik.Web.UI.AppointmentCollection,System.TimeSpan)">
            <summary>
            	Exports the specified appointments to iCalendar format.
            </summary>
            <remarks>
            	The return value should be saved as a text file with an "ics" extension.
            </remarks>
            <returns>A string containing the iCalendar representation of the supplied appointments.</returns>
            <param name="appointments">A collection of appointments which should be exported.</param>
            <param name="timeZoneOffset">The time zone offset to apply to the exported appointments.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ExportToICalendar(System.Collections.Generic.IEnumerable{Telerik.Web.UI.Appointment},System.TimeSpan)">
            <summary>
            	Exports the specified appointments to iCalendar format.
            </summary>
            <remarks>
            	The return value should be saved as a text file with an "ics" extension.
            </remarks>
            <returns>A string containing the iCalendar representation of the supplied appointments.</returns>
            <param name="appointments">An IEnumerable of appointments which should be exported.</param>
            <param name="timeZoneOffset">The time zone offset to apply to the exported appointments.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.UtcDayStart(System.DateTime)">
            <summary>
            Returns the UTC date that corresponds to midnight on the client for the selected date.
            </summary>
            <param name="utcDate">Client's date and time in UTC.</param>
            <returns>The UTC date that corresponds to midnight on the client for the selected date.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ShowInlineEditForm(Telerik.Web.UI.Appointment)">
            <summary>
            Shows the inline edit form.
            </summary>
            <param name="appointmentToEdit">
            	The appointment which is edited. Its properties are used to populate the edit form.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ShowInlineEditForm(Telerik.Web.UI.Appointment,System.Boolean)">
            <summary>
            Shows the inline edit form.
            </summary>
            <param name="appointmentToEdit">
            	The appointment which is edited. Its properties are used to populate the edit form.
            </param>
            <param name="editSeries">
            	A boolean value indicating whether to edit the recurring series.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ShowAdvancedEditForm(Telerik.Web.UI.Appointment)">
            <summary>
            Shows the advanced edit form.
            </summary>
            <param name="appointmentToEdit">
            	The appointment which is edited. Its properties are used to populate the edit form.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ShowAdvancedEditForm(Telerik.Web.UI.Appointment,System.Boolean)">
            <summary>
            Shows the advanced edit form.
            </summary>
            <param name="appointmentToEdit">
            	The appointment which is edited. Its properties are used to populate the edit form.
            </param>
            <param name="editSeries">
            	A boolean value indicating whether to edit the recurring series.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ShowInlineInsertForm(System.DateTime)">
            <summary>
            Shows the inline insert form.
            </summary>
            <param name="showAt">
            	Specifies the start time for the insert form. It is used to determine the row in which the form is shown.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ShowInlineInsertForm(Telerik.Web.UI.Scheduler.Views.ISchedulerTimeSlot)">
            <summary>
            Shows the inline insert form.
            </summary>
            <param name="timeSlot">The time slot object where the insert form will be shown</param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ShowAdvancedInsertForm(System.DateTime)">
            <summary>
            Shows the advansed insert form.
            </summary>
            <param name="showAt">
            	Specifies the start time for the insert form. It is used to determine the row in which the form is shown.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.ShowAlldayInlineInsertForm(System.DateTime)">
            <summary>
            Shows the all-day inline insert form
            </summary>
            <param name="showAt">
            	Specifies the start time for the insert form. It is used to determine the row in which the form is shown.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.GetTimeSlotFromIndex(System.String)">
            <summary>
            Retrieves a TimeSlot object from its client-side index
            </summary>
            <param name="index">String representation of the TimeSlot's index</param>
            <returns>The TimeSlot that corresponds to the passed index</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.HideEditForm">
            <summary>
            Hides the active insert or edit form (if any).
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.UtcToDisplay(System.DateTime)">
            <summary>
            Converts a date time object from UTC to client date format using the <see cref="P:Telerik.Web.UI.RadScheduler.TimeZoneOffset">TimeZoneOffset</see> property.
            </summary>
            <param name="utcDate">The date to convert. Must be in UTC format.</param>
            <returns>
            	The date in client format which corresponds to the supplied UTC date
            </returns>
            <remarks>
            	RadScheduler always stores dates in UTC format to allow support for multiple time zones. 
            	The <strong>UtcToDisplay</strong> method must be used when
            	a date (e.g. <see cref="P:Telerik.Web.UI.Appointment.Start">Appointment.Start</see>) 
            	should be presented to the client in some way - e.g. displayed in a label.
            </remarks>
            <example>
            	<code lang="CS">
            		Appointment appointment = RadScheduler1.Appointments[0];
                    Label1.Text = RadScheduler1.UtcToDisplay(appointment.Start).ToString()
            	</code>
            	<code lang="VB">
            		Dim appointment As Appointment = RadScheduler1.Appointments(0)
            		Label1.Text = RadScheduler1.UtcToDisplay(appointment.Start).ToString()
            	</code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.DisplayToUtc(System.DateTime)">
            <summary>
            Converts a date time object from client date format to UTC using the <see cref="P:Telerik.Web.UI.RadScheduler.TimeZoneOffset">TimeZoneOffset</see> property.
            </summary>
            <param name="displayDate">The date to convert. Must be in client format.</param>
            <returns>
            	The date in UTC format which corresponds to the supplied client format date.
            </returns>
            <remarks>
            	RadScheduler always stores dates in UTC format to allow support for multiple time zones. The <strong>DisplayToUtc</strong> method must be used when
            	a date is supplied to RadScheduler to be persisted in some way. For example updating the <see cref="P:Telerik.Web.UI.Appointment.Start">Appointment.Start</see> property from a textbox.
            </remarks>
            <example>
            	<code lang="CS">
            		Appointment appointment = RadScheduler1.Appointments[0];
            		DateTime startInClientFormat = DateTime.Parse(TextBox1.Text);
            		appointment.Start = RadScheduler1.DisplayToUtc(startInClientFormat);
                    RadScheduler1.Update(appointment);
            	</code>
            	<code lang="VB">
            		Dim appointment As Appointment = RadScheduler1.Appointments(0)
            		Dim startInClientFormat As DateTime = DateTime.Parse(TextBox1.Text)
            		appointment.Start = RadScheduler1.DisplayToUtc(startInClientFormat)
                    RadScheduler1.Update(appointment)
            	</code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.InsertAppointment(Telerik.Web.UI.Appointment)">
            <summary>
            Inserts the specified appointment in the Appointments collection,
            expands the series (if it is recurring) and inserts persists it through the provider.
            </summary>
            <param name="appointmentToInsert">The appointment to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.UpdateAppointment(Telerik.Web.UI.Appointment)">
            <summary>
            Updates the specified appointment and persists the changes through the provider.
            </summary>
            <remarks>
            This method can be used, along with <see cref="M:Telerik.Web.UI.RadScheduler.PrepareToEdit(Telerik.Web.UI.Appointment,System.Boolean)">PrepareToEdit</see>
            to create and persist a recurrence exceptions.
            </remarks>
            <example>
            	<code lang="CS">
            		Appointment occurrence = RadScheduler1.Appointments[0];
            		Appointment recurrenceException = RadScheduler1.PrepareToEdit(occurrence, false);
            		
            		recurrenceException.Subject = "This is a recurrence exception";
            
            		RadScheduler1.UpdateAppointment(recurrenceException);
            	</code>
            	<code lang="VB">
            		Dim occurrence As Appointment = RadScheduler1.Appointments(0)
            		Dim recurrenceException as Appointment = RadScheduler1.PrepareToEdit(occurrence, False)
            
            		recurrenceException.Subject = "This is a recurrence exception"
            
            		RadScheduler1.UpdateAppointment(recurrenceException)
            	</code>
            </example>
            <param name="appointmentToUpdate">The appointment to update.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.UpdateAppointment(Telerik.Web.UI.Appointment,Telerik.Web.UI.Appointment)">
            <summary>
            Updates the specified appointment and persists the changes through the provider.
            
            Use this overload when the underlying data source requires both original and modified
            data to perform an update operation. One such example is LinqDataSource.
            </summary>
            <remarks>
            This method can be used, along with <see cref="M:Telerik.Web.UI.RadScheduler.PrepareToEdit(Telerik.Web.UI.Appointment,System.Boolean)">PrepareToEdit</see>
            to create and persist a recurrence exceptions.
            </remarks>
            <example>
            	<code lang="CS">
            		Appointment occurrence = RadScheduler1.Appointments[0];
            		Appointment recurrenceException = RadScheduler1.PrepareToEdit(occurrence, false);
            		
            		Appointment modifiedAppointment = recurrenceException.Clone();
            		modifiedAppointment.Subject = "This is a recurrence exception";
            
            		RadScheduler1.UpdateAppointment(modifiedAppointment, recurrenceException);
            	</code>
            	<code lang="VB">
            		Dim occurrence As Appointment = RadScheduler1.Appointments(0)
            		Dim recurrenceException as Appointment = RadScheduler1.PrepareToEdit(occurrence, False)
            
            		Dim modifiedAppointment = recurrenceException.Clone()
            		modifiedAppointment.Subject = "This is a recurrence exception"
            
            		RadScheduler1.UpdateAppointment(modifiedAppointment, recurrenceException)
            	</code>
            </example>
            <param name="appointmentToUpdate">The appointment to update.</param>
            <param name="originalAppointment">
            	The original appointment. Use <see cref="M:Telerik.Web.UI.Appointment.Clone">Appointment.Clone</see>
            	to obtain a copy of the appointment before updating its properties.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.PrepareToEdit(Telerik.Web.UI.Appointment,System.Boolean)">
            <summary>
            Prepares the specified appointment for editing.
            </summary>
            <remarks>
            If the specified appointment is not recurring, the method does nothing and returns the same appointment.
            If the appointment is recurring and editSeries is set to true the method returns the recurrence parent.
            Otherwise, the method clones the appointment and updates it state to recurrence exception.
            </remarks>
            <example>
            	<code lang="CS">
            		Appointment occurrence = RadScheduler1.Appointments[0];
            		Appointment recurrenceException = RadScheduler1.PrepareToEdit(occurrence, false);
            		
            		recurrenceException.Subject = "This is a recurrence exception";
            
            		RadScheduler1.UpdateAppointment(recurrenceException);
            	</code>
            	<code lang="VB">
            		Dim occurrence As Appointment = RadScheduler1.Appointments(0)
            		Dim recurrenceException as Appointment = RadScheduler1.PrepareToEdit(occurrence, False)
            
            		recurrenceException.Subject = "This is a recurrence exception"
            
            		RadScheduler1.UpdateAppointment(recurrenceException)
            	</code>
            </example>
            <param name="appointmentToEdit">The appointment to edit.</param>
            <param name="editSeries">if set to <c>true</c> [edit series].</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.DeleteAppointment(Telerik.Web.UI.Appointment,System.Boolean)">
            <summary>
            Deletes the appointment or the recurrence series it is part of.
            </summary>
            <remarks>
            When deleting an appointment that is part of recurrence series and deleteSeries is set to false
            this method will update the master appointment to produce a recurrence exception.
            </remarks>
            <param name="appointmentToDelete">The appointment to delete.</param>
            <param name="deleteSeries">if set to <c>true</c> delete complete recurrence series.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadScheduler.RemoveRecurrenceExceptions(Telerik.Web.UI.Appointment)">
            <summary>
            Removes the associated recurrence exceptions through the provider.
            </summary>
            <param name="master">The recurrence master.</param>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.UseDefaultAdvancedInsert">
            <summary>
            Indicates whether to instantiate a clent-side object for the
            advanced insert form (applicable only in Web Service mode).
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.UseDefaultAdvancedEdit">
            <summary>
            Indicates whether to instantiate a clent-side object for the
            advanced edit form (applicable only in Web Service mode).
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.Appointments">
            <summary>
                Gets a collection of <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> objects that represent individual
                appointments in the <see cref="T:Telerik.Web.UI.RadScheduler">RadScheduler</see> control.
            </summary>
            <value>
                A collection of the currently loaded <see cref="T:Telerik.Web.UI.Appointment">Appointment</see> objects.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.Resources">
            <summary>
            	A collection of all resources loaded by <strong>RadScheduler</strong>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.VisibleRangeStart">
            <summary>
            	Returns visible start date of the current view.
            </summary>
            <remarks>
            	All tasks rendered in the current view will be within the range specified by the <see cref="P:Telerik.Web.UI.RadScheduler.VisibleRangeStart">VisibleRangeStart</see>
                and <see cref="P:Telerik.Web.UI.RadScheduler.VisibleRangeEnd">VisibleRangeEnd</see> properties.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.VisibleRangeEnd">
            <summary>
            	Returns visible end date of the current view.
            </summary>
            <remarks>
            	All tasks rendered in the current view will be within the range specified by the <see cref="P:Telerik.Web.UI.RadScheduler.VisibleRangeStart">VisibleRangeStart</see>
                and <see cref="P:Telerik.Web.UI.RadScheduler.VisibleRangeEnd">VisibleRangeEnd</see> properties.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.EditingRecurringSeries">
            <summary>
            Gets a value indicating whether the recurring series are being edited at the moment, as opposed to a single appointment of the series.
            </summary>
            <remarks>
            This property is also used to indicate the target of the delete and move operations.
            </remarks>
            <value>
            	<c>true</c> if the recurring series are being edited at the moment; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.RecurrenceSupport">
            <summary>
            Gets a boolean value that indicates if recurrence support has been configured for this
            instance of RadScheduler.
            </summary>
            <remarks>
            
            </remarks>
            <value>
            	<strong>True</strong> when the
            	<see cref="P:Telerik.Web.UI.RadScheduler.DataRecurrenceField">DataRecurrenceField</see> and
            	<see cref="P:Telerik.Web.UI.RadScheduler.DataRecurrenceParentKeyField">DataRecurrenceParentKeyField</see>
            	fields are set or when using a custom data provider.
            
            	<strong>False</strong> if either of the above conditions is not satisfied
            	or when the <see cref="P:Telerik.Web.UI.RadScheduler.EnableRecurrenceSupport">EnableRecurrenceSupport</see> property
            	is set to <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.SelectedView">
            <value>
                One of the <see cref="T:Telerik.Web.UI.SchedulerViewType">SchedulerViewType</see> values. The
                default is DayView.
            </value>
            <summary>Gets or sets the current view type.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.GroupBy">
            <summary>
            Gets the name of the resource to group by.
            Can also be in the format "Date,[Resource Name]" when grouping by date.
            </summary>
            <value>The resource to group by.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.EnableAdvancedForm">
            <summary>
            Gets or sets a value indicating whether the user can use the advanced insert/edit form.
            </summary>
            <value><strong>true</strong> if the user should be able to use the advanced insert/edit form; <strong>false </strong> otherwise. The default value is <strong>true</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.StartEditingInAdvancedForm">
            <summary>
            Gets or sets a value indicating whether "advanced" mode is the default edit mode.
            </summary>
            <value><strong>true</strong> if the "advanced" mode is the default edit mode; <strong>false </strong> if "inline" is default edit mode. The default value is <strong>true</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.StartInsertingInAdvancedForm">
            <summary>
            Gets or sets a value indicating whether "advanced" mode is the default insert mode.
            </summary>
            <value><strong>true</strong> if the "advanced" mode is the default insert mode; <strong>false </strong> if "inline" is default insert mode. The default value is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DisplayDeleteConfirmation">
            <summary>
            Gets or sets a value indicating whether a delete confirmation dialog should be displayed when the user clicks the "delete" button of an appointment.
            </summary>
            <value>
            	<strong>true</strong> if the confirmation dialog should be displayed; <stong>false</stong> otherwise. The default value is <strong>true</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DisplayRecurrenceActionDialogOnMove">
            <summary>
            Gets or sets a value indicating whether a confirmation dialog should be displayed when the user moves a recurring appointment.
            </summary>
            <value>
            	<strong>true</strong> if the confirmation dialog should be displayed; <stong>false</stong> otherwise. The default value is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ReadOnly">
            <summary>
            Gets or sets a value indicating whether RadScheduler is in read-only mode.
            </summary>
            <value>
            	<strong>true</strong> if RadScheduler should be read-only; <strong>false</strong> otherwise. The default value is <strong>false</strong>.
            </value>
            <remarks>
            	By default the user is able to insert, edit and delete appointments. Use the <strong>ReadOnly</strong> to disable the editing capabilities of RadScheduler.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.MonthVisibleAppointmentsPerDay">
            <summary>
            Gets or sets a value indicating the number of visible appointments per day in month view.
            </summary>
            <value>
            	An integer specifying the number of visible appointments per day. The default value is 2.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ResourceTypes">
            <summary>
                Gets a collection of <see cref="T:Telerik.Web.UI.ResourceType">ResourceType</see> objects that represent
                the resource types used by <strong>RadScheduler</strong>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ResourceStyles">
            <summary>
            Gets a collection of <see cref="T:Telerik.Web.UI.ResourceStyleMapping">ResourceStyleMapping</see>
            objects can be used to associate resources with particular
            cascading style sheet (CSS) classes.
            </summary>
            <remarks>
            Resources are matched by <strong>all</strong> (boolean AND) specified properties.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.TimeZoneOffset">
            <summary>
            Gets or sets the time zone offset to use when displaying appointments.
            </summary>
            <value>The time zone offset to use when displaying appointments.</value>
            <remarks>The default value is TimeSpan.Zero.</remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.VisualTimeZoneOffset">
            <summary>
            Gets or sets the time zone offset to use when determining todays date.
            </summary>
            <value>The time zone offset to use when determining todays date.</value>
            <remarks>
            	The default value is the system's time zone offset.
            	This value is ignored when TimeZoneOffset is set.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.SelectedDate">
            <summary>
                The meaning of this property is different depending on the current 
                <see cref="P:Telerik.Web.UI.RadScheduler.SelectedView">view type</see>.
                In <see cref="F:Telerik.Web.UI.SchedulerViewType.DayView">day view</see> mode SelectedDate
                gets or sets the currently displayed date.
                In <see cref="F:Telerik.Web.UI.SchedulerViewType.WeekView">week</see> and
                <see cref="F:Telerik.Web.UI.SchedulerViewType.MonthView">month</see> view modes SelectedDate 
                gets or sets the highlighted date in the current week or month.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.TimeLabelRowSpan">
            <summary>
            	Gets or sets the number of rows each time label spans.
            </summary>
            <value>
            	The number of rows each time label spans. The default value is <strong>2</strong>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.MinutesPerRow">
            <summary>Gets or sets the number of minuties which a single row represents</summary>
            <value>
            	An integer specifying how many minutes a row represents. The default value is <strong>30</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.NumberOfHoveredRows">
            <summary>Gets or sets the number of rows that are hovered when the mouse is over the appointment area.</summary>
            <value>
            	An integer specifying the number of rows that are hovered when the mouse is over the appointment area.
            	The default value is <strong>2</strong>.
            	This value also determines the initial length of inserted appointments.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DayStartTime">
            <summary>
                Gets or sets the time used to denote the start of the day.
            </summary>
            <value>
                The time used to denote the start of the day.
            </value>
            <remarks>
                This property is ignored in <see cref="F:Telerik.Web.UI.SchedulerViewType.MonthView">month view</see> mode.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DayEndTime">
            <summary>
                Gets or sets the time used to denote the end of the day.
            </summary>
            <value>
                The time used to denote the end of the day.
            </value>
            <remarks>
                This property is ignored in <see cref="F:Telerik.Web.UI.SchedulerViewType.MonthView">month view</see> mode.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.WorkDayStartTime">
            <summary>
                Gets or sets the time used to denote the start of the work day.
            </summary>
            <value>
                The time used to denote the start of the work day.
            </value>
            <remarks>
            	The effect from this property is only visual.
                This property is ignored in <see cref="F:Telerik.Web.UI.SchedulerViewType.MonthView">month view</see> mode.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.WorkDayEndTime">
            <summary>
                Gets or sets the time used to denote the end of the work day.
            </summary>
            <value>
                The time used to denote the end of the work day.
            </value>
            <remarks>
            	The effect from this property is only visual.
                This property is ignored in <see cref="F:Telerik.Web.UI.SchedulerViewType.MonthView">month view</see> mode.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.EnableResourceEditing">
            <summary>
            Gets or sets a value that indicates whether the resource editing in the advanced form is enabled.
            </summary>
            <value>A value that indicates whether the resource editing in the advanced form is enabled.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.EnableCustomAttributeEditing">
            <summary>
            Gets or sets a value that indicates whether the attribute editing in the advanced form is enabled.
            </summary>
            <value>A value that indicates whether the attribute editing in the advanced form is enabled.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.FirstDayOfWeek">
            <summary>
            Gets or sets the first day of the week.
            </summary>
            <remarks>
            	Used this property to specify the first day rendered in week view.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.LastDayOfWeek">
            <summary>
            Gets or sets the last day of the week.
            </summary>
            <remarks>
            This property is applied in week and month view.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OverflowBehavior">
            <summary>
            Gets or sets a value specifying the way <strong>RadScheduler</strong> should behave when its content
            overflows its dimensions.
            </summary>
            <value>
            	One of the <see cref="P:Telerik.Web.UI.RadScheduler.OverflowBehavior">OverflowBehavior</see> values. The default value is OverflowBehavior.Scroll.
            </value>
            <remarks>
            	By default RadScheduler will render a scrollbar should its content exceed the specified dimensions
            	(set via the Width and Height properties). If
            	<see cref="F:Telerik.Web.UI.OverflowBehavior.Expand">OverflowBehavior.Expand</see> is set RadScheduler
            	will expand vertically. The Height property must not be set in that case.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ShowHoursColumn">
            <summary>
            Gets or sets a value indicating whether to render the hours column in day and week view.
            </summary>
            <value><c>true</c> if the hours column is rendered in day and week view; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ShowDateHeaders">
            <summary>
            Gets or sets a value indicating whether to render date headers for the current view.
            </summary>
            <value><c>true</c> if the date headers for the current view are rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ShowResourceHeaders">
            <summary>
            Gets or sets a value indicating whether to render resource headers for the current view.
            </summary>
            <value><c>true</c> if the resource headers for the current view are rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ShowHeader">
            <summary>
            Gets or sets a value indicating whether to render the header.
            </summary>
            <value><c>true</c> if the header is rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ShowFooter">
            <summary>
            Gets or sets a value indicating whether to render the footer.
            </summary>
            <value><c>true</c> if the footer is rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ShowNavigationPane">
            <summary>
            Gets or sets a value indicating whether to render  the navigation links..
            </summary>
            <value><c>true</c> if the header is rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ShowViewTabs">
            <summary>
            Gets or sets a value indicating whether to render the tabs for switching between the view types.
            </summary>
            <value><c>true</c> if the tabs is rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ShowAllDayRow">
            <summary>
            Gets or sets a value indicating whether to render  the all day pane.
            </summary>
            <value><c>true</c> if the header is rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ShowWeeklyColumnHeader">
            <summary>
            Gets or sets a value indicating whether to render the column header in week view.
            </summary>
            <value><c>true</c> if the column header in week view is rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ShowMonthlyColumnHeader">
            <summary>
            Gets or sets a value indicating whether to render the column header in month view.
            </summary>
            <value><c>true</c> if the column header in month view is rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DayHeaderDateFormat">
            <summary>
            Gets or sets the day header date format string.
            </summary>
            <value>The day header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.WeekHeaderDateFormat">
            <summary>
            Gets or sets the week header date format string.
            </summary>
            <value>The week header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.MonthHeaderDateFormat">
            <summary>
            Gets or sets the month header date format string. 
            </summary>
            <value>The month header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.WeekColumnHeaderDateFormat">
            <summary>
            Gets or sets the week  header column date format string. 
            </summary>
            <value>The week column header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.MonthColumnHeaderDateFormat">
            <summary>
            Gets or sets the month header date format string. 
            </summary>
            <value>The month header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.EditFormDateFormat">
            <summary>
            Gets or sets the edit form date format string.
            </summary>
            <value>The edit form date format string.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.EditFormTimeFormat">
            <summary>
            Gets or sets the edit form time format string.
            </summary>
            <value>The edit form time format string.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.HoursPanelTimeFormat">
            <summary>
            Gets or sets the hours panel time format string.
            </summary>
            <value>The hours panel time format string.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ShowFullTime">
            <summary>
            Gets or sets a value indicating whether to display the complete day (24-hour view) or the range between DayStartTime and DayEndTime.
            </summary>
            <value><c>true</c> if showing the complete day (24-hour view); otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.StartInFullTime">
            <summary>
            Gets or sets a value indicating whether to start in full time.
            When set to true, RadScheduler will display the complete day (24-hour view) on start; otherwise the time range between DayStartTime and DayEndTime.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.GroupingDirection">
            <summary>
            Gets or sets the resource grouping direction of the RadScheduler.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.EnableDatePicker">
            <summary>
            Gets or sets a value indicating whether to enable the date picker for quick navigation.
            </summary>
            <value><c>true</c> if the date picker for quick navigation is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.RowHeight">
            <summary>
            Gets or sets the height of RadScheduler rows.
            </summary>
            <value>The height of a RadScheduler row</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ColumnWidth">
            <summary>
            Gets or sets the width of each content column.
            </summary>
            <value>The width of each content column</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.RowHeaderWidth">
            <summary>
            Gets or sets the width of each row header.
            </summary>
            <value>The width of each row header</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.MinimumInlineFormHeight">
            <summary>
            Gets or sets the minimum height of the inline insert/edit template.
            </summary>
            <remarks>
            The height is applied to the textbox inside the default inline template.
            It will be ignored when using custom templates for the inline form.
            </remarks>
            <value>The minimum height of the inline insert/edit template.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.MinimumInlineFormWidth">
            <summary>
            Gets or sets the minimum width of the inline insert/edit template.
            </summary>
            <value>The minimum width of the inline insert/edit template.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ValidationGroup">
            <summary>
            Gets or sets the name of the validation group to be used for the integrated validation controls.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DataSourceID">
            <summary>
                Overridden. Gets or sets the ID property of the data source control that the
                RadScheduler should use to retrieve its data source.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.Provider">
            <summary>
                Gets or sets the provider instance to be used by RadScheduler. Use this property
                with providers that are created at runtime. For ASP.NET providers defined in web.config
                use the <see cref="P:Telerik.Web.UI.RadScheduler.ProviderName">ProviderName</see> property.
            </summary>
            <value>
                The provider instance to be used by RadScheduler.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ProviderName">
            <summary>
                Gets or sets the name of the current appointment provider used by RadScheduler. The provider
                must be defined in the RadScheduler section of web.config.
            </summary>
            <value>
                The name of the current appointment provider used by RadScheduler as defined in web.config.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.ProviderContext">
            <summary>
                Gets the current provider context. The context object contains
            	additional information about the currently performed operation,
            	that can be used to improve and optimize provider implementations.
            </summary>
            <value>
                The current provider context.
            	The context object can be of type
            	<see cref="T:Telerik.Web.UI.UpdateAppointmentContext">UpdateAppointmentContext</see> or
            	<see cref="T:Telerik.Web.UI.CreateRecurrenceExceptionContext">CreateRecurrenceExceptionContext</see>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DataKeyField">
            <summary>
                Gets or sets the key field for appointments in the data source specified by the
                <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see> property.
            </summary>
            <value>
                The name of the key field for appointments in the data source specified by
                <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DataSubjectField">
            <summary>
                Gets or sets the subject field for appointments in the data source specified by the
                <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see> property.
            </summary>
            <value>
                The name of the subject field for appointments in the data source specified by
                <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DataEndField">
            <summary>
                Gets or sets the end field for appointments in the data source specified by the
                <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see> property.
            </summary>
            <value>
                The name of the end field for appointments in the data source specified by
                <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DataStartField">
            <summary>
                Gets or sets the start field for appointments in the data source specified by the
                <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see> property.
            </summary>
            <value>
                The name of the start field for appointments in the data source specified by
                <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DataRecurrenceField">
            <summary>
                Gets or sets the recurrence rule field for appointments in the data source specified by
                the <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see> property.
            </summary>
            <value>
                The name of the recurrene rule field for appointments in the data source specified by
                <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.DataRecurrenceParentKeyField">
            <summary>
                Gets or sets the recurrence parent key field for appointments in the data source specified
                by the <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see> property.
            </summary>
            <value>
                The name of the recurrence parent key field for appointments in the data source specified
                by <see cref="P:Telerik.Web.UI.RadScheduler.DataSourceID">DataSourceID</see>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.CustomAttributeNames">
            <summary>
            	Specifies the database fields (column names) which should be loaded as appointment attributes.
            </summary>
            <value>
            	An array of strings representing the names of the database fields which should be populated as appointment custom attributes. By default <strong>RadScheduler</strong> does not populate any
            	database fields as custom attributes.
            </value>
            <remarks>
            	You should use the <strong>CustomAttributeNames</strong> property when you want RadScheduler to populate the <see cref="P:Telerik.Web.UI.Appointment.Attributes">Attributes</see> collection of the appointments.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.AppointmentComparer">
            <summary>
            Gets or sets the comparer instance used to determine the appointment ordering within the same slot.
            By default, appointments are ordered by start time and duration.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.MaximumRecurrenceCandidates">
            <summary>
            Gets or sets the maximum recurrence candidates limit.
            </summary>
            <remarks>
            This limit is used to prevent lockups when evaluating long recurring series.
            The default value should not be changed under normal conditions.
            </remarks>
            <value>The maximum recurrence candidates limit.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.EnableRecurrenceSupport">
            <summary>
            Gets or sets a value indicating whether the user can create and edit recurring appointments.
            </summary>
            <value><strong>true</strong> if the user is allowed to create and edit recurring appointments; <strong>false </strong> otherwise. The default value is <strong>true</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.AllowEdit">
            <summary>
            Gets or sets a value indicating whether appointments editing is allowed.
            </summary>
            <value><c>true</c> if appointments editing is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.AllowDelete">
            <summary>
            Gets or sets a value indicating whether appointments deleting is allowed.
            </summary>
            <value><c>true</c> if appointments deleting is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.AllowInsert">
            <summary>
            Gets or sets a value indicating whether appointments inserting is allowed.
            </summary>
            <value><c>true</c> if appointments inserting is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.AppointmentCommand">
            <summary>
            Occurs when a button is clicked within the appointment template.
            </summary>
            <remarks>
            The AppointmentCommand event is raised when any button is clicked withing the appointment template.
            This event is commonly used to handle button controls with a custom CommandName value.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_AppointmentCommand(object sender, AppointmentCommandEventArgs e)
            		{
            			if (e.CommandName == "Delete")
            			{
            				Delete(e.Container.Appointment);
            			}
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_AppointmentCommand(sender As Object, e As AppointmentCommandEventArgs)
            			If e.CommandName = "Delete" Then
            				Delete(e.Container.Appointment)
            			End If
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.AppointmentInsert">
            <summary>
            Occurs when an appointment is about to be inserted in the database through the provider.
            </summary>
            <remarks>
            The insert operation can be cancelled by setting the
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel">SchedulerCancelEventArgs.Cancel</see>
            property of <see cref="T:Telerik.Web.UI.SchedulerCancelEventArgs">SchedulerCancelEventArgs</see> to true.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_AppointmentInsert(object sender, SchedulerCancelEventArgs e)
            		{
            			if (e.Appointment.Subject == String.Empty)
            			{
            				e.Cancel = true;
            			}
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_AppointmentInsert(sender As Object, e As SchedulerCancelEventArgs)
            			If e.Appointment.Subject = String.Empty Then
            				e.Cancel = True
            			End If
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.AppointmentUpdate">
            <summary>
            Occurs when an appointment is about to be updated through the provider.
            </summary>
            <remarks>
            The <see cref="T:Telerik.Web.UI.AppointmentUpdateEventArgs">AppointmentUpdateEventArgs</see> hold a reference both
            to the original and the modified appointment. Any modifications on the original appointments are
            discarded.
            The update operation can be cancelled by setting the
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel">AppointmentUpdateEventArgs.Cancel</see>
            property of <see cref="T:Telerik.Web.UI.AppointmentUpdateEventArgs">AppointmentUpdateEventArgs</see> to true.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_AppointmentUpdate(object sender, AppointmentUpdateEventArgs e)
            		{
            			e.ModifiedAppointment.End = e.ModifiedAppointment.End.AddHours(1);
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_AppointmentUpdate(sender As Object, e As AppointmentUpdateEventArgs)
            			e.ModifiedAppointment.End = e.ModifiedAppointment.End.AddHours(1)
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.AppointmentDelete">
            <summary>
            Occurs when an appointment is about to be deleted from the database through the provider.
            </summary>
            <remarks>
            The delete operation can be cancelled by setting the
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel">SchedulerCancelEventArgs.Cancel</see>
            property of <see cref="T:Telerik.Web.UI.SchedulerCancelEventArgs">SchedulerCancelEventArgs</see> to true.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_AppointmentDelete(object sender, SchedulerCancelEventArgs e)
            		{
            			if (e.Appointment.Attributes["ReadOnly"] == "true")
            			{
            				e.Cancel = true;
            			}
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_AppointmentDelete(sender As Object, e As SchedulerCancelEventArgs)
            			If e.Appointment.Attributes("ReadOnly") = "true" Then
            				e.Cancel = True
            			End If
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.AppointmentCreated">
            <summary>
            Occurs when an appointment template has been instantiated.
            </summary>
            <remarks>
            You can use this event to modify the appointment template before data binding.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_AppointmentCreated(object sender, AppointmentCreatedEventArgs e)
            		{
            			Label testLabel = (Label) e.Container.FindControl("Test");
            			testLabel.Text = "Test";
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_AppointmentCreated(sender As Object, e As AppointmentCreatedEventArgs)
            			Dim testLabel As Label = CType(e.Container.FindControl("Test"), Label)
            			testLabel.Text = "Test"
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.AppointmentDataBound">
            <summary>
            Occurs when an appointment has been added to the Appointments collection from the data source.
            </summary>
            <remarks>
            You can use this event to make adjustments to the appointments as they are being loaded.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_AppointmentDataBound(object sender, SchedulerEventArgs e)
            		{
            			e.Appointment.Start = e.Appointment.Start.AddHours(1);
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_AppointmentDataBound(sender As Object, e As SchedulerEventArgs)
            			e.Appointment.Start = e.Appointment.Start.AddHours(1)
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.AppointmentClick">
            <summary>
            Occurs when an appointment has been clicked.
            </summary>
            <remarks>
            You can use this event to perform additional actions when an appointment has been clicked.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_AppointmentClick(object sender, SchedulerEventArgs e)
            		{
            			Response.Redirect("Page.aspx);
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_AppointmentClick(sender As Object, e As SchedulerEventArgs)
            			Response.Redirect("Page.aspx)
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.NavigationCommand">
            <summary>
            Occurs when the client performs a navigation command.
            </summary>
            <remarks>
            You can use this event to customize the action when the client performs a navigation command.
            The event can be cancelled by setting the
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel">SchedulerNavigationCommandEventArgs.Cancel</see>
            property of <see cref="T:Telerik.Web.UI.SchedulerNavigationCommandEventArgs">SchedulerNavigationCommandEventArgs</see> to true.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_NavigationCommand(object sender, SchedulerNavigationCommandEventArgs e)
            		{
            			if (e.Command == SchedulerNavigationCommand.NavigateToNextPeriod)
            			{
            				e.Cancel = true;
            			}
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_NavigationCommand(sender As Object, e As SchedulerNavigationCommandEventArgs)
            			If e.Command = SchedulerNavigationCommand.NavigateToNextPeriod Then
            				e.Cancel = True
            			End If
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.NavigationComplete">
            <summary>
            Occurs when a navigation action has been completed.
            </summary>
            <remarks>
            You can use this event to perform custom actions when a navigation action has been completed.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_NavigationComplete(object sender, SchedulerNavigationCompleteEventArgs e)
            		{
            			Label1.Text = RadScheduler1.SelectedDate;
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_NavigationComplete(sender As Object, e As SchedulerNavigationCompleteEventArgs)
            			Label1.Text = RadScheduler1.SelectedDate
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.FormCreating">
            <summary>
            Occurs when an insert/edit form is being created.
            </summary>
            <remarks>
            You can use this event to perform custom actions when a form is about to be created.
            The event can be cancelled by setting the
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel">SchedulerFormCreatingEventArgs.Cancel</see>
            property of <see cref="T:Telerik.Web.UI.SchedulerFormCreatingEventArgs">SchedulerFormCreatingEventArgs</see> to true.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_FormCreating(object sender, SchedulerFormCreatingEventArgs e)
            		{
            			if (e.Mode == SchedulerFormMode.Insert)
            			{
            				e.Cancel = true;
            			}
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_FormCreating(sender As Object, e As SchedulerFormCreatingEventArgs)
            			If e.Mode = SchedulerFormMode.Insert Then
            				e.Cancel = True
            			End If
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.FormCreated">
            <summary>
            Occurs when an insert/edit form has been created.
            </summary>
            <remarks>
            You can use this event to make modifications to the form template.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_FormCreated(object sender, SchedulerFormCreatedEventArgs e)
            		{
            			if (e.Container.Mode == SchedulerFormMode.Insert)
            			{
            				Label startDate = (Label) e.Container.FindControl("StartDate");
            				startDate.Text = e.Container.Appointment.Start;
            			}
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_FormCreated(sender As Object, e As SchedulerFormCreatedEventArgs)
            			If e.Container.Mode = SchedulerFormMode.Insert Then
            				Dim startDate As Label = CType(e.Container.FindControl("StartDate"), Label)
            				startDate.Text = e.Container.Appointment.Start
            			End If
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.AppointmentCancelingEdit">
            <summary>
            Occurs when the Cancel button of an edit form is clicked, but before RadScheduler exits edit mode.
            </summary>
            <remarks>
            You can use this event to provide an event-handling method that performs a custom routine,
            such as stopping the cancel operation if it would put the appointment in an undesired state.
            To stop the cancel action set the
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel">AppointmentCancelingEditEventArgs.Cancel</see>
            property of <see cref="T:Telerik.Web.UI.AppointmentCancelingEditEventArgs">AppointmentCancelingEditEventArgs</see> to true.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_FormCreated(object sender, SchedulerFormCreatedEventArgs e)
            		{
            			if (e.Container.Mode == SchedulerFormMode.Insert)
            			{
            				TextBox startDate = (TextBox) e.Container.FindControl("StartDate");
            				if (startDate.Text == String.Empty)
            				{
            					e.Cancel = true;
            				}
            			}
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_FormCreated(sender As Object, e As SchedulerFormCreatedEventArgs)
            			If e.Container.Mode = SchedulerFormMode.Insert Then
            				Dim startDate As TextBox = CType(e.Container.FindControl("StartDate"), TextBox)
            				If startDate.Text = String.Empty Then
            					e.Cancel = true
            				End If
            			End If
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.TimeSlotCreated">
            <summary>
            Occurs when a time slot has been created.
            </summary>
            <remarks>
            You can use this event to make modifications to the time slots.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_TimeSlotCreated(object sender, TimeSlotCreatedEventArgs e)
            		{
            			e.TimeSlot.CssClass = "holidayTimeSlot";
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_TimeSlotCreated(sender As Object, e As TimeSlotCreatedEventArgs)
            			e.TimeSlot.CssClass = "holidayTimeSlot"
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.ResourceHeaderCreated">
            <summary>
            Occurs when a resource header has been created.
            </summary>
            <remarks>
            You can use this event to make modifications to the resouce headers.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_TimeSlotCreated(object sender, TimeSlotCreatedEventArgs e)
            		{
            			e.Container.Controls.Add(new LiteralControl("Test"));
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_TimeSlotCreated(sender As Object, e As TimeSlotCreatedEventArgs)
            			e.Container.Controls.Add(new LiteralControl("Test"))
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.RecurrenceExceptionCreated">
            <summary>
            Occurs when an appointment that represents a recurrence exception is about to be created.
            </summary>
            <remarks>
            The <see cref="T:Telerik.Web.UI.AppointmentUpdateEventArgs">RecurrenceExceptionCreatedEventArgs</see> hold a reference both
            to the master and the exception appointment.
            The operation can be cancelled by setting the
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel">RecurrenceExceptionCreatedEventArgs.Cancel</see>
            property of <see cref="T:Telerik.Web.UI.AppointmentUpdateEventArgs">RecurrenceExceptionCreatedEventArgs</see> to true.
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_RecurrenceExceptionCreated(object sender, RecurrenceExceptionCreatedEventArgs e)
            		{
            			e.Cancel = true;
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_RecurrenceExceptionCreated(sender As Object, e As RecurrenceExceptionCreatedEventArgs)
            			e.Cancel = true
            		End Sub
            	</code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadScheduler.ResourcesPopulating">
            <summary>
            Occurs when the scheduler is about to request resources from the Web Service.
            </summary>
            <remarks>
            <para>
            	Resources need to be populated from the server when using resource grouping.
            	Doing so also reduces the client-side initialization time.
            </para> 
            <para>
            	This operation requires the <see cref="T:System.Net.WebPermission">WebPermission</see> to be granted
            	for the Web Service URL. This permission is not granted by default in <b>Medium Trust</b>.
            </para>
            <para>
            	You can disable the population of the resources from the server and still use
            	client-side rendering for grouped views. To do so you need to set the
            	<see cref="P:Telerik.Web.UI.SchedulerWebServiceSettings.ResourcePopulationMode">WebServiceSettings.ResourcePopulationMode</see>
            	to <see cref="F:Telerik.Web.UI.SchedulerResourcePopulationMode.Manual">Manual</see> and
            	populate the resources from the OnInit method of the page.
            </para>
            <para>
            	The <see cref="T:Telerik.Web.UI.ResourcesPopulatingEventArgs">ResourcesPopulatingEventArgs</see>
            	contains additional information about the request that is about to be made.
            	You can use its properties to modify the URL, supply credentials and so on.
            </para>
            <para>
            	The operation can be cancelled by setting the
            	<see cref="P:System.ComponentModel.CancelEventArgs.Cancel">ResourcesPopulatingEventArgs.Cancel</see>
            	property of <see cref="T:Telerik.Web.UI.ResourcesPopulatingEventArgs">ResourcesPopulatingEventArgs</see> to true.
            </para>
            </remarks>
            <example>
            	<code lang="CS">
            		void RadScheduler1_ResourcesPopulating(object sender, ResourcesPopulatingEventArgs e)
            		{
            			e.Cancel = true;
            		}
            	</code>
            	<code lang="VB">
            		Sub RadScheduler1_ResourcesPopulating(sender As Object, e As ResourcesPopulatingEventArgs)
            			e.Cancel = true
            		End Sub
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientAppointmentMoveStart">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            an appointment is about to be moved.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientAppointmentMoveStartHandler(sender, eventArgs)<br/>
                {<br/>
            		var appointment = eventArgs.get_appointment();<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientAppointmentMoveStart="onClientAppointmentMoveStartHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentMoveStart</strong> client-side event
                handler is called when an appointment is about to be moved.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with four properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the instance of the appointment.</item>
            				<item><strong>set_cancel()</strong>, set to true to cancel the move operation.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientAppointmentMoving">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            an appointment is being moved.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientAppointmentMovingHandler(sender, eventArgs)<br/>
                {<br/>
            		var appointment = eventArgs.get_appointment();<br/>
            		var targetSlot = eventArgs.get_targetSlot();<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientAppointmentMoving="onClientAppointmentMovingHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentMoving</strong> client-side event
                handler is called when an appointment is being moved.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with four properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the instance of the appointment.</item>
            				<item><strong>get_targetSlot()</strong>, the slot that the appointment currently occupies.</item>
            				<item><strong>set_cancel()</strong>, set to true to cancel the move operation.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientAppointmentMoveEnd">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            an appointment has been moved.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientAppointmentMoveEndHandler(sender, eventArgs)<br/>
                {<br/>
            		var appointment = eventArgs.get_appointment();<br/>
            		var newStartTime = eventArgs.get_newStartTime();<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientAppointmentMoveEnd="onClientAppointmentMoveEndHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentMoveEnd</strong> client-side event
                handler is called when an appointment has been moved.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with four properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the instance of the appointment.</item>
            				<item><strong>get_newStartTime()</strong>, the new start time of the appointment.</item>
            				<item><strong>get_editingRecurringSeries()</strong>, a boolean value indicating whether the user has selected to edit the whole series.</item>
            				<item><strong>get_targetSlot()</strong>, the target slot that the appointment has been moved to.</item>
            				<item><strong>set_cancel()</strong>, set to true to cancel the move operation.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientRecurrenceActionDialogShowing">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the recurrence action confirmation dialog is about to be shown.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientRecurrenceActionDialogShowingHandler(sender, eventArgs)<br/>
                {<br/>
            		var appointment = eventArgs.get_appointment();<br/>
            		var action = eventArgs.get_recurrenceAction();<br/>
            		<br/>
            		if (action == Telerik.Web.UI.RecurrenceAction.Edit)<br/>
            		{<br/>
            			alert("Overriding recurrence action dialog to 'Edit series' for appointment '" + appointment.get_subject() + "'");
            			eventArgs.set_cancel(true);<br/>
            			eventArgs.set_editSeries(true);<br/>
            		}<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientRecurrenceActionDialogShowing="onClientRecurrenceActionDialogShowingHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientRecurrenceActionDialogShowing</strong> client-side event
                handler is called when the recurrence action confirmation dialog is about to be shown.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with three properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the instance of the appointment.</item>
            				<item><strong>set_cancel()</strong>, set to true to suppress the confirmation dialog.</item>
            				<item><strong>set_editSeries()</strong>, set to true or false to override the result from the dialog (only if it has been cancelled by calling eventArgs.set_cancel(true)).</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientRecurrenceActionDialogClosed">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the recurrence action confirmation dialog has been closed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientRecurrenceActionDialogClosedHandler(sender, eventArgs)<br/>
                {<br/>
            		var appointment = eventArgs.get_appointment();<br/>
            		var editSeries = eventArgs.get_editSeries();<br/>
            		<br/>
            		alert("The user has set editSeries to '" + editSeries + "' for appointment '" + appointment.get_subject() + "'");
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientRecurrenceActionDialogClosed="onClientRecurrenceActionDialogClosedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientRecurrenceActionDialogClosed</strong> client-side event
                handler is called when the recurrence action confirmation dialog has been closed.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with three properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the instance of the appointment.</item>
            				<item><strong>get_editSeries()</strong>, the selected option from the dialog.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientFormCreated">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            an edit/insert form has been created.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientFormCreatedHandler(sender, eventArgs)<br/>
                {<br/>
            		var appointment = eventArgs.get_appointment();<br/>
            		var formElement = eventArgs.get_formElement();<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientFormCreated="onClientFormCreatedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientFormCreated</strong> client-side event
                handler is called when an edit/insert form has been created.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with two properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the instance of the appointment.</item>
            				<item><strong>get_formElement()</strong>, the DOM element of the form.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientAppointmentContextMenu">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            an appointment has been right-clicked.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientAppointmentContextMenuHandler(sender, eventArgs)<br/>
                {<br/>
            		var appointment = eventArgs.get_appointment();<br/>
            		// ... <br/>
            		eventArgs.get_domEvent().preventDefault(); // Prevent displaying the browser menu<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientAppointmentContextMenu="onClientAppointmentContextMenuHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentContextMenu</strong> client-side event
                handler is called when an appointment has been right-clicked.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with two properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the instance of the appointment.</item>
            				<item><strong>get_domEvent()</strong>, the original DOM event.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientTimeSlotContextMenu">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            an empty time slot has been right-clicked.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function onClientTimeSlotContextMenuHandler(sender, eventArgs)<br/>
                {<br/>
            		var time = eventArgs.get_time();<br/>
            		// ... <br/>
            		eventArgs.get_domEvent().preventDefault(); // Prevent displaying the browser menu<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientTimeSlotContextMenu="onClientTimeSlotContextMenuHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentContextMenu</strong> client-side event
                handler is called when an empty time slot has been right-clicked.
            	Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with three properties:
            			<list type="bullet">
            				<item><strong>get_time()</strong>, the time that corresponds to the slot.</item>
            				<item><strong>get_isAllDay()</strong>, a boolean indicating if this is an all-day slot (the time should be discarded in this case).</item>
            				<item><strong>get_domEvent()</strong>, the original DOM event.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientAppointmentsPopulating">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the scheduler is about to request appointments from the Web Service.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientAppointmentsPopulatingHandler(sender, eventArgs)<br/>
                {<br/>
            		alert("Data loading");<br/>
            		eventArgs.get_schedulerInfo().CustomProperty = "My Data";
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientAppointmentsPopulating="clientAppointmentsPopulatingHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentsPopulating</strong> client-side event
                handler is called when the scheduler is about to request appointments.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>When <b>client-side binding</b> is used, the event will be raised before
            	the appointments are retrieved from the data service.
            	The event will be raised again each time new data is about to be retrieved from the web service.</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with two properties:
            			<list type="bullet">
            				<item><strong>get_schedulerInfo()</strong>, the schedulerInfo object that will be passed to the web service method.</item>
            				<item><strong>set_cancel()</strong>, used to cancel the event.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientAppointmentsPopulated">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the scheduler has received appointments from the Web Service.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientAppointmentsPopulatedHandler(sender)<br/>
                {<br/>
            		alert("Appointments populated");<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientAppointmentsPopulated="clientAppointmentsPopulatedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentsPopulated</strong> client-side event
                handler is called when the scheduler has received appointments.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>When <b>client-side binding</b> is used, the event will be raised after
            	the appointments are retrieved from the data service.
            	The event will be raised again each time new data has been retrieved from the web service.</para>
            	<para>One parameter is passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientAppointmentDataBound">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            an appointment is received from the Web Service and is about to be rendered.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientAppointmentDataBoundHandler(sender, eventArgs)<br/>
                {<br/>
            		alert("Appointment loaded");<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientAppointmentDataBound="clientAppointmentDataBoundHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentDataBound</strong> client-side event
                handler is called when an appointment is received and is about to be rendered.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>When <b>client-side binding</b> is used, the event will be raised after
            	the appointments are retrieved from the data service.
            	The event will be raised for each appointment that has been retrieved from the web service.</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with one property:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the instance of the appointment.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientAppointmentCreated">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            an appointment is received from the Web Service and hase been rendered.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientAppointmentCreatedHandler(sender, eventArgs)<br/>
                {<br/>
            		eventArgs.get_appointment().get_element().style.border = "1px solid red";<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientAppointmentCreated="clientAppointmentCreatedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentCreated</strong> client-side event
                handler is called when an appointment is received and has been rendered.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>When <b>client-side binding</b> is used, the event will be raised after
            	the appointments are retrieved from the data service.
            	The event will be raised for each appointment that has been retrieved from the web service.</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with one property:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the appointment that has been rendered.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientResourcesPopulating">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the scheduler is about to request resources from the Web Service.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientResourcesPopulatingHandler(sender, eventArgs)<br/>
                {<br/>
            		alert("Resources loading");<br/>
            		eventArgs.get_schedulerInfo().CustomProperty = "My Data";
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientResourcesPopulating="clientResourcesPopulatingHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientResourcesPopulating</strong> client-side event
                handler is called when the scheduler is about to request resources.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>When <b>client-side binding</b> is used, the event will be raised before
            	the resources are retrieved from the data service.
            	The event will be raised only once, at the time of the initial load.</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with two properties:
            			<list type="bullet">
            				<item><strong>get_schedulerInfo()</strong>, the schedulerInfo object that will be passed to the web service method.</item>
            				<item><strong>set_cancel()</strong>, used to cancel the event.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientResourcesPopulated">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the scheduler has received resources from the Web Service.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientResourcesPopulatedHandler(sender)<br/>
                {<br/>
            		alert("Resources loaded");<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientResourcesPopulated="clientResourcesPopulatedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientResourcesPopulated</strong> client-side event
                handler is called when the scheduler has received resources.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>When <b>client-side binding</b> is used, the event will be raised after
            	the resources have been retrieved from the data service.
            	The event will be raised only once, at the time of the initial load.</para>
            	<para>One parameter is passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientDataBound">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the scheduler has been populated with data.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientDataBoundHandler(sender, eventArgs)<br/>
                {<br/>
            		alert("Data loaded");<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientDataBound="clientDataBoundHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientDataBound</strong> client-side event
                handler is called when the scheduler has been populated with data.</para>
            	<para>In the case of <b>server-side binding</b>, the event will be raised
            	immediately after the control is initialized.</para>
            	<para>When <b>client-side binding</b> is used, the event will be raised when
            	both the appointments and the resources	are retrieved from the data service.
            	The event will be raised again each time new data is retrieved from the web service.</para>
            	<para>One parameter is passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientRequestFailed">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a request to the Web Service has failed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientRequestFailedHandler(sender, eventArgs)<br/>
                {<br/>
            		alert("Request failed!");<br/>
            		eventArgs.set_cancel(true);
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientRequestFailed="clientRequestFailedHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientRequestFailed</strong> client-side event
                handler is called when a request to the Web Service has failed.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with two properties:
            			<list type="bullet">
            				<item><strong>get_errorMessage()</strong>, the error message sent from the server.</item>
            				<item><strong>set_cancel()</strong>, set to true to suppress the default action (alert message).</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientAppointmentWebServiceInserting">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            an appointment is about to be stored via Web Service call.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientAppointmentWebServiceInserting(sender, eventArgs)<br/>
                {<br/>
            		alert("Insert cancelled");<br/>
            		eventArgs.set_cancel(true);
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientAppointmentWebServiceInserting="clientAppointmentWebServiceInserting"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentWebServiceInserting</strong> client-side event
                handler is called when an appointment is about to be stored via Web Service call.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with two properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the appointment that is about to be inserted.</item>
            				<item><strong>set_cancel()</strong>, set to true cancel the operation.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientAppointmentWebServiceDeleting">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            an appointment is about to be deleted via Web Service call.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientAppointmentWebServiceDeleting(sender, eventArgs)<br/>
                {<br/>
            		alert("Delete cancelled");<br/>
            		eventArgs.set_cancel(true);
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientAppointmentWebServiceDeleting="clientAppointmentWebServiceDeleting"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentWebServiceDeleting</strong> client-side event
                handler is called when an appointment is about to be deleted via Web Service call.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with three properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the appointment that is about to be deleted.</item>
            				<item><strong>get_editingRecurringSeries()</strong>, indicates whether the recurring series are being deleted.</item>
            				<item><strong>set_cancel()</strong>, set to true cancel the operation.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientAppointmentWebServiceUpdating">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            an appointment is about to be updated via Web Service call.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientAppointmentWebServiceUpdating(sender, eventArgs)<br/>
                {<br/>
            		alert("Update cancelled");<br/>
            		eventArgs.set_cancel(true);
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientAppointmentWebServiceUpdating="clientAppointmentWebServiceUpdating"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentWebServiceUpdating</strong> client-side event
                handler is called when an appointment is about to be updated via Web Service call.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with two properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the appointment that is about to be updated.</item>
            				<item><strong>set_cancel()</strong>, set to true cancel the operation.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientRecurrenceExceptionCreating">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a recurrence exception is about to be created via Web Service call.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientRecurrenceExceptionCreating(sender, eventArgs)<br/>
                {<br/>
            		alert("Operation cancelled");<br/>
            		eventArgs.set_cancel(true);
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientRecurrenceExceptionCreating="clientRecurrenceExceptionCreating"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientAppointmentWebServiceUpdating</strong> client-side event
                handler is called when a recurrence exception is about to be created via Web Service call.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with two properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the appointment that represents the recurrence exception that is about to be stored.</item>
            				<item><strong>set_cancel()</strong>, set to true cancel the operation.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadScheduler.OnClientRecurrenceExceptionsRemoving">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            recurrence exceptions are about to be removed via Web Service call.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function clientRecurrenceExceptionsRemoving(sender, eventArgs)<br/>
                {<br/>
            		alert("Operation cancelled");<br/>
            		eventArgs.set_cancel(true);
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;telerik:RadScheduler ID="RadScheduler1"<br/>
                runat="server"<br/>
            		<strong>OnClientRecurrenceExceptionsRemoving="clientRecurrenceExceptionsRemoving"</strong>&gt;<br/>
                ....<br/>
                &lt;/telerik:RadScheduler&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientRecurrenceExceptionsRemoving</strong> client-side event
                handler is called when recurrence exceptions are about to be removed via Web Service call.</para>
            	<para>In the case of <b>server-side binding</b>, the event will not be raised.</para>
            	<para>When <b>client-side binding is used</b>, the event will be raised when the user
            	chooses to remove the recurrence exceptions of a given series through the advanced form.
            	</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the scheduler client object;</item>
            		<item><strong>eventArgs</strong> with two properties:
            			<list type="bullet">
            				<item><strong>get_appointment()</strong>, the master appointment that represents the recurrence series.</item>
            				<item><strong>set_cancel()</strong>, set to true cancel the operation.</item>
            			</list>
            		</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.DailyRecurrenceRule">
            <summary>Occurrences of this rule repeat on a daily basis.</summary>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class DailyRecurrenceRuleExample1
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a recurrence rule to repeat the appointment every two days.
                        DailyRecurrenceRule rrule = new DailyRecurrenceRule(2, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1} ({2})", ix, occurrence.ToLocalTime(), occurrence.DayOfWeek);
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/1/2007 3:30:00 PM (Friday)
             2: 6/3/2007 3:30:00 PM (Sunday)
             3: 6/5/2007 3:30:00 PM (Tuesday)
             4: 6/7/2007 3:30:00 PM (Thursday)
             5: 6/9/2007 3:30:00 PM (Saturday)
             6: 6/11/2007 3:30:00 PM (Monday)
             7: 6/13/2007 3:30:00 PM (Wednesday)
             8: 6/15/2007 3:30:00 PM (Friday)
             9: 6/17/2007 3:30:00 PM (Sunday)
            10: 6/19/2007 3:30:00 PM (Tuesday)
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class DailyRecurrenceRuleExample1
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a recurrence rule to repeat the appointment every two days.
                        Dim rrule As New DailyRecurrenceRule(2, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1} ({2})", ix, occurrence.ToLocalTime(), occurrence.DayOfWeek)
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/1/2007 3:30:00 PM (Friday)
            ' 2: 6/3/2007 3:30:00 PM (Sunday)
            ' 3: 6/5/2007 3:30:00 PM (Tuesday)
            ' 4: 6/7/2007 3:30:00 PM (Thursday)
            ' 5: 6/9/2007 3:30:00 PM (Saturday)
            ' 6: 6/11/2007 3:30:00 PM (Monday)
            ' 7: 6/13/2007 3:30:00 PM (Wednesday)
            ' 8: 6/15/2007 3:30:00 PM (Friday)
            ' 9: 6/17/2007 3:30:00 PM (Sunday)
            '10: 6/19/2007 3:30:00 PM (Tuesday)
            '
                </code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.RecurrenceRule">
            <summary>Provides the <strong>abstract</strong> base class for recurrence rules.</summary>
            <seealso cref="T:Telerik.Web.UI.HourlyRecurrenceRule">HourlyRecurrenceRule Class</seealso>
            <seealso cref="T:Telerik.Web.UI.DailyRecurrenceRule">DailyRecurrenceRule Class</seealso>
            <seealso cref="T:Telerik.Web.UI.WeeklyRecurrenceRule">WeeklyRecurrenceRule Class</seealso>
            <seealso cref="T:Telerik.Web.UI.MonthlyRecurrenceRule">MonthlyRecurrenceRule Class</seealso>
            <seealso cref="T:Telerik.Web.UI.YearlyRecurrenceRule">YearlyRecurrenceRule Class</seealso>
            <remarks>
            	<strong>Notes to implementers:</strong> This base class is provided to make it
            easier for implementers to create a recurrence rule. Implementers are encouraged to
            extend this base class instead of creating their own.
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceRule.Empty">
            <summary>
            Represents an empty recurrence rule
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRule.FromPatternAndRange(Telerik.Web.UI.RecurrencePattern,Telerik.Web.UI.RecurrenceRange)">
            <summary>
            Creates a recurrence rule with the specified pattern and range.
            </summary>
            <param name="pattern">The recurrence pattern.</param>
            <param name="range">The recurrence range.</param>
            <returns>The constructed recurrence rule.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRule.TryParse(System.String,Telerik.Web.UI.RecurrenceRule@)">
            <summary>Creates a recurrence rule instance from it's string representation.</summary>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class ParsingExample
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a recurrence rule to repeat the appointment every 2 hours.
                        HourlyRecurrenceRule rrule = new HourlyRecurrenceRule(2, range);
             
                        // Prints the string representation of the recurrence rule:
                        string rruleAsString = rrule.ToString();
                        Console.WriteLine("Recurrence rule:\n\n{0}\n", rruleAsString);
             
                        // The string representation can be stored in a database, etc.
                        // ...
             
                        // Then it can be reconstructed using TryParse method:
                        RecurrenceRule parsedRule;
                        RecurrenceRule.TryParse(rruleAsString, out parsedRule);
                        Console.WriteLine("After parsing (should be the same):\n\n{0}", parsedRule);
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Recurrence rule:
             
            DTSTART:20070601T123000Z
            DTEND:20070601T130000Z
            RRULE:FREQ=HOURLY;COUNT=10;INTERVAL=2;
             
             
            After parsing (should be the same):
             
            DTSTART:20070601T123000Z
            DTEND:20070601T130000Z
            RRULE:FREQ=HOURLY;COUNT=10;INTERVAL=2;
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class ParsingExample
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a recurrence rule to repeat the appointment every 2 hours.
                        Dim rrule As New HourlyRecurrenceRule(2, range)
             
                        ' Prints the string representation of the recurrence rule:
                        Dim rruleAsString As String = rrule.ToString()
                        Console.WriteLine("Recurrence rule:" &amp; Chr(10) &amp; "" &amp; Chr(10) &amp; "{0}" &amp; Chr(10) &amp; "", rruleAsString)
             
                        ' The string representation can be stored in a database, etc.
                        ' ...
             
                        ' Then it can be reconstructed using TryParse method:
                        Dim parsedRule As RecurrenceRule
                        RecurrenceRule.TryParse(rruleAsString, parsedRule)
                        Console.WriteLine("After parsing (should be the same):" &amp; Chr(10) &amp; "" &amp; Chr(10) &amp; "{0}", parsedRule)
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Recurrence rule:
            '
            'DTSTART:20070601T123000Z
            'DTEND:20070601T130000Z
            'RRULE:FREQ=HOURLY;COUNT=10;INTERVAL=2;
            '
            '
            'After parsing (should be the same):
            '
            'DTSTART:20070601T123000Z
            'DTEND:20070601T130000Z
            'RRULE:FREQ=HOURLY;COUNT=10;INTERVAL=2;
            '
                </code>
            </example>
            <returns>True if <em>input</em> was converted successfully, false otherwise.</returns>
            <param name="input">The string representation to parse.</param>
            <param name="rrule">
            When this method returns, contains the recurrence rule instance, if the
            conversion succeeded, or null if the conversion failed. The conversion fails if the
            <em>value</em> parameter is a null reference (<strong>Nothing</strong> in Visual Basic)
            or represents invalid recurrence rule.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRule.SetEffectiveRange(System.DateTime,System.DateTime)">
            <summary>Specifies the effective range for evaluating occurrences.</summary>
            <exception cref="T:System.ArgumentException" caption="">End date is before Start date.</exception>
            <remarks>
                The range is inclusive. To clear the effective range call
                <see cref="M:Telerik.Web.UI.RecurrenceRule.ClearEffectiveRange"/>.
            </remarks>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class EffectiveRangeExample
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a recurrence rule to repeat the appointment every 2 hours.
                        HourlyRecurrenceRule rrule = new HourlyRecurrenceRule(2, range);
             
                        // Limits the effective range.
                        rrule.SetEffectiveRange(Convert.ToDateTime("6/1/2007 5:00 PM"), Convert.ToDateTime("6/1/2007 8:00 PM"));
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/1/2007 5:30:00 PM
             2: 6/1/2007 7:30:00 PM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class EffectiveRangeExample
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a recurrence rule to repeat the appointment every 2 hours.
                        Dim rrule As New HourlyRecurrenceRule(2, range)
             
                        ' Limits the effective range.
                        rrule.SetEffectiveRange(Convert.ToDateTime("6/1/2007 5:00 PM"), Convert.ToDateTime("6/1/2007 8:00 PM"))
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/1/2007 5:30:00 PM
            ' 2: 6/1/2007 7:30:00 PM
            '
                </code>
            </example>
            <seealso cref="M:Telerik.Web.UI.RecurrenceRule.ClearEffectiveRange">ClearEffectiveRange Method</seealso>
            <param name="start">The starting date of the effective range.</param>
            <param name="end">The ending date of the effective range.</param>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRule.ClearEffectiveRange">
            <summary>Clears the effective range set by calling <see cref="M:Telerik.Web.UI.RecurrenceRule.SetEffectiveRange(System.DateTime,System.DateTime)"/>.</summary>
            <remarks>If no effective range was set, calling this method has no effect.</remarks>
            <seealso cref="M:Telerik.Web.UI.RecurrenceRule.SetEffectiveRange(System.DateTime,System.DateTime)">SetEffectiveRange Method</seealso>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRule.ToString">
            <summary>Converts the recurrence rule to it's equivalent string representation.</summary>
            <returns>The string representation of this recurrence rule.</returns>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class ParsingExample
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a recurrence rule to repeat the appointment every 2 hours.
                        HourlyRecurrenceRule rrule = new HourlyRecurrenceRule(2, range);
             
                        // Prints the string representation of the recurrence rule:
                        string rruleAsString = rrule.ToString();
                        Console.WriteLine("Recurrence rule:\n\n{0}\n", rruleAsString);
             
                        // The string representation can be stored in a database, etc.
                        // ...
             
                        // Then it can be reconstructed using TryParse method:
                        RecurrenceRule parsedRule;
                        RecurrenceRule.TryParse(rruleAsString, out parsedRule);
                        Console.WriteLine("After parsing (should be the same):\n\n{0}", parsedRule);
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Recurrence rule:
             
            DTSTART:20070601T123000Z
            DTEND:20070601T130000Z
            RRULE:FREQ=HOURLY;COUNT=10;INTERVAL=2;
             
             
            After parsing (should be the same):
             
            DTSTART:20070601T123000Z
            DTEND:20070601T130000Z
            RRULE:FREQ=HOURLY;COUNT=10;INTERVAL=2;
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class ParsingExample
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a recurrence rule to repeat the appointment every 2 hours.
                        Dim rrule As New HourlyRecurrenceRule(2, range)
             
                        ' Prints the string representation of the recurrence rule:
                        Dim rruleAsString As String = rrule.ToString()
                        Console.WriteLine("Recurrence rule:" &amp; Chr(10) &amp; "" &amp; Chr(10) &amp; "{0}" &amp; Chr(10) &amp; "", rruleAsString)
             
                        ' The string representation can be stored in a database, etc.
                        ' ...
             
                        ' Then it can be reconstructed using TryParse method:
                        Dim parsedRule As RecurrenceRule
                        RecurrenceRule.TryParse(rruleAsString, parsedRule)
                        Console.WriteLine("After parsing (should be the same):" &amp; Chr(10) &amp; "" &amp; Chr(10) &amp; "{0}", parsedRule)
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Recurrence rule:
            '
            'DTSTART:20070601T123000Z
            'DTEND:20070601T130000Z
            'RRULE:FREQ=HOURLY;COUNT=10;INTERVAL=2;
            '
            '
            'After parsing (should be the same):
            '
            'DTSTART:20070601T123000Z
            'DTEND:20070601T130000Z
            'RRULE:FREQ=HOURLY;COUNT=10;INTERVAL=2;
            '
                </code>
            </example>
            <remarks>
            The string representation is based on the iCalendar data format (RFC
            2445).
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRule.GetHashCode">
            <summary>Overriden. Returns the hash code for this instance.</summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRule.Equals(System.Object)">
            <summary>
            Overloaded. Overridden. Returns a value indicating whether this instance is equal
            to a specified object.
            </summary>
            <returns>
            	<strong>true</strong> if <i>value</i> is an instance of
                <see cref="T:Telerik.Web.UI.RecurrenceRule"/> and equals the value of this instance;
                otherwise, <b>false</b>.
            </returns>
            <param name="obj">An object to compare with this instance.</param>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRule.Equals(Telerik.Web.UI.RecurrenceRule)">
            <summary>
                Overloaded. Overridden. Returns a value indicating whether this instance is equal
                to a specified <see cref="T:Telerik.Web.UI.RecurrenceRule"/> object.
            </summary>
            <returns>
            	<strong>true</strong> if <i>value</i> equals the value of this instance;
            otherwise, <b>false</b>.
            </returns>
            <param name="other">An <see cref="T:Telerik.Web.UI.RecurrenceRule"/> object to compare with this instance.</param>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRule.op_Equality(Telerik.Web.UI.RecurrenceRule,Telerik.Web.UI.RecurrenceRule)">
            <summary>
                Determines whether two specified <see cref="T:Telerik.Web.UI.RecurrenceRule"/> objects have the
                same value.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRule.op_Inequality(Telerik.Web.UI.RecurrenceRule,Telerik.Web.UI.RecurrenceRule)">
            <summary>
                Determines whether two specified <see cref="T:Telerik.Web.UI.RecurrenceRule"/> objects have
                different values.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <b>SerializationInfo</b> with the data needed to serialize this
            object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRule.Range">
            <summary>Gets the <see cref="T:Telerik.Web.UI.RecurrenceRange"/> associated with this recurrence rule.</summary>
            <value>The <see cref="T:Telerik.Web.UI.RecurrenceRange"/> associated with this recurrence rule.</value>
            <remarks>
                By calling <see cref="M:Telerik.Web.UI.RecurrenceRule.SetEffectiveRange(System.DateTime,System.DateTime)"/> the range of the generated
                occurrences can be narrowed.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRule.Pattern">
            <summary>Gets the <see cref="T:Telerik.Web.UI.RecurrencePattern"/> associated with this recurrence rule.</summary>
            <value>The <see cref="T:Telerik.Web.UI.RecurrencePattern"/> associated with this recurrence rule.</value>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRule.Occurrences">
            <remarks>Occurrence times are in UTC.</remarks>
            <summary>Gets the evaluated occurrence times of this recurrence rule.</summary>
            <value>The evaluated occurrence times of this recurrence rule.</value>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class HourlyRecurrenceRuleExample
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a recurrence rule to repeat the appointment every 2 hours.
                        HourlyRecurrenceRule rrule = new HourlyRecurrenceRule(2, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/1/2007 3:30:00 PM
             2: 6/1/2007 5:30:00 PM
             3: 6/1/2007 7:30:00 PM
             4: 6/1/2007 9:30:00 PM
             5: 6/1/2007 11:30:00 PM
             6: 6/2/2007 1:30:00 AM
             7: 6/2/2007 3:30:00 AM
             8: 6/2/2007 5:30:00 AM
             9: 6/2/2007 7:30:00 AM
            10: 6/2/2007 9:30:00 AM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class HourlyRecurrenceRuleExample
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a recurrence rule to repeat the appointment every 2 hours.
                        Dim rrule As New HourlyRecurrenceRule(2, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/1/2007 3:30:00 PM
            ' 2: 6/1/2007 5:30:00 PM
            ' 3: 6/1/2007 7:30:00 PM
            ' 4: 6/1/2007 9:30:00 PM
            ' 5: 6/1/2007 11:30:00 PM
            ' 6: 6/2/2007 1:30:00 AM
            ' 7: 6/2/2007 3:30:00 AM
            ' 8: 6/2/2007 5:30:00 AM
            ' 9: 6/2/2007 7:30:00 AM
            '10: 6/2/2007 9:30:00 AM
            '
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRule.HasOccurrences">
            <summary>
            Gets a value indicating whether this recurrence rule yields any
            occurrences.
            </summary>
            <value>True this recurrence rule yields any occurrences, false otherwise.</value>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRule.Exceptions">
            <summary>Gets or sets a list of the exception dates associated with this recurrence rule.</summary>
            <value>A list of the exception dates associated with this recurrence rule.</value>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class RecurrenceExceptionsExample
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a recurrence rule to repeat the appointment every 2 hours.
                        HourlyRecurrenceRule rrule = new HourlyRecurrenceRule(2, range);
             
                        // Creates a recurrence exception for 5:30 PM (local time).
                        // Note that exception dates must be in universal time.
                        rrule.Exceptions.Add(Convert.ToDateTime("6/1/2007 5:30 PM").ToUniversalTime());
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/1/2007 3:30:00 PM
             2: 6/1/2007 7:30:00 PM
             3: 6/1/2007 9:30:00 PM
             4: 6/1/2007 11:30:00 PM
             5: 6/2/2007 1:30:00 AM
             6: 6/2/2007 3:30:00 AM
             7: 6/2/2007 5:30:00 AM
             8: 6/2/2007 7:30:00 AM
             9: 6/2/2007 9:30:00 AM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class RecurrenceExceptionsExample
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a recurrence rule to repeat the appointment every 2 hours.
                        Dim rrule As New HourlyRecurrenceRule(2, range)
             
                        ' Creates a recurrence exception for 5:30 PM (local time).
                        ' Note that exception dates must be in universal time.
                        rrule.Exceptions.Add(Convert.ToDateTime("6/1/2007 5:30 PM").ToUniversalTime())
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/1/2007 3:30:00 PM
            ' 2: 6/1/2007 7:30:00 PM
            ' 3: 6/1/2007 9:30:00 PM
            ' 4: 6/1/2007 11:30:00 PM
            ' 5: 6/2/2007 1:30:00 AM
            ' 6: 6/2/2007 3:30:00 AM
            ' 7: 6/2/2007 5:30:00 AM
            ' 8: 6/2/2007 7:30:00 AM
            ' 9: 6/2/2007 9:30:00 AM
            '
                </code>
            </example>
            <remarks>
            Any date placed in the list will be considered a recurrence exception, i.e. an
            occurrence will not be generated for that date. The dates must be in <strong>universal
            time</strong>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRule.HasExceptions">
            <summary>
            Gets a value indicating whether this recurrence rule has associated
            exceptions.
            </summary>
            <value>True if this recurrence rule has associated exceptions, false otherwise.</value>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRule.MaximumCandidates">
            <summary>
            Gets or sets the maximum candidates limit.
            </summary>
            <remarks>
            This limit is used to prevent lockups when evaluating infinite rules without using SetEffectiveRange.
            The default value should not be changed under normal conditions.
            </remarks>
            <value>The maximum candidates limit.</value>
        </member>
        <member name="M:Telerik.Web.UI.DailyRecurrenceRule.#ctor(System.Int32,Telerik.Web.UI.RecurrenceRange)">
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class DailyRecurrenceRuleExample1
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a recurrence rule to repeat the appointment every two days.
                        DailyRecurrenceRule rrule = new DailyRecurrenceRule(2, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1} ({2})", ix, occurrence.ToLocalTime(), occurrence.DayOfWeek);
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/1/2007 3:30:00 PM (Friday)
             2: 6/3/2007 3:30:00 PM (Sunday)
             3: 6/5/2007 3:30:00 PM (Tuesday)
             4: 6/7/2007 3:30:00 PM (Thursday)
             5: 6/9/2007 3:30:00 PM (Saturday)
             6: 6/11/2007 3:30:00 PM (Monday)
             7: 6/13/2007 3:30:00 PM (Wednesday)
             8: 6/15/2007 3:30:00 PM (Friday)
             9: 6/17/2007 3:30:00 PM (Sunday)
            10: 6/19/2007 3:30:00 PM (Tuesday)
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class DailyRecurrenceRuleExample1
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a recurrence rule to repeat the appointment every two days.
                        Dim rrule As New DailyRecurrenceRule(2, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1} ({2})", ix, occurrence.ToLocalTime(), occurrence.DayOfWeek)
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/1/2007 3:30:00 PM (Friday)
            ' 2: 6/3/2007 3:30:00 PM (Sunday)
            ' 3: 6/5/2007 3:30:00 PM (Tuesday)
            ' 4: 6/7/2007 3:30:00 PM (Thursday)
            ' 5: 6/9/2007 3:30:00 PM (Saturday)
            ' 6: 6/11/2007 3:30:00 PM (Monday)
            ' 7: 6/13/2007 3:30:00 PM (Wednesday)
            ' 8: 6/15/2007 3:30:00 PM (Friday)
            ' 9: 6/17/2007 3:30:00 PM (Sunday)
            '10: 6/19/2007 3:30:00 PM (Tuesday)
            '
                </code>
            </example>
            <summary>
                Initializes a new instance of <see cref="T:Telerik.Web.UI.DailyRecurrenceRule"/> with the
                specified interval (in days) and <see cref="T:Telerik.Web.UI.RecurrenceRange"/>.
            </summary>
            <param name="interval">The number of days between the occurrences.</param>
            <param name="range">
            	The <see cref="T:Telerik.Web.UI.RecurrenceRange"/> instance that specifies the range of this
                recurrence rule.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.DailyRecurrenceRule.#ctor(Telerik.Web.UI.RecurrenceDay,Telerik.Web.UI.RecurrenceRange)">
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class DailyRecurrenceRuleExample2
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a recurrence rule to repeat the appointment every week day.
                        DailyRecurrenceRule rrule = new DailyRecurrenceRule(RecurrenceDay.WeekDays, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1} ({2})", ix, occurrence.ToLocalTime(), occurrence.DayOfWeek);
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/1/2007 3:30:00 PM (Friday)
             2: 6/4/2007 3:30:00 PM (Monday)
             3: 6/5/2007 3:30:00 PM (Tuesday)
             4: 6/6/2007 3:30:00 PM (Wednesday)
             5: 6/7/2007 3:30:00 PM (Thursday)
             6: 6/8/2007 3:30:00 PM (Friday)
             7: 6/11/2007 3:30:00 PM (Monday)
             8: 6/12/2007 3:30:00 PM (Tuesday)
             9: 6/13/2007 3:30:00 PM (Wednesday)
            10: 6/14/2007 3:30:00 PM (Thursday)
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class DailyRecurrenceRuleExample2
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a recurrence rule to repeat the appointment every week day.
                        Dim rrule As New DailyRecurrenceRule(RecurrenceDay.WeekDays, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1} ({2})", ix, occurrence.ToLocalTime(), occurrence.DayOfWeek)
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/1/2007 3:30:00 PM (Friday)
            ' 2: 6/4/2007 3:30:00 PM (Monday)
            ' 3: 6/5/2007 3:30:00 PM (Tuesday)
            ' 4: 6/6/2007 3:30:00 PM (Wednesday)
            ' 5: 6/7/2007 3:30:00 PM (Thursday)
            ' 6: 6/8/2007 3:30:00 PM (Friday)
            ' 7: 6/11/2007 3:30:00 PM (Monday)
            ' 8: 6/12/2007 3:30:00 PM (Tuesday)
            ' 9: 6/13/2007 3:30:00 PM (Wednesday)
            '10: 6/14/2007 3:30:00 PM (Thursday)
            '
                </code>
            </example>
            <summary>
                Initializes a new instance of <see cref="T:Telerik.Web.UI.DailyRecurrenceRule"/> with the
                specified days of week bit mask and <see cref="T:Telerik.Web.UI.RecurrenceRange"/>.
            </summary>
            <param name="daysOfWeekMask">A bit mask that specifies the week days on which the event recurs.</param>
            <param name="range">
            	The <see cref="T:Telerik.Web.UI.RecurrenceRange"/> instance that specifies the range of this
                recurrence rule.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.DailyRecurrenceRule.Interval">
            <summary>Gets the interval (in days) between the occurrences.</summary>
            <value>The interval (in days) between the occurrences.</value>
        </member>
        <member name="P:Telerik.Web.UI.DailyRecurrenceRule.DaysOfWeekMask">
            <summary>
            Gets or sets the bit mask that specifies the week days on which the event
            recurs.
            </summary>
            <seealso cref="T:Telerik.Web.UI.RecurrenceDay">RecurrenceDay Enumeration</seealso>
            <remarks>
                For additional information on how to create masks see the
                <see cref="T:Telerik.Web.UI.RecurrenceDay"/> documentation.
            </remarks>
            <value>A bit mask that specifies the week days on which the event recurs.</value>
        </member>
        <member name="T:Telerik.Web.UI.HourlyRecurrenceRule">
            <summary>Occurrences of this rule repeat every given number of hours.</summary>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class HourlyRecurrenceRuleExample
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a recurrence rule to repeat the appointment every 2 hours.
                        HourlyRecurrenceRule rrule = new HourlyRecurrenceRule(2, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/1/2007 3:30:00 PM
             2: 6/1/2007 5:30:00 PM
             3: 6/1/2007 7:30:00 PM
             4: 6/1/2007 9:30:00 PM
             5: 6/1/2007 11:30:00 PM
             6: 6/2/2007 1:30:00 AM
             7: 6/2/2007 3:30:00 AM
             8: 6/2/2007 5:30:00 AM
             9: 6/2/2007 7:30:00 AM
            10: 6/2/2007 9:30:00 AM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class HourlyRecurrenceRuleExample
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a recurrence rule to repeat the appointment every 2 hours.
                        Dim rrule As New HourlyRecurrenceRule(2, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/1/2007 3:30:00 PM
            ' 2: 6/1/2007 5:30:00 PM
            ' 3: 6/1/2007 7:30:00 PM
            ' 4: 6/1/2007 9:30:00 PM
            ' 5: 6/1/2007 11:30:00 PM
            ' 6: 6/2/2007 1:30:00 AM
            ' 7: 6/2/2007 3:30:00 AM
            ' 8: 6/2/2007 5:30:00 AM
            ' 9: 6/2/2007 7:30:00 AM
            '10: 6/2/2007 9:30:00 AM
            '
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.HourlyRecurrenceRule.#ctor(System.Int32,Telerik.Web.UI.RecurrenceRange)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.HourlyRecurrenceRule"/> class
                with the specified interval (in hours) and <see cref="T:Telerik.Web.UI.RecurrenceRange"/>.
            </summary>
            <param name="interval">The number of hours between the occurrences.</param>
            <param name="range">
            	The <see cref="T:Telerik.Web.UI.RecurrenceRange"/> instance that specifies the range of this
                recurrence rule.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.HourlyRecurrenceRule.Interval">
            <summary>Gets the interval (in hours) assigned to the current instance.</summary>
            <value>The interval (in hours) assigned to the current instance.</value>
        </member>
        <member name="T:Telerik.Web.UI.MonthlyRecurrenceRule">
            <summary>
            Occurrences of this rule repeat on a monthly basis.
            </summary>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class MonthlyRecurrenceRuleExample1
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 5;
             
                        // Creates a recurrence rule to repeat the appointment on the 5th day of every month.
                        MonthlyRecurrenceRule rrule = new MonthlyRecurrenceRule(5, 1, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/5/2007 3:30:00 PM
             2: 7/5/2007 3:30:00 PM
             3: 8/5/2007 3:30:00 PM
             4: 9/5/2007 3:30:00 PM
             5: 10/5/2007 3:30:00 PM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class MonthlyRecurrenceRuleExample1
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 5
             
                        ' Creates a recurrence rule to repeat the appointment on the 5th day of every month.
                        Dim rrule As New MonthlyRecurrenceRule(5, 1, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/5/2007 3:30:00 PM
            ' 2: 7/5/2007 3:30:00 PM
            ' 3: 8/5/2007 3:30:00 PM
            ' 4: 9/5/2007 3:30:00 PM
            ' 5: 10/5/2007 3:30:00 PM
            '
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.MonthlyRecurrenceRule.#ctor(System.Int32,System.Int32,Telerik.Web.UI.RecurrenceRange)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.MonthlyRecurrenceRule"/> class.
            </summary>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class MonthlyRecurrenceRuleExample1
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 5;
             
                        // Creates a recurrence rule to repeat the appointment on the 5th day of every month.
                        MonthlyRecurrenceRule rrule = new MonthlyRecurrenceRule(5, 1, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/5/2007 3:30:00 PM
             2: 7/5/2007 3:30:00 PM
             3: 8/5/2007 3:30:00 PM
             4: 9/5/2007 3:30:00 PM
             5: 10/5/2007 3:30:00 PM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class MonthlyRecurrenceRuleExample1
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 5
             
                        ' Creates a recurrence rule to repeat the appointment on the 5th day of every month.
                        Dim rrule As New MonthlyRecurrenceRule(5, 1, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/5/2007 3:30:00 PM
            ' 2: 7/5/2007 3:30:00 PM
            ' 3: 8/5/2007 3:30:00 PM
            ' 4: 9/5/2007 3:30:00 PM
            ' 5: 10/5/2007 3:30:00 PM
            '
                </code>
            </example>
            <param name="dayOfMonth">The day of month on which the event recurs.</param>
            <param name="interval">The interval (in months) between the occurrences.</param>
            <param name="range">The <see cref="T:Telerik.Web.UI.RecurrenceRange"/> instance that specifies the range of this rule.</param>
        </member>
        <member name="M:Telerik.Web.UI.MonthlyRecurrenceRule.#ctor(System.Int32,Telerik.Web.UI.RecurrenceDay,System.Int32,Telerik.Web.UI.RecurrenceRange)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.MonthlyRecurrenceRule"/> class.
            </summary>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class MonthlyRecurrenceRuleExample2
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 5;
             
                        // Creates a recurrence rule to repeat the appointment on the last monday of every two months.
                        MonthlyRecurrenceRule rrule = new MonthlyRecurrenceRule(-1, RecurrenceDay.Monday, 2, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/25/2007 3:30:00 PM
             2: 8/27/2007 3:30:00 PM
             3: 10/29/2007 2:30:00 PM
             4: 12/31/2007 2:30:00 PM
             5: 2/25/2008 2:30:00 PM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class MonthlyRecurrenceRuleExample2
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 5
             
                        ' Creates a recurrence rule to repeat the appointment on the last monday of every two months.
                        Dim rrule As New MonthlyRecurrenceRule(-1, RecurrenceDay.Monday, 2, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/25/2007 3:30:00 PM
            ' 2: 8/27/2007 3:30:00 PM
            ' 3: 10/29/2007 2:30:00 PM
            ' 4: 12/31/2007 2:30:00 PM
            ' 5: 2/25/2008 2:30:00 PM
            '
                </code>
            </example>
            <param name="dayOrdinal">The day ordinal modifier. See <see cref="P:Telerik.Web.UI.RecurrencePattern.DayOrdinal"/> for additional information.</param>
            <param name="daysOfWeekMask">A bit mask that specifies the week days on which the event recurs.</param>
            <param name="interval">The interval (in months) between the occurrences.</param>
            <param name="range">The <see cref="T:Telerik.Web.UI.RecurrenceRange"/> instance that specifies the range of this rule.</param>
        </member>
        <member name="P:Telerik.Web.UI.MonthlyRecurrenceRule.DayOfMonth">
            <summary>
            Gets the day of month on which the event recurs.
            </summary>
            <value>The day of month on which the event recurs.</value>
        </member>
        <member name="P:Telerik.Web.UI.MonthlyRecurrenceRule.DayOrdinal">
            <summary>
            Gets the day ordinal modifier. See <see cref="P:Telerik.Web.UI.RecurrencePattern.DayOrdinal"/> for additional information.
            </summary>
            <seealso cref="P:Telerik.Web.UI.RecurrencePattern.DayOrdinal"/>
            <value>The day ordinal modifier.</value>
        </member>
        <member name="P:Telerik.Web.UI.MonthlyRecurrenceRule.Month">
            <summary>
            Gets the month in which the event recurs.
            </summary>
            <value>The month in which the event recurs.</value>
        </member>
        <member name="P:Telerik.Web.UI.MonthlyRecurrenceRule.Interval">
            <summary>Gets the interval (in months) between the occurrences.</summary>
            <value>The interval (in months) between the occurrences.</value>
        </member>
        <member name="T:Telerik.Web.UI.RecurrenceDay">
            <summary>
            	<para>Specifies the days of the week. Members might be combined using bitwise
                operations to specify multiple days.</para>
            </summary>
            <remarks>
                The constants in the <see cref="T:Telerik.Web.UI.RecurrenceDay"/> enumeration might be combined
                with bitwise operations to represent any combination of days. It is designed to be
                used in conjunction with the <see cref="T:Telerik.Web.UI.RecurrencePattern"/> class to filter
                the days of the week for which the recurrence pattern applies.
            </remarks>
            <example>
            	<para>Consider the following example that demonstrates the basic usage pattern of
                RecurrenceDay. The most common operators used for manipulating bit fields
                are:</para>
            	<list type="bullet">
            		<item>Bitwise OR: Turns a flag on.</item>
            		<item>Bitwise XOR: Toggles a flag.</item>
            		<item>Bitwise AND: Checks if a flag is turned on.</item>
            		<item>Bitwise NOT: Turns a flag off.</item>
            	</list>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class RecurrenceDayExample
                {
                    static void Main()
                    {
                        // Selects Friday, Saturday and Sunday.
                        RecurrenceDay dayMask = RecurrenceDay.Friday | RecurrenceDay.WeekendDays;
                        PrintSelectedDays(dayMask);
             
                        // Selects all days, except Thursday.
                        dayMask = RecurrenceDay.EveryDay ^ RecurrenceDay.Thursday;
                        PrintSelectedDays(dayMask);
                    }
             
                    static void PrintSelectedDays(RecurrenceDay dayMask)
                    {
                        Console.WriteLine("Value: {0,3} - {1}", (int) dayMask, dayMask);
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Value: 112 - Friday, WeekendDays
            Value: 119 - Monday, Tuesday, Wednesday, Friday, WeekendDays
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class RecurrenceDayExample
                    Shared Sub Main()
                        ' Selects Friday, Saturday and Sunday.
                        Dim dayMask As RecurrenceDay = RecurrenceDay.Friday Or RecurrenceDay.WeekendDays
                        PrintSelectedDays(dayMask)
             
                        ' Selects all days, except Thursday.
                        dayMask = RecurrenceDay.EveryDay Xor RecurrenceDay.Thursday
                        PrintSelectedDays(dayMask)
                    End Sub
             
                    Shared Sub PrintSelectedDays(ByVal dayMask As RecurrenceDay)
                        Console.WriteLine("Value: {0,3} - {1}", DirectCast(dayMask, Integer), dayMask)
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Value: 112 - Friday, WeekendDays
            'Value: 119 - Monday, Tuesday, Wednesday, Friday, WeekendDays
            '
                </code>
            </example>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceDay.None">
            <summary>Indicates no selected day.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceDay.Sunday">
            <summary>Indicates Monday.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceDay.Monday">
            <summary>Indicates Tuesday.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceDay.Tuesday">
            <summary>Indicates Wednesday.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceDay.Wednesday">
            <summary>Indicates Thursday.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceDay.Thursday">
            <summary>Indicates Friday.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceDay.Friday">
            <summary>Indicates Saturday.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceDay.Saturday">
            <summary>Indicates Sunday.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceDay.EveryDay">
            <summary><para>Indicates the range from Sunday to Saturday inclusive.</para></summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceDay.WeekDays">
            <summary>Indicates the range from Monday to Friday inclusive.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceDay.WeekendDays">
            <summary>Indicates the range from Saturday to Sunday inclusive.</summary>
        </member>
        <member name="T:Telerik.Web.UI.RecurrenceFrequency">
            <summary>Specifies the frequency of a recurrence.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceFrequency.None">
            <summary>Indicates no recurrence.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceFrequency.Hourly">
            <summary>Indicates hourly recurrence.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceFrequency.Daily">
            <summary>Indicates daily recurrence.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceFrequency.Weekly">
            <summary>Indicates weekly recurrence.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceFrequency.Monthly">
            <summary>Indicates monthly recurrence.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceFrequency.Yearly">
            <summary>Indicates yearly recurrence.</summary>
        </member>
        <member name="T:Telerik.Web.UI.RecurrenceMonth">
            <summary>Specifies the months in which given event recurs.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.None">
            <summary>Indicates no monthly recurrence.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.January">
            <summary>Indicates that the event recurs in January.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.February">
            <summary>Indicates that the event recurs in February.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.March">
            <summary>Indicates that the event recurs in March.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.April">
            <summary>Indicates that the event recurs in April.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.May">
            <summary>Indicates that the event recurs in May.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.June">
            <summary>Indicates that the event recurs in June.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.July">
            <summary>Indicates that the event recurs in July.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.August">
            <summary>Indicates that the event recurs in August.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.September">
            <summary>Indicates that the event recurs in September.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.October">
            <summary>Indicates that the event recurs in October.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.November">
            <summary>Indicates that the event recurs in November.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RecurrenceMonth.December">
            <summary>Indicates that the event recurs in December.</summary>
        </member>
        <member name="T:Telerik.Web.UI.RecurrencePattern">
            <summary>
                Specifies the pattern that <see cref="T:Telerik.Web.UI.RecurrenceRule"/> uses to evaluate the
                recurrence dates set.
            </summary>
            <remarks>
            	<para>
                    The properties of the <see cref="T:Telerik.Web.UI.RecurrencePattern"/> class work together
                    to define a complete pattern definition to be used by the
                    <see cref="T:Telerik.Web.UI.RecurrenceRule"/> engine.
                </para>
            	<para>
                    You should not need to work with it directly as specialized
                    <see cref="T:Telerik.Web.UI.RecurrenceRule"/> classes are provided for the supported modes
                    of recurrence. They take care of constructing appropriate
                    <see cref="T:Telerik.Web.UI.RecurrencePattern"/> objects.
                </para>
            </remarks>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class RecurrencePatternExample
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a recurrence rule for the appointment.
                        DailyRecurrenceRule rrule = new DailyRecurrenceRule(1, range);
             
                        // Displays the relevant parts of the generated pattern:
                        Console.WriteLine("The active recurrence pattern is:");
                        Console.WriteLine("  Frequency: {0}", rrule.Pattern.Frequency);
                        Console.WriteLine("  Interval: {0}", rrule.Pattern.Interval);
                        Console.WriteLine("  Days of week: {0}\n", rrule.Pattern.DaysOfWeekMask);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            The active recurrence pattern is:
              Frequency: Daily
              Interval: 1
              Days of week: EveryDay
             
            Appointment occurrs at the following times:
             1: 6/1/2007 3:30:00 PM
             2: 6/2/2007 3:30:00 PM
             3: 6/3/2007 3:30:00 PM
             4: 6/4/2007 3:30:00 PM
             5: 6/5/2007 3:30:00 PM
             6: 6/6/2007 3:30:00 PM
             7: 6/7/2007 3:30:00 PM
             8: 6/8/2007 3:30:00 PM
             9: 6/9/2007 3:30:00 PM
            10: 6/10/2007 3:30:00 PM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class RecurrencePatternExample
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a recurrence rule for the appointment.
                        Dim rrule As New DailyRecurrenceRule(1, range)
             
                        ' Displays the relevant parts of the generated pattern:
                        Console.WriteLine("The active recurrence pattern is:")
                        Console.WriteLine("  Frequency: {0}", rrule.Pattern.Frequency)
                        Console.WriteLine("  Interval: {0}", rrule.Pattern.Interval)
                        Console.WriteLine("  Days of week: {0}" &amp; Chr(10) &amp; "", rrule.Pattern.DaysOfWeekMask)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'The active recurrence pattern is:
            '  Frequency: Daily
            '  Interval: 1
            '  Days of week: EveryDay
            '
            'Appointment occurrs at the following times:
            ' 1: 6/1/2007 3:30:00 PM
            ' 2: 6/2/2007 3:30:00 PM
            ' 3: 6/3/2007 3:30:00 PM
            ' 4: 6/4/2007 3:30:00 PM
            ' 5: 6/5/2007 3:30:00 PM
            ' 6: 6/6/2007 3:30:00 PM
            ' 7: 6/7/2007 3:30:00 PM
            ' 8: 6/8/2007 3:30:00 PM
            ' 9: 6/9/2007 3:30:00 PM
            '10: 6/10/2007 3:30:00 PM
            '
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RecurrencePattern.Equals(System.Object)">
            <summary>
            Overloaded. Overridden. Returns a value indicating whether this instance is equal
            to a specified object.
            </summary>
            <returns>
            	<strong>true</strong> if <i>value</i> is an instance of
                <see cref="T:Telerik.Web.UI.RecurrencePattern"/> and equals the value of this instance;
                otherwise, <b>false</b>.
            </returns>
            <param name="obj">An object to compare with this instance.</param>
        </member>
        <member name="M:Telerik.Web.UI.RecurrencePattern.GetHashCode">
            <summary>Overriden. Returns the hash code for this instance.</summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RecurrencePattern.Equals(Telerik.Web.UI.RecurrencePattern)">
            <summary>
                Overloaded. Overridden. Returns a value indicating whether this instance is equal
                to a specified <see cref="T:Telerik.Web.UI.RecurrencePattern"/> object.
            </summary>
            <returns>
            	<strong>true</strong> if <i>value</i> equals the value of this instance;
            otherwise, <b>false</b>.
            </returns>
            <param name="other">An <see cref="T:Telerik.Web.UI.RecurrencePattern"/> object to compare with this instance.</param>
        </member>
        <member name="M:Telerik.Web.UI.RecurrencePattern.op_Equality(Telerik.Web.UI.RecurrencePattern,Telerik.Web.UI.RecurrencePattern)">
            <summary>
                Determines whether two specified <see cref="T:Telerik.Web.UI.RecurrencePattern"/> objects have the
                same value.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrencePattern.op_Inequality(Telerik.Web.UI.RecurrencePattern,Telerik.Web.UI.RecurrencePattern)">
            <summary>
                Determines whether two specified <see cref="T:Telerik.Web.UI.RecurrencePattern"/> objects have
                different values.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RecurrencePattern.Frequency">
            <value>
            	<para>
                    A <see cref="T:Telerik.Web.UI.RecurrenceFrequency"/> enumerated constant that indicates the
                    frequency of recurrence.
                </para>
            </value>
            <summary>Gets or sets the frequency of recurrence.</summary>
            <remarks>The default value is <see cref="F:Telerik.Web.UI.RecurrenceFrequency.None"/>.</remarks>
            <seealso cref="T:Telerik.Web.UI.RecurrenceFrequency">RecurrenceFrequency Enumeration</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RecurrencePattern.Interval">
            <summary>Gets or sets the interval of recurrence.</summary>
            <value>
            	<para>
                    A positive integer representing how often the recurrence rule repeats,
                    expressed in <see cref="T:Telerik.Web.UI.RecurrenceFrequency"/> units.
                </para>
            </value>
            <remarks>The default value is 1.</remarks>
        </member>
        <member name="P:Telerik.Web.UI.RecurrencePattern.DaysOfWeekMask">
            <summary>
            Gets or sets the bit mask that specifies the week days on which the event
            recurs.
            </summary>
            <seealso cref="T:Telerik.Web.UI.RecurrenceDay">RecurrenceDay Enumeration</seealso>
            <remarks>
                For additional information on how to create masks see the
                <see cref="T:Telerik.Web.UI.RecurrenceDay"/> documentation.
            </remarks>
            <value>A bit mask that specifies the week days on which the event recurs.</value>
        </member>
        <member name="P:Telerik.Web.UI.RecurrencePattern.DayOfMonth">
            <summary>Gets or sets the day month on which the event recurs.</summary>
            <value>The day month on which the event recurs.</value>
        </member>
        <member name="P:Telerik.Web.UI.RecurrencePattern.DayOrdinal">
            <remarks>
            	<para>
                    This property is meaningful only when <see cref="T:Telerik.Web.UI.RecurrenceFrequency"/> is
                    set to <see cref="F:Telerik.Web.UI.RecurrenceFrequency.Monthly"/> or
                    <see cref="F:Telerik.Web.UI.RecurrenceFrequency.Yearly"/> and <see cref="P:Telerik.Web.UI.RecurrencePattern.DayOfMonth"/>
                    is not set.
                </para>
            	<para>In such scenario it selects the n-th occurrence within the set of events
                specified by the rule. Valid values are from -31 to +31, 0 is ignored.</para>
            	<para>For example with RecurrenceFrequency set to Monthly and DaysOfWeekMask set to
                Monday DayOfMonth is interpreted in the following way:</para>
            	<list type="bullet">
            		<item>
            			<ul class="noindent">
            				<li>1: Selects the first monday of the month.</li>
            				<li>3: Selects the third monday of the month.</li>
            				<li>-1: Selects the last monday of the month.</li>
            			</ul>
            		</item>
            	</list>
            	<para>
                    For detailed examples see the documentation of the
                    <see cref="T:Telerik.Web.UI.MonthlyRecurrenceRule"/> class.
                </para>
            </remarks>
            <seealso cref="T:Telerik.Web.UI.MonthlyRecurrenceRule">MonthlyRecurrenceRule Class</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RecurrencePattern.Month">
            <summary>Gets or sets the month on which the event recurs.</summary>
            <value>
                This property is only meaningful when <see cref="T:Telerik.Web.UI.RecurrenceFrequency"/> is set
                to <see cref="F:Telerik.Web.UI.RecurrenceFrequency.Yearly"/>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RecurrencePattern.FirstDayOfWeek">
            <summary>Gets or sets the day on which the week starts.</summary>
            <value>
                This property is only meaningful when <see cref="T:Telerik.Web.UI.RecurrenceFrequency"/> is set
                to <see cref="F:Telerik.Web.UI.RecurrenceFrequency.Weekly"/> and <see cref="P:Telerik.Web.UI.RecurrencePattern.Interval"/> is greater than 1.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.RecurrenceRange">
            <summary>
            	<para>
                    Specifies the time frame for which given <see cref="T:Telerik.Web.UI.RecurrenceRule"/> is
                    active. It consists of the start time of the event, it's duration and optional
                    limits.
                </para>
            </summary>
            <remarks>
            	<para>
                    Limits for both occurrence count and end date can be specified via the
                    <see cref="P:Telerik.Web.UI.RecurrenceRange.MaxOccurrences"/> and <see cref="P:Telerik.Web.UI.RecurrenceRange.RecursUntil"/>
                    properties.
                </para>
            	<para>
                    Start and EventDuration properties refer to the recurring event's start and
                    duration. In the context of <see cref="T:Telerik.Web.UI.RadScheduler"/> they are usually
                    derived from <see cref="P:Telerik.Web.UI.Appointment.Start"/> and <see cref="P:Telerik.Web.UI.Appointment.End"/>.
                </para>
            </remarks>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class RecurrenceRangeExample
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a daily recurrence rule for the appointment.
                        DailyRecurrenceRule rrule = new DailyRecurrenceRule(1, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/1/2007 3:30:00 PM
             2: 6/2/2007 3:30:00 PM
             3: 6/3/2007 3:30:00 PM
             4: 6/4/2007 3:30:00 PM
             5: 6/5/2007 3:30:00 PM
             6: 6/6/2007 3:30:00 PM
             7: 6/7/2007 3:30:00 PM
             8: 6/8/2007 3:30:00 PM
             9: 6/9/2007 3:30:00 PM
            10: 6/10/2007 3:30:00 PM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class RecurrenceRangeExample
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a daily recurrence rule for the appointment.
                        Dim rrule As New DailyRecurrenceRule(1, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/1/2007 3:30:00 PM
            ' 2: 6/2/2007 3:30:00 PM
            ' 3: 6/3/2007 3:30:00 PM
            ' 4: 6/4/2007 3:30:00 PM
            ' 5: 6/5/2007 3:30:00 PM
            ' 6: 6/6/2007 3:30:00 PM
            ' 7: 6/7/2007 3:30:00 PM
            ' 8: 6/8/2007 3:30:00 PM
            ' 9: 6/9/2007 3:30:00 PM
            '10: 6/10/2007 3:30:00 PM
            '
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRange.#ctor">
            <summary>
                Overloaded. Initializes a new instance of the <see cref="T:Telerik.Web.UI.RecurrenceRange"/>
                class.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRange.#ctor(System.DateTime,System.TimeSpan,System.DateTime,System.Int32)">
            <summary>
                Overloaded. Initializes a new instance of the <see cref="T:Telerik.Web.UI.RecurrenceRange"/>
                class with to the specified Start, EventDuration, RecursUntil and MaxOccurrences
                values.
            </summary>
            <param name="start">The start of the recurring event.</param>
            <param name="duration">The duration of the recurring event.</param>
            <param name="recursUntil">
            Optional end date for the recurring appointment. Defaults to no end date
            (DateTime.MaxValue).
            </param>
            <param name="maxOccurrences">
            Optional limit for the number of occurrences. Defaults to no limit
            (Int32.MaxInt).
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRange.Equals(System.Object)">
            <summary>
            Overloaded. Overridden. Returns a value indicating whether this instance is equal
            to a specified object.
            </summary>
            <returns>
            	<strong>true</strong> if <i>value</i> is an instance of
                <see cref="T:Telerik.Web.UI.RecurrenceRange"/> and equals the value of this instance;
                otherwise, <b>false</b>.
            </returns>
            <param name="obj">An object to compare with this instance.</param>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRange.GetHashCode">
            <summary>Overriden. Returns the hash code for this instance.</summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRange.Equals(Telerik.Web.UI.RecurrenceRange)">
            <summary>
                Overloaded. Overridden. Returns a value indicating whether this instance is equal
                to a specified <see cref="T:Telerik.Web.UI.RecurrenceRange"/> object.
            </summary>
            <returns>
            	<strong>true</strong> if <i>value</i> equals the value of this instance;
            otherwise, <b>false</b>.
            </returns>
            <param name="other">An <see cref="T:Telerik.Web.UI.RecurrenceRange"/> object to compare with this instance.</param>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRange.op_Equality(Telerik.Web.UI.RecurrenceRange,Telerik.Web.UI.RecurrenceRange)">
            <summary>
                Determines whether two specified <see cref="T:Telerik.Web.UI.RecurrenceRange"/> objects have the
                same value.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRange.op_Inequality(Telerik.Web.UI.RecurrenceRange,Telerik.Web.UI.RecurrenceRange)">
            <summary>
                Determines whether two specified <see cref="T:Telerik.Web.UI.RecurrenceRange"/> objects have
                different values.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRange.Start">
            <summary>The start of the recurring event.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRange.EventDuration">
            <summary>The duration of the recurring event.</summary>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRange.RecursUntil">
            <summary>
            Optional end date for the recurring appointment. Defaults to no end date
            (DateTime.MaxValue).
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRange.MaxOccurences">
            <summary>
            Optional limit for the number of occurrences. Defaults to no limit
            (Int32.MaxInt).
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceRange.MaxOccurrences">
            <summary>
            Optional limit for the number of occurrences. Defaults to no limit
            (Int32.MaxInt).
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RecurrenceRuleConverter">
            <summary>
            Provides a type converter to convert RecurrenceRule objects to and from string
            representation.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRuleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overloaded. Returns whether this converter can convert an object of one type to
            the type of this converter.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRuleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overloaded. Converts the given value to the type of this converter.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRuleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overloaded. Returns whether this converter can convert the object to the
            specified type.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRuleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Overloaded. Converts the given value object to the specified type.</summary>
        </member>
        <member name="M:Telerik.Web.UI.RecurrenceRuleConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Overloaded. Returns whether the given value object is valid for this type.</summary>
        </member>
        <member name="T:Telerik.Web.UI.WeeklyRecurrenceRule">
            <summary>Occurrences of this rule repeat on a weekly basis.</summary>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class WeeklyRecurrenceRuleExample
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"),
                            Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 10;
             
                        // Creates a recurrence rule to repeat the appointment every two weeks on Mondays and Tuesdays.
                        RecurrenceDay mask = RecurrenceDay.Monday | RecurrenceDay.Tuesday;
                        WeeklyRecurrenceRule rrule = new WeeklyRecurrenceRule(2, mask, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1} ({2})", ix, occurrence.ToLocalTime(), occurrence.DayOfWeek);
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 6/4/2007 3:30:00 PM (Monday)
             2: 6/5/2007 3:30:00 PM (Tuesday)
             3: 6/18/2007 3:30:00 PM (Monday)
             4: 6/19/2007 3:30:00 PM (Tuesday)
             5: 7/2/2007 3:30:00 PM (Monday)
             6: 7/3/2007 3:30:00 PM (Tuesday)
             7: 7/16/2007 3:30:00 PM (Monday)
             8: 7/17/2007 3:30:00 PM (Tuesday)
             9: 7/30/2007 3:30:00 PM (Monday)
            10: 7/31/2007 3:30:00 PM (Tuesday)
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class WeeklyRecurrenceRuleExample
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 6/1/2007 3:30 PM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("6/1/2007 3:30 PM"), Convert.ToDateTime("6/1/2007 4:00 PM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 10
             
                        ' Creates a recurrence rule to repeat the appointment every two weeks on Mondays and Tuesdays.
                        Dim mask As RecurrenceDay = RecurrenceDay.Monday Or RecurrenceDay.Tuesday
                        Dim rrule As New WeeklyRecurrenceRule(2, mask, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1} ({2})", ix, occurrence.ToLocalTime(), occurrence.DayOfWeek)
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 6/4/2007 3:30:00 PM (Monday)
            ' 2: 6/5/2007 3:30:00 PM (Tuesday)
            ' 3: 6/18/2007 3:30:00 PM (Monday)
            ' 4: 6/19/2007 3:30:00 PM (Tuesday)
            ' 5: 7/2/2007 3:30:00 PM (Monday)
            ' 6: 7/3/2007 3:30:00 PM (Tuesday)
            ' 7: 7/16/2007 3:30:00 PM (Monday)
            ' 8: 7/17/2007 3:30:00 PM (Tuesday)
            ' 9: 7/30/2007 3:30:00 PM (Monday)
            '10: 7/31/2007 3:30:00 PM (Tuesday)
            '
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.WeeklyRecurrenceRule.#ctor(System.Int32,Telerik.Web.UI.RecurrenceDay,Telerik.Web.UI.RecurrenceRange)">
            <summary>
                Initializes a new instance of <see cref="T:Telerik.Web.UI.WeeklyRecurrenceRule"/> with the
                specified interval, days of week bit mask and <see cref="T:Telerik.Web.UI.RecurrenceRange"/>.
            </summary>
            <param name="interval">The number of weeks between the occurrences.</param>
            <param name="daysOfWeekMask">A bit mask that specifies the week days on which the event recurs.</param>
            <param name="range">
            	The <see cref="T:Telerik.Web.UI.RecurrenceRange"/> instance that specifies the range of this rule.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.WeeklyRecurrenceRule.#ctor(System.Int32,Telerik.Web.UI.RecurrenceDay,Telerik.Web.UI.RecurrenceRange,System.DayOfWeek)">
            <summary>
                Initializes a new instance of <see cref="T:Telerik.Web.UI.WeeklyRecurrenceRule"/> with the
                specified interval, days of week bit mask and <see cref="T:Telerik.Web.UI.RecurrenceRange"/>.
            </summary>
            <param name="interval">The number of weeks between the occurrences.</param>
            <param name="daysOfWeekMask">A bit mask that specifies the week days on which the event recurs.</param>
            <param name="range">
            	The <see cref="T:Telerik.Web.UI.RecurrenceRange"/> instance that specifies the range of this rule.
            </param>
            <param name="firstDayOfWeek">
            	The first day of week to use for calculations.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.WeeklyRecurrenceRule.Interval">
            <summary>Gets the interval (in weeks) assigned to the current instance.</summary>
            <value>The interval (in weeks) assigned to the current instance.</value>
        </member>
        <member name="P:Telerik.Web.UI.WeeklyRecurrenceRule.DaysOfWeekMask">
            <summary>
            Gets the bit mask that specifies the week days on which the event
            recurs.
            </summary>
            <seealso cref="T:Telerik.Web.UI.RecurrenceDay">RecurrenceDay Enumeration</seealso>
            <remarks>
                For additional information on how to create masks see the
                <see cref="T:Telerik.Web.UI.RecurrenceDay"/> documentation.
            </remarks>
            <value>A bit mask that specifies the week days on which the event recurs.</value>
        </member>
        <member name="T:Telerik.Web.UI.YearlyRecurrenceRule">
            <summary>
            Occurrences of this rule repeat on a yearly basis.
            </summary>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class YearlyRecurrenceRuleExample1
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 4/1/2007 10:00 AM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("4/1/2007 10:00 AM"),
                            Convert.ToDateTime("4/1/2007 10:30 AM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 5;
             
                        // Creates a recurrence rule to repeat the appointment on the 1th of April each year.
                        YearlyRecurrenceRule rrule = new YearlyRecurrenceRule(RecurrenceMonth.April, 1, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 4/1/2007 10:00:00 AM
             2: 4/1/2008 10:00:00 AM
             3: 4/1/2009 10:00:00 AM
             4: 4/1/2010 10:00:00 AM
             5: 4/1/2011 10:00:00 AM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class YearlyRecurrenceRuleExample1
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 4/1/2007 10:00 AM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("4/1/2007 10:00 AM"), Convert.ToDateTime("4/1/2007 10:30 AM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 5
             
                        ' Creates a recurrence rule to repeat the appointment on the 1th of April each year.
                        Dim rrule As New YearlyRecurrenceRule(RecurrenceMonth.April, 1, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 4/1/2007 10:00:00 AM
            ' 2: 4/1/2008 10:00:00 AM
            ' 3: 4/1/2009 10:00:00 AM
            ' 4: 4/1/2010 10:00:00 AM
            ' 5: 4/1/2011 10:00:00 AM
            '
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.YearlyRecurrenceRule.#ctor(Telerik.Web.UI.RecurrenceMonth,System.Int32,Telerik.Web.UI.RecurrenceRange)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.YearlyRecurrenceRule"/> class.
            </summary>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class YearlyRecurrenceRuleExample1
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 4/1/2007 10:00 AM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("4/1/2007 10:00 AM"),
                            Convert.ToDateTime("4/1/2007 10:30 AM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 5;
             
                        // Creates a recurrence rule to repeat the appointment on the 1th of April each year.
                        YearlyRecurrenceRule rrule = new YearlyRecurrenceRule(RecurrenceMonth.April, 1, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 4/1/2007 10:00:00 AM
             2: 4/1/2008 10:00:00 AM
             3: 4/1/2009 10:00:00 AM
             4: 4/1/2010 10:00:00 AM
             5: 4/1/2011 10:00:00 AM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class YearlyRecurrenceRuleExample1
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 4/1/2007 10:00 AM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("4/1/2007 10:00 AM"), Convert.ToDateTime("4/1/2007 10:30 AM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 5
             
                        ' Creates a recurrence rule to repeat the appointment on the 1th of April each year.
                        Dim rrule As New YearlyRecurrenceRule(RecurrenceMonth.April, 1, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 4/1/2007 10:00:00 AM
            ' 2: 4/1/2008 10:00:00 AM
            ' 3: 4/1/2009 10:00:00 AM
            ' 4: 4/1/2010 10:00:00 AM
            ' 5: 4/1/2011 10:00:00 AM
            '
                </code>
            </example>
            <param name="month">The month in which the event recurs.</param>
            <param name="dayOfMonth">The day of month on which the event recurs.</param>
            <param name="range">The <see cref="T:Telerik.Web.UI.RecurrenceRange"/> instance that specifies the range of this rule.</param>
        </member>
        <member name="M:Telerik.Web.UI.YearlyRecurrenceRule.#ctor(System.Int32,Telerik.Web.UI.RecurrenceMonth,Telerik.Web.UI.RecurrenceDay,Telerik.Web.UI.RecurrenceRange)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.YearlyRecurrenceRule"/> class.
            </summary>
            <example>
            	<code lang="CS">
            using System;
            using Telerik.Web.UI;
             
            namespace RecurrenceExamples
            {
                class YearlyRecurrenceRuleExample2
                {
                    static void Main()
                    {
                        // Creates a sample appointment that starts at 4/1/2007 10:00 AM (local time) and lasts half an hour.
                        Appointment recurringAppointment = new Appointment("1", Convert.ToDateTime("4/1/2007 10:00 AM"),
                            Convert.ToDateTime("4/1/2007 10:30 AM"), "Sample appointment");
             
                        // Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        RecurrenceRange range = new RecurrenceRange();
                        range.Start = recurringAppointment.Start;
                        range.EventDuration = recurringAppointment.End - recurringAppointment.Start;
                        range.MaxOccurrences = 5;
             
                        // Creates a recurrence rule to repeat the appointment on the second monday of April each year.
                        YearlyRecurrenceRule rrule = new YearlyRecurrenceRule(2, RecurrenceMonth.April, RecurrenceDay.Monday, range);
             
                        Console.WriteLine("Appointment occurrs at the following times: ");
                        int ix = 0;
                        foreach (DateTime occurrence in rrule.Occurrences)
                        {
                            ix = ix + 1;
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime());
                        }
                    }
                }
            }
             
            /*
            This example produces the following results:
             
            Appointment occurrs at the following times:
             1: 4/9/2007 10:00:00 AM
             2: 4/14/2008 10:00:00 AM
             3: 4/13/2009 10:00:00 AM
             4: 4/12/2010 10:00:00 AM
             5: 4/11/2011 10:00:00 AM
            */
                </code>
            	<code lang="VB">
            Imports System
            Imports Telerik.Web.UI
             
            Namespace RecurrenceExamples
                Class YearlyRecurrenceRuleExample2
                    Shared Sub Main()
                        ' Creates a sample appointment that starts at 4/1/2007 10:00 AM (local time) and lasts half an hour.
                        Dim recurringAppointment As New Appointment("1", Convert.ToDateTime("4/1/2007 10:00 AM"), Convert.ToDateTime("4/1/2007 10:30 AM"), "Sample appointment")
             
                        ' Creates a recurrence range, that specifies a limit of 10 occurrences for the appointment.
                        Dim range As New RecurrenceRange()
                        range.Start = recurringAppointment.Start
                        range.EventDuration = recurringAppointment.[End] - recurringAppointment.Start
                        range.MaxOccurrences = 5
             
                        ' Creates a recurrence rule to repeat the appointment on the second monday of April each year.
                        Dim rrule As New YearlyRecurrenceRule(2, RecurrenceMonth.April, RecurrenceDay.Monday, range)
             
                        Console.WriteLine("Appointment occurrs at the following times: ")
                        Dim ix As Integer = 0
                        For Each occurrence As DateTime In rrule.Occurrences
                            ix = ix + 1
                            Console.WriteLine("{0,2}: {1}", ix, occurrence.ToLocalTime())
                        Next
                    End Sub
                End Class
            End Namespace
             
            '
            'This example produces the following results:
            '
            'Appointment occurrs at the following times:
            ' 1: 4/9/2007 10:00:00 AM
            ' 2: 4/14/2008 10:00:00 AM
            ' 3: 4/13/2009 10:00:00 AM
            ' 4: 4/12/2010 10:00:00 AM
            ' 5: 4/11/2011 10:00:00 AM
            '
                </code>
            </example>
            <param name="dayOrdinal">The day ordinal modifier. See <see cref="P:Telerik.Web.UI.RecurrencePattern.DayOrdinal"/> for additional information.</param>
            <param name="month">The month in which the event recurs.</param>
            <param name="daysOfWeekMask">A bit mask that specifies the week days on which the event recurs.</param>
            <param name="range">The <see cref="T:Telerik.Web.UI.RecurrenceRange"/> instance that specifies the range of this rule.</param>
        </member>
        <member name="P:Telerik.Web.UI.YearlyRecurrenceRule.DayOfMonth">
            <summary>
            Gets the day of month on which the event recurs.
            </summary>
            <value>The day of month on which the event recurs.</value>
        </member>
        <member name="P:Telerik.Web.UI.YearlyRecurrenceRule.DayOrdinal">
            <summary>
            Gets the day ordinal modifier. See <see cref="P:Telerik.Web.UI.RecurrencePattern.DayOrdinal"/> for additional information.
            </summary>
            <value>The day ordinal modifier.</value>
        </member>
        <member name="P:Telerik.Web.UI.YearlyRecurrenceRule.Month">
            <summary>
            Gets the month in which the event recurs.
            </summary>
            <value>The month in which the event recurs.</value>
        </member>
        <member name="P:Telerik.Web.UI.YearlyRecurrenceRule.DaysOfWeekMask">
            <summary>
            Gets the bit mask that specifies the week days on which the event
            recurs.
            </summary>
            <seealso cref="T:Telerik.Web.UI.RecurrenceDay">RecurrenceDay Enumeration</seealso>
            <remarks>
                For additional information on how to create masks see the
                <see cref="T:Telerik.Web.UI.RecurrenceDay"/> documentation.
            </remarks>
            <value>A bit mask that specifies the week days on which the event recurs.</value>
        </member>
        <member name="P:Telerik.Web.UI.Resource.Key">
            <summary>
            Gets or sets a value indicating the resource primary key value.
            </summary>
            <value>
            The resource primary key value.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.Resource.Text">
            <summary>
            Gets or sets a value indicating the user-friendly description of the resource.
            </summary>
            <value>
            The user-friendly description of the resource.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.Resource.Type">
            <summary>
            Gets or sets a value indicating the resource type.
            </summary>
            <value>
            The resource type.
            </value>
            <remarks>
            The type must be one of the described resource types in
            <see cref="P:Telerik.Web.UI.RadScheduler.ResourceTypes">ResourceTypes</see> collection.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.Resource.Available">
            <summary>
            Gets or sets a value indicating if the resource is a available.
            </summary>
            <value>
            A value indicating if the resource is a available.
            </value>
            <remarks>
            Resources marked as unavailable will not be visible
            in the drop-down lists in the advanced form (if applicable).
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.Resource.CssClass">
            <summary>
            Gets or sets the cascading style sheet (CSS) class rendered for appointments that use this resource.
            </summary>
            <value>
            The cascading style sheet (CSS) class rendered for appointments that use this resource.
            The default value is <see cref="F:System.String.Empty">Empty</see>.
            </value>
            <remarks>
            You can define your own CSS class name or use some of the predefined class names:
            <list type="bullet">
            	<item><strong>rsCategoryRed</strong></item>
            	<item><strong>rsCategoryBlue</strong></item>
            	<item><strong>rsCategoryOrange</strong></item>
            	<item><strong>rsCategoryGreen</strong></item>
            </list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.Resource.Attributes">
            <summary>
            Gets the collection of arbitrary attributes that do not correspond to properties on the resource.
            </summary>
            <value>
            A System.Web.UI.AttributeCollection of name and value pairs.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.Resource.DataItem">
            <summary>
            Gets or sets the data item represented by the
            <see cref="T:Telerik.Web.UI.Resource">Resource</see> object in the
            <see cref="T:Telerik.Web.UI.RadScheduler">RadScheduler</see> control.
            </summary>
            <remarks>
            This property is available only during data binding.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.ResourceCollection.GetResourceByType(System.String)">
            <summary>
            Gets the first resource (if any) of the specified type.
            </summary>
            <param name="type">The type of resource to search for.</param>
            <returns>The first resource of the specified type; null if no resource matches.</returns>
        </member>
        <member name="M:Telerik.Web.UI.ResourceCollection.GetResourcesByType(System.String)">
            <summary>
            Gets the resources of the specified type.
            </summary>
            <param name="type">The type of resource to search for.</param>
            <returns>The resources of the specified type.</returns>
        </member>
        <member name="M:Telerik.Web.UI.ResourceCollection.GetResource(System.String,System.Object)">
            <summary>
            Gets the resource that matches the specified type and key.
            </summary>
            <param name="type">The type.</param>
            <param name="key">The key.</param>
            <returns>The resource that matches the specified type and key; null if no resource matches.</returns>
        </member>
        <member name="T:Telerik.Web.UI.SchedulerPostBackCommand">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.SchedulerPostBackEvent">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.SchedulerStyles">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduling.InlineEditTemplate">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduling.InlineInsertTemplate">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Widgets.DirectoryItem">
            <summary>
            Represents a directory item in the FileBrowser control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Widgets.FileBrowserItem">
            <summary>
            The base class of the FileItem and DirectoryItem classes. Contains the common functionality.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserItem.Serialize(System.IO.StringWriter)">
            <summary>
            Serializes the item into a javascript array. This method should be overriden only when developing 
            a custom FileBrowser control.
            </summary>
            <param name="writer">a StringWriter used as a target for the serialization.</param>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserItem.WriteJavascriptString(System.IO.StringWriter,System.String)">
            <summary>
            Utility method used when serializing. Escapes a string for javascript.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserItem.WriteSeparator(System.IO.StringWriter)">
            <summary>
            Utility method used when serializing. Writes a javascript array separator.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserItem.RemoveLastSeparator(System.IO.StringWriter)">
            <summary>
            Utility method used when serializing. Removes the last javascript array separator from the underlying
            StringBuilder of writer.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserItem.SerializeAttributes(System.IO.StringWriter)">
            <summary>
            Serializes the Attributes array.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileBrowserItem.Attributes">
            <summary>
            Gets or sets a string array containing custom values which can be used on the client when 
            customizing the FileBrowser control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.DirectoryItem.ClearDirectories">
            <summary>
            Clears the Directories array. Can be used when building the directory list in List mode.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.DirectoryItem.Serialize(System.IO.StringWriter)">
            <summary>
            Serializes the directory item into a javascript array. This method should be overriden only when developing 
            a custom FileBrowser control.
            </summary>
            <param name="writer">a StringWriter used as a target for the serialization.</param>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.DirectoryItem.SerializeContent(System.IO.StringWriter)">
            <summary>
            Serializes the children of the directory item as a javascript array. 
            Recursively calls the Serialize methods of all child objects.
            </summary>
            <param name="writer">a StringWriter used as a target for the serialization.</param>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.DirectoryItem.#ctor(System.String,System.String,System.String,System.String,Telerik.Web.UI.Widgets.PathPermissions,Telerik.Web.UI.Widgets.FileItem[],Telerik.Web.UI.Widgets.DirectoryItem[])">
            <summary>
            Creates an instance of the DirectoryItem class.
            </summary>
            <param name="name">The name of the directory item.</param>
            <param name="location">The location of the directory item. To let the FileBrowser control 
            automatically build its path you should set this parameter to string.Empty. If the DirectoryItem is a
            root item, this parameter must contain the virtual location of the item.</param>
            <param name="fullPath">The full virtual path of the directory item. Used by the ContentProvider for 
            populating the Directories and Files properties.</param>
            <param name="tag">The tag of the directory item. Used when the virtual path must be different than the url of the item. 
            When the value of this property is set, the FileBrowser control uses it instead of the combined virtual path.</param>
            <param name="permissions">The permissions for this directory item.</param>
            <param name="files">A FileItem array containing all child file items.</param>
            <param name="directories">A DirectoryItem array containing all child directory items.</param>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.DirectoryItem.FullPath">
            <summary>
            Gets the full virtual path to the directory item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.DirectoryItem.Location">
            <summary>
            Gets the virtual location of the directory item. When the item is not root, the value
            of this property should be string.Empty. The FileBrowser control recursively combines the names 
            of all parent directory items in order to get the full virtual path of the item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.DirectoryItem.Name">
            <summary>
            Gets the name of the directory item. The value of this property is displayed in the FileBrowser control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.DirectoryItem.Permissions">
            <summary>
            Gets the permissions for this directory item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.DirectoryItem.Tag">
            <summary>
            Gets the tag of the directory item. Used when the virtual path must be different than the url of the item. 
            When the value of this property is set, the FileBrowser control uses it instead of the combined virtual path.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.DirectoryItem.Directories">
            <summary>
            Gets a DirectoryItem array containing all child directory items.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.DirectoryItem.Files">
            <summary>
            Gets a FileItem array containing all child file items.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.ToolBarDropDown.SetDefaultWidth(System.Web.UI.WebControls.Unit)">
            <summary>
            This will set the width of the dropdown if it was set before.
            </summary>
            <param name="width">Unit containing the new default width</param>
        </member>
        <member name="T:Telerik.Web.UI.Widgets.FileBrowserContentProvider">
            <summary>
            Provides storage independent mechanism for uploading files and 
            populating the content of the FileBrowser dialog controls.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.#ctor(System.Web.HttpContext,System.String[],System.String[],System.String[],System.String[],System.String,System.String)">
            <summary>
            Creates a new instance of the class. Used internally by FileManager to create instances of the content provider.
            </summary>
            <param name="context">The current HttpContext.</param>
            <param name="searchPatterns">Search patterns for files. Allows wildcards.</param>
            <param name="viewPaths">The paths which will be displayed in the FileManager. You can disregard
            this value if you have custom mechanism for determining the rights for directory / file displaying.</param>
            <param name="uploadPaths">The paths which will allow uploading in the FileManager. You can disregard this
            value if you have custom mechanism for determining the rights for uploading.</param>
            <param name="deletePaths">The paths which will allow deleting in the dialog. You can disregard this
            value if you have custom mechanism for determining the rights for deleting.</param>
            <param name="selectedUrl">The selected url in the file browser. The file browser will navigate to the item
            which has this url.</param>
            <param name="selectedItemTag">The selected tag in the file browser. The file browser will navigate to the
            item which has this tag.</param>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.ResolveRootDirectoryAsList(System.String)">
            <summary>
            Resolves a root directory with the given path in list mode.
            </summary>
            <param name="path">The virtual path of the directory.</param>
            <returns>A DirectoryItem array, containing the root directory and all child directories.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.ResolveRootDirectoryAsTree(System.String)">
            <summary>
            Resolves a root directory with the given path in tree mode.
            </summary>
            <param name="path">The virtual path of the directory.</param>
            <returns>A DirectoryItem, containing the root directory.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.ResolveDirectory(System.String)">
            <summary>
            Resolves a directory with the given path.
            </summary>
            <param name="path">The virtual path of the directory.</param>
            <returns>A DirectoryItem, containing the directory.</returns>
            <remarks>
            Used mainly in the Ajax calls.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.GetFileName(System.String)">
            <summary>
            Get the name of the file with the given url.
            </summary>
            <param name="url">The url of the file.</param>
            <returns>String containing the file name.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.GetPath(System.String)">
            <summary>
            Gets the virtual path of the item with the given url.
            </summary>
            <param name="url">The url of the item.</param>
            <returns>String containing the path of the item.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.GetFile(System.String)">
            <summary>
            Gets a read only Stream for accessing the file item with the given url.
            </summary>
            <param name="url">The url of the file.</param>
            <returns>Stream for accessing the contents of the file item with the given url.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.StoreBitmap(System.Drawing.Bitmap,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Stores an image with the given url and image format.
            </summary>
            <param name="bitmap">The Bitmap object to be stored.</param>
            <param name="url">The url of the bitmap.</param>
            <param name="format">The image format of the bitmap.</param>
            <returns>string.Empty when the operation was successful; otherwise an error message token.</returns>
            <remarks>
            Used when creating thumbnails in the ImageManager dialog.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.StoreFile(System.Web.HttpPostedFile,System.String,System.String,System.String[])">
            <summary>
            Creates a file item from a HttpPostedFile to the given path with the given name.
            </summary>
            <param name="file">The uploaded HttpPostedFile to store.</param>
            <param name="path">The virtual path where the file item should be created.</param>
            <param name="name">The name of the file item.</param>
            <param name="arguments">Additional values to be stored such as Description, DisplayName, etc.</param>
            <returns>String containing the full virtual path (including the file name) of the file item.</returns>
            <remarks>
            The default FileUploader control does not include the arguments parameter. If you need additional arguments
            you should create your own FileUploader control.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.StoreFile(Telerik.Web.UI.UploadedFile,System.String,System.String,System.String[])">
            <summary>
            Creates a file item from a Telerik.Web.UI.UploadedFile in the given path with the given name.
            </summary>
            <param name="file">The UploadedFile instance to store.</param>
            <param name="path">The virtual path where the file item should be created.</param>
            <param name="name">The name of the file item.</param>
            <param name="arguments">Additional values to be stored such as Description, DisplayName, etc.</param>
            <returns>String containing the full virtual path (including the file name) of the file item.</returns>
            <remarks>
            The default FileUploader control does not include the arguments parameter. If you need additional arguments
            you should create your own FileUploader control.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.DeleteFile(System.String)">
            <summary>
            Deletes the file item with the given virtual path.
            </summary>
            <param name="path">The virtual path of the file item.</param>
            <returns>string.Empty when the operation was successful; otherwise an error message token.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.DeleteDirectory(System.String)">
            <summary>
            Deletes the directory item with the given virtual path.
            </summary>
            <param name="path">The virtual path of the directory item.</param>
            <returns>string.Empty when the operation was successful; otherwise an error message token.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.CreateDirectory(System.String,System.String)">
            <summary>
            Creates a directory item in the given path with the given name.
            </summary>
            <param name="path">The path where the directory item should be created.</param>
            <param name="name">The name of the new directory item.</param>
            <returns>string.Empty when the operation was successful; otherwise an error message token.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.MoveFile(System.String,System.String)">
            <summary>
            Moves a file from a one virtual path to a new one. This method can also be used for renaming items.
            </summary>
            <param name="path">old virtual location</param>
            <param name="newPath">new virtual location</param>
            <returns>string.Empty when the operation was successful; otherwise an error message token.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.MoveDirectory(System.String,System.String)">
            <summary>
            Moves a directory from a one virtual path to a new one. This method can also be used for renaming items.
            </summary>
            <param name="path">old virtual location</param>
            <param name="newPath">new virtual location</param>
            <returns>string.Empty when the operation was successful; otherwise an error message token.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileBrowserContentProvider.RemoveProtocolNameAndServerName(System.String)">
            <summary>
            Removes the protocol and the server names from the given url.
            </summary>
            <param name="url">Fully qualified url to a file or directory item.</param>
            <returns>The root based absolute path.</returns>
            <remarks>
            <p>
            Url: http://www.myserver.com/myapp/mydirectory/myfile
            Result: /myapp/mydirectory/myfile
            </p>
            <p>
            Url: www.myserver.com/myapp/mydirectory/myfile
            Result: /myapp/mydirectory/myfile
            </p>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileBrowserContentProvider.DisplayMode">
            <summary>
            The current display mode of the content provider. Can be FileBrowserDisplayMode.Tree or FileBrowserDisplayMode.List. 
            The value of this property is set by the FileBrowser control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileBrowserContentProvider.CanCreateDirectory">
            <summary>
            Gets a value indicating whether the ContentProvider can create directory items or not. The visibility of the 
            Create New Directory icon is controlled by the value of this property.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileBrowserContentProvider.Context">
            <summary>
            The HttpContext object, set in the constructor of the class.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileBrowserContentProvider.SelectedUrl">
            <summary>
            Gets or sets the url of the selected item. The file browser will navigate to the item
            which has this url.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileBrowserContentProvider.SelectedItemTag">
            <summary>
            Gets or sets the tag of the selected item. The file browser will navigate to the item
            which has this tag. Used mainly in Database content providers, where the file items have
            special url for accessing.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileBrowserContentProvider.SearchPatterns">
            <summary>
            Gets the search patterns for the file items to be displayed in the FileBrowser control. This property
            is set in the constructor of the class. Supports wildcards.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileBrowserContentProvider.ViewPaths">
            <summary>
            Gets the paths which will be displayed in the dialog. This is passed by RadEditor and is 
            one of the values of ImagesPaths, DocumentsPaths, MediaPaths, FlashPaths, TemplatesPaths properties. 
            You can disregard this value if you have custom mechanism for determining the rights for 
            directory / file displaying.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileBrowserContentProvider.UploadPaths">
            <summary>
            Gets the paths which will allow uploading in the dialog. This is passed by RadEditor and is 
            one of the values of UploadImagesPaths, UploadDocumentsPaths, UploadMediaPaths, UploadFlashPaths, 
            UploadTemplatesPaths properties. You can disregard this value if you have custom mechanism for determining the rights
            for uploading.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileBrowserContentProvider.DeletePaths">
            <summary>
            The paths which will allow deleting in the dialog. This is passed by RadEditor and is 
            one of the values of DeleteImagesPaths, DeleteDocumentsPaths, DeleteMediaPaths, DeleteFlashPaths, 
            DeleteTemplatesPaths properties. You can disregard this value if you have custom mechanism for determining the rights
            for deleting.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Widgets.FileItem">
            <summary>
            Represents a file item in the FileBrowser control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileItem.Serialize(System.IO.StringWriter)">
            <summary>
            Serializes the file item into a javascript array. This method should be overriden only when developing 
            a custom FileBrowser control.
            </summary>
            <param name="writer">a StringWriter used as a target for the serialization.</param>
        </member>
        <member name="M:Telerik.Web.UI.Widgets.FileItem.#ctor(System.String,System.String,System.Int64,System.String,System.String,System.String,Telerik.Web.UI.Widgets.PathPermissions)">
            <summary>
            Creates an instance of the FileItem class.
            </summary>
            <param name="name">The name of the file item. The value of this property will be displayed in the FileBrowser control.</param>
            <param name="extension">The file extension of the file item.</param>
            <param name="length">The size of the file item in bytes.</param>
            <param name="location">The virtual path of the parent directory item. When the value is string.Empty, the location is the
            parent's full path.</param>
            <param name="url">The url which will be inserted into the RadEditor content area.</param>
            <param name="tag">The tag of the file item. Used when the virtual path must be different than the url of the item. 
            When the value of this property is set, the FileBrowser control uses it instead of the combined virtual path.</param>
            <param name="permissions">The permissions on the file item.</param>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileItem.Extension">
            <summary>
            Gets the file extension of the file item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileItem.Length">
            <summary>
            Gets the size of the file item in bytes.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileItem.Location">
            <summary>
            Gets the virtual path of the parent directory item. When the value is string.Empty, the location is got
            from the item's parent.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileItem.Url">
            <summary>
            Gets the url which will be inserted into the RadEditor content area.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileItem.Name">
            <summary>
            Gets the name of the file item. The value of this property will be displayed in the FileBrowser control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileItem.Permissions">
            <summary>
            Gets the permissions on the file item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Widgets.FileItem.Tag">
            <summary>
            Gets the tag of the file item. Used when the virtual path must be different than the url of the item. 
            When the value of this property is set, the FileBrowser control uses it instead of the combined virtual path.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Widgets.PathPermissions">
            <summary>
            Represents the actions which will be allowed on the FileBrowserItem.
            </summary>
            <remarks>
            <p>
            If you want to specify multiple permissions, use the following syntax:
            </p>
            <pre>
            Dim permissions As PathPermissions = PathPermissions.Read Or PathPermissions.Upload Or PathPermissions.Delete
            </pre>
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.Widgets.PathPermissions.Read">
            <summary>
            The default permission. The FileBrowserItem can only be displayed.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Widgets.PathPermissions.Upload">
            <summary>
            Used for DirectoryItems. If enabled, the Upload tab of the dialog will be enabled when
            the DirectoryItem is opened.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Widgets.PathPermissions.Delete">
            <summary>
            If enabled, the DirectoryItem or the FileItem can be deleted.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorExportSettings">
            <summary>
            Container of misc. export settings of RadEditor control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.EditorExportSettings.FileName">
            <summary>
            A string specifying the name (without the extension) of the file that will be
            created. The file extension is automatically added based on the method that is
            used.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.EditorExportSettings.OpenInNewWindow">
            <summary>Opens the exported editor content in a new window instead of the same page.</summary>
        </member>
        <member name="T:Telerik.Web.UI.EditModes">
            <summary>
            Provides enumerated values to be used to set edit mode in RadEditor
            <para>This enumeration has a <strong>FlagsAttribute</strong> attribute that allows
            a bitwise combination of its member values.</para>
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.EditModes.Design">
            <summary>
            Design mode. The default edit mode in RadEditor, where you could edit HTML in WYSIWYG fashion.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.EditModes.Html">
            <summary>
            HTML mode. Advanced edit mode where you could directly modify the HTML.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.EditModes.Preview">
            <summary>
            Preview mode. In this mode RadEditor will display its content the same way as it should be displayed when placed outside of the control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorStripFormattingOptions">
            <summary>
            	<para>Provides enumerated values to be used to set format cleaning options on
                paste.</para>
            	<para>This enumeration has a <strong>FlagsAttribute</strong> attribute that allows
                a bitwise combination of its member values.</para>
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorStripFormattingOptions.None">
            <summary>Doesn't strip anything on paste, asks a question when MS Word formatting detected.</summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorStripFormattingOptions.NoneSupressCleanMessage">
            <summary>Doesn't strip anything on paste and does not ask a question.</summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorStripFormattingOptions.MSWord">
            <summary>Strips only MSWord related attributes and tags on paste.</summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorStripFormattingOptions.MSWordNoFonts">
            <summary>Strips the MSWord related attributes and tags and font tags on paste.</summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorStripFormattingOptions.MSWordRemoveAll">
            <summary>Strips MSWord related attributes and tags, font tags and font size attributes on paste.</summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorStripFormattingOptions.Css">
            <summary>Removes style attributes on paste.</summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorStripFormattingOptions.Font">
            <summary>Removes Font tags on paste.</summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorStripFormattingOptions.Span">
            <summary>Clears Span tags on paste.</summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorStripFormattingOptions.AllExceptNewLines">
            <summary>Clears all tags except "br" and new lines (\n) on paste.</summary>
        </member>
        <member name="F:Telerik.Web.UI.EditorStripFormattingOptions.All">
            <summary>Remove all HTML formatting on paste.</summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorFilters">
            <summary>
            Provides enumerated values to be used to set the active content filters
            <para>This enumeration has a <strong>FlagsAttribute</strong> attribute that allows
            a bitwise combination of its member values.</para>
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadToolTipBase.Show">
            <summary>
            Causes a tooltip to open automatically when the page is loaded
            </summary>       
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.VisibleOnPageLoad">
            <summary>
            Gets or sets a value indicating whether the tooltip will open automatically when its parent [aspx] page is loaded on the client.
            </summary>
            <value>The default value is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.Animation">
            <summary>
            Get/Set the animation effect of the tooltip
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.ManualClose">
            <summary>
            Get/Set whether the tooltip will need to be closed manually by the user using the [x] button, or will close automatically
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.Sticky">
            <summary>
            Get/Set whether the tooltip will hide when the mouse moves away from the target element, or when the mouse [enters] and moves out of the tooltip itself.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.HideEvent">
            <summary>
            Get/Set the client event at which the tooltip will be hidden
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.ShowEvent">
            <summary>
            Get/Set the client event at which the tooltip will be made visible for a particular target control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.Width">
            <summary>
            Get/Set the Width of the tooltip
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.Height">
            <summary>
            Get/Set the Height of the tooltip
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.Text">
            <summary>
            Get/Set the Text that will appear in the tooltip (if it should be other than the content of the 'title' attribute of the target element
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.Title">
            <summary>
            Get/Set a title for the tooltip
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.Position">
            <summary>
            Get/Set the top/left position of the tooltip relative to the target element
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.ContentScrolling">
            <summary>
            Get/Set overflow of the tooltip's content area
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.RelativeTo">
            <summary>
            Get/Set whether the tooltip should appear relative to the mouse or to the target element. Works in coopearation with the Position property.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.OffsetX">
            <summary>
            Get/Set the tooltip's horizontal offset from the target control. Works in coopearation with the Position property.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.OffsetY">
            <summary>
            Get/Set the tooltip's vertical offset from the target control. Works in coopearation with the Position property.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.AutoCloseDelay">
            <summary>
            Get/Set the delay after which the tooltip will hide if the mouse stands still over  the target element.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.HideDelay">
            <summary>
            Get/Set delay in miliseconds for the tooltip to hide after the mouse leaves the target element.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.ShowDelay">
            <summary>
            Get/Set the time for which the user should hold the mouse over a target element for the tooltip to appear
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.MouseTrailing">
            <summary>
            Get/Set whether the tooltip will move to follow mouse movement or will stay fixed.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.ShowCallout">
            <summary>
            Get/Set whether the tooltip will hide when the mouse moves away from the target element, or when the mouse [enters] and moves out of the tooltip itself.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.RenderInPageRoot">
            <summary>
            Get/Set whether the tooltip should be added as a child of the root element or as a child of its direct parent.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.Modal">
            <summary>Gets or sets a value indicating whether a tooltip is modal or not.</summary>
            <value>The default value is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.OnClientBeforeShow">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadToolTip</strong> control is initialized.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientBeforeShow</strong>
            		<font color="black">client-side event handler is called before the <strong>RadToolTip</strong>
                is shown.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadToolTip object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientBeforeShow</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnToolTipShowHandler(sender, args)<br/>
                         {<br/>
                         var tooltip = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadToolTip ID="RadToolTip1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientBeforeShow="OnToolTipShowHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadToolTip&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.OnClientShow">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called before
            the sliding is started.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientShow</strong>
            		<font color="black">client-side event handler is called after the tooltip is shown
            </font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadToolTip object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientShow</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientShowHandler(sender, args)<br/>
                         {<br/>
                         var tooltip = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadToolTip ID="RadToolTip1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientShow="OnClientShowHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadToolTip&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.OnClientBeforeHide">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called 
            while the handle is being slided.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientBeforeHide</strong>
            		<font color="black">client-side event handler that is called 
            before the tooltip is hidden.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadToolTip object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientBeforeHide</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnBeforeHideHandler(sender, args)<br/>
                         {<br/>
                         var tooltip = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadToolTip ID="RadToolTip1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientBeforeHide="OnBeforeHideHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadToolTip&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipBase.OnClientHide">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called 
            when slide has ended.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientHide</strong>
            		<font color="black">client-side event handler that is called 
            after the tooltip is hidden.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadToolTip object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientHide</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnHideHandler(sender, args)<br/>
                         {<br/>
                         var tooltip = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadToolTip ID="RadToolTip1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientHide="OnHideHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadToolTip&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTip.TargetControlID">
            <summary>
            Get/Set the target control property of the tooltip
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTip.IsClientID">
            <summary>
            Get/Set whether the TargetControlID is server or client ID
            </summary>        
        </member>
        <member name="M:Telerik.Web.UI.RadToolTipManager.OnAjaxUpdate(Telerik.Web.UI.ToolTipUpdateEventArgs)">
            <summary>
            Allows for dynamic content to be set into the tooltip with an ajax request.
            The tooltip triggers the event when it is shown on the client.
            </summary>
            <value>
            A string specifying the name of the server-side event handler that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnAjaxUpdate</strong>
            		<font color="black">is triggered when the tooltip is shown on the client.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadToolTip object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnAjaxUpdate</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadToolTip ID="RadToolTip1"<br/>
                         runat= "server"<br/>
            			<strong>OnAjaxUpdate="OnAjaxUpdate"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadToolTip&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipManager.WebServiceSettings">
            <summary>
            	Gets the settings for the web service used to populate items.
            </summary>
            <value>
                An <see cref="P:Telerik.Web.UI.RadToolTipManager.WebServiceSettings">WebServiceSettings</see> that represents the
                web service used for populating items.
            </value>
            <remarks>
            	<para>
                    Use the <strong>WebServiceSettings</strong> property to configure the web
            		service used to populate items on demand.
            		You must specify both
                    <see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> and
                    <see cref="P:Telerik.Web.UI.WebServiceSettings.Method">Method</see>
            		to fully describe the service.
                </para>
            	<para>
            		In order to use the integrated support, the web service should have the following signature:
            		
            		<code lang="CS">
            		[ScriptService]
            		public class WebServiceName : WebService
            		{
            			[WebMethod]
            			public string WebServiceMethodName(object context)
            			{
            				// We cannot use a dictionary as a parameter, because it is only supported by script services.
            				// The context object should be cast to a dictionary at runtime.
            				IDictionary&lt;string, object&gt; contextDictionary = (IDictionary&lt;string, object&gt;) context;
            				
            				//...
            			}
            		}
            		</code>
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipManager.OnClientResponseEnd">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadToolTipManager</strong> receives the server response from a WebService or AJAX request.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientResponseEnd</strong>
            		<font color="black">client-side event handler is called before the <strong>RadToolTipManager</strong>
                displays the content returned from the server.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadToolTipManager object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientResponseEnd</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientResponseEnd(sender, args)<br/>
                         {<br/>
                            var tooltipManager = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadToolTipManager ID="RadToolTipManager1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientResponseEnd="OnClientResponseEnd"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadToolTipManager&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipManager.ToolTipZoneID">
            <summary>
            Gets or sets the id (ClientID if a runat=server is used) of a html element whose children will be tooltipified        
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipManager.AutoTooltipify">
            <summary>
            Gets or sets a value whether the RadToolTipManager, when its TargetControls collection is empty will tooltipify automatically all elements on the page that have a 'title' attribute
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipManager.TargetControls">
            <summary>
            Gets a collection of TargetControl objects that allows for specifying the objects for which tooltips will be created on the client-side.
            </summary>
            <value>
            Gets a collection of TargetControl objects that allows for specifying the objects for which tooltips will be created on the client-side.
            </value>
            <remarks>
            Use the TargetControls collection to programmatically control which objects should be tooltipified on the client-side. 
            </remarks>        
        </member>
        <member name="P:Telerik.Web.UI.RadToolTipManager.UpdatePanel">
            <summary>
            Gets a reference to the UpdatePanel property of RadToolTipManager. The UpdatePanel allows for sending AJAX content to the client-side during the OnAjaxUpdate event.
            </summary>
            <value>
            Gets a reference to the UpdatePanel property of RadToolTipManager. The UpdatePanel allows for sending AJAX content to the client-side during the OnAjaxUpdate event.
            </value>        
        </member>
        <member name="P:Telerik.Web.UI.ToolTipUpdateEventArgs.TargetControlID">
            <summary>
            The ClientID of the target control for which the tooltip is currently being shown.		
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ToolTipUpdateEventArgs.Value">
            <summary>
            An optional parameter allowing arbitrary information to be passed from the client to the server to help determine what information to load in the tooltip in the AJAX request
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ToolTipUpdateEventArgs.UpdatePanel">
            <summary>
            Provides a reference to the UpdatePanel of RadToolTipManager. Allows content and controls to be set and displayed in the tooltip on the client
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Upload.RequestParser.UpdateStateStore(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="chunk">The byte array, which is currently being used</param>
            <param name="fieldStartIndex">The index (distributed in the _bufferedBytes array and the chunk),
            at which the field starts</param>
            <param name="fieldBytesCount">The count of the field bytes to be added to the state store</param>
            <param name="isFinal">Indicates if this is the final part of data
            	for the field (i.e. a boundary was found)</param>
        </member>
        <member name="T:Telerik.Web.UI.UploadedFile">
            <summary>
            	<para>Provides a way to access individual files that have been uploaded by a client
                via a <strong>RadUpload</strong> control.</para>
            </summary>
            <remarks>
            	<para>The <strong>UploadedFileCollection</strong> class provides access to all
                files uploaded from a client via single RadUpload instance as a file collection.
                <b>UploadedFile</b> provides properties and methods to get information on an
                individual file and to read and save the file. Files are uploaded in MIME
                multipart/form-data format and are <strong>NOT</strong> buffered in the server
                memory if the <strong>RadUploadModule</strong> is used.</para>
            	<para>The <strong>RadUpload</strong> control must be used to select and upload
                files from a client.</para>
            	<para>You can specify the maximum allowable upload file size in a machine.config or
                Web.config configuration file in the <b>maxRequestLength</b> attribute of the
                &lt;httpRuntime&gt; Element element.</para>
            </remarks>
            <example>
                Set the maximum allowable upload file size to 1000kB
                <code lang="VB">
            &lt;httpRuntime maxRequestLength="1000" /&gt;
                </code>
            	<code lang="CS">
            &lt;httpRuntime maxRequestLength="1000" /&gt;
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.UploadedFile.GetName">
            <summary>
            Returns the name and extension of the file on the client's computer.
            </summary>
            <value>
            A string consisting of the characters after the last directory character in file name on the client's computer.
            </value>
            <remarks>
            The separator characters used to determine the start of the 
            file name are DirectorySeparatorChar and AltDirectorySeparatorChar.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.UploadedFile.GetNameWithoutExtension">
            <summary>
            Returns the name of the file on the client's computer without the extension.
            </summary>
            <value>
            A string containing the name of the file on the client's computer without the extension.
            </value>
            <remarks>
            A string containing the string returned by GetFileName, minus the last period (.) and all characters following it.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.UploadedFile.GetExtension">
            <summary>
            Returns the extension of the file on the client's computer.
            </summary>
            <value>
            A string containing the extension of the file including the ".". If the file name does not have 
            extension information, GetExtension returns string.Empty.
            </value>
            <remarks>
            The extension of the file name is obtained by searching it for a period (.), starting with the last character 
            and continuing toward the start. If a period is found before a DirectorySeparatorChar or AltDirectorySeparatorChar 
            character, the returned string contains the period and the characters after it; otherwise, string.Empty is returned.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.UploadedFile.GetFieldValue(System.String)">
            <summary>
            Returns the value of a custom field.
            </summary>
            <value>
            A string containing the value of the custom field with name <strong>fieldName</strong>
            </value>
            <param name="fieldName">The name of the field wich value will be retrieved</param>
            <returns>Check the general help for more information and an example.</returns>
        </member>
        <member name="M:Telerik.Web.UI.UploadedFile.GetIsFieldChecked(System.String)">
            <summary>
            Returns the checked state of a custom field.
            </summary>
            <value>
            A string containing the checked state of the custom field with name <strong>fieldName</strong>
            </value>
            <param name="fieldName">The name of the field wich checked state will be retrieved</param>
            <returns>Check the general help for more information and an example.</returns>
        </member>
        <member name="M:Telerik.Web.UI.UploadedFile.SaveAs(System.String)">
            <summary>Saves the contents of an uploaded file.</summary>
            <remarks>
            	<para>The maximum allowed uploaded file size is 4MB by default. Maximum file size
                can be specified in the machine.config or Web.config configuration files in the
                maxRequestLength attribute of the &lt;httpRuntime&gt; element.</para>
            	<para>The ASP.NET process must have proper rights for writing on the folder where
                the files are saved.</para>
            </remarks>
            <example>
                The following example saves all the files uploaded by the client to a folder named
                "C:\TempFiles" on the Web server's local disk. 
                <code lang="VB">
            Dim Loop1 As Integer
            Dim TempFileName As String
            Dim MyFileCollection As UploadedFileCollection = RadUpload1.UploadedFiles
             
            For Loop1 = 0 To MyFileCollection.Count - 1
                ' Create a new file name.
                TempFileName = "C:\TempFiles\File_" &amp; CStr(Loop1)
                ' Save the file.
                MyFileCollection(Loop1).SaveAs(TempFileName)
            Next Loop1
                </code>
            	<code lang="CS">
            String TempFileName;
            UploadedFileCollection MyFileCollection = RadUpload1.UploadedFiles;
             
            for (int Loop1 = 0; Loop1 &lt; MyFileCollection.Count; Loop1++)
            {
                // Create a new file name.
                TempFileName = "C:\\TempFiles\\File_" + Loop1.ToString();
                // Save the file.
                MyFileCollection[Loop1].SaveAs(TempFileName);
            }
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.UploadedFile.SaveAs(System.String,System.Boolean)">
            <summary>Saves the contents of an uploaded file.</summary>
            <remarks>
            	<para>The maximum allowed uploaded file size is 4MB by default. Maximum file size
                can be specified in the machine.config or Web.config configuration files in the
                maxRequestLength attribute of the &lt;httpRuntime&gt; element.</para>
            	<para>The ASP.NET process must have proper rights for writing on the folder where
                the files are saved.</para>
            </remarks>
            <example>
                The following example saves all the files uploaded by the client to a folder named
                "C:\TempFiles" on the Web server's local disk. The existing files are overwritten.
                <code lang="VB">
            Dim Loop1 As Integer
            Dim TempFileName As String
            Dim ShouldOverwrite As Boolean = True
            Dim MyFileCollection As UploadedFileCollection = RadUpload1.UploadedFiles
             
            For Loop1 = 0 To MyFileCollection.Count - 1
                ' Create a new file name.
                TempFileName = "C:\TempFiles\File_" &amp; CStr(Loop1)
                ' Save the file.
                MyFileCollection(Loop1).SaveAs(TempFileName, ShouldOverwrite)
            Next Loop1
                </code>
            	<code lang="CS">
            String TempFileName;
            bool ShouldOverwrite = true;
            UploadedFileCollection MyFileCollection = RadUpload1.UploadedFiles;
             
            for (int Loop1 = 0; Loop1 &lt; MyFileCollection.Count; Loop1++)
            {
                // Create a new file name.
                TempFileName = "C:\\TempFiles\\File_" + Loop1.ToString();
                // Save the file.
                MyFileCollection[Loop1].SaveAs(TempFileName, ShouldOverwrite);
            }
                </code>
            </example>
            <param name="fileName">The name of the saved file.</param>
            <param name="overwrite">
            	<strong>true</strong> to allow an existing file to be overwritten; otherwise, <strong>false</strong>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.UploadedFile.FromHttpPostedFile(System.String,System.Web.HttpPostedFile)">
            <summary>
            Creates a UploadedFile instance from HttpPostedFile instance.
            </summary>
            <param name="inputFieldName">The value of the name attribute of the file input field
            	(equals the UniqueID of the FileUpload control)</param>
            <param name="file">The HttpPostedFile instance. Usually, you could get this from a 
            ASP:FileUpload control's PostedFile property</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.UploadedFile.FromHttpPostedFile(System.Web.HttpPostedFile)">
            <summary>
            Creates a UploadedFile instance from HttpPostedFile instance.
            </summary>
            <param name="file">The HttpPostedFile instance. Usually, you could get this from a 
            ASP:FileUpload control's PostedFile property</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Web.UI.UploadedFile.ContentLength">
            <summary>Gets the size in bytes of an uploaded file.</summary>
            <value>The length of the file.</value>
            <example>
                This example validates the file size of an uploaded file. 
                <code lang="CS">
            bool isValid = true;
            if (file.ContentLength &gt; MaxFileSize)
            {
                isValid = false;
            }
                </code>
            	<code lang="VB">
            Dim isValid As Boolean = True;
            If file.ContentLength &gt; MaxFileSize Then
                isValid = False;
            End If
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.UploadedFile.ContentType">
            <summary>Gets the MIME content type of a file sent by a client.</summary>
            <value>The MIME content type of the uploaded file.</value>
            <example>
                The following example loops through all the files in the uploaded files collection
                and takes action when the MIME type of a file is <b>US-ASCII</b> . 
                <code lang="VB" title="1">
            Dim Loop1 As Integer
             Dim MyFileCollection As UploadedFileCollection = RadUpload1.UploadedFiles
             
             For Loop1 = 0 To MyFileCollection.Count - 1
                If MyFileCollection(Loop1).ContentType = "video/mpeg" Then
                   '...
                End If
             Next Loop1
                </code>
            	<code lang="CS" title="2">
            UploadedFileCollection MyFileCollection = RadUpload1.UploadedFiles;
             
             for (int Loop1 = 0; Loop1 &lt; MyFileCollection.Count; Loop1++)
             {
                if (MyFileCollection[Loop1].ContentType == "video/mpeg")
                {
                   //...
                }
             }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.UploadedFile.FileName">
            <summary>
            Gets the fully-qualified name of the file on the client's computer (for example
            "C:\MyFiles\Test.txt").
            </summary>
            <value>A string containing the fully-qualified name of the file on the client's computer.</value>
            <example>
                The following example assigns the name of an uploaded file (the first file in the
                file collection) to a string variable. 
                <code lang="CS">
            UploadedFile MyUploadedFile = RadUpload1.UploadedFiles[0];
            string MyFileName = MyUploadedFile.FileName;
                </code>
            	<code lang="VB">
            Dim MyUploadedFile As UploadedFile = RadUpload1.UploadedFiles(0)
            Dim MyFileName As String = MyUploadedFile.FileName
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.UploadedFile.InputStream">
            <summary>
            Gets a Stream object which points to the uploaded file to prepare for reading the contents of the file.
            </summary>
            <value>
            A Stream pointing to the file.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.RadProgressArea">
            <summary>
            RadProgressManager Control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadProgressArea.Language">
            <summary>
            Specifies the localization of the RadProgressArea (the language which will be used).
            </summary>
            <value>The default value is <strong>en-US</strong>.</value>
            <example>
            	<code lang="CS" title="[New Example]">
            &lt;radU:RadUpload Language="es-Es" ... /&gt;
                </code>
            	<code lang="VB" title="[New Example]">
            &lt;radU:RadUpload Language="es-Es" ... /&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadProgressArea.OnClientProgressUpdating">
            <summary>
            Specifies the client-side function to be executed when the Progress Area status is about to be updated.
            </summary>
            <value>The default value is <strong>string.Empty</strong>.</value>
            <example>
                This example demonstrates how to set a javascript function to execute when the
                client side progress area is about to be updated.
                <code lang="CS">
            &lt;radU:RadProgressArea OnClientProgressUpdating="myOnClientProgressUpdating" ... /&gt;
            ...
            &lt;script&gt;
            function myOnClientProgressUpdating()
            {
                alert("The progress will be updated");
            }
            &lt;/script&gt;
                </code>
            	<code lang="VB">
            &lt;radU:RadProgressArea OnClientProgressUpdating="myOnClientProgressUpdating" ... /&gt;
            ...
            &lt;script&gt;
            function myOnClientProgressUpdating()
            {
                alert("The progress will be updated");
            }
            &lt;/script&gt;
                </code>
            </example>
            <requirements>Microsoft .NET Framework</requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadProgressArea.OnClientProgressBarUpdating">
            <summary>
            Specifies the client-side function to be executed when a progress bar is about to be updated.
            </summary>
            <value>The default value is <strong>string.Empty</strong>.</value>
            <requirements>Microsoft .NET Framework</requirements>
        </member>
        <member name="P:Telerik.Web.UI.RadProgressArea.TagKey">
            <summary>
            Provides access to the localization strings of the control.
            </summary>
            <example>
            This example demonstrates how to change the localization strings of RadProgressArea 
            object with code.
            	<code lang="CS" title="[New Example]">
            RadProgressArea1.Localization["CancelButton"] = "Cancel";
            RadProgressArea1.Localization["ElapsedTime"] = "Elapsed time: ";
            RadProgressArea1.Localization["EstimatedTime"] = "Estimated time: ";
            RadProgressArea1.Localization["TransferSpeed"] = "Speed: ";
            RadProgressArea1.Localization["CurrentFileName"] = "Uploading file: ";
            RadProgressArea1.Localization["Uploaded"] = "Uploaded ";
            RadProgressArea1.Localization["UploadedFiles"] = "Uploaded files: ";
            RadProgressArea1.Localization["Total"] = "Total ";
            RadProgressArea1.Localization["TotalFiles"] = "Total files: ";
                </code>
            	<code lang="VB" title="[New Example]">
            RadProgressArea1.Localization("CancelButton") = "Cancel"
            RadProgressArea1.Localization("ElapsedTime") = "Elapsed time: "
            RadProgressArea1.Localization("EstimatedTime") = "Estimated time: "
            RadProgressArea1.Localization("TransferSpeed") = "Speed: "
            RadProgressArea1.Localization("CurrentFileName") = "Uploading file: "
            RadProgressArea1.Localization("Uploaded") = "Uploaded "
            RadProgressArea1.Localization("UploadedFiles") = "Uploaded files: "
            RadProgressArea1.Localization("Total") = "Total "
            RadProgressArea1.Localization("TotalFiles") = "Total files: "
                </code>
            </example>
            <value>
            Localization name/value collection.
            </value>
            <remarks>
            This property is intended to be used when there is a need to access the localization
            strings of the control from the code behind.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.Upload.ProgressData">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.RadProgressManager">
            <summary>
            RadProgressManager control
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadProgressManager.IsRegisteredOnPage(System.Web.UI.Page)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadProgressManager.ApplyUniquePageIdentifier(System.String)">
            <summary>
            Adds RadUrid=[GUID] parameter to the supplied URL.
            </summary>
            <remarks>
            	<para>Use this method to generate proper URL for cross page postbacks 
            	which will enable RadMemoryOptimization and RadProgressArea.</para>
            </remarks>
            <example>
                This example demonstrates how to set the PostBackUrl property of a button
            	in order to enable RadMemoryOptimization and RadProgressArea. This example
            	will postback to the current page, but you could use URL of your choice.
                <code lang="VB">
            Button1.PostBackUrl = RadProgressManager1.ApplyUniquePageIdentifier(Request.Url.PathAndQuery)
            </code>
            	<code lang="CS">
            Button1.PostBackUrl = RadProgressManager1.ApplyUniquePageIdentifier(Request.Url.PathAndQuery);
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadProgressManager.EnableMemoryOptimization">
            <summary>
            Deprecated. Memory optimization is implemented as part of the .NET Framework and is no longer a feature of RadUpload.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadProgressManager.SuppressMissingHttpModuleError">
            <summary>
            Gets or sets a value indicating wether an error message will be displayed when the RadUploadHttpModule is not registered.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadProgressManager.RefreshPeriod">
            <summary>
            Gets or sets the period (in milliseconds) of the progress data refresh.
            </summary>
            <value>
            The period of the progress data refresh in milliseconds. The default value is
            <strong>500</strong>.
            </value>
            <remarks>
            	<para>The refresh period might not be exactly the same as the value specified if
                the AJAX request has not been completed before the upload. The minimum value is 50
                ms.</para>
            	<para><strong>Note:</strong> If the value is very low (50ms) both the client CPU
                and server CPU load would increase because of the increased number of AJAX requests
                performed.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadProgressManager.UniquePageIdentifier">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadProgressManager.FormId">
            <summary>
            RadProgressManager's FormId property is not used anymore. Please, remove any assignments.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ControlObjectsVisibility">
            <summary>Specifies which control objects will be visible on a RadUpload control.</summary>
        </member>
        <member name="F:Telerik.Web.UI.ControlObjectsVisibility.None">
            <summary>Only the file inputs will be visible.</summary>
        </member>
        <member name="F:Telerik.Web.UI.ControlObjectsVisibility.CheckBoxes">
            <summary>Display checkboxes for selecting a file input.</summary>
        </member>
        <member name="F:Telerik.Web.UI.ControlObjectsVisibility.RemoveButtons">
            <summary>Display buttons for removing a file input.</summary>
        </member>
        <member name="F:Telerik.Web.UI.ControlObjectsVisibility.ClearButtons">
            <summary>Display buttons for clearing a file input.</summary>
        </member>
        <member name="F:Telerik.Web.UI.ControlObjectsVisibility.AddButton">
            <summary>Display button for adding a file input.</summary>
        </member>
        <member name="F:Telerik.Web.UI.ControlObjectsVisibility.DeleteSelectedButton">
            <summary>Display button for removing the file inputs with checked checkboxes.</summary>
        </member>
        <member name="F:Telerik.Web.UI.ControlObjectsVisibility.Default">
            <summary>CheckBoxes | RemoveButtons | AddButton | DeleteSelectedButton</summary>
        </member>
        <member name="F:Telerik.Web.UI.ControlObjectsVisibility.All">
            <summary>
            CheckBoxes | RemoveButtons | ClearButtons | AddButton |
            DeleteSelectedButton
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadUpload">
            <summary>
            Telerik RadUpload
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadUpload.OnValidatingFile(Telerik.Web.UI.Upload.ValidateFileEventArgs)">
            <summary>
            Fires the ValidatingFile event.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadUpload.OnFileExists(Telerik.Web.UI.Upload.UploadedFileEventArgs)">
            <summary>
            Fires the FileExists event.
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadUpload.ValidatingFile">
            <summary>
                Occurs before the internal validation of every file in the <see cref="P:Telerik.Web.UI.RadUpload.UploadedFiles">UploadedFiles</see> collection.
            </summary>
            <remarks>
            	<para>To skip the internal validation of the file, set e.<strong>SkipInternalValidation</strong> = <strong>true</strong>.</para>
            </remarks>
            <example>
                This example demostrates how to implement custom validation for specific file type.
                
                <code lang="VB">
            Private Sub RadUpload1_ValidatingFile(ByVal sender As Object, ByVal e As WebControls.ValidateFileEventArgs) Handles RadUpload1.ValidatingFile
                If e.UploadedFile.GetExtension.ToLower = ".zip" Then
                    Dim maxZipFileSize As Integer = 10000000 '~10MB
                    If e.UploadedFile.ContentLength &gt; maxZipFileSize Then
                        e.IsValid = False
                    End If
                    'The zip files are not validated for file size, extension and mime type
                    e.SkipInternalValidation = True
                End If
            End Sub
                </code>
            	<code lang="CS">
            private void RadUpload1_ValidatingFile(object sender, ValidateFileEventArgs e)
            {
                if (e.UploadedFile.GetExtension().ToLower() == ".zip")
                {
                    int maxZipFileSize = 10000000; //~10MB
                    if (e.UploadedFile.ContentLength &gt; maxZipFileSize)
                    {
                        e.IsValid = false;
                    }
                    //The zip files are not validated for file size, extension and content type
                    e.SkipInternalValidation = true;
                }
            }
                </code>
            </example>
            <seealso cref="P:Telerik.Web.UI.RadUpload.MaxFileSize">MaxFileSize Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.MaxFileSize">AllowedMimeTypes Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.MaxFileSize">AllowedFileExtensions Property</seealso>
        </member>
        <member name="E:Telerik.Web.UI.RadUpload.FileExists">
            <summary>
            Occurs after an unsuccessful attempt for automatic saving of a file in the 
            <see cref="P:Telerik.Web.UI.RadUpload.UploadedFiles">UploadedFiles</see> collection.
            </summary>
            <remarks>
            	<para>
                    This event should be consumed only when the automatic file saving is enabled by
                    setting the <see cref="P:Telerik.Web.UI.RadUpload.TargetFolder">TargetFolder</see> property. In this mode
                    the files are saved in the selected folder with the same name as on the client
                    computer. If a file with such name already exists in the
                    <see cref="P:Telerik.Web.UI.RadUpload.TargetFolder">TargetFolder</see> it is either overwritten or skipped
                    depending the value of the
                    <see cref="P:Telerik.Web.UI.RadUpload.OverwriteExistingFiles">OverwriteExistingFiles</see> property. This
                    event is fired if
                    <see cref="P:Telerik.Web.UI.RadUpload.OverwriteExistingFiles">OverwriteExistingFiles</see> is set to
                    <strong>false</strong> and a file with the same name already exists in the
                    <see cref="P:Telerik.Web.UI.RadUpload.TargetFolder">TargetFolder</see>.
                </para>
            </remarks>
            <example>
                This example demostrates how to create custom logic for renaming and saving the
                existing uploaded files. 
                <code lang="VB">
            Private Sub RadUpload1_FileExists(ByVal sender As Object, ByVal e As WebControls.UploadedFileEventArgs) Handles RadUpload1.FileExists
                Dim TheFile As Telerik.WebControls.UploadedFile = e.UploadedFile
                
                TheFile.SaveAs(Path.Combine(RadUpload1.TargetFolder, TheFile.GetNameWithoutExtension() + "1" + TheFile.GetExtension()), true)
            End Sub
                </code>
            	<code lang="CS">
            private void RadUpload1_FileExists(object sender, Telerik.WebControls.UploadedFileEventArgs e)
            {
                Telerik.WebControls.UploadedFile TheFile = e.UploadedFile;
             
                TheFile.SaveAs(Path.Combine(RadUpload1.TargetFolder, TheFile.GetNameWithoutExtension() + "1" + TheFile.GetExtension()), true);
            }
                </code>
            </example>
            <seealso cref="P:Telerik.Web.UI.RadUpload.OverwriteExistingFiles">OverwriteExistingFiles Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.TargetFolder">TargetFolder Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.TargetPhysicalFolder">TargetPhysicalFolder Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.InputSize">
            <summary>
            Gets or sets the size of the file input field
            </summary>
            <value>The default value is <strong>23</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.AllowedFileExtensions">
            <summary>
            Gets or sets the allowed file extensions for uploading.
            </summary>
            <remarks>
            	<para>Set this property to empty array of strings in order to prevent the file
                extension checking.</para>
            	<para>Note that the file extensions must include the dot before the actual
                extension. See the example below.</para>
            </remarks>
            <value>
            The default value is empty string array. In order to check for multiple file
            extensions you should set an array of strings containing the allowed file extensions
            for uploading.
            </value>
            <example>
                This example demonstrates how to set multiple allowed file extensions in a
                RadUpload control. 
                <code lang="VB">
            Dim allowedFileExtensions As String() = New String(2) {".zip", ".doc", ".config"}
            RadUpload1.AllowedFileExtensions = allowedFileExtensions
            </code>
            	<code lang="CS">
            string[] allowedFileExtensions = new string[3] {".zip", ".doc", ".config"};
            RadUpload1.AllowedFileExtensions = allowedFileExtensions;
                </code>
            </example>
            <seealso cref="P:Telerik.Web.UI.RadUpload.MaxFileSize">MaxFileSize Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.AllowedMimeTypes">AllowedMimeTypes Property</seealso>
            <seealso cref="E:Telerik.Web.UI.RadUpload.ValidatingFile">ValidatingFile Event</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.AllowedMimeTypes">
            <summary>
            Gets or sets the allowed MIME types for uploading.
            </summary>
            <remarks>
            	<para>Set this property to string.Empty in order to prevent the
                mime type checking.</para>
            </remarks>
            <value>
            The default value is empty string array. In order to check for multiple mime
            types you should set an array of strings containing the allowed MIME types 
            for uploading.
            </value>
            <example>
                This example demostrates how to set multiple allowed MIME types to a RadUpload
                control. 
                <code lang="VB">
            ' For example you can Get these from your web.config file
            Dim commaSeparatedMimeTypes As String = "application/octet-stream,application/msword,video/mpeg"
             
            Dim allowedMimeTypes As String() = commaSeparatedMimeTypes.Split(",")
            RadUpload1.AllowedMimeTypes = allowedMimeTypes
            </code>
            	<code lang="CS">
            // For example you can get these from your web.config file
            string commaSeparatedMimeTypes = "application/octet-stream,application/msword,video/mpeg";
             
            string[] allowedMimeTypes = commaSeparatedMimeTypes.Split(',');
            RadUpload1.AllowedMimeTypes = allowedMimeTypes;
                </code>
            </example>
            <seealso cref="P:Telerik.Web.UI.RadUpload.MaxFileSize">MaxFileSize Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.AllowedFileExtensions">AllowedFileExtensions Property</seealso>
            <seealso cref="E:Telerik.Web.UI.RadUpload.ValidatingFile">ValidatingFile Event</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.ControlObjectsVisibility">
            <summary>
            Gets or sets the value indicating which control objects will be displayed.
            </summary>
            <value>
            The default value is <strong>ControlObjectsVisibility.Default</strong>. You can
            set any combination of the enum values.
            </value>
            <remarks>
                ControlObjectVisibility enum members 
                <list type="table">
            		<listheader>
            			<term>Member</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term><strong>None</strong></term>
            			<description>Only the file inputs will be visible.</description>
            		</item>
            		<item>
            			<term><strong>CheckBoxes</strong></term>
            			<description>Display checkboxes for selecting a file input.</description>
            		</item>
            		<item>
            			<term><strong>RemoveButtons</strong></term>
            			<description>Display buttons for removing a file input.</description>
            		</item>
            		<item>
            			<term><strong>ClearButtons</strong></term>
            			<description>Display buttons for clearing a file input.</description>
            		</item>
            		<item>
            			<term><strong>AddButton</strong></term>
            			<description>Display button for adding a file input.</description>
            		</item>
            		<item>
            			<term><strong>DeleteSelectedButton</strong></term>
            			<description>Display button for removing the file inputs with checked
                        checkboxes.</description>
            		</item>
            		<item>
            			<term><strong>Default</strong></term>
            			<description>CheckBoxes | RemoveButtons | AddButton |
                        DeleteSelectedButton</description>
            		</item>
            		<item>
            			<term><strong>All</strong></term>
            			<description>CheckBoxes | RemoveButtons | ClearButtons | AddButton |
                        DeleteSelectedButton</description>
            		</item>
            	</list>
            </remarks>
            <example>
                This example demostrates how to display only the Add and Remove buttons on a
                RadUpload control. 
                <code lang="VB">
            RadUpload1.ControlObjectsVisibility = Telerik.WebControls.ControlObjectsVisibility.AddButton Or _
                                                  Telerik.WebControls.ControlObjectsVisibility.RemoveButtons
                </code>
            	<code lang="CS">
            RadUpload1.ControlObjectsVisibility = Telerik.WebControls.ControlObjectsVisibility.AddButton | 
                                                  Telerik.WebControls.ControlObjectsVisibility.RemoveButtons;
                </code>
            </example>
            <seealso cref="P:Telerik.Web.UI.RadUpload.MaxFileInputsCount">MaxFileInputsCount Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.InitialFileInputsCount">InitialFileInputsCount Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.ControlObjectsVisibility">ControlObjectsVisibility Enumeration</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.EnableFileInputSkinning">
            <summary>
            Gets or sets the value indicating whether the file input fields skinning will be enabled.
            </summary>
            <value>
            	<strong>true</strong> when the file input skinning is enabled; otherwise <strong>false</strong>.
            </value>
            <remarks>
            The &lt;input type=file&gt; DHTML elements are not skinnable by default. If the
            EnableFileInputSkinning is true some browsers can have strange behaviour.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.InitialFileInputsCount">
            <summary>
            Gets or sets the initial count of file input fields, which will appear in RadUpload.
            </summary>
            <value>
            The file inputs count which will be available at startup. The default value is
            <strong>1.</strong>
            </value>
            <seealso cref="P:Telerik.Web.UI.RadUpload.MaxFileInputsCount">MaxFileInputsCount Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.ControlObjectsVisibility">ControlObjectsVisibility Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.InvalidFiles">
            <summary>
            Provides access to the invalid files uploaded by the <strong>RadUpload</strong>
            instance. This is populated only if a validation was set.
            </summary>
            <value>
            If the internal validation is enabled this collection contains the invalid
            uploaded files for the particular instance of <strong>RadUpload</strong>
            control.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.Language">
            <summary>
            Gets or sets the localization language of the RadUpload user interface.
            </summary>
            <value>
            A string containing the localization language of the RadUpload user inteface. The
            default value is <strong>en-US</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.MaxFileInputsCount">
            <summary>
            Gets or sets the maximum file input fields that can be added to the control.
            </summary>
            <value>The default value is <strong>0</strong> (unlimited).</value>
            <remarks>
            Using this property you can limit the maximum number of file inputs which can be
            added to a RadUpload instance.
            </remarks>
            <seealso cref="P:Telerik.Web.UI.RadUpload.InitialFileInputsCount">InitialFileInputsCount Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.ControlObjectsVisibility">ControlObjectsVisibility Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.MaxFileSize">
            <summary>Gets or sets the maximum file size allowed for uploading in bytes.</summary>
            <value>The default value is <strong>0</strong> (unlimited).</value>
            <remarks>Set this property to 0 in order to prevent the file size checking.</remarks>
            <seealso cref="P:Telerik.Web.UI.RadUpload.AllowedMimeTypes">AllowedMimeTypes Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.AllowedFileExtensions">AllowedFileExtensions Property</seealso>
            <seealso cref="E:Telerik.Web.UI.RadUpload.ValidatingFile">ValidatingFile Event</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.OnClientAdding">
            <summary>
            Gets or sets the name of the client-side function which will be executed before 
            a new fileinput is added to a RadUpload instance.
            </summary>
            <value>The default value is <strong>string.Empty</strong>.</value>
            <example>
                This example demonstrates how to create a javascript function which is called every
                time when the used adds a new file input to the RadUpload instance. 
                <code lang="CS" title="[New Example]">
            &lt;radU:RadUpload OnClientAdding="myOnClientAdding" ... /&gt;
            ...
            &lt;script&gt;
            function myOnClientAdding()
            {
                alert("You just added a new file input.");
            }
            &lt;/script&gt;
                </code>
            	<code lang="VB" title="[New Example]">
            &lt;radU:RadUpload OnClientAdding="myOnClientAdding" ... /&gt;
            ...
            &lt;script&gt;
            function myOnClientAdding()
            {
                alert("You just added a new file input.");
            }
            &lt;/script&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.OnClientAdded">
            <summary>
            Gets or sets the name of the client-side function which will be executed after 
            a new fileinput is added to a RadUpload instance.
            </summary>
            <value>The default value is <strong>string.Empty</strong>.</value>
            <example>
                This example demonstrates how to create a javascript function which is called every
                time when the used adds a new file input to the RadUpload instance. 
                <code lang="CS" title="[New Example]">
            &lt;radU:RadUpload OnClientAdded="myOnClientAdded" ... /&gt;
            ...
            &lt;script&gt;
            function myOnClientAdded()
            {
                alert("You just added a new file input.");
            }
            &lt;/script&gt;
                </code>
            	<code lang="VB" title="[New Example]">
            &lt;radU:RadUpload OnClientAdded="myOnClientAdded" ... /&gt;
            ...
            &lt;script&gt;
            function myOnClientAdded()
            {
                alert("You just added a new file input.");
            }
            &lt;/script&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.OnClientDeleting">
            <summary>
            Gets or sets the name of the client-side function which will be executed before a file input is deleted
            from a RadUpload instance.
            </summary>
            <value>The default value is <strong>string.Empty</strong>.</value>
            <example>
                This example demonstrates how to implement a confirmation dialog when removing a
                file input item. 
                <code lang="CS">
            &lt;radU:RadUpload OnClientDeleting="myOnClientDeleting" ... /&gt;
            &lt;script language="javascript"&gt;
            function myOnClientDeleting()
            {
                return prompt("Are you sure?");
            }
            &lt;/script&gt;
                </code>
            	<code lang="VB">
            &lt;radU:RadUpload OnClientDeleting="myOnClientDeleting" ... /&gt;
            &lt;script language="javascript"&gt;
            function myOnClientDeleting()
            {
                Return prompt("Are you sure?");
            }
            &lt;/script&gt;
                </code>
            </example>
            <remarks>
            If you want to cancel the deleting of the file input return
            <strong>false</strong> in the javascript handler.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.OnClientClearing">
            <summary>
            Gets or sets the name of the client-side function which will be executed before a fileinput field is
            cleared in a RadUpload instance using the Clear button.
            </summary>
            <value>The default value is <strong>string.Empty</strong>.</value>
            <example>
                This example demonstrates how to create a client side confirmation dialog when
                clearing a file input item of a RadUpload instance. 
                <code lang="CS">
            &lt;radU:RadUpload OnClientClearing="myOnClientClearing" ... /&gt;
            ...
            &lt;script&gt;
            function myOnClientClearing()
            {
                return confirm("Are you sure you want to clear this input?");
            }
            &lt;/script&gt;
                </code>
            	<code lang="VB">
            &lt;radU:RadUpload OnClientClearing="myOnClientClearing" ... /&gt;
            ...
            &lt;script&gt;
            function myOnClientClearing()
            {
                Return confirm("Are you sure you want to clear this input?");
            }
            &lt;/script&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.OnClientFileSelected">
            <summary>
            Gets or sets the name of the client-side function which will be executed when a file input value changed.
            </summary>
            <value>The default value is <strong>string.Empty</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.OnClientDeletingSelected">
            <summary>
            Gets or sets the name of the client-side function which will be executed before the selected file inputs are removed.
            </summary>
            <value>The default value is <strong>string.Empty</strong>.</value>
            <example>
                This example demonstrates how to create a client side confirmation dialog when
                removing the selected file input items from a RadUpload control. 
                <code lang="VB">
            &lt;radU:RadUpload OnClientDeletingSelected="myOnClientDeletingSelected" ... /&gt;
             
            &lt;script&gt;
            function myOnClientDeletingSelected()
            {
                var mustCancel = confirm("Are you sure?");
                return mustCancel;
            }
            &lt;/script&gt;
                </code>
            	<code lang="CS">
            &lt;radU:RadUpload OnClientDeletingSelected="myOnClientDeletingSelected" ... /&gt;
             
            &lt;script&gt;
            function myOnClientDeletingSelected()
            {
                var mustCancel = confirm("Are you sure?");
                return mustCancel;
            }
            &lt;/script&gt;
                </code>
            </example>
            <remarks>
            You can cancel the removing of the file input items by returning
            <strong>false</strong> in the javascript function.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.OverwriteExistingFiles">
            <summary>
            Gets or sets the value indicating whether RadUpload should overwrite existing files having same name in the <see cref="P:Telerik.Web.UI.RadUpload.TargetFolder">TargetFolder</see>.
            </summary>
            <value>
            	<strong>true</strong> when the existing files should be overwritten; otherwise
            <strong>false</strong>. The default value is <strong>false</strong>.
            </value>
            <remarks>
            When set to <strong>true</strong>, the existing files are overwritten, else no
            action is taken.
            </remarks>
            <seealso cref="E:Telerik.Web.UI.RadUpload.FileExists">FileExists Event</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.TargetFolder">TargetFolder Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.TargetPhysicalFolder">TargetPhysicalFolder Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.ReadOnlyFileInputs">
            <summary>
            Gets or sets a value indicating if the file input fields should be read-only
            (e.g. no typing allowed).
            </summary>
            <value>
            	<strong>true</strong> when the file input fields should be read-only; otherwise
            <strong>false</strong>.
            </value>
            <remarks>
            When users type into the box and the filename is not valid, the form submission
            in Internet Explorer could not proceed or even display a javascript error. This
            behavior can be avoided by setting the ReadOnlyFileInputs property to true.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.TargetFolder">
            <summary>
            Gets or sets the virtual path of the folder, where RadUpload will automatically save the valid files after the upload completes.
            </summary>
            <value>
            A string containing the virtual path of the folder where RadUpload will automatically save the valid files
            after the upload completes. The default value is <strong>string.Empty</strong>.
            </value>
            <remarks>
            	<para>When set to <strong>string.Empty</strong>, the files must be saved manually to the desired location.</para>
            	<para>If both <see cref="P:Telerik.Web.UI.RadUpload.TargetPhysicalFolder">TargetPhysicalFolder</see> property and this property are set, the 
            	TargetPhysicalFolder will override the virtual path provided by TargetFolder.</para>
            </remarks>
            <seealso cref="P:Telerik.Web.UI.RadUpload.OverwriteExistingFiles">OverwriteExistingFiles Property</seealso>
            <seealso cref="E:Telerik.Web.UI.RadUpload.FileExists">FileExists Event</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.TargetPhysicalFolder">TargetPhysicalFolder Property</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.TargetPhysicalFolder">
            <summary>
            Gets or sets the physical path of the folder, where RadUpload will automatically save the valid files after the upload completes.
            </summary>
            <value>
            A string containing the physical path of the folder where RadUpload will automatically save the valid files
            after the upload completes. The default value is <strong>string.Empty</strong>.
            </value>
            <remarks>
            	<para>When set to <strong>string.Empty</strong>, the files must be saved manually to the desired location.</para>
            	<para>If both <see cref="P:Telerik.Web.UI.RadUpload.TargetFolder">TargetFolder</see> property and this property are set, the 
            	TargetPhysicalFolder will override the virtual path provided by <see cref="P:Telerik.Web.UI.RadUpload.TargetFolder">TargetFolder</see>.</para>
            </remarks>
            <seealso cref="P:Telerik.Web.UI.RadUpload.TargetFolder">TargetFolder Property</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.OverwriteExistingFiles">OverwriteExistingFiles Property</seealso>
            <seealso cref="E:Telerik.Web.UI.RadUpload.FileExists">FileExists Event</seealso>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.UploadedFiles">
            <summary>
            Provides access to the valid files uploaded by the <strong>RadUpload</strong>
            instance.
            </summary>
            <value>
            	<strong>UploadedFileCollection</strong> containing all valid files uploaded using
            a <strong>RadUpload</strong> control.
            </value>
            <remarks>
            The collection contains only the files uploaded with the particular instance of
            the RadUpload control. If the RadUploadHttpModule is used, the
            uploaded files are removed from the <strong>Request.Files</strong> collection in order
            to conserve the server's memory. Else the Request.Files contains all uploaded files as
            a HttpPostedFile collection and each <strong>RadUpload</strong> instance has its own
            uploaded files as <strong>UploadedFileCollection</strong>.
            </remarks>
            <example>
                This example demonstrates how to save the valid uploaded files with a
                RadUpload control. 
                <code lang="VB">
            For Each file As Telerik.WebControls.UploadedFile In RadUpload1.UploadedFiles
                file.SaveAs(Path.Combine("c:\my files\", file.GetName()), True)
            Next
                </code>
            	<code lang="CS">
            foreach (Telerik.WebControls.UploadedFile file in RadUpload1.UploadedFiles)
            {
                file.SaveAs(Path.Combine(@"c:\my files\", file.GetName()), true);
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.FocusOnLoad">
            <summary>Gets or sets the value indicating whether the first file input field of RadUpload should get
            the focus on itself on load.</summary>
            <value>
            	<strong>true</strong> when the first file input field of RadUpload should get
            the focus; otherwise <strong>false</strong>. The default value is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadUpload.IsUploadModuleRegistered">
            <summary>
            Gets a value indicating whether the RadUpload HttpModule is registered in the current web.application
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.UploadedFileCollection">
            <summary>Provides access to and organizes files uploaded by a client.</summary>
            <remarks>
            Clients encode files and transmit them in the content body using multipart MIME
            format with an HTTP <b>Content-Type</b> header of <b>multipart/form-data</b>. RadUpload
            extracts the encoded file(s) from the content body into individual members of an
            <b>UploadedFileCollection</b>. Methods and properties of the
            <strong>UploadedFile</strong> class provide access to the contents and properties of
            each file.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.UploadedFileCollection.Item(System.Int32)">
            <summary>
            	<para>Gets an individual <strong>UploadedFile</strong> object from the file
                collection.</para>
            	<para>In C#, this property is the indexer for the
                <strong>UploadedFileCollection</strong> class.</para>
            </summary>
            <value>The <strong>UploadedFile</strong> specified by <i>index.</i></value>
            <example>
                The following example retrieves the first file object (index = 0) from the
                collection sent by the client and retrieves the name of the actual file represented
                by the object. 
                <code lang="VB">
            Dim MyUploadedFile As UploadedFile = RadUpload1.UploadedFiles(0)
            Dim MyFileName As String = UploadedFile.FileName
                </code>
            	<code lang="CS">
            HttpPostedFile MyUploadedFile = RadUpload1.UploadedFiles[0];
            String MyFileName = MyUploadedFile.FileName;
                </code>
            </example>
            <seealso cref="T:Telerik.Web.UI.UploadedFile">UploadedFile Class</seealso>
            <param name="index">The index of the item to get from the file collection.</param>
        </member>
        <member name="T:Telerik.Web.UI.RadWindow">
            <summary>
            Telerik RadWindow
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.ClientCallBackFunction">
            <summary>
            Gets or sets the client callback function that will be called when a window
            dialog is being closed.
            </summary>
            
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.OffsetElementID">
            <summary>
            Gets or sets the id (ClientID if a runat=server is used) of a html element, whose
            left and top position will be used as 0,0 of the RadWindow object when it is first
            shown.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.MinimizeZoneID">
            <summary>
            Gets or sets the id (ClientID if a runat=server is used) of a html element where
            the windows will be "docked" when minimized.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.IconUrl">
            <summary>
            Gets or sets the url of the icon in the upper left corner of the
            RadWindow titlebar.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.MinimizeIconUrl">
            <summary>
            Gets or sets the url of the minimized icon of the
            RadWindow.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.Behaviors">
            <summary>
            Gets or sets a value indicating the behavior of this object - if can be resized, has expand/collapse commands, closed command, etc.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.InitialBehaviors">
            <summary>
            Gets or sets a value indicating the initial behavior of this object - most useful to specify an initially minimized, maximized or pinned window.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.Animation">
            <summary>
            Get/Set the animation effect of the window
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.Width">
            <summary>
            Get/Set the Width of the window
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.Height">
            <summary>
            Get/Set the Height of the window
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.Title">
            <summary>
            Get/Set a title for the window
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.Left">
            <summary>
            Gets or sets the horizontal distance from the browser origin, or from the top left corner of the OffsetElement
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.Top">
            <summary>
            Gets or sets the vertical distance from the browser origin, or from the top left corner of the OffsetElement
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.RestrictionZoneID">
            <summary>
            Gets or sets the id (ClientID if a runat=server is used) of a html element in which
            the windows will be able to move.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.DestroyOnClose">
            <summary>
            Gets or sets a value indicating whether the window will be disposed and made inaccessible once it is closed.
            If property is set to true, the next time a window with this ID is requested, a new window with default settings is created and returned.
            </summary>
            <value>The default value is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.ReloadOnShow">
            <summary>
            Gets or sets a value indicating whether the page that is loaded in the window should be loaded everytime from the server or 
            will leave the browser default behaviour.
            </summary>
            <value>The default value is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.ShowContentDuringLoad">
            <summary>
            Gets or sets a value indicating whether the page that is loaded
            in the window should be shown during the loading process, or when it has finished loading.
            </summary>
            <value>The default value is <strong>true</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.VisibleOnPageLoad">
            <summary>
            Gets or sets a value indicating whether the window will open automatically when its parent [aspx] page is loaded on the client.
            </summary>
            <value>The default value is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.VisibleTitlebar">
            <summary>Gets or sets a value indicating whether the window has a titlebar visible.</summary>
            <value>The default value is <strong>true</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.VisibleStatusbar">
            <summary>
            Gets or sets a value indicating whether the window has a visible status bar or
            not.
            </summary>
            <value>The default value is <strong>true</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.Modal">
            <summary>Gets or sets a value indicating whether a dialog is modal or not.</summary>
            <value>The default value is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.Overlay">
            <summary>Gets or sets a value indicating whether the window will create an overlay element.</summary>
            <value>The default value is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.KeepInScreenBounds">
            <summary>Gets or sets a value indicating whether the window will stay in the visible viewport of the browser window.</summary>
            <value>The default value is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.AutoSize">
            <summary>Gets or sets a value indicating whether the window will automatically resize itself acciording to its content page or not.</summary>
            <value>The default value is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.OnClientCommand">
            <summary>
            Gets or sets the client-side script that executes when a RadWindow command (Restore, Minimize, Maximize, Pin On, Pin Off, Reload is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.OnClientResize">
            <summary>
            Gets or sets the client-side script that executes when a RadWindow Resize event is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.OnClientDragStart">
            <summary>
            Gets or sets the client-side script that executes when a RadWindow DragStart event is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.OnClientDragEnd">
            <summary>
            Gets or sets the client-side script that executes when a RadWindow DragEnd event is raised
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.OnClientActivate">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadWindow</strong> control becomes the active visible window.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientActivate</strong>
            		<font color="black">client-side event handler is called when the <strong>RadWindow</strong>
                control becomes the active visible window </font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadWindow object.</item>
            		<item><strong>args</strong>.</item>
            	</list>        
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientActivate</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnWindowActivateHandler(sender, args)<br/>
                         {<br/>
                         var window = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadWindow ID="RadWindow1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientActivate="OnWindowActivateHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadWindow&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.OnClientShow">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called before
            the sliding is started.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientShow</strong>
            		<font color="black">client-side event handler is called after the window is shown
            </font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadWindow object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientShow</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClientShowHandler(sender, args)<br/>
                         {<br/>
                         var window = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadWindow ID="RadWindow1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientShow="OnClientShowHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadWindow&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.OnClientPageLoad">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called 
            when the page inside the RadWindow object completes loading.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientPageLoad</strong>
            		<font color="black">client-side event handler that is called 
            when the page inside the RadWindow object completes loading.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadWindow object.</item>
            		<item><strong>args</strong>.</item>
            	</list>        
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientPageLoad</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnPageLoadHandler(sender, args)<br/>
                         {<br/>
                         var window = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadWindow ID="RadWindow1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientPageLoad="OnPageLoadHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadWindow&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.OnClientClose">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called 
            when slide has ended.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientClose</strong>
            		<font color="black">client-side event handler that is called 
            after the window is hidden.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadWindow object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientClose</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnCloseHandler(sender, args)<br/>
                         {<br/>
                         var window = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadWindow ID="RadWindow1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientClose="OnCloseHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadWindow&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowBase.OnClientBeforeClose">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called 
            when the RadWindow is closing.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientClosing</strong>
            		<font color="black">client-side event handler that is called 
            just before the window is hidden.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadWindow object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event can be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientClosing</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnClosingHandler(sender, args)<br/>
                         {<br/>
                         var window = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radsld:RadWindow ID="RadWindow1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientClosing="OnClosingHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radsld:RadWindow&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadWindow.OpenerElementID">
            <summary>
            Get/Set the target control property of the tooltip
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindow.NavigateUrl">
            <summary>
            Specifies the URL that will originally be loaded in the
            RadWindow (can be changed on the client).
            </summary>
            <value>The default is <strong>Default</strong>.</value>		
        </member>
        <member name="P:Telerik.Web.UI.RadWindowManager.Windows">
            <summary>
            Gets a collection of RadWindow objects 
            </summary>
            <value>
            Gets a collection of RadWindow objects 
            </value>        
        </member>
        <member name="P:Telerik.Web.UI.RadWindowManager.PreserveClientState">
            <summary>
            Gets or sets a value indicating whether window objects' state (size, location, behavior) will be
            persisted in a client cookie to restore state over page postbacks.		
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowManager.AlertTemplate">
            <summary>
            This property allows to specify the HTML for the alert popup, which will override
            the alerttemplate defined in the
            <em>Skins/CURRENT_SKIN/Window/CoreTemplates.xml file</em>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowManager.ConfirmTemplate">
            <summary>
            This property allows to specify the HTML for the confirm popup, which will
            override the alerttemplate defined in the
            <em>Skins/CURRENT_SKIN/Window/CoreTemplates.xml file</em>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadWindowManager.PromptTemplate">
            <summary>
            This property allows to specify the HTML for the prompt popup, which will
            override the alerttemplate defined in the
            <em>Skins/CURRENT_SKIN/Window/CoreTemplates.xml file</em>.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.WindowBehaviors">
            <summary>
            Specifies the behaviors of the radWindow object
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.WindowBehaviors.None">
            <summary>
            No behavior is specified.
            </summary>
            <value>0</value>
        </member>
        <member name="F:Telerik.Web.UI.WindowBehaviors.Resize">
            <summary>
            The object can be resized.
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.WindowBehaviors.Minimize">
            <summary>
            The object can be minimized.
            </summary>
            <value>2</value>
        </member>
        <member name="F:Telerik.Web.UI.WindowBehaviors.Close">
            <summary>
            The object can be closed.
            </summary>
            <value>4</value>
        </member>
        <member name="F:Telerik.Web.UI.WindowBehaviors.Pin">
            <summary>
            The objct can be pinned.
            </summary>
            <value>8</value>
        </member>
        <member name="F:Telerik.Web.UI.WindowBehaviors.Maximize">
            <summary>
            The object can be maximized.
            </summary>
            <value>16</value>
        </member>
        <member name="F:Telerik.Web.UI.WindowBehaviors.Move">
            <summary>
            The object can be moved.
            </summary>
            <value>32</value>
        </member>
        <member name="F:Telerik.Web.UI.WindowBehaviors.Reload">
            <summary>
            The object will have a reload button.
            </summary>
            <value>64</value>
        </member>
        <member name="F:Telerik.Web.UI.WindowBehaviors.Default">
            <summary>
            Default object behavior: all together.
            </summary>
            <value>(Minimize | Maximize | Close | Pin | Resize | Move | Reload)</value>
        </member>
        <member name="T:Telerik.Web.UI.ChartClientScrollMode">
            <summary>
            PlotArea scrollable mode.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ChartClientScrollMode.XOnly">
            <summary>
            PlotArea will be scrollable by X axis.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ChartClientScrollMode.YOnly">
            <summary>
            PlotArea will be scrollable by Y axis.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ChartClientScrollMode.Both">
            <summary>
            PlotArea will be scrollable by both X and Y axis.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ChartClientScrollMode.None">
            <summary>
            PlotArea will not be scrollable.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ChartClientSettings">
            <summary>Chart client settings</summary>
        </member>
        <member name="M:Telerik.Web.UI.ChartClientSettings.ToString">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.ChartClientSettings.EnableAxisMarkers">
            <summary>
            Gets or sets a value indicating whether the zoom assist axis markers are enabled.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ChartClientSettings.AxisMarkersColor">
            <summary>
            Gets or sets a value indicating the color of the zoom assist axis markers.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ChartClientSettings.AxisMarkersSize">
            <summary>
            Gets or sets a value indicating the size of the axis markers in pixels (size for the YAxis marker represents its width, while size for the XAxis marker -- its height).
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ChartClientSettings.EnableZoom">
            <summary>
            Gets or sets a value indicating whether the client-side zoom functionality is enabled.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ChartClientSettings.ZoomRectangleColor">
            <summary>
            Gets or sets a value indicating the color of the zoom rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ChartClientSettings.ZoomRectangleOpacity">
            <summary>
            Gets or sets a value indicating the opacity of the zoom rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ChartClientSettings.ScrollMode">
            <summary>
            Gets or sets a value indicating the plotarea client scroll mode.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ChartClientSettings.YScrollOffset">
            <summary>
            Gets or sets a value indicating the YAxis scroll offset ratio.
            </summary>
            <value>
            YScrollOffset accepts values between 0 and 1.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.ChartClientSettings.XScrollOffset">
            <summary>
            Gets or sets a value indicating the XAxis scroll offset ratio.
            </summary>
            <value>
            XScrollOffset accepts values between 0 and 1.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.ChartClientSettings.YScale">
            <summary>
            Gets or sets a value indicating the plotarea scale value by Y axis.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ChartClientSettings.XScale">
            <summary>
            Gets or sets a value indicating the plotarea scale value by X axis.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ColorPickerItemCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.ColorPickerItem">ColorPickerItem</see> objects in a
                <see cref="T:Telerik.Web.UI.RadColorPicker">RadColorPicker</see> control.
            </summary>
            <remarks>
            	<para>The <strong>ColorPickerItemCollection</strong> class represents a collection of
                <strong>ColorPickerItem</strong> objects. The <strong>ColorPickerItem</strong> objects in turn represent 
                Colors items within a <strong>RadColorPicker</strong> control.</para>
            	<list type="bullet">
            		<item>
                        Use the <see cref="T:Telerik.Web.UI.ColorPickerItemCollection">indexer</see> to programmatically retrieve a
                        single ColorPickerItem from the collection, using array notation.
                    </item>
            		<item>
                        Use the <strong>Count</strong> property to determine the total
                        number of Items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.StronglyTypedStateManagedCollection`1.Add(`0)">Add</see> method to add Items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.StronglyTypedStateManagedCollection`1.Remove(`0)">Remove</see> method to remove Items from the
                        collection.
                    </item>
            	</list>
            </remarks>
            <moduleiscollection/>
        </member>
        <member name="T:Telerik.Web.UI.PaletteModes">
            <summary>
            Specifies the visible modes of the RadColorPicker's palette.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.PaletteModes.WebPalette">
            <summary>
            WebPalette
            </summary>
            <value>1</value>
        </member>
        <member name="F:Telerik.Web.UI.PaletteModes.RGBSliders">
            <summary>
            RGB RadSliders
            </summary>
            <value>2</value>
        </member>
        <member name="F:Telerik.Web.UI.PaletteModes.All">
            <summary>
            Default object behavior: all together.
            </summary>
            <value>(WebPalette | RGBSliders)</value>
        </member>
        <member name="M:Telerik.Web.UI.RadColorPicker.OnColorChanged(System.EventArgs)">
            <summary>
            Gets or sets a value indicating the server-side event handler that is called 
            when the value of the ColorPicker has been changed.
            </summary>
            <value>
            A string specifying the name of the server-side event handler that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnColorChanged</strong>
            		<font color="black">event handler that is called 
            when the value of the ColorPicker has been changed.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadColorPicker object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnColorChanged</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadColorPicker ID="RadColorPicker1"<br/>
                         runat= "server"<br/>
            			<strong>OnColorChanged="OnColorChanged"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadColorPicker&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadColorPicker.GetPalleteFromBaseColors(Telerik.Web.UI.ColorPickerItemCollection)">
            <summary>
            A helper to generate a MSOffice2007 like pallete
            </summary>
            <param name="baseColors"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.Items">
            <summary>
            Collection of the color picker items
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.Preset">
            <summary>
            Get/Set the preset colors of the color picker
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.SelectedColor">
            <summary>
            Get/Set the selected color of the ColorPicker
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.Columns">
            <summary>
            Get/Set the number of the columns in the palette
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.AutoPostBack">
            <summary>
            True to cause a postback on value change.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.ShowEmptyColor">
            <summary>
            True to show the None color selection
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.ShowIcon">
            <summary>
            True to show the color picker as an icon, which when clicked opens the palette
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.PreviewColor">
            <summary>
            True to preview the color which has been selected
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.PickColorText">
            <summary>
            Gets or sets the tooltip of the icon
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.CurrentColorText">
            <summary>
            Gets or sets the text in the icon
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.NoColorText">
            <summary>
            Gets or sets the text for the no color box
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.Enabled">
            <summary>
            True to enable the ColorPicker,False to disable
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.PaletteModes">
            <summary>
            Gets or sets a value indicating the behavior of this object - if can be resized, has expand/collapse commands, closed command, etc.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.Overlay">
            <summary>Gets or sets a value indicating whether the colorpicker will create an overlay element.</summary>
            <value>The default value is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.OnClientLoaded">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the <strong>RadColorPicker</strong> control is initialized.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientLoaded</strong>
            		<font color="black">client-side event handler is called when the <strong>RadColorPicker</strong>
                is initialized.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadColorPicker object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientLoaded</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnColorPickerLoadHandler(sender, args)<br/>
                         {<br/>
                         var ColorPicker = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadColorPicker ID="RadColorPicker1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientLoaded="OnColorPickerLoadHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadColorPicker&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.OnClientColorSelecting">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when a user has selected a color, but still not changed the value.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientColorSelecting</strong>
            		<font color="black">client-side event handler is called when a color is selected
            but still not changed.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadColorPicker object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientColorSelecting</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnColorSelectingHandler(sender, args)<br/>
                         {<br/>
                         var ColorPicker = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadColorPicker ID="RadColorPicker1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientColorSelecting="OnColorSelectingHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadColorPicker&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadColorPicker.OnClientColorChange">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called 
            while the value of the color picker has been changed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientColorChange</strong>
            		<font color="black">client-side event handler that is called 
            when the value of the color picker has been changed.</font> Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the RadColorPicker object.</item>
            		<item><strong>args</strong>.</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientColorChange</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                         function OnColorChangeHandler(sender, args)<br/>
                         {<br/>
                         var ColorPicker = sender;<br/>
                         }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;telerik:RadColorPicker ID="RadColorPicker1"<br/>
                         runat= "server"<br/>
            			<strong>OnClientColorChange="OnColorChangeHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/telerik:RadColorPicker&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.ComboBoxAnimationSettings">
            <summary>
            Represents the animation settings like type and duration for the <see cref="T:Telerik.Web.UI.RadComboBox"/> control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.AnimationSettings">
            <summary>
            Represents the animation settings like type and duration.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.AnimationSettings.#ctor(System.String,System.Web.UI.StateBag)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.AnimationSettings.Type">
            <summary><para>Gets or sets the effect that will be used for the animation.</para></summary>
            <value>
                On of the <see cref="T:Telerik.Web.UI.AnimationType">AnimationType</see> values. The default value
                is <strong>OutQuart</strong>.
            </value>
            <remarks>
            Use the <strong>Type</strong> property of the <strong>AnimationSettings</strong>
            class to customize the effect used for the animation. To turn off animation effects set
            this property to <strong>None</strong>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.AnimationSettings.Duration">
            <summary>Gets or sets the duration in milliseconds of the animation.</summary>
            <value>An integer representing the duration in milliseconds of the animation.</value>
        </member>
        <member name="P:Telerik.Web.UI.ComboBoxAnimationSettings.Duration">
            <summary>Gets or sets the duration in milliseconds of the animation.</summary>
            <value>
            	An integer representing the duration in milliseconds of the animation. 
            	The default value is 450 milliseconds.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.RadComboBoxFilter">
            <summary>
            The Telerik.Web.UI.RadComboBoxFilter enumeration supports three values - None, Contains, StartsWith. Default is None.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadComboBoxSort">
            <summary>
            The Telerik.Web.UI.RadComboBoxSort enumeration supports three values - None, Ascending, Descending. Default is None.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.RadComboBoxSort.None">
            <summary>
            Items are not sorted at all.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.RadComboBoxSort.Ascending">
            <summary>
            Items are sorted in ascending order (min to max)
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.RadComboBoxSort.Descending">
            <summary>
            Items are sorted in descending order (max to min)
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ControlItemData">
            <summary>
            	Data class used for transferring control items (menu items, tree nodes, etc.)
            	from and to web services.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ControlItemData.#ctor">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.ControlItemData.Text">
            <summary>
            Text for the item to pass to the client.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ControlItemData.Value">
            <summary>
            Value for the item to pass to the client.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ControlItemData.Enabled">
            <summary>
            A value indicating if the item to pass to the client is enabled.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ControlItemData.Attributes">
            <summary>
            Custom attributes for the item to pass to the client.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadCompression.IsHttpCompressionEnabled">
            <summary>
            Gets value indicating if the HTTP compression is activated
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadCompression.GetConfigurationSection">
            <summary>
            Retrieves <see cref="T:Telerik.Web.UI.RadCompression"/>'s configuration section from the webconfig 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadCompression.ShouldApplyOnPostback">
            <summary>
            Gets value indicating if the compression filter should be applied on full page postbacks
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Web.UI.RadCompression.IsStateCompressionEnabled">
            <summary>
            Gets value indicating if the <c>ViewState</c> compression is activated
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.LayoutBuilderEngine">
            <summary>
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ClientPersistedPropertyAttribute">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.FileExplorer.FileExplorerControls">
            <summary>
            This enumeration lists the available controls in the file explorer and allows customizing the look of the control.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.FileExplorer.FileExplorerControls.TreeView">
            <summary>
            A treeview, which shows the folders in the file explorer.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.FileExplorer.FileExplorerControls.Grid">
            <summary>
            A grid, which shows the files/folders in the current file explorer folder
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.FileExplorer.FileExplorerControls.Toolbar">
            <summary>
            A toolbar, which provides shortcuts for the file explorer commands (delete, new folder, back, forward, etc.)
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.FileExplorer.FileExplorerControls.AddressBox">
            <summary>
            A textbox, which shows the current selected path in the file explorer
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.FileExplorer.FileExplorerControls.ContextMenus">
            <summary>
            The grid and treeview context menus, which are shown when the user right clicks inside the controls.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.FileExplorer.FileExplorerControls.All">
            <summary>
            The default value for the RadFileExplorer control - all controls are shown
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadFileExplorer">
            <summary>
            Telerik File Explorer control
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadFileExplorer.OnItemCommand(Telerik.Web.UI.RadFileExplorerEventArgs)">
            <summary>
            Fired when on all file explorer file and folder operations.
            </summary>
            <param name="e">an instance of the RadFileExplorerEventArgs event argument.</param>
            <returns>False to cancel the command, True to continue</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadFileExplorer.grid_NeedDataSource(System.Object,Telerik.Web.UI.GridNeedDataSourceEventArgs)">
            <summary>
            The method is called, when perform initial data binding on the grid
            </summary>
            <param name="source">the grid instance</param>
            <param name="e">event arguments</param>
        </member>
        <member name="M:Telerik.Web.UI.RadFileExplorer.RadTreeView1_NodeExpand(System.Object,Telerik.Web.UI.RadTreeNodeEventArgs)">
            <summary>
            Implemented using ASP.NET 2.0 Callback functionality built into RadTreeView
            </summary>
            <param name="sender">the tree instance</param>
            <param name="e">event arguments</param>
        </member>
        <member name="M:Telerik.Web.UI.RadFileExplorer.TreeRadAjaxPanel_OnAjaxRequest(System.Object,Telerik.Web.UI.AjaxRequestEventArgs)">
            <summary>
            Handle Creating NewFolder, Delete, and Load folder
            </summary>
            <param name="sender">ajax panel instance</param>
            <param name="args">ajax request arguments</param>
        </member>
        <member name="M:Telerik.Web.UI.RadFileExplorer.RadTreeView1_NodeEdit(System.Object,Telerik.Web.UI.RadTreeNodeEditEventArgs)">
            <summary>
            Handle Renaming of folders
            </summary>
            <param name="sender">tree instance</param>
            <param name="e">rename event arguments</param>
        </member>
        <member name="M:Telerik.Web.UI.RadFileExplorer.PopulateTreeNode(Telerik.Web.UI.RadTreeNode)">
            <summary>
            This method is used in the RadTreeView1_NodeExpand handler, in the TreeUpdatePanel_AjaxRequest method, when a folder is created
            and in the TreeUpdatePanel_AjaxRequest method, in order to reach a node in the tree
            </summary>
            <param name="currNode">The node to be populated</param>
        </member>
        <member name="M:Telerik.Web.UI.RadFileExplorer.RenameTreeNode(Telerik.Web.UI.RadTreeNode,System.String)">
            <summary>
            This method is used in OnNodeEdit hendler and in RenameGridItem method to handle renaming the folder
            and node in tree
            </summary>
            <returns>the virtual path of the new node</returns>
            <param name="node">node to rename</param>
            <param name="newName">new name</param>
        </member>
        <member name="M:Telerik.Web.UI.RadFileExplorer.CreateFolder(System.String,System.String)">
            <summary>
            Create folder when perform this action in tree or in grid
            </summary>
            <param name="currNodeValue">parent folder path</param>
            <param name="newDirName">new folder name</param>
        </member>
        <member name="M:Telerik.Web.UI.RadFileExplorer.DeleteItems(System.String[])">
            <summary>
            delete folder/file(s) from the grid or tree
            </summary>
            <param name="arguments">a list of virtual paths to the item being deleted</param>
        </member>
        <member name="M:Telerik.Web.UI.RadFileExplorer.GetFileGridData(System.String,System.String)">
            <summary>
            Get the Grid data for the current selected folder in the file explorer tree
            </summary>
            <param name="path">path to current selected folder</param>
            <param name="sortExpression">sort argument (column and direction)</param>
            <returns>a list of files and folders in the selected path</returns>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.EnableCreateNewFolder">
            <summary>
            Gets or sets a value indicating whether to allow creating new folders
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.EnableOpenFile">
            <summary>
            Gets or sets a value indicating whether to allow opening a new window with the file
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.Width">
             <summary>
             Gets or sets the width of the Web server control.
             </summary>
             <value>
              A System.Web.UI.WebControls.Unit that represents the width of the control.
              The default is System.Web.UI.WebControls.Unit.Empty.
            </value>
             <exception cref="T:System.ArgumentException">The width of the Web server control was set to a negative value.</exception>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.TreePaneWidth">
             <summary>
             Gets or sets the width of the file explorer's tree pane
             </summary>
             <value>
              A System.Web.UI.WebControls.Unit that represents the width of the control.
              The default is 222 pixels.
            </value>
             <exception cref="T:System.ArgumentException">The width of the Web server control was set to a negative value.</exception>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.Height">
             <summary>
             Gets or sets the height of the Web server control.
             </summary>
             <value>
              A System.Web.UI.WebControls.Unit that represents the height of the control.
              The default is System.Web.UI.WebControls.Unit.Empty.
            </value>
             <exception cref="T:System.ArgumentException">The height of the Web server control was set to a negative value.</exception>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.ToolBar">
            <summary>
            Gets a reference to the toolbar, which shows on the top of the file explorer control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.Grid">
            <summary>
            Gets a reference to the grid, which shows on the right of the file explorer control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.TreeView">
            <summary>
            Gets a reference to the tree, which shows on the left of the file explorer control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.GridContextMenu">
            <summary>
            Gets a reference to the context menu, which shows when the user right-clicks the grid control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.Upload">
            <summary>
            Gets a reference to the upload component, which shows inside a popup window when the user wants to upload files.
            <remarks>If you want to set the allowed file types or max upload file size, please use the Configuration property</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.WindowManager">
            <summary>
            Gets a reference to the window component, which shows the upload popup and the alert/confirmation dialogs.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.AccessKey">
            <summary>
            Specifies an access key to enable keyboard navigation for the File Explorer control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.Language">
            <summary>
            Gets or sets a string containing the localization language for the RadEditor UI
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.LocalizationPath">
            <summary>
            Gets or sets a value indicating where the control will look for its .resx localization files.
            By default these files should be in the App_GlobalResources folder. However, if you cannot put
            the resource files in the default location or .resx files compilation is disabled for some reason 
            (e.g. in a DotNetNuke environment), this property should be set to the location of the resource files.
            </summary>
            <value>
            A relative path to the dialogs location. For example: "~/controls/RadEditorResources/".
            </value>
            <remarks>
            	<para>If specified, the <strong>LocalizationPath</strong>
            property will allow you to load the control localization files from any location in the 
            web application.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.Skin">
            <summary>
            Specifies the skin that will be used by the control
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.Configuration">
            <summary>
            Contains the FileExplorer configuration (paths, content provider type, etc.).
            </summary>
            <value>
            An <see cref="T:Telerik.Web.UI.FileManagerDialogConfiguration">FileManagerDialogConfiguration</see>
            instance, containing the configuration of the control
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.InitialPath">
            <summary>
            Gets or sets the initial path that will be shown in the file explorer control. 
            </summary>
            <remarks>
            If this property is not set, the file explorer will use the first path in the ViewPaths as the initial one.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.DisplayUpFolderItem">
            <summary>
            Gets or sets a value indicating whether to show the up one folder (..) item in the grid if available.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.CurrentFolder">
            <summary>
            Returns the currently selected node in the tree. This property is useful during postbacks.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.OnClientItemSelected">
            <summary>
            The name of the javascript function called when the user selects an item in the explorer.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.OnClientFolderLoaded">
            <summary>
            The name of the javascript function called when a folder is loaded in the grid.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.OnClientFileOpen">
            <summary>
            The name of the javascript function called when an item is double clicked in the grid.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.OnClientFolderChange">
            <summary>
            The name of the javascript function called when the the selected folder in the tree changes.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.OnClientLoad">
            <summary>
            The name of the javascript function called when the control loads in the browser.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.OnClientCreateNewFolder">
            <summary>
            The name of the javascript function called when the user tries to create a new folder.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.OnClientDelete">
            <summary>
            The name of the javascript function called when the user tries to delete a file.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorer.OnClientMove">
            <summary>
            The name of the javascript function called when the user tries to rename/move a file or folder.
            </summary>
        </member>
        <member name="E:Telerik.Web.UI.RadFileExplorer.ItemCommand">
            <summary>
            This event is fired when on all file and folder operations of the file explorer. If you wish to cancel the command
            simply return False from your event handler.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorerEventArgs.Path">
            <summary>
            Gets the virtual path for the current item command
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorerEventArgs.NewPath">
            <summary>
            Gets the second virtual path for the current item command (for rename, move, etc. commands)
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorerEventArgs.Command">
            <summary>
            Gets the virtual command name
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFileExplorerEventArgs.Cancel">
            <summary>
            Set this argument to true if you wish to cancel the file explorer command
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorSplitButton">
            <summary>
            Represents a EditorDropDown tool that renders as a custom dropdown in the editor
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorDropDown">
            <summary>
            Represents a EditorDropDown tool that renders as a custom dropdown in the editor
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.EditorDropDown.LoadViewState(System.Object)">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorDropDown.SaveViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorDropDown.TrackViewState">
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.EditorDropDown.SetDirty">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.EditorDropDown.Items">
            <summary>
            Gets the collection of EditorTool objects, inside the tool strip.
            </summary>
            <value>The tools.</value>
        </member>
        <member name="T:Telerik.Web.UI.GridClientDataBinding">
            <summary>
            Provides properties related to setting the client-side data-binding in
            Telerik RadGrid.
            </summary>
            <remarks>
                You can get a reference to this class using
                <see cref="P:Telerik.Web.UI.GridClientSettings.DataBinding"/> property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.DataService">
            <summary>
                Gets a reference to <see cref="T:Telerik.Web.UI.GridClientDataService"/> class providing properties
                related to client-side ADO.NET DataService data-binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.Location">
            <summary>
            Gets or sets url for the WebService or Page which will be requested to get data.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.SelectMethod">
            <summary>
            Gets or sets method name in the WebService or Page which will be requested to get data.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.SelectCountMethod">
            <summary>
            Gets or sets method name in the WebService or Page which will be requested to get total records count.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.MaximumRowsParameterName">
            <summary>
            Gets or sets maximum rows parameter name for the SelectMethod in the WebService or Page which will be requested to get data.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.StartRowIndexParameterName">
            <summary>
            Gets or set start row index parameter name for the SelectMethod in the WebService or Page which will be requested to get data.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.SortParameterName">
            <summary>
            Gets or set sort parameter name for the SelectMethod in the WebService or Page which will be requested to get data.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.FilterParameterName">
            <summary>
            Gets or set filter parameter name for the SelectMethod in the WebService or Page which will be requested to get data.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.FilterParameterType">
            <summary>
            Gets or set filter parameter type for the SelectMethod in the WebService or Page which will be requested to get data. Default value is List.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.SortParameterType">
            <summary>
            Gets or set sort parameter type for the SelectMethod in the WebService or Page which will be requested to get data. Default value is List.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.EnableCaching">
            <summary>
            Gets or set a value indicating whether the client-side caching should be enabled or not.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.DataPropertyName">
            <summary>
            Gets or set data property name for the SelectMethod in the WebService or Page which will be requested to get data and count. Default is "Data"!
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataBinding.CountPropertyName">
            <summary>
            Gets or set data property total records count for the SelectMethod in the WebService or Page which will be requested to get data and count. Default is "Count"!
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridClientDataService.TableName">
            <summary>
            Gets or set table name for the specified ADO.NET DataService. Default is empty string!
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.TargetControls">
            <summary>
            Gets a collection of <strong>TargetInput</strong> objects that allows for
            specifying the objects for which input will be created on the client-side.
            </summary>
            <remarks>
            Use the <strong>TargetControls</strong> collection to programmatically control
            which objects should be inputtipified on the client-side.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.ClientEvents">
            <summary>
            Gets or sets an instance of the <strong>InputManagerClientEvents</strong> class
            which defines the JavaScript functions (client-side event handlers) that are invoked
            when specific client-side events are raised.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.Validation">
            <summary>
            Gets an instance of the <strong>InputSettingValidation</strong> class
            which defines the validation behavior.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.EnabledCssClass">
            <summary>Gets or sets the css style for enabled TextBox control.</summary>
            <value>
            A string object that represents the css style properties for enabled TextBox
            control. The default value is an empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.BehaviorID">
            <summary>Gets or sets a value to access the client-side behavior.</summary>
            <remarks>
            	<span><span>In cases where you would like to access the client-side behavior for
            your setting from script code in the client, you can set this BehaviorID to simplify
            the process. See example below:</span></span>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.HoveredCssClass">
            <summary>Gets or sets the css style for hovered TextBox control.</summary>
            <value>
            A string object that represents the css style properties for hovered TextBox
            control. The default value is an empty string object.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.InvalidCssClass">
            <summary>Gets or stes the css style for invalid state of TextBox control.</summary>
            <value>
            A string object that represents the style properties for invalid TextBox control.
            The default value is an empty string object.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.FocusedCssClass">
            <summary>Gets or sets the css style for invalid state of TextBox control.</summary>
            <value>
            A string object that represents the css style for invalid TextBox control. The
            default value is an empty string object.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.ReadOnlyCssClass">
            <summary>Gets or sets the css style for Read Only state of TextBox control.</summary>
            <value>
            A string object that represents the css style for Read Only TextBox control. The
            default value is an empty string object.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.DisabledCssClass">
            <summary>Gets or sets the css style for TextBox when when the control is disabled.</summary>
            <value>
            A string object that represents the css style for TextBox control. The default
            value is an empty string object.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.EmptyMessageCssClass">
            <summary>Gets or sets the css style for TextBox when when the control is empty.</summary>
            <value>
            A string object that represents the css style for TextBox control. The default
            value is an empty string object.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.InputSetting.EmptyMessage">
            <summary>Gets or sets a value message shown when the control is empty.</summary>
            <value>
            A string specifying the empty message. The default value is empty string.
            ("").
            </value>
            <remarks>
            Shown when the control is empty and loses focus. You can set the empty message
            text through EmptyMessage property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.DateInputSetting.Culture">
            <summary>
            Gets or sets the culture used by <strong>RadDateSetting</strong> to format the
            date.
            </summary>
            <value>
            A <a onclick="javascript:navigateToHelp2Keyword('frlrfSystemGlobalizationCultureInfoClassTopic','System.Globalization.CultureInfo')" href="http://www.telerik.com/help/aspnet-ajax/telerik.web.ui-telerik.web.ui.raddateinput-culture.html#">
            CultureInfo</a> object that represents the current culture used. The default value is
            <strong>System.Threading.Thread.CurrentThread.CurrentUICulture</strong>.
            </value>
            <example>
            	<para></para>
            	<para></para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.DateInputSetting.MinDate">
            <summary>
            Gets or sets the smallest date value allowed by
            <strong>RadDateSetting</strong>.
            </summary>
            <value>
            A <a onclick="javascript:navigateToHelp2Keyword('frlrfSystemDateTimeClassTopic','System.DateTime')" href="http://www.telerik.com/help/aspnet-ajax/telerik.web.ui-telerik.web.ui.raddateinput-mindate.html#">
            DateTime</a> object that represents the smallest date value by
            <strong>RadDateSetting</strong>. The default value is 1/1/1980.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.DateInputSetting.MaxDate">
            <summary>
            Gets or sets the largest date value allowed by
            <strong>RadDateSetting</strong>.
            </summary>
            <value>
            A <a onclick="javascript:navigateToHelp2Keyword('frlrfSystemDateTimeClassTopic','System.DateTime')" href="http://www.telerik.com/help/aspnet-ajax/telerik.web.ui-telerik.web.ui.raddateinput-maxdate.html#">
            DateTime</a> object that represents the largest date value allowed by
            <strong>RadDateSetting</strong>. The default value is <em>12/31/2099</em>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.DateInputSetting.DateFormat">
            <summary>
            Gets or sets the date and time format used by
            <strong>RadDateSetting</strong>.
            </summary>
            <value>
            A string specifying the date format used by <strong>RadDateSetting</strong>. The
            default value is "d" (short date format).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.DateInputSetting.DisplayDateFormat">
            <summary>
            Gets or sets the display date format used by
            <strong>RadDateSetting</strong>.(Visible when the control is not on focus.)
            </summary>
            <value>
            A string specifying the display date format used by
            <strong>RadDateSetting</strong>. The default value is "d" (short date format). If the
            <strong>DisplayDateFormat</strong> is left blank, the <strong>DateFormat</strong> will
            be used both for editing and display.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.DateInputSetting.ShortYearCenturyEnd">
            <summary>
            Gets or sets a value that indicates the end of the century that is used to
            interpret the year value when a short year (single-digit or two-digit year) is entered
            in the input.
            </summary>
            <value>The year when the century ends. Default is 2029.</value>
        </member>
        <member name="T:Telerik.Web.UI.RadControl">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadControl.RegisterScriptControl">
            <summary>
            Registers the control with the ScriptManager
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadControl.RegisterCssReferences">
            <summary>
            Registers the CSS references
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadControl.LoadClientState(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Loads the client state data
            </summary>
            <param name="clientState"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadControl.SaveClientState">
            <summary>
            Saves the client state data
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Web.UI.RadControl.Skin">
            <summary>Gets or sets the skin name for the control user interface.</summary>
            <value>A string containing the skin name for the control user interface. The default is string.Empty.</value>
            <remarks>
            <para>
            If this property is not set, the control will render using the skin named "Default".
            If EnableEmbeddedSkins is set to false, the control will not render skin.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadControl.IsSkinSet">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadControl.EnableEmbeddedScripts">
            <summary>
            Gets or sets the value, indicating whether to render script references to the embedded scripts or not.
            </summary>
            <remarks>
            <para>
            If EnableEmbeddedScripts is set to false you will have to register the needed Scripts files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadControl.EnableEmbeddedSkins">
            <summary>Gets or sets the value, indicating whether to render links to the embedded skins or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedSkins is set to false you will have to register the needed CSS files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadControl.EnableEmbeddedBaseStylesheet">
            <summary>Gets or sets the value, indicating whether to render the link to the embedded base stylesheet of the control or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedBaseStylesheet is set to false you will have to register the needed control base CSS file by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadControl.RuntimeSkin">
            <summary>
            Gets the real skin name for the control user interface. If Skin is not set, returns
            "Default", otherwise returns Skin.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadControl.EnableAjaxSkinRendering">
            <summary>Gets or sets the value, indicating whether to render the skin CSS files during Ajax requests</summary>
            <remarks>
            <para>
            If EnableAjaxSkinRendering is set to false you will have to register the needed control base CSS file by hand when adding/showing the control with Ajax.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadControl.CssClassFormatString">
            <summary>
            The CssClass property will now be used instead of the former Skin 
            and will be modified in AddAttributesToRender()
            </summary>
            <example>
            protected override string CssClassFormatString
            {
            	get
            	{
            		return "RadDock RadDock_{0} rdWTitle rdWFooter";
            	}
            }
            </example>
        </member>
        <member name="P:Telerik.Web.UI.InputSettingValidation.Location">
            <summary>
            Gets or sets url for the WebService or Page which will be requested to validate data.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.InputSettingValidation.Method">
            <summary>
            Gets or sets method name in the WebService or Page which will be requested to validate data.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadInputManager.InputSettings">
            <summary>
            Gets a collection of InputSetting objects that allows for specifying the objects
            for which input elements will be created on the client-side.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadInputManager.Enabled">
            <summary>Gets or sets a value indicating whether manager should be enabled or not.</summary>
        </member>
        <member name="P:Telerik.Web.UI.NumericTextBoxSetting.DecimalSeparator">
            <summary>Gets or sets the string to use as the decimal separator in values.</summary>
            <value>The string to use as the decimal separator in values.</value>
            <exception cref="!:" caption="ArgumentException">The property is being set to an empty string.</exception>
            <exception cref="!:" caption="ArgumentNullException">The property is being set to null. </exception>
        </member>
        <member name="P:Telerik.Web.UI.NumericTextBoxSetting.DecimalDigits">
            <summary>Gets or sets the number of decimal places to use in numeric values</summary>
            <value>The number of decimal places to use in values.</value>
            <permission cref="!:" caption="ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 99. </permission>
        </member>
        <member name="P:Telerik.Web.UI.NumericTextBoxSetting.GroupSizes">
            <summary>
            Gets or sets the number of digits in each group to the left of the decimal in
            values.
            </summary>
            <value>The number of digits in each group to the left of the decimal in values.</value>
            <exception cref="!:" caption="ArgumentNullException">The property is being set to null. </exception>
        </member>
        <member name="P:Telerik.Web.UI.NumericTextBoxSetting.GroupSeparator">
            <summary>
            Gets or sets the string that separates groups of digits to the left of the
            decimal in values.
            </summary>
            <value>
            The string that separates groups of digits to the left of the decimal in
            values.
            </value>
            <exception cref="!:" caption="ArgumentNullException">The property is being set to null. </exception>
        </member>
        <member name="P:Telerik.Web.UI.NumericTextBoxSetting.NegativePattern">
            <summary>Gets or sets the format pattern for negative values.</summary>
            <value>The format pattern for negative percent values.</value>
            <exception cref="!:" caption="ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 11. </exception>
        </member>
        <member name="P:Telerik.Web.UI.NumericTextBoxSetting.PositivePattern">
            <summary>Gets or sets the format pattern for positive values.</summary>
            <value>The format pattern for positive percent values. The</value>
            <exception cref="!:" caption="ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 3. </exception>
        </member>
        <member name="P:Telerik.Web.UI.NumericTextBoxSetting.Culture">
            <summary>
            Gets or sets the culture used by <strong>NumericTextBoxSetting</strong> to format
            the numburs.
            </summary>
            <value>
            A <strong>CultureInfo</strong> object that represents the current culture used.
            The default value is System.Threading.Thread.CurrentThread.CurrentUICulture.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.NumericTextBoxSetting.MaxValue">
            <summary>
            Gets or sets the largest possible value of a
            <strong>NumericTextBoxSetting</strong>.
            </summary>
            <value>The default value is positive 2^46.</value>
        </member>
        <member name="T:Telerik.Web.UI.MenuAnimationSettings">
            <summary>
            Represents the animation settings like type and duration for the <see cref="T:Telerik.Web.UI.RadMenu"/> control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.MenuAnimationSettings.Duration">
            <summary>Gets or sets the duration in milliseconds of the animation.</summary>
            <value>
            	An integer representing the duration in milliseconds of the animation. 
            	The default value is 450 milliseconds.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.PanelBarAnimationSettings">
            <summary>
            Represents the animation settings like type and duration for the <see cref="T:Telerik.Web.UI.RadPanelBar"/> control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.PanelBarAnimationSettings.Duration">
            <summary>Gets or sets the duration in milliseconds of the animation.</summary>
            <value>
            	An integer representing the duration in milliseconds of the animation. 
            	The default value is 450 milliseconds
            </value>
        </member>
        <member name="T:Telerik.Web.UI.RadTicker">
            <summary>
            RadTicker control
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTicker.BindToEnumerableData(System.Collections.IEnumerable)">
            <summary>
            Binds the ticker to a IEnumerable data source
            </summary>
            <param name="dataSource">IEnumerable data source</param>
        </member>
        <member name="P:Telerik.Web.UI.RadTicker.Items">
            <summary>
            The collection that holds all RadTickerItem objects.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTicker.AutoStart">
            <summary>
            Specifies whether the ticker begins ticking automatically.
            </summary>
            <remarks>
            You should leave this set to <b>false</b> if you are using the ticker within a RadTicker
            If you use the ticker independently and leave this setting to <b>false</b> you should use the
            client API call <b>ticker_id.startTicker()</b> to start it.
            </remarks>
            <value>
            Default: <b>False</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTicker.AutoAdvance">
            <summary>
            Specifies whether <see cref="T:Telerik.Web.UI.RadTicker"/> will begin ticking the next tickerline 
            (if any) after it has finished ticking the current one.
            </summary>
            <remarks>
            If you set the <b>AutoAdvance</b> property to <b>false</b>, then you will have to use 
            a client API Call <b>ticker_id.tickNextLine()</b>
            </remarks>
            <value>
            Default: <b>True</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTicker.Loop">
            <summary>
            Specifies whether <see cref="T:Telerik.Web.UI.RadTicker"/> will repeat the first tickerline after displaying the last one.
            </summary>
            <remarks>
            If you set this property to <b>true</b> RadTicker will never finish ticking.
            This may have possible implications when having more than one <see cref="T:Telerik.Web.UI.RadTicker"/> instance in
            a <see cref="T:Telerik.Web.UI.RadRotator"/>. This way <see cref="T:Telerik.Web.UI.RadRotator"/> works is that when the first ticker
            on a frame has finished ticking it will start ticking the next ticker on the frame. If a <see cref="T:Telerik.Web.UI.RadTicker"/>
            instance is ticking (has Loop=true) it will never finish and the next ticker on the frame will not get started.
            </remarks>
            <value>
            Default: <b>False</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTicker.TickSpeed">
            <summary>
            Specifies the duration in milliseconds between ticking each character of a tickerline.
            The lower the value the faster a line will finish ticking.
            </summary>
            <value>
            Default: <b>20ms</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTicker.LineDuration">
            <summary>
            Specifies in milliseconds the pause <see cref="T:Telerik.Web.UI.RadTicker"/> makes before starting to tick
            the next line (if AutoAdvance=True).
            </summary>
            <value>
            Default: <b>2000ms</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTicker.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether a postback to the server automatically occurs when the user interacts with the control.
            </summary>
            <remarks>
            Setting this property to true will make Telerik RadTicker postback to the server on item click.
            </remarks>
            <value>
            The default value is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTicker.DataTextField">
            <summary>
            	Gets or sets the field of the data source that provides the value of the ticker lines.
            </summary>
            <value>
            	A string that specifies the field of the data source that provides the value of the ticker lines.
            	The default value is an empty string.
            </value>
            <remarks>
            	Use the DataTextField property to specify the field of the data source (in most cases the name of the database column) 
            	which provides the values for the <see cref="P:Telerik.Web.UI.RadTickerItem.Text">Text</see> property of databound ticker items. The DataTextField property is 
            	taken into account only during data binding. If the DataTextField property is not set and your datasource is not a list of strings,
            	the RadTicker control will throw an exception.
            </remarks>
            <example>
            	The following example demonstrates how to use the DataTextField.
            	<code lang="CS">
            		DataTable data = new DataTable();
            		data.Columns.Add("MyID");
            		data.Columns.Add("MyValue");
            		
            		data.Rows.Add(new object[] {"1", "ticker item text 1"});
            		data.Rows.Add(new object[] {"2", "ticker item text 2"});
            		
            		RadTicker1.DataSource = data;
            		RadTicker1.DataTextField = "MyValue";	//"MyValue" column provides values for the Text property of databound ticker items
            		RadTicker1.DataBind();
            	</code>
            	<code lang="VB">
            		Dim data As new DataTable();
            		data.Columns.Add("MyID")
            		data.Columns.Add("MyValue")
            		
            		data.Rows.Add(New Object() {"1", "ticker item text 1"})
            		data.Rows.Add(New Object() {"2", "ticker item text 2"})
            		
            		RadTicker1.DataSource = data
            		RadTicker1.DataTextField = "MyValue"	'"MyValue" column provides values for the Text property of databound ticker items
            		RadTicker1.DataBind()
            	</code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.RadTickerItem">
            <summary>
            This class represents a <see cref="T:Telerik.Web.UI.RadTicker"/> item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTickerItem.Index">
            <summary>
            Gets the zero based index of the item.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTickerItemCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.RadTickerItem">RadTickerItem</see> objects in a
                <see cref="T:Telerik.Web.UI.RadTicker">RadTicker</see> control.
            </summary>
            <moduleiscollection/>
        </member>
        <member name="M:Telerik.Web.UI.RadTickerItemCollection.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTickerItemCollection">RadTickerItemCollection</see> class.
            </summary>
            <param name="parent">The parent Ticker control.</param>
        </member>
        <member name="P:Telerik.Web.UI.Rotator.AnimationSettings.Type">
            <summary><para>Gets or sets the effect that will be used for the animation.</para></summary>
        </member>
        <member name="P:Telerik.Web.UI.Rotator.AnimationSettings.Duration">
            <summary>Gets or sets the animation duration in milliseconds.</summary>
        </member>
        <member name="M:Telerik.Web.UI.Common.BaseClass.GetGlobalEnableEmbeddedScripts(System.Web.UI.Control)">
            <summary>
            Returns the web.config value which specifies the application EnableEmbeddedScripts property.
            </summary>
            <returns>
            Telerik.[ShortControlName].EnableEmbeddedScripts or Telerik.EnableEmbeddedScripts, depending on which value was set.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.Common.BaseClass.GetGlobalEnableEmbeddedSkins(System.Web.UI.Control)">
            <summary>
            Returns the web.config value which specifies the application EnableEmbeddedSkins property.
            </summary>
            <returns>
            Telerik.[ShortControlName].EnableEmbeddedSkins or Telerik.EnableEmbeddedSkins, depending on which value was set.
            </returns>
        </member>
        <member name="T:Telerik.Web.UI.ClientOperation`1">
            <summary>
            	Represents an client-side operation (e.g. adding an item, removing an item, updating an item etc.)
            </summary>
            <typeparam name="T">The type of the item (e.g. <see cref="T:Telerik.Web.UI.RadTreeNode"/>, <see cref="T:Telerik.Web.UI.RadMenuItem"/>,
            	<see cref="T:Telerik.Web.UI.RadComboBoxItem"/>, <see cref="T:Telerik.Web.UI.RadToolBarItem"/>, <see cref="T:Telerik.Web.UI.RadTab"/>, <see cref="T:Telerik.Web.UI.RadPanelItem"/>)
            </typeparam>
        </member>
        <member name="P:Telerik.Web.UI.ClientOperation`1.Item">
            <summary>
            Returns the item (<see cref="T:Telerik.Web.UI.RadTreeNode"/>, <see cref="T:Telerik.Web.UI.RadMenuItem"/>,
            <see cref="T:Telerik.Web.UI.RadComboBoxItem"/>, <see cref="T:Telerik.Web.UI.RadToolBarItem"/>, <see cref="T:Telerik.Web.UI.RadTab"/>, <see cref="T:Telerik.Web.UI.RadPanelItem"/>)
            associated with this client operation.
            </summary>
            <remarks>
            When the <see cref="P:Telerik.Web.UI.ClientOperation`1.Type"/> of the operation is <see cref="F:Telerik.Web.UI.ClientOperationType.Clear"/> the Item property will
            return null (Nothing in VB.NET) in case the items of the control have been cleared.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.ClientOperation`1.Type">
            <summary>
            Gets the type of the client operation
            </summary>
            <value>
            	One of the <see cref="T:Telerik.Web.UI.ClientOperationType"/> enumeration values.
            </value>
            <remarks>
            	If the Type property is equal to <see cref="F:Telerik.Web.UI.ClientOperationType.Update"/> the <see cref="T:Telerik.Web.UI.UpdateClientOperation`1"/> type will be used.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.ClientOperationType">
            <summary>
            Specifies the type of the <see cref="T:Telerik.Web.UI.ClientOperation`1"/>.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ClientOperationType.Insert">
            <summary>
            An item has been inserted in the control.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ClientOperationType.Remove">
            <summary>
            An item has been removed from the control.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ClientOperationType.Update">
            <summary>
            A property of the item has been changed.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ClientOperationType.Clear">
            <summary>
            All children of the control or the item have been removed.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.UpdateClientOperation`1">
            <summary>
            Used in case of update client operations.
            </summary>
            <typeparam name="T">The type of the item (e.g. <see cref="T:Telerik.Web.UI.RadTreeNode"/>, <see cref="T:Telerik.Web.UI.RadMenuItem"/>,
            	<see cref="T:Telerik.Web.UI.RadComboBoxItem"/>, <see cref="T:Telerik.Web.UI.RadToolBarItem"/>, <see cref="T:Telerik.Web.UI.RadTab"/>, <see cref="T:Telerik.Web.UI.RadPanelItem"/>)
            </typeparam>
        </member>
        <member name="P:Telerik.Web.UI.UpdateClientOperation`1.PropertyName">
            <summary>
            Gets the name of the property which has been changed on the client side.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.WebServiceSettingsConverter">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.WebServiceSettings">
            <summary>
            Represents the settings to be used for load on demand through web service.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceSettings.#ctor(System.String,System.Web.UI.StateBag)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceSettings.#ctor(System.Web.UI.StateBag)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.WebServiceSettings.Path">
            <summary>
            	Gets or sets the name of the web service to be used to populate items with
            	<strong>ExpandMode</strong> set to <strong>WebService</strong>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.WebServiceSettings.Method">
            <summary>
            	Gets or sets the method name to be called to populate items with
            	<strong>ExpandMode</strong> set to <strong>WebService</strong>.
            </summary>
            <remarks>
            	The method must be part of the web service specified through the
            	<see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.WebServiceSettings.UseHttpGet">
            <summary>
            	Gets or sets a boolean value 
            </summary>
            <remarks>
            	
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.CombinedScriptWriter.WebResourceRegex">
            <summary>
            Regular expression for detecting WebResource/ScriptResource substitutions in script files
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.CombinedScriptWriter.WriteCombinedScriptFile(System.Web.UI.Page,System.Web.HttpContext)">
            <summary>
            Outputs the combined script file requested by the HttpRequest to the HttpResponse
            </summary>
            <param name="page">A Page, representing the HttpHandler</param>
            <param name="context">HttpContext for the transaction</param>
            <returns>true if the script file was output</returns>
        </member>
        <member name="T:Telerik.Web.UI.ScriptEntry">
            <summary>
            Represents a script reference - including tracking its loaded state in the client browser
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ScriptEntry.CombinedScriptsParamName">
            <summary>
            Request param name for the serialized combined scripts string
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ScriptEntry.HiddenFieldParamName">
            <summary>
            Request param name for the hidden field name
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ScriptEntry.Assembly">
            <summary>
            Containing Assembly
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ScriptEntry.Name">
            <summary>
            Script name
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ScriptEntry.Culture">
            <summary>
            Culture to render the script in
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ScriptEntry._loadedAssembly">
            <summary>
            Reference to the Assembly object (if loaded by LoadAssembly)
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ScriptEntry.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="assembly">containing assembly</param>
            <param name="name">script name</param>
            <param name="culture">culture for rendering the script</param>
        </member>
        <member name="M:Telerik.Web.UI.ScriptEntry.#ctor(System.Web.UI.ScriptReference)">
            <summary>
            Constructor
            </summary>
            <param name="scriptReference">script reference</param>
        </member>
        <member name="M:Telerik.Web.UI.ScriptEntry.GetScript">
            <summary>
            Gets the script corresponding to the object
            </summary>
            <returns>script text</returns>
        </member>
        <member name="M:Telerik.Web.UI.ScriptEntry.LoadAssembly">
            <summary>
            Loads the associated Assembly
            </summary>
            <returns>Assembly reference</returns>
        </member>
        <member name="M:Telerik.Web.UI.ScriptEntry.Equals(System.Object)">
            <summary>
            Equals override to compare two ScriptEntry objects
            </summary>
            <param name="obj">comparison object</param>
            <returns>true iff both ScriptEntries represent the same script</returns>
        </member>
        <member name="M:Telerik.Web.UI.ScriptEntry.GetHashCode">
            <summary>
            GetHashCode override corresponding to the Equals override above
            </summary>
            <returns>hash code for the object</returns>
        </member>
        <member name="M:Telerik.Web.UI.ScriptEntry.Deserialize(System.String)">
            <summary>
            Deserialize a list of ScriptEntries
            </summary>
            <remarks>
            Serialized list looks like:
            ;Assembly1.dll Version=1:Culture:MVID1:ScriptName1Hash:ScriptName2Hash;Assembly2.dll Version=2:Culture:MVID1:ScriptName3Hash
            </remarks>
            <param name="serializedScriptEntries">serialized list</param>
            <returns>list of scripts</returns>
        </member>
        <member name="T:Telerik.Web.UI.Dialogs.UserControlResources">
            <summary>
            This class loads the dialog resources - localization, skins, base scripts, etc.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Dialogs.UserControlResources.Language">
            <summary>
            Gets or sets a string containing the localization language for the RadEditor UI
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.Quantizer.InitialQuantizePixel(Telerik.Web.UI.Editor.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the first pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <remarks>
            This function need only be overridden if your quantize algorithm needs two passes,
            such as an Octree quantizer.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.Editor.Quantizer.QuantizePixel(Telerik.Web.UI.Editor.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the second pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <returns>The quantized value</returns>
        </member>
        <member name="M:Telerik.Web.UI.Editor.Quantizer.GetPalette(System.Drawing.Imaging.ColorPalette)">
            <summary>
            Retrieve the palette for the quantized image
            </summary>
            <param name="original">Any old palette, this is overrwritten</param>
            <returns>The new color palette</returns>
        </member>
        <member name="T:Telerik.Web.UI.Editor.Quantizer.Color32">
            <summary>
            Struct that defines a 32 bpp colour
            </summary>
            <remarks>
            This struct is used to read data from a 32 bits per pixel image
            in memory, and is ordered in this manner as this is the way that
            the data is layed out in memory
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.Editor.Quantizer.Color32.Blue">
            <summary>
            Holds the blue component of the colour
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.Quantizer.Color32.Green">
            <summary>
            Holds the green component of the colour
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.Quantizer.Color32.Red">
            <summary>
            Holds the red component of the colour
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.Quantizer.Color32.Alpha">
            <summary>
            Holds the alpha component of the colour
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.Quantizer.Color32.ARGB">
            <summary>
            Permits the color32 to be treated as an int32
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.Quantizer.Color32.Color">
            <summary>
            Return the color for this Color32 object
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct the octree quantizer
            </summary>
            <remarks>
            The Octree quantizer is a two pass algorithm. The initial pass sets up the octree,
            the second pass quantizes a color based on the nodes in the tree
            </remarks>
            <param name="maxColors">The maximum number of colors to return</param>
            <param name="maxColorBits">The number of significant bits</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.#ctor(System.Int32)">
            <summary>
            Construct the octree
            </summary>
            <param name="maxColorBits">The maximum number of significant bits in the image</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.AddColor(Telerik.Web.UI.Editor.Quantizer.Color32)">
            <summary>
            Add a given color value to the octree
            </summary>
            <param name="pixel"></param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.Reduce">
            <summary>
            Reduce the depth of the tree
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.TrackPrevious(Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode)">
            <summary>
            Keep track of the previous node that was quantized
            </summary>
            <param name="node">The node last quantized</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.Palletize(System.Int32)">
            <summary>
            Convert the nodes in the octree to a palette with a maximum of colorCount colors
            </summary>
            <param name="colorCount">The maximum number of colors</param>
            <returns>An arraylist with the palettized colors</returns>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.GetPaletteIndex(Telerik.Web.UI.Editor.Quantizer.Color32)">
            <summary>
            Get the palette index for the passed color
            </summary>
            <param name="pixel"></param>
            <returns></returns>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.mask">
            <summary>
            Mask used when getting the appropriate pixels for a given node
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree._root">
            <summary>
            The root of the octree
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree._leafCount">
            <summary>
            Number of leaves in the tree
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree._reducibleNodes">
            <summary>
            Array of reducible nodes
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree._maxColorBits">
            <summary>
            Maximum number of significant bits in the image
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree._previousNode">
            <summary>
            Store the last node quantized
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree._previousColor">
            <summary>
            Cache the previous color quantized
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.Leaves">
            <summary>
            Get/Set the number of leaves in the tree
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.ReducibleNodes">
            <summary>
            Return the array of reducible nodes
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode">
            <summary>
            Class which encapsulates each node in the tree
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode.#ctor(System.Int32,System.Int32,Telerik.Web.UI.Editor.OctreeQuantizer.Octree)">
            <summary>
            Construct the node
            </summary>
            <param name="level">The level in the tree = 0 - 7</param>
            <param name="colorBits">The number of significant color bits in the image</param>
            <param name="octree">The tree to which this node belongs</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode.AddColor(Telerik.Web.UI.Editor.Quantizer.Color32,System.Int32,System.Int32,Telerik.Web.UI.Editor.OctreeQuantizer.Octree)">
            <summary>
            Add a color into the tree
            </summary>
            <param name="pixel">The color</param>
            <param name="colorBits">The number of significant color bits</param>
            <param name="level">The level in the tree</param>
            <param name="octree">The tree to which this node belongs</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode.Reduce">
            <summary>
            Reduce this node by removing all of its children
            </summary>
            <returns>The number of leaves removed</returns>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode.ConstructPalette(System.Collections.ArrayList,System.Int32@)">
            <summary>
            Traverse the tree, building up the color palette
            </summary>
            <param name="palette">The palette</param>
            <param name="paletteIndex">The current palette index</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode.GetPaletteIndex(Telerik.Web.UI.Editor.Quantizer.Color32,System.Int32)">
            <summary>
            Return the palette index for the passed color
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode.Increment(Telerik.Web.UI.Editor.Quantizer.Color32)">
            <summary>
            Increment the pixel count and add to the color information
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode._leaf">
            <summary>
            Flag indicating that this is a leaf node
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode._pixelCount">
            <summary>
            Number of pixels in this node
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode._red">
            <summary>
            Red component
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode._green">
            <summary>
            Green Component
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode._blue">
            <summary>
            Blue component
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode._children">
            <summary>
            Pointers to any child nodes
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode._nextReducible">
            <summary>
            Pointer to next reducible node
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode._paletteIndex">
            <summary>
            The index of this node in the palette
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode.NextReducible">
            <summary>
            Get/Set the next reducible node
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.OctreeQuantizer.Octree.OctreeNode.Children">
            <summary>
            Return the child nodes
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Editor.Diff.ContainerSnippet">
            <summary>
            Summary description for TagSnippet.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Editor.Diff.HtmlParser">
            <summary>
            Summary description for HtmlParser.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Editor.Diff.ImageSnippet">
            <summary>
            Summary description for TagSnippet.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Editor.Diff.SymbolSnippet">
            <summary>
            Summary description for TagSnippet.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Editor.Diff.TagSnippet">
            <summary>
            Summary description for TagSnippet.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Editor.Diff.WordSnippet">
            <summary>
            Summary description for TagSnippet.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Editor.DialogControls.HTTPSend">
            <summary>
            Allow the transfer of data files using the W3C's 
            specification for HTTP multipart form data. 
            Microsoft's version has a bug where it does not 
            format the ending boundary correctly.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.SendTextAsFile(System.String,System.String)">
            <summary>
            Transmits a file to the web server stated 
            in the URL property. 
            You may call this several times and it will 
            use the values previously set for fields and URL.
            </summary>
            <param name="content">the text to send</param>
            <param name="Filename">The local path of 
            the file to send.</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.#ctor(System.String)">
            <summary>
            Initialize our class for use to 
            send data files.
            </summary>
            <param name="URL">The URL of the 
            destination server.</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.SetFilename(System.String)">
            <summary>
            Used to signal we want the output to go to a 
            text file verses being transfered to a URL.
            </summary>
            <param name="Path">The local path to the 
            output file.</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.SetField(System.String,System.String)">
            <summary>
            Allows you to add some additional field data 
            to be sent along with the transfer. 
            This is usually used for things like userid 
            and password to validate the transfer.
            </summary>
            <param name="Name">The name of the 
            custom field.</param>
            <param name="Value">The value of the 
            custom field.</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.SetHeader(System.String,System.String)">
            <summary>
            Allows you to add some additional header data 
            to be sent along with the transfer. 
            </summary>
            <param name="Name">The name of the custom header.</param>
            <param name="Value">The value of the custom header.</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.GetStream">
            <summary>
            Determines if we have a file stream set, and 
            returns either the HttpWebRequest stream or 
            the file.
            </summary>
            <returns>Either the HttpWebRequest stream or 
            the local output file.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.GetResponse">
            <summary>
            Make the request to the web server and 
            retrieve it's response into a text buffer.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.GetFormFields">
            <summary>
            Builds the proper format of the multipart 
            data that contains the form fields and 
            their respective values.
            </summary>
            <returns>All form fields, properly formatted 
            in a string.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.GetFileHeader(System.String)">
            <summary>
            Returns the proper content information for 
            the file we are sending.
            </summary>
            <param name="Filename">The local path to 
            the file that should be sent.</param>
            <returns>All file headers, properly formatted 
            in a string.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.GetFileTrailer">
            <summary>
            Creates the proper ending boundary for the 
            multipart upload.
            </summary>
            <returns>The ending boundary.</returns>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.WriteString(System.IO.Stream,System.String)">
            <summary>
            Mainly used to turn the string into a byte 
            buffer and then write it to our IO stream.
            </summary>
            <param name="Output">The stream to write to.</param>
            <param name="Data">The data to place into the stream.</param>
        </member>
        <member name="M:Telerik.Web.UI.Editor.DialogControls.HTTPSend.WriteFile(System.IO.Stream,System.String)">
            <summary>
            Reads in the file a chunck at a time then 
            sends it to the output stream.
            </summary>
            <param name="Output">The stream to write to.</param>
            <param name="Filename">The local path of the file to send.</param>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.TransferHttpVersion">
            <summary>
            Allows you to specify the specific version 
            of HTTP to use for uploads.
            The dot NET stuff currently does not allow 
            you to remove the continue-100 header
            from 1.1 and 1.0 currently has a bug in it 
            where it adds the continue-100. 
            MS has sent a patch to remove the 
            continue-100 in HTTP 1.0.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.FileContentType">
            <summary>
            Used to change the content type of the file 
            being sent.
            Currently defaults to: text/xml. Other options 
            are text/plain or binary.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.BeginBoundary">
            <summary>
            The string that defines the begining boundary 
            of our multipart transfer as defined in the 
            w3c specs.
            This method also sets the Content and Ending 
            boundaries as defined by the w3c specs.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.ContentBoundary">
            <summary>
            The string that defines the content boundary 
            of our multipart transfer as defined in the 
            w3c specs.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.EndingBoundary">
            <summary>
            The string that defines the ending boundary 
            of our multipart transfer as defined in the 
            w3c specs.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.ResponseText">
            <summary>
            The data returned to us after the transfer 
            is completed.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.URL">
            <summary>
            The web address of the recipient of the 
            transfer.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.BufferSize">
            <summary>
            Allows us to determine the size of the buffer 
            used to send a piece of the file at a time 
            out the IO stream. 
            Defaults to 1024 * 10.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.Credentials">
            <summary>
            Allows us to specified the credentials used 
            for the transfer.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.Certificate">
            <summary>
            Allows us to specifiy the certificate to use 
            for secure communications.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.KeepAlive">
            <summary>
            Gets or sets a value indicating whether to 
            make a persistent connection to the 
            Internet resource.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.Expect100">
            <summary>
            Gets or sets a value indicating whether the 
            Expect100-Continue header should be sent.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.Pipelined">
            <summary>
            Gets or sets a value indicating whether to 
            pipeline the request to the Internet resource.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Editor.DialogControls.HTTPSend.Chunked">
            <summary>
            Gets or sets a value indicating whether the 
            file can be sent in smaller packets.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorDropDownItem">
            <summary>
            Represents a EditorDropDownItem dropdown item from a custom editor dropdown
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.EditorDropDownItemCollection">
            <summary>
            A strongly typed collection of EditorDropDownItem objects
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadFormDecorator">
            <summary>
            Telerik RadFormDecorator
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFormDecorator.DecoratedControls">
            <summary>
            Get/Set the DecoratedControls enum of RadFormDecorator
            </summary>		
        </member>
        <member name="P:Telerik.Web.UI.RadFormDecorator.ControlsToSkip">
            <summary>
            Get/Set the ControlsToSkip enum of RadFormDecorator - a shortcut for faster fine-tuning of the decorated controls
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFormDecorator.EnableRoundedCorners">
            <summary>
            Gets or sets whether decorated textboxes, textarea and fieldset elements will have rounded corners       
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadFormDecorator.DecorationZoneID">
            <summary>
            Gets or sets the id (ClientID if a runat=server is used) of a html element whose children will be decorated        
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridDateTimeColumnEditor.TextBoxControl">
            <summary>
            Gets The text box instance created of extracted from a cell after calls to AddControlsToContainer or LoadControlsFromContainer methods.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridDateTimeColumnEditor.PickerControl">
            <summary>
            Gets The text box instance created of extracted from a cell after calls to AddControlsToContainer or LoadControlsFromContainer methods.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridDateTimeColumnEditor.TextBoxStyle">
            <summary>
            Gets the instace of the Style that would be applied to the TextBox control, when initializing in a TableCell.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridDateTimeColumnEditor.ImagesPath">
            <summary>Gets or sets default path for the GridDateTimeColumnEditor images when EnableEmbeddedSkins is set to false.</summary>
            <value>A string containing the path for the grid images. The default is String.Empty.</value>
            <remarks>
            <para>
            
            </para>
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.GridCalculatedColumn.AllowFiltering">
            <summary>
            Gets or sets whether the column data can be filtered. The default value is
            true.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether the column can be
            filtered.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridCalculatedColumn.AllowSorting">
            <summary>Gets or sets a whether the column data can be sorted.</summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether the column data can
            be sorted.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridCalculatedColumn.DataFields">
            <summary>
            Gets or sets a string, representing a comma-separated enumeration of DataFields
            from the data source, which will form the expression.
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing a comma-separated enumeration of
            DataFields from the data source, which will form the expression.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.GridCustomAggregateEventArgs.Result">
            <summary>
            Gets or sets aggregate result.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadPanelItemConverter">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.RadRotatorItemData">
            <summary>
            	Data class used for transferring rotator items from and to web services.
            </summary>
            <remarks>
            	For information about the role of each property see the
            	<see cref="T:Telerik.Web.UI.RadRotatorItem">RadRotatorItem class</see>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadRotatorItemData.Html">
            <summary>
            The HTML content of the rotator frame. Note that you do not need to use templates here - the HTML will be added to the page directly.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadRotatorItemData.Visible">
            <summary>
            See <see cref="P:System.Web.UI.Control.Visible">RadRotatorItem.Visible</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadRotatorItemData.CssClass">
            <summary>
            See <see cref="P:System.Web.UI.WebControls.WebControl.CssClass">RadRotatorItem.CssClass</see>.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadRotator">
            <summary>
            RadRotator Control
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadRotator.BindToEnumerableData(System.Collections.IEnumerable)">
            <summary>
            Binds the rotator to a IEnumerable data source
            </summary>
            <param name="dataSource">IEnumerable data source</param>
        </member>
        <member name="M:Telerik.Web.UI.RadRotator.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.RotatorType">
            <summary>
            Specifies the type of rotator [how the rotator will render and what options the user will have for interacting with it on the client]
            <seealso cref="P:Telerik.Web.UI.RadRotator.RotatorType"/>
            </summary>
            <value>
            Default: <b>RotatorType.Buttons</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.ScrollDirection">
            <summary>
            Specifies possible directions for scrolling rotator items.
            <seealso cref="T:Telerik.Web.UI.RotatorScrollDirection"/>
            </summary>
            <value>
            Default: <b>RotatorScrollDirection.Left | RotatorScrollDirection.Right</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.ScrollDuration">
            <summary>
            Specifies the speed in milliseconds for scrolling rotator items.
            </summary>
            <value>
            Default: <b>500</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.InitialItemIndex">
            <summary>
            Specifies the index of the item, which will be shown first when the rotator loads.
            When set to 0 (default) - positions initial item to be visible in the rotator.
            When set to -1 - positions the initial item just outside of the rotator viewport.
            Any other positive value - the rotator starts with that particular item in the viewport.
            </summary>
            <value>
            Default: <b>0</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.FrameDuration">
            <summary>
            Specifies the time in milliseconds each frame will display in automatic scrolling scenarios.
            </summary>
            <value>
            Default: <b>2000</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.ItemWidth">
            <summary>
            Specifies the default rotator item width.
            </summary>
            <value>
            Default: <b>Unit.Empty</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.ItemHeight">
            <summary>
            Specifies the default rotator item height.
            </summary>
            <value>
            Default: <b>Unit.Empty</b>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.WebServiceSettings">
            <summary>
            	Gets the settings for the web service used to populate items
            </summary>
            <value>
                An <see cref="P:Telerik.Web.UI.RadRotator.WebServiceSettings">WebServiceSettings</see> that represents the
                web service used for populating items.
            </value>
            <remarks>
            	<para>
                    Use the <strong>WebServiceSettings</strong> property to configure the web
            		service used to populate items on demand.
            		You must specify both <see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> and
                    <see cref="P:Telerik.Web.UI.WebServiceSettings.Method">Method</see>
            		to fully describe the service.
                </para>
            	<para>
            		In order to use the integrated support, the web service should have the following signature:
            		
            		<code lang="CS">
            		[ScriptService]
            		public class WebServiceName : WebService
            		{
            			[WebMethod]
            			public RadRotatorItemData[] WebServiceMethodName(int itemIndex, int itemCount)
            			{
            				List&lt;RadRotatorItemData&gt; result = new List&lt;RadRotatorItemData&gt;();
            				RadRotatorItemData item; 
            				for (int i = 0; i &lt; itemCount; i++)
            				{
            					item = new RadRotatorItemData();
            					item.Html = "test "+(itemIndex+i);
            					result.Add(item);
            				}
            				return result.ToArray();
            			}
            		}
            		</code>
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.Height">
            <summary>
            Gets or sets the height of the Web server control. The default height is 200 pixels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.Width">
            <summary>
            Gets or sets the width of the Web server control. The default width is 200 pixels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether a postback to the server automatically occurs when the user interacts with the control.
            </summary>
            <remarks>
            Setting this property to true will make Telerik RadRotator postback to the server 
            on item click.
            </remarks>
            <value>
            The default value is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.PauseOnMouseOver">
            <summary>
            Gets or sets a value indicating whether to pause the rotator scrolling when the mouse is over a roatator item
            </summary>
            <value>
            The default value is <strong>true</strong>. This means the animation will be paused when the user hovers over a rotator item.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.OnClientItemClicking">
            <summary>
            The name of the javascript function called when an item is clicked.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.OnClientItemClicked">
            <summary>
            The name of the javascript function called after an item is clicked.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.OnClientMouseOver">
            <summary>
            The name of the javascript function called when the mouse hovers over an item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.OnClientMouseOut">
            <summary>
            The name of the javascript function called after the mouse leaves an item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.OnClientItemShowing">
            <summary>
            The name of the javascript function called when an item is about to be shown.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.OnClientItemShown">
            <summary>
            The name of the javascript function called after an item has been shown.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadRotator.OnClientLoad">
            <summary>
            The name of the javascript function called when the rotator is loaded on the client. The function
            is called right before the automatic animation (if used) begins.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadRotatorItem">
            <summary>
            This class represents a <see cref="T:Telerik.Web.UI.RadRotator"/> item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadRotatorItem.Index">
            <summary>
            Gets the zero based index of the item.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadRotatorItemCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.RadRotatorItem">RadRotatorItem</see> objects in a
                <see cref="T:Telerik.Web.UI.RadRotator">RadRotator</see> control.
            </summary>
            <moduleiscollection/>
        </member>
        <member name="M:Telerik.Web.UI.RadRotatorItemCollection.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadRotatorItemCollection">RadRotatorItemCollection</see> class.
            </summary>
            <param name="parent">The parent Rotator control.</param>
        </member>
        <member name="T:Telerik.Web.UI.RotatorControlButtonsConfiguration">
            <summary>
            Encapsulates the properties used for the RadRotator control buttons management.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RotatorControlButtonsConfiguration.getClientID(System.Web.UI.Control,System.String)">
            <summary>
            this function tries to get the client id of a control in the same naming container
            </summary>
            <param name="p">the control id</param>
            <param name="namingContainer">the control to search in</param>
            <returns>the client id if the control is found, or the input parameter if the control does not exist</returns>
        </member>
        <member name="P:Telerik.Web.UI.RotatorControlButtonsConfiguration.OnClientButtonClick">
            <summary>
            The name of the javascript function called when the user clicks one of the control buttons.
            </summary>
            <remarks>This event is raised only when the rotator is in Buttons mode!</remarks>
        </member>
        <member name="P:Telerik.Web.UI.RotatorControlButtonsConfiguration.OnClientButtonOver">
            <summary>
            The name of the javascript function called when the mouse is over one of the control buttons.
            </summary>
            <remarks>This event is raised only when the rotator is in ButtonsOver mode!</remarks>
        </member>
        <member name="P:Telerik.Web.UI.RotatorControlButtonsConfiguration.OnClientButtonOut">
            <summary>
            The name of the javascript function called when the mouse leaves one of the control buttons.
            </summary>
            <remarks>This event is raised only when the rotator is in ButtonsOver mode!</remarks>
        </member>
        <member name="P:Telerik.Web.UI.ResourcesPopulatingEventArgs.SchedulerInfo">
            <summary>
            Gets or sets the <see cref="T:Telerik.Web.UI.ISchedulerInfo">ISchedulerInfo</see> object
            that will be passed to the web service.
            </summary>
            <value>
            The <see cref="T:Telerik.Web.UI.ISchedulerInfo">ISchedulerInfo</see> object
            that will be passed to the web service.
            </value>
            <remarks>
            You can replace this object with your own implementation of
            <see cref="T:Telerik.Web.UI.ISchedulerInfo">ISchedulerInfo</see> in order
            to pass additional information to the Web Service.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.ResourcesPopulatingEventArgs.ServicePath">
            <summary>
            Gets or sets the URI for the request that is about to be made by a RadScheduler.
            </summary>
            <value>
            The URI for the request that is about to be made by a RadScheduler.
            </value>
            <remarks>
            This property contains the absolute URI for the request, as resolved
            by RadScheduler. You might need to modify this URI to accommodate for
            URL rewriters and other scenarios.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.ResourcesPopulatingEventArgs.Headers">
            <summary>
            Gets a collection of header name/value pairs associated with the request.
            </summary>
            <value>
            A <see cref="T:System.Net.WebHeaderCollection">WebHeaderCollection</see> containing
            header name/value pairs associated with this request.
            </value>
            <remarks>
            The Headers property contains a <see cref="T:System.Net.WebHeaderCollection">WebHeaderCollection</see>
            instance containing header information that RadScheduler sends with the request.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.ResourcesPopulatingEventArgs.Credentials">
            <summary>
            Gets or sets the network credentials that are sent to the host and used to authenticate the request.
            </summary>
            <value>
            An <see cref="T:System.Net.ICredentials">ICredentials</see> containing the authentication credentials for the request.
            The default is a null reference (Nothing in Visual Basic).
            </value>
            <remarks>
            Typically, you would set this property to the credentials of the client on whose behalf the request is made.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.ResourceStyleMapping.Key">
            <summary>
            Gets or sets a value indicating the resource <see cref="P:Telerik.Web.UI.Resource.Key">key</see> to match.
            </summary>
            <value>
            Resource <see cref="P:Telerik.Web.UI.Resource.Key">key</see> to match.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.ResourceStyleMapping.Text">
            <summary>
            Gets or sets a value indicating the resource <see cref="P:Telerik.Web.UI.Resource.Text">text</see> to match.
            </summary>
            <value>
            Resource <see cref="P:Telerik.Web.UI.Resource.Text">text</see> to match.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.ResourceStyleMapping.Type">
            <summary>
            Gets or sets a value indicating the resource <see cref="P:Telerik.Web.UI.Resource.Type">type</see> to match.
            </summary>
            <value>
            Resource <see cref="P:Telerik.Web.UI.Resource.Type">type</see> to match.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.ResourceStyleMapping.ApplyCssClass">
            <summary>
            Gets or sets a value indicating the cascading style sheet (CSS) class
            to render for appointments that use the matching resource.
            </summary>
            <value>
            The cascading style sheet (CSS) class to render for appointments
            that use the matching resource.
            
            The default value is <see cref="F:System.String.Empty">Empty</see>.
            </value>
            <remarks>
            You can define your own CSS class name or use some of the predefined class names:
            <list type="bullet">
            	<item><strong>rsCategoryRed</strong></item>
            	<item><strong>rsCategoryBlue</strong></item>
            	<item><strong>rsCategoryOrange</strong></item>
            	<item><strong>rsCategoryGreen</strong></item>
            </list>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.SchedulerResourcePopulationMode">
            <summary>
            Specifies the resource population mode of a RadScheduler control when using Web Service data binding.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.SchedulerResourcePopulationMode.Manual">
            <summary>
            In manual mode RadScheduler will not request resources from the Web Service.
            They can be populated from the code-behind of the ASP.NET page that hosts
            the RadScheduler control.
            </summary>
            <remarks>
            This mode is useful when server-side requests from the server are undesirable
            or forbidden (Medium Trust for example).
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.SchedulerResourcePopulationMode.ServerSide">
            <summary>
            The resources will be populated from the server by issuing a request to
            the Web Service.
            </summary>
            <remarks>
            The <see cref="E:Telerik.Web.UI.RadScheduler.ResourcesPopulating">ResourcesPopulating</see>
            event will be raised.
            </remarks>
        </member>
        <member name="F:Telerik.Web.UI.SchedulerResourcePopulationMode.ClientSide">
            <summary>
            The resources will be populated from the client by issuing a request to
            the Web Service.
            </summary>
            <remarks>
            The <see cref="P:Telerik.Web.UI.RadScheduler.OnClientResourcesPopulating">ResourcesPopulating</see>
            client-side event will be raised.
            <b>Grouped views are not supported in this mode.</b>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.SchedulerWebServiceClient">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.SchedulerWebServiceSettings.#ctor(System.String,System.Web.UI.StateBag)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.SchedulerWebServiceSettings.#ctor(System.Web.UI.StateBag)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.SchedulerWebServiceSettings.GetAppointmentsMethod">
            <summary>
            	Gets or sets the method name to be called to populate the appointments.
            </summary>
            <remarks>
            	The method must be part of the web service specified through the
            	<see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SchedulerWebServiceSettings.DeleteAppointmentMethod">
            <summary>
            	Gets or sets the method name to be called to delete appointments.
            </summary>
            <remarks>
            	The method must be part of the web service specified through the
            	<see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SchedulerWebServiceSettings.InsertAppointmentMethod">
            <summary>
            	Gets or sets the method name to be called to insert appointments.
            </summary>
            <remarks>
            	The method must be part of the web service specified through the
            	<see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SchedulerWebServiceSettings.UpdateAppointmentMethod">
            <summary>
            	Gets or sets the method name to be called to update appointments.
            </summary>
            <remarks>
            	The method must be part of the web service specified through the
            	<see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SchedulerWebServiceSettings.GetResourcesMethod">
            <summary>
            	Gets or sets the method name to be called to get the resources list.
            </summary>
            <remarks>
            	The method must be part of the web service specified through the
            	<see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SchedulerWebServiceSettings.CreateRecurrenceExceptionMethod">
            <summary>
            	Gets or sets the method name to be called to create recurrence exceptions.
            </summary>
            <remarks>
            	The method must be part of the web service specified through the
            	<see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SchedulerWebServiceSettings.RemoveRecurrenceExceptionsMethod">
            <summary>
            	Gets or sets the method name to be called to remove the recurrence exceptions of a given appointment.
            </summary>
            <remarks>
            	The method must be part of the web service specified through the
            	<see cref="P:Telerik.Web.UI.WebServiceSettings.Path">Path</see> property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.SchedulerWebServiceSettings.ResourcePopulationMode">
            <summary>
            	Gets or sets the <see cref="T:Telerik.Web.UI.SchedulerResourcePopulationMode">resource population mode</see>
            	to be used from RadScheduler.
            </summary>
            <value>
            	The <see cref="T:Telerik.Web.UI.SchedulerResourcePopulationMode">resource population mode</see>
            	to be used from RadScheduler. The default value is
            	<see cref="F:Telerik.Web.UI.SchedulerResourcePopulationMode.ServerSide">ClientSide</see>
            </value>
            <remarks>
            <para>
            	Resources need to be populated from the server when using resource grouping.
            	Doing so also reduces the client-side initialization time.
            </para> 
            <para>
            	This operation requires the <see cref="T:System.Net.WebPermission">WebPermission</see> to be granted
            	for the Web Service URL. This permission is not granted by default in <b>Medium Trust</b>.
            </para>
            <para>
            	You can disable the population of the resources from the server and still use
            	client-side rendering for grouped views. To do so you need to set the
            	value to <see cref="F:Telerik.Web.UI.SchedulerResourcePopulationMode.Manual">Manual</see> and
            	populate the resources from the OnInit method of the page.
            </para>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.NonSerializedInControlStateAttribute">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.WebServiceAppointmentController">
            <summary>
            The WebServiceAppointmentController provides a facade over a <see cref="T:Telerik.Web.UI.SchedulerProviderBase"/> object
            and is used to call your provider from web services.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceAppointmentController.#ctor">
            <summary>
            Instantiates a new <see cref="T:Telerik.Web.UI.WebServiceAppointmentController"/> based on the default provider configured
            in web.config.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationException">
            If there is no provider configured in the web.config file a <see cref="T:System.Configuration.ConfigurationException"/> will be thrown.
            </exception>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceAppointmentController.#ctor(System.String)">
            <summary>
            Instantiates a new <see cref="T:Telerik.Web.UI.WebServiceAppointmentController"/> by using the specified provider name.
            </summary>
            <param name="providerName">The name of the provider configured in web.config</param>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceAppointmentController.#ctor(Telerik.Web.UI.SchedulerProviderBase)">
            <summary>
            Instantiates a new <see cref="T:Telerik.Web.UI.WebServiceAppointmentController"/> based on the supplied <see cref="T:Telerik.Web.UI.SchedulerProviderBase"/>
            </summary>
            <param name="provider">The provider which will be used</param>
            <example>
            <code lang="CS">
            	XmlSchedulerProvider provider = new XmlSchedulerProvider(Server.MapPath("~/App_Data/data.xml"), true);
            	WebServiceAppointmentController controller = new WebServiceAppointmentController(provider);
            </code>
            <code lang="VB">
            	Dim provider As New XmlSchedulerProvider(Server.MapPath("~/App_Data/data.xml"), True)
            	Dim controller As New WebServiceAppointmentController(provider)
            </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceAppointmentController.GetAppointments(Telerik.Web.UI.ISchedulerInfo)">
            <summary>
            Gets the appointments corresponding to specified time period
            </summary>
            <param name="schedulerInfo">Contains the current time period</param>
            <example>
            <code lang="CS">
            	[WebMethod]
            	public IEnumerable&lt;AppointmentData&gt; GetAppointments(SchedulerInfo schedulerInfo)
            	{
            		return Controller.GetAppointments(schedulerInfo);
            	}
            </code>
            <code lang="VB">
            	&lt;WebMethod&gt; _
            	Public Function GetAppointments(schedulerInfo As SchedulerInfo) As IEnumerable(Of AppointmentData)
            		Return Controller.GetAppointments(schedulerInfo)
            	End Function
            </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceAppointmentController.InsertAppointment(Telerik.Web.UI.ISchedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Inserts the specified appointment and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo"/> object which contains the current time period.</param>
            <param name="appointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData"/> object which contains the appointment properties.</param>
            <example>
            <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; InsertAppointment(SchedulerInfo schedulerInfo, AppointmentData appointmentData)
            {
            	return Controller.InsertAppointment(schedulerInfo, appointmentData);
            }
            </code>
            <code lang="VB">
            &lt;WebMethod&gt; _
            Public Function InsertAppointment(schedulerInfo As SchedulerInfo, appointmentData As AppointmentData) As IEnumerable(Of AppointmentData)
            	Return Controller.InsertAppointment(schedulerInfo, appointmentData)
            End Function
            </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceAppointmentController.UpdateAppointment(Telerik.Web.UI.ISchedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Updates the specified appointment and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo"/> object which contains the current time period.</param>
            <param name="appointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData"/> object which contains the appointment properties.</param>
            <example>
            <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; UpdateAppointment(SchedulerInfo schedulerInfo, AppointmentData appointmentData)
            {
            	return Controller.UpdateAppointment(schedulerInfo, appointmentData);
            }
            </code>
            <code lang="VB">
            &lt;WebMethod&gt; _
            Public Function UpdateAppointment(schedulerInfo As SchedulerInfo, appointmentData As AppointmentData) As IEnumerable(Of AppointmentData)
            	Return Controller.UpdateAppointment(schedulerInfo, appointmentData)
            End Function
            </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceAppointmentController.CreateRecurrenceException(Telerik.Web.UI.ISchedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Creates a recurrence exception with the specified appointment data and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo"/> object which contains the current time period.</param>
            <param name="recurrenceExceptionData">A <see cref="T:Telerik.Web.UI.AppointmentData"/> object which contains the exception properties.</param>
            <example>
            <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; CreateRecurrenceException(SchedulerInfo schedulerInfo, AppointmentData recurrenceExceptionData)
            {
            	return Controller.CreateRecurrenceException(schedulerInfo, recurrenceExceptionData);
            }
            </code>
            <code lang="VB">
            &lt;WebMethod&gt; _
            Public Function CreateRecurrenceException(schedulerInfo As SchedulerInfo, recurrenceExceptionData As AppointmentData) As IEnumerable(Of AppointmentData)
            	Return Controller.CreateRecurrenceException(schedulerInfo, recurrenceExceptionData)
            End Function
            </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceAppointmentController.RemoveRecurrenceExceptions(Telerik.Web.UI.ISchedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Removes all recurrence exceptions of the specified recurrence master and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo"/> object which contains the current time period.</param>
            <param name="masterAppointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData"/> object which is the recurrence master.</param>
            <example>
            <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; RemoveRecurrenceExceptions(SchedulerInfo schedulerInfo, AppointmentData masterAppointmentData)
            {
            	return Controller.RemoveRecurrenceExceptions(schedulerInfo, masterAppointmentData);
            }
            </code>
            <code lang="VB">
            &lt;WebMethod&gt; _
            Public Function RemoveRecurrenceExceptions(schedulerInfo As SchedulerInfo, masterAppointmentData As AppointmentData) As IEnumerable(Of AppointmentData)
            	Return Controller.RemoveRecurrenceExceptions(schedulerInfo, masterAppointmentData)
            End Function
            </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceAppointmentController.GetResources(Telerik.Web.UI.ISchedulerInfo)">
            <summary>
            Returns the resources of all appointments within the specified time period.
            </summary>
            <param name="schedulerInfo">The time period</param>
        </member>
        <member name="M:Telerik.Web.UI.WebServiceAppointmentController.DeleteAppointment(Telerik.Web.UI.ISchedulerInfo,Telerik.Web.UI.AppointmentData,System.Boolean)">
            <summary>
            Deletes the specified appointment and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo"/> object which contains the current time period.</param>
            <param name="appointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData"/> which represents the apointment that shoud be deleted.</param>
            <param name="deleteSeries">Specified wether to delete the recurring series if the specified appointment is recurrence master.</param>
            <example>
            <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; DeleteAppointment(SchedulerInfo schedulerInfo, AppointmentData appointmentData, bool deleteSeries)
            {
            	return Controller.DeleteAppointment(schedulerInfo, masterAppointmentData, deleteSeries);
            }
            </code>
            <code lang="VB">
            &lt;WebMethod&gt; _
            Public Function DeleteAppointment(schedulerInfo As SchedulerInfo, appointmentData As AppointmentData, deleteSeries As Bool) As IEnumerable(Of AppointmentData)
            	Return Controller.DeleteAppointment(schedulerInfo, masterAppointmentData, deleteSeries)
            End Function
            </code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.SchedulerWebServiceSettingsConverter">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceExceptionCreatedEventArgs.ExceptionAppointment">
            <summary>
            Gets the recurrence exception appointment that is about to be created.
            </summary>
            <value>The recurrence exception appointment that is about to be created.</value>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceExceptionCreatedEventArgs.Appointment">
            <summary>
            Gets the master appointment to which the recurrence exception is about to be attached.
            </summary>
            <value>The master appointment to which the recurrence exception is about to be attached.</value>
        </member>
        <member name="P:Telerik.Web.UI.RecurrenceExceptionCreatedEventArgs.OccurrenceAppointment">
            <summary>
            Gets the occurrence appointment that is about to be overriden by the recurrence exception.
            </summary>
            <value>The occurrence appointment that is about to be overriden by the recurrence exception.</value>
        </member>
        <member name="P:Telerik.Web.UI.CreateRecurrenceExceptionContext.RecurrenceExceptionDate">
            <summary>
            The date of the recurrence exception that is being created by
            the current Insert / Update operation pair.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.UpdateAppointmentContext.OriginalAppointment">
            <summary>
            A reference to the original appointment during an Update operation.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ResourceUpdateInfo">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.SchedulerClientState">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.SchedulerTopTable">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.MultiDayViewSettings">
            <summary> Represents settings for RadScheduler's multi-day view. </summary>
        </member>
        <member name="T:Telerik.Web.UI.WeekViewSettings">
            <summary> Represents settings for RadScheduler's week view. </summary>
        </member>
        <member name="P:Telerik.Web.UI.ViewSettings.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the view is in read-only mode.
            </summary>
            <value>
            	<strong>true</strong> if view should be read-only; <strong>false</strong> otherwise. The default value is <strong>false</strong>.
            </value>
            <remarks>
            	By default the user is able to insert, edit and delete appointments. Use the <strong>ReadOnly</strong> to disable the editing capabilities of RadScheduler.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.ViewSettings.ShowDateHeaders">
            <summary>
            Gets or sets a value indicating whether to render date headers for the current view.
            </summary>
            <value><c>true</c> if the date headers for the current view are rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.ViewSettings.UserSelectable">
            <summary>
            Gets or sets a value indicating whether to render a tab for the current view in the view chooser.
            </summary>
            <value><c>true</c> if a tab for the current view in the view chooser is rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.GroupableViewSettings.GroupBy">
            <summary>
            Gets or sets the resource to group by.
            </summary>
            <value>The resource to group by.</value>
        </member>
        <member name="P:Telerik.Web.UI.GroupableViewSettings.GroupingDirection">
            <summary>
            Gets or sets the resource grouping direction.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GroupableViewSettings.ShowResourceHeaders">
            <summary>
            Gets or sets a value indicating whether to render resource headers for the current view.
            </summary>
            <value><c>true</c> if the resource headers for the current view are rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Web.UI.BaseMultiDayViewSettings.DayStartTime">
            <summary>
                Gets or sets the time used to denote the start of the day.
            </summary>
            <value>
                The time used to denote the start of the day.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.BaseMultiDayViewSettings.DayEndTime">
            <summary>
                Gets or sets the time used to denote the end of the day.
            </summary>
            <value>
                The time used to denote the end of the day.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.BaseMultiDayViewSettings.WorkDayStartTime">
            <summary>
                Gets or sets the time used to denote the start of the work day.
            </summary>
            <value>
                The time used to denote the start of the work day.
            </value>
            <remarks>
            	The effect from this property is only visual.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.BaseMultiDayViewSettings.WorkDayEndTime">
            <summary>
                Gets or sets the time used to denote the end of the work day.
            </summary>
            <value>
                The time used to denote the end of the work day.
            </value>
            <remarks>
            	The effect from this property is only visual.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.BaseMultiDayViewSettings.ShowHoursColumn">
            <summary>
            Gets or sets a value indicating whether to render the hours column in day and week view.
            </summary>
            <value><c>true</c> if the hours column is rendered in day and week view; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Telerik.Web.UI.WeekViewSettings.#ctor(Telerik.Web.UI.IScheduler,System.Web.UI.StateBag)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="P:Telerik.Web.UI.WeekViewSettings.HeaderDateFormat">
            <summary>
            Gets or sets the week header date format string.
            </summary>
            <value>The week header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.WeekViewSettings.ColumnHeaderDateFormat">
            <summary>
            Gets or sets the week column header date format string. 
            </summary>
            <value>The week column header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.MultiDayViewSettings.#ctor(Telerik.Web.UI.IScheduler,System.Web.UI.StateBag)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="P:Telerik.Web.UI.MultiDayViewSettings.HeaderDateFormat">
            <summary>
            Gets or sets the mult-day header date format string.
            </summary>
            <value>The multi-day header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.MultiDayViewSettings.ColumnHeaderDateFormat">
            <summary>
            Gets or sets the multi-day header column date format string. 
            </summary>
            <value>The multi-day column header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.MultiDayViewSettings.UserSelectable">
            <summary>
            Gets or sets a value indicating whether to render a tab for the current view in the view chooser.
            </summary>
            <value><c>true</c> if a tab for the current view in the view chooser is rendered; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Telerik.Web.UI.DayViewSettings">
            <summary> Represents settings for RadScheduler's day view. </summary>
        </member>
        <member name="M:Telerik.Web.UI.DayViewSettings.#ctor(Telerik.Web.UI.IScheduler,System.Web.UI.StateBag)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="P:Telerik.Web.UI.DayViewSettings.HeaderDateFormat">
            <summary>
            Gets or sets the day header date format string.
            </summary>
            <value>The day header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.DayViewSettings.ShowDateHeaders">
            <summary>
            Not applicable in day view.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.MonthViewSettings">
            <summary> Represents settings for RadScheduler's Month view. </summary>
        </member>
        <member name="M:Telerik.Web.UI.MonthViewSettings.#ctor(Telerik.Web.UI.IScheduler,System.Web.UI.StateBag)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="P:Telerik.Web.UI.MonthViewSettings.HeaderDateFormat">
            <summary>
            Gets or sets the RadScheduler's header date format string in Month View. 
            </summary>
            <value>The RadScheduler's header date format string in Month View.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.MonthViewSettings.ColumnHeaderDateFormat">
            <summary>
            Gets or sets the column header date format string in Month View. 
            </summary>
            <value>The column header date format string in Month View.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.MonthViewSettings.DayHeaderDateFormat">
            <summary>
            Gets or sets the day header date format string in Month View. 
            </summary>
            <value>The day header date format string in Month View.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.MonthViewSettings.FirstDayHeaderDateFormat">
            <summary>
            Gets or sets the first day of month header date format in Month View. 
            </summary>
            <value>The first day of month header date format in Month View.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.MonthViewSettings.VisibleAppointmentsPerDay">
            <summary>
            	Gets or sets a value indicating the number of visible appointments per day in month view.
            </summary>
            <value>
            	A number specifying the number of visible appointments per day. The default value is 2.
            </value>
            <remarks>
            	A link button navigating to the specific date will be rendered when
            	the number of appointments exceeds this value.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.MonthViewSettings.AdaptiveRowHeight">
            <summary>
            	Gets or sets a value indicating whether the height of each row
            	should be adjusted to match the height of its content.
            </summary>
            <value>
            	<strong>true</strong> if the height of each row should be adjusted to match the height of its content;
            	<strong>false</strong> if all rows should be with the same height.
            	The default value is <strong>false</strong>.
            </value>
            <remarks>
            	By default, all rows are rendered with the same height.
            	This property allows you to change this behaviour.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.MonthViewSettings.MinimumRowHeight">
            <summary>
            	Gets or sets a value indicating the minimum row height in month view.
            </summary>
            <value>
            	A number specifying the the minimum row height. The default value is 4.
            </value>
            <remarks>
            	This property is ignored when <see cref="P:Telerik.Web.UI.MonthViewSettings.AdaptiveRowHeight">AdaptiveRowHeight</see>
            	is set to <b>true</b>.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.GroupingDirection">
            <summary>
            Specifies resource grouping direction in RadScheduler.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.TimelineViewSettings">
            <summary>Represents settings for the time line view.</summary>
        </member>
        <member name="M:Telerik.Web.UI.TimelineViewSettings.#ctor(Telerik.Web.UI.IScheduler,System.Web.UI.StateBag)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="P:Telerik.Web.UI.TimelineViewSettings.StartTime">
            <summary>
            The starting time of the Timeline view.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.TimelineViewSettings.NumberOfSlots">
            <summary>
            The number of slots to display in timeline view.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.TimelineViewSettings.SlotDuration">
            <summary>
            The duration of each slot in timeline view.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.TimelineViewSettings.HeaderDateFormat">
            <summary>
            Gets or sets the Timeline view header date format string.
            </summary>
            <value>The Timeline view header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.TimelineViewSettings.ColumnHeaderDateFormat">
            <summary>
            Gets or sets the timeline column header date format string. 
            </summary>
            <value>The timeline column header date format string.</value>
            <remarks>
            For additional information, please read this
            <a href="http://msdn2.microsoft.com/en-us/library/8kb3ddd4.aspx">MSDN article</a>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.TimelineViewSettings.TimeLabelSpan">
            <summary>
            	Gets or sets the number of rows/columns each time label spans.
            </summary>
            <value>
            	The number of rows/columns each time label spans.
            	The default value is <strong>1</strong>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.TimelineViewSettings.ShowInsertArea">
            <summary>
            	Gets or sets a boolean value that specifies whether to
            	show an empty area at the end of each time slot that can
            	be used to insert appointments.
            </summary>
            <value>
            	<strong>true</strong>, insert are should be shown; <strong>false</strong> otherwise.
            	The default value is <strong>true</strong>
            </value>
            <remarks>
            	<para>
            	The insert area is not visible if the scheduler is in read-only mode or
            	<see cref="P:Telerik.Web.UI.RadScheduler.AllowInsert">AllowInsert</see> is <strong>false</strong>.
            	</para>
            	<para>
            	If all time slots are full and this property is set to <strong>false</strong>,
            	the user will not be able to insert appointments.
            	</para>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.AllDayLayout">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Month.MonthWeekLayout">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Month.ContentTable">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.Scheduler.Views.Month.ContentTable.SyncCellHeight">
            <summary>
            Synchronize the height of all cells in the table.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Scheduler.Views.Month.ContentTable.SetMinimumCellHeight(System.Int32)">
            <summary>
            Adds padding to the table cells, so they are at least <paramref name="cellHeight"/> hight.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Scheduler.Views.Month.ContentTable.SyncCellHeight(System.Int32)">
            <summary>
            Sycnhronize the height of the cells in the specified row.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Scheduler.Views.Month.ContentTable.SyncRowHeight(Telerik.Web.UI.Scheduler.Views.Month.ContentTable)">
            <summary>
            Synchronizes the row heights of two tables with identical dimensions.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.ISchedulerRenderer">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Month.GroupedByDate.VerticalView">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.ViewBase">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Month.GroupedByDate.HorizontalView">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Month.GroupedByDate.Model">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Week.GroupedByDate.HorizontalView">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Week.GroupedByDate.Model">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Week.GroupedByDate.VerticalView">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.SchedulerAllDayTable">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.SchedulerRowHeaderTable">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.Scheduler.Views.ISchedulerTimeSlot.Appointments">
            <summary>
            A list of the appointments that start in this time slot.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Scheduler.Views.ISchedulerTimeSlot.Control">
            <summary>
            The control that represents this time slot.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Scheduler.Views.ISchedulerTimeSlot.Start">
            <summary>
            The start time of the time slot.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Scheduler.Views.ISchedulerTimeSlot.End">
            <summary>
            The end time of the time slot.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Scheduler.Views.ISchedulerTimeSlot.Duration">
            <summary>
            The duration of the time slot.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Scheduler.Views.ISchedulerTimeSlot.Index">
            <summary>
            The unique index of the time slot.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Scheduler.Views.ISchedulerTimeSlot.FormContainer">
            <exclude />
            <excludetoc />
        </member>
        <member name="P:Telerik.Web.UI.Scheduler.Views.ISchedulerTimeSlot.CssClass">
            <summary>
            An optional CSS class name that will be rendered for the time slot.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Scheduler.Views.ISchedulerTimeSlot.Resource">
            <summary>
            The resource associated with the time slot.
            </summary>
            <value>The resource associated with the time slot in grouped views, otherwise null.</value>
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.SchedulerContentPanel">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Timeline.GroupedByDate.HorizontalView">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Timeline.GroupedByResource.HorizontalView">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Timeline.View">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Timeline.GroupedByDate.Model">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Timeline.GroupedByResource.Model">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Timeline.ModelBase">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Timeline.GroupedByDate.TimelineAppointmentControl">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Timeline.GroupedByDate.TimelineLayout">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Timeline.GroupedByDate.VerticalView">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Timeline.TimelineLayout">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Timeline.Model">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Week.GroupedByDate.AllDayAppointmentControl">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Week.GroupedByDate.AllDayLayout">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.Week.GroupedByDate.Renderer">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Scheduler.Views.ViewHeader">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.OutputCompression">
            <summary>
            Defines the output compression mode of the Telerik.Web.UI.WebResource.axd handler.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.OutputCompression.Disabled">
            <summary>
            The compression is disabled (raw content is output to the browser).
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.OutputCompression.AutoDetect">
            <summary>
            Compression is identified by the browser and its version.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.OutputCompression.Forced">
            <summary>
            Output is always compressed.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSkinManager.ShowChooser">
            <summary>
            Gets or sets a value indicating whether Skin chooser should be rendered in run-time.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSkinManager.Enabled">
            <summary>
            Gets or sets a value indicating whether skinning should be enabled or not.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSkinManager.Skin">
            <summary>
            "Specifies the skin that will be used by the control"
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSkinManager.PersistenceMode">
            <summary>
            Specifies the skin manager persistance mode.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSkinManager.TargetControls">
            <summary>
            Gets a collection of TargetControl objects that allows for specifying the objects for which tooltips will be created on the client-side.
            </summary>
            <value>
            Gets a collection of TargetControl objects that allows for specifying the objects for which tooltips will be created on the client-side.
            </value>
            <remarks>
            Use the TargetControls collection to programmatically control which objects should be tooltipified on the client-side. 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.TargetControl.Enabled">
            <summary>
            Gets or sets a value indicating whether skinning should be enabled or not.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadSliderItem">
            <summary>
            RadSliderItem  class.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSliderItem.Text">
            <summary>Gets or sets the text caption for the slider item.</summary>
            <value>The text of the item. The default value is empty string.</value>        
            <remarks>
            Use the <strong>Text</strong> property to specify the text to display for the
            item.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSliderItem.Value">
            <summary>Gets or sets the value  for the slider item.</summary>
            <value>The value of the item. The default value is empty string.</value>        
            <remarks>
            Use the <strong>Value</strong> property to specify the value 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSliderItem.Owner">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadSlider">RadSlider</see> instance which contains the current item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSliderItem.SliderParent">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadSlider">RadSlider</see> instance which contains the current item.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSliderItem.Selected">
            <summary>Gets or sets the selected state of the slider item.</summary>
            <value>The default value is true.</value>        
            <remarks>
            Use the <strong>Selected</strong> property to determine whether the item is selected or not.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSliderItem.ToolTip">
            <summary>Gets or sets the tooltip of the slider item.</summary>
        </member>
        <member name="T:Telerik.Web.UI.RadSliderItemCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> objects in a
                <see cref="T:Telerik.Web.UI.RadSlider">RadSlider</see> control.
            </summary>
            <remarks>
            	The <strong>RadSliderItemCollection</strong> class represents a collection of
                <strong>RadSliderItem</strong> objects.
            	<list type="bullet">
            		<item>
                        Use the <see cref="P:Telerik.Web.UI.RadSliderItemCollection.Item(System.Int32)">indexer</see> to programmatically retrieve a
                        single RadSliderItem from the collection, using array notation.
                    </item>
            		<item>
                        Use the <strong>Count</strong> property to determine the total
                        number of slider items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadSliderItemCollection.Add(Telerik.Web.UI.RadSliderItem)">Add</see> method to add items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadSliderItemCollection.Remove(Telerik.Web.UI.RadSliderItem)">Remove</see> method to remove items from the
                        collection.
                    </item>
            	</list>
            </remarks>
            <moduleiscollection/>
        </member>
        <member name="M:Telerik.Web.UI.RadSliderItemCollection.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see> class.
            </summary>
            <param name="parent">The owner of the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadSliderItemCollection.Add(Telerik.Web.UI.RadSliderItem)">
            <summary>
            Appends the specified <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> object to the end of the current <see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see>.
            </summary>
            <param name="item">
            The <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> to append to the end of the current <see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadSliderItemCollection.FindItemByText(System.String)">
            <summary>
            Finds the first <strong>RadSliderItem</strong> with <strong>Text</strong> that
            matches the given text value.
            </summary>
            <returns>
            	<font size="1">The first <strong>RadSliderItem</strong> that matches the
            specified text value.</font>
            </returns>
            <param name="text">The string to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadSliderItemCollection.FindItemByValue(System.String)">
            <summary>
            Finds the first <strong>RadSliderItem</strong> with <strong>Value</strong> that
            matches the given value.
            </summary>
            <returns>
            	<font size="1">The first <strong>RadSliderItem</strong> that matches the
            specified value.</font>
            </returns>
            <param name="value">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadSliderItemCollection.FindItemByAttribute(System.String,System.String)">
            <summary>
            Searches the items in the collection for a <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> which contains the specified attribute and attribute value.
            </summary>
            <param name="attributeName">The name of the target attribute.</param>
            <param name="attributeValue">The value of the target attribute</param>
            <returns>The <c>RadSliderItem</c> that matches the specified arguments. Null (Nothing) is returned if no node is found.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadSliderItemCollection.Contains(Telerik.Web.UI.RadSliderItem)">
            <summary>
            	Determines whether the specified <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> object is in the current 
            	<see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see>.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> object to find.
            </param>
            <returns>
            	<c>true</c> if the current collection contains the specified <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> object; 
            	otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadSliderItemCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Web.UI.RadSliderItem})">
            <summary>Appends the specified array of <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> objects to the end of the 
            current <see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see>.
            </summary>
            <param name="items">
                The array of <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> to append to the end of the current 
            <see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadSliderItemCollection.IndexOf(Telerik.Web.UI.RadSliderItem)">
            <summary>
            Determines the index of the specified <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> object in the collection.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> to locate.
            </param>
            <returns>
            	The zero-based index of item within the current <see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see>, 
            	if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadSliderItemCollection.Insert(System.Int32,Telerik.Web.UI.RadSliderItem)">
            <summary>
            Inserts the specified <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> object in the current 
            <see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see> at the specified index location.
            </summary>
            <param name="index">The zero-based index location at which to insert the <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see>.</param>
            <param name="item">The <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadSliderItemCollection.Remove(Telerik.Web.UI.RadSliderItem)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> object from the current
            	<see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see>.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> object to remove.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadSliderItemCollection.Remove(System.Int32)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> object from the current
            	<see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see>.
            </summary>
            <param name="index">
            	The zero-based index of the index to remove.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadSliderItemCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> object at the specified index in 
            	the current <see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see>.
            </summary>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> to retrieve.
            </param>
            <returns>
            	The <see cref="T:Telerik.Web.UI.RadSliderItem">RadSliderItem</see> at the specified index in the 
            	current <see cref="T:Telerik.Web.UI.RadSliderItemCollection">RadSliderItemCollection</see>.
            </returns>
        </member>
        <member name="T:Telerik.Web.UI.MultiPageScrollBars">
            <summary>
            	Specifies the visibility and position of scrollbars in a <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.MultiPageScrollBars.None">
            <summary>
            No scroll bars are displayed. Overflowing content will be visible.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.MultiPageScrollBars.Horizontal">
            <summary>
            	Displays only a horizontal scroll bar. The scroll bar is always visible.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.MultiPageScrollBars.Vertical">
            <summary>
            	Displays only a vertical scroll bar. The scroll bar is always visible.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.MultiPageScrollBars.Both">
            <summary>
            	Displays both a horizontal and a vertical scroll bar. The scroll bars are always visible.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.MultiPageScrollBars.Auto">
            <summary>
            	Displays, horizontal, vertical, or both scroll bars as necessary (the content overflows the RadMultiPage boundaries). 
            	Otherwise, no scroll bars are shown.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.MultiPageScrollBars.Hidden">
            <summary>
            	No scroll bars are displayed. Overflowing content is clippet at RadMultiPage boundaries.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadMultiPageEventArgs">
            <summary>
            	Provides data for the events of the <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadMultiPageEventArgs.#ctor(Telerik.Web.UI.RadPageView)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadMultiPageEventArgs">RadMultiPageEventArgs</see> class.
            </summary>
            <param name="pageView">
                A <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> which represents a page view in the
                <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadMultiPageEventArgs.PageView">
            <summary>
               Gets the referenced page view in the <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control when the event is raised.
            </summary>
            <value>
                The referenced page view in the <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control when the event is raised.
            </value>
            <remarks>
                Use this property to programmatically access the page view referenced in the <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control when the event is raised.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadMultiPageEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Telerik.Web.UI.RadMultiPage.PageViewCreated"/> event provided by the <see cref="T:Telerik.Web.UI.RadMultiPage"/> control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.MultiPageClientState">
            <summary>
            	For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadPageView">
            <summary>
                The <b>RadPageView</b> class represents a single page in the
                <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPageView.MultiPage">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control which contains the current RadPageView
            </summary>
            <value>
            	A <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> object which contains the current RadPageView. 
            	Null (Nothing in VB.NET) is returned if the current RadPageView is not added in a RadMultiPage control.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadPageView.Selected">
            <summary>
            	Gets or sets a value indicating whether the current RadPageView is selected.
            </summary>
            <value>
            	<c>true</c> if the current RadPageView is selected; otherwise
            	<c>false</c>. The default value is <c>false</c>.
            </value>
            <remarks>
            	Use the Selected property to select a RadPageView object. There can be only one selected
            	RadPageView at a time within a <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPageView.Index">
            <summary>
            	Gets the zero-based index of the current RadPageView object.
            </summary>
            <value>
            	The zero-based index of the current RadPageView; -1 will be returned if the current RadPageView object is not added 
            	in a <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.RadMultiPage">
            <summary>
            	A control which contains <see cref="T:Telerik.Web.UI.RadPageView"/> controls. Only one page view can be visible at a time.
            </summary>
            <remarks>
            	RadMultiPage is usually used with RadTabStrip to create paged data entry forms. Use the <see cref="P:Telerik.Web.UI.RadTabStrip.MultiPageID"/>
            	property to associate a RadMultiPage control with RadTabStrip.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadMultiPage.FindPageViewByID(System.String)">
            <summary>
            	Finds a <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> with the specified ID.
            </summary>
            <param name="id">The ID of the RadPageView</param>
            <returns>
            	A <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> with the specified ID. Null (Nothing) is returned if there is no
            	<see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> with the specified ID.
            </returns>
        </member>
        <member name="P:Telerik.Web.UI.RadMultiPage.SelectedIndex">
            <summary>
            	Gets or sets the index of the selected <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see>.
            </summary>
            <value>
            	The index of the currently selected <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see>. The default value is -1,
            	which means that no <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> is selected.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadMultiPage.EnableEmbeddedScripts">
            <summary>
            	Gets or sets the value indicating whether to register the embedded JavaScript files or not.
            </summary>
            <remarks>
            <para>
            	If EnableEmbeddedScripts is set to false you will have to register the needed JavaScript files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMultiPage.PageViews">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadPageViewCollection">RadPageViewCollection</see> that represents the <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see>
            	controls int the current RadMultiPage instance.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMultiPage.RenderSelectedPageOnly">
            <summary>
            	Gets or sets a value indicating whether to render only the currently selected <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see>.
            </summary>
            <value>
            	<c>True</c> if only the current <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> should be rendered; otherwise <c>false</c>.
            	The default value is <c>false</c> which means all pageviews will be rendered.
            </value>
            <remarks>
            	Use the RenderSelectedPageOnly to make the RadMultiPage control render only the selected <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see>.
            	This can save output size because by default all pageviews are rendered. If RenderSelectedPageOnly is set to <c>true</c> 
            	RadMultiPage will make a request to the server in order to change the selected pageview.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMultiPage.ScrollBars">
            <summary>
            	Gets or sets the visibility and position of scroll bars in the <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control.
            </summary>
            <value>
            	One of the <see cref="T:Telerik.Web.UI.MultiPageScrollBars"/> values. The default value is None.
            </value>
            <remarks>
            	Use this property to customize the visibility and position of scroll bars. By default any overflowing content is visible. 
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadMultiPage.PageViewCreated">
            <summary>
            	Occurs when page views are added programmatically to the RadMultiPage control. It also occurs after postback when
            	the RadMultiPage control recreates its page views from ViewState.
            </summary>
            <example>
                The example below starts by defining a dynamic page view and adding a control (i.e.
                Label) to the new page view. 
                <code lang="CS">
            		protected void Page_Load(object sender, System.EventArgs e)
            		{
            			if (!Page.IsPostBack)
            			{
            				PageView view = new RadPageView();
            				view.ID = "dynamicPageView";
            				RadMultiPage1.PageViews.Add(view);
            			}
            		}
              
            		protected void RadMultiPage1_PageViewCreated(object sender, Telerik.Web.UI.RadMultiPageEventArgs e)
            		{
            			Label l = new Label();
            			l.ID = "dynamicLabel";
            			l.Text = "Programatically created label";
            			e.PageView.Controls.Add(l);
            		}
                </code>
            	<code lang="VB">
            		Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)
            		    If Not Page.IsPostBack Then
            		        Dim view As PageView = New RadPageView()
            		        view.ID = "dynamicPageView"
            		        RadMultiPage1.PageViews.Add(view)
            		    End If
            		End Sub
            		
            		Protected Sub RadMultiPage1_PageViewCreated(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadMultiPageEventArgs) Handles RadMultiPage1.PageViewCreated
            		    Dim l As New Label()
            		    l.ID = "dynamicLabel"
            		    l.Text = "Programatically created label"
            		    e.PageView.Controls.Add(l)
            		End Sub
            	</code>
            </example>
            <remarks>
            	Use this event when you need to create page views from code behind. Controls added dynamically should be created in 
            	the PageViewCreated event handler.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.TabStripAlign">
            <summary>
            Specifies the alignment of tabs within the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TabStripAlign.Left">
            <summary>
            The Tabs will be aligned to the left.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TabStripAlign.Center">
            <summary>
            The Tabs will be centered in the middle.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TabStripAlign.Right">
            <summary>
            The Tabs will be aligned to the right.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TabStripAlign.Justify">
            <summary>
            The Tabs will be justified.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.TabStripOrientation">
            <summary>
            	Specifies the way tabs can be oriented
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TabStripOrientation.HorizontalTop">
            <summary>
            	RadTabStrip is above the content (e.g. RadMultiPage). 
            	Child tabs (if any) are shown below parent tabs.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TabStripOrientation.HorizontalBottom">
            <summary>
            	RadTabStrip is below the content (e.g. RadMultiPage). 
            	Child tabs (if any) are shown above parent tabs.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TabStripOrientation.VerticalRight">
            <summary>
            	RadTabStrip is on the right side of the content (e.g. RadMultiPage). 
            	Child tabs (if any) are shown on the left side of parent tabs.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TabStripOrientation.VerticalLeft">
            <summary>
            	RadTabStrip is on the left side of the content (e.g. RadMultiPage). 
            	Child tabs (if any) are shown on the right side of parent tabs.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.TabStripScrollButtonsPosition">
            <summary>
            	The position of the scroll buttons when the <see cref="P:Telerik.Web.UI.RadTabStrip.ScrollChildren">RadTabStrip.ScrollChildren</see>
            	property is set to <c>true</c>.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TabStripScrollButtonsPosition.Left">
            <summary>
            The buttons are to the left of tabs.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TabStripScrollButtonsPosition.Middle">
            <summary>
            The tabs are between the left and right scroll buttons.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TabStripScrollButtonsPosition.Right">
            <summary>
            The buttons are to the right of the tabs.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTabStripEventArgs">
            <summary>
            Provides data for the events of the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTabStripEventArgs.#ctor(Telerik.Web.UI.RadTab)">
            <summary>
                Initializes a new instance of the
                <see cref="T:Telerik.Web.UI.RadTabStripEventArgs">RadTabStripEventArgs</see> class.
            </summary>
            <param name="tab">
                A <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> which represents a tab in the
                <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStripEventArgs.Tab">
            <summary>
               Gets the referenced tab in the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control when the event is raised.
            </summary>
            <value>
                The referenced tab in the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control when the event is raised.
            </value>
            <remarks>
                Use this property to programmatically access the tab referenced in the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control when the event is raised.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadTabStripEventHandler">
            <summary>
            Represents the method that handles the events provided by the <see cref="T:Telerik.Web.UI.RadTabStrip"/> control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.IRadTabContainer">
            <summary>
                Defines properties that tab containers (<see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see>,
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see>) should implement.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IRadTabContainer.Owner">
            <summary>
            Gets the parent <see cref="T:Telerik.Web.UI.IRadTabContainer">IRadTabContainer</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IRadTabContainer.Tabs">
            <summary>
            Gets the collection of child tabs.
            </summary>
            <value>
            A <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see> which represents the child tabs of 
            the <see cref="T:Telerik.Web.UI.IRadTabContainer">IRadTabContainer</see>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.IRadTabContainer.SelectedIndex">
            <summary>
            	Gets or sets the index of the selected child tab.
            </summary>
            <value>
            	The zero based index of the selected tab. The default value is -1 (no child tab is selected).
            </value>
            <remarks>
            	Use the <b>SelectedIndex</b> property to programmatically specify the selected
            	child tab in a <b>IRadTabContainer</b> (<b>RadTabStrip</b> or <b>RadTab</b>). 
            	To clear the selection set the <b>SelectedIndex</b> property to <c>-1</c>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadTabContainer.SelectedTab">
            <summary>
            	Gets the selected child tab.
            </summary>
            <value>
            	Returns the child tab which is currently selected. If no tab is selected
            	(the <see cref="P:Telerik.Web.UI.IRadTabContainer.SelectedIndex">SelectedIndex</see> property is <c>-1</c>) the <b>SelectedTab</b> 
            	property will return <c>null</c> (<c>Nothing</c> in VB.NET).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.IRadTabContainer.ScrollChildren">
            <summary>
            	Gets or sets a value indicating whether the children of the tab will be
            	scrollable.
            </summary>
            <value>
            	<c>true</c> if the child tabs will be scrolled; otherwise
            	<c>false</c>. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.IRadTabContainer.PerTabScrolling">
            <summary>
            	Gets or sets a value indicating whether the tabstrip should scroll directly to
            	the next tab.
            </summary>
            <value>
            	<c>true</c> if the tabstrip should scroll to the next (or previous) tab; otherwise <c>false</c>. 
            	The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.IRadTabContainer.ScrollButtonsPosition">
            <summary>The position of the scroll buttons with regards to the tab band.</summary>
            <remarks>
                This property is applicable when the
                <see cref="P:Telerik.Web.UI.IRadTabContainer.ScrollChildren">ScrollChildren</see> property is set to
                <c>true</c>; otherwise it is ignored.
            </remarks>
            <value>
                One of the <see cref="T:Telerik.Web.UI.TabStripScrollButtonsPosition">TabStripScrollButtonsPosition</see>
                enumeration values. The default value is <c>Right</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.IRadTabContainer.ScrollPosition">
            <summary>
            	Gets or sets the position of the scrollable band of tabs relative to the
            	beginning of the scrolling area.
            </summary>
            <remarks>
                This property is applicable when the
                <see cref="P:Telerik.Web.UI.IRadTabContainer.ScrollChildren">ScrollChildren</see> property is set to
                <strong>true</strong>; otherwise it is ignored.
            </remarks>
            <value>
            	An integer specifying the initial scrolling position (measured in pixels). The default value is 0
                (no offset from the default scrolling position). Use negative values to move the tabs to the left.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.RadPageViewCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> objects in a
                <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control.
            </summary>
            <remarks>
            	The <strong>RadPageViewCollection</strong> class represents a collection of
                <strong>RadPageView</strong> objects.
            	<list type="bullet">
            		<item>
                        Use the <see cref="P:Telerik.Web.UI.RadPageViewCollection.Item(System.Int32)">indexer</see> to programmatically retrieve a
                        single RadPageView from the collection, using array notation.
                    </item>
            		<item>
                        Use the <strong>Count</strong> property to determine the total
                        number of RadPageView controls in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadPageViewCollection.Add(Telerik.Web.UI.RadPageView)">Add</see> method to add RadPageView controls to the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadPageViewCollection.Remove(Telerik.Web.UI.RadPageView)">Remove</see> method to remove RadPageView controls from the
                        collection.
                    </item>
            	</list>
            </remarks>
            <moduleiscollection/>
        </member>
        <member name="M:Telerik.Web.UI.RadPageViewCollection.#ctor(Telerik.Web.UI.RadMultiPage)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadPageViewCollection"/> class.
            </summary>
            <param name="multiPage">The owner of the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPageViewCollection.Add(Telerik.Web.UI.RadPageView)">
            <summary>
            	Appends the specified <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> to the collection.
            </summary>
            <param name="pageView">
            	The <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> to append to the collection.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadPageViewCollection.Insert(System.Int32,Telerik.Web.UI.RadPageView)">
            <summary>
            Inserts the specified <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> object in the current 
            <see cref="T:Telerik.Web.UI.RadPageViewCollection">RadPageViewCollection</see> at the specified index location.
            </summary>
            <param name="index">The zero-based index location at which to insert the <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see>.</param>
            <param name="pageView">The <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPageViewCollection.Add(System.Web.UI.Control)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadPageViewCollection.AddAt(System.Int32,System.Web.UI.Control)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadPageViewCollection.IndexOf(System.Web.UI.Control)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadPageViewCollection.Remove(System.Web.UI.Control)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadPageViewCollection.Contains(System.Web.UI.Control)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadPageViewCollection.Remove(Telerik.Web.UI.RadPageView)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> from the collection.
            </summary>
            <param name="pageView">
            	The <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> to remove from the collection.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadPageViewCollection.IndexOf(Telerik.Web.UI.RadPageView)">
            <summary>
                Determines the index of the specified <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> in the collection.
            </summary>
            <returns>
            	The zero-based index position of the specified <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> in the
            	collection. If the specified <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> is not found in the collection -1 is returned.
            </returns>
            <param name="pageView">
            	A <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> to search for in the collection.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadPageViewCollection.Item(System.Int32)">
            <summary>
                Gets the <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> at the specified index in the
                collection.
            </summary>
            <remarks>
            	Use this indexer to get a <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> from the collection at
                the specified index, using array notation.
            </remarks>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> to retrieve from the
            	collection.
            </param>
        </member>
        <member name="T:Telerik.Web.UI.RadTabBinding">
            <summary>
            	Defines the relationship between a data item and the tab it is binding to in a 
            	<see cref="T:Telerik.Web.UI.RadTabStrip"/>control. 
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTabBinding.ApplyTo(Telerik.Web.UI.NavigationItem,System.Object,Telerik.Web.UI.PropertyDescriptorCache)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.ChildGroupCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.ChildGroupCssClass">ChildGroupCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.ChildGroupCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.ChildGroupCssClass">ChildGroupCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.DisabledCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.DisabledCssClass">DisabledCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.DisabledCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.DisabledCssClass">DisabledCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.DisabledImageUrl">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.DisabledImageUrl">DisabledImageUrl</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.DisabledImageUrlField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.DisabledImageUrl">DisabledImageUrl</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.HoveredCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.HoveredCssClass">HoveredCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.HoveredCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.HoveredCssClass">HoveredCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.IsSeparator">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.IsSeparator">IsSeparator</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.IsSeparatorField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.IsSeparator">IsSeparator</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.IsBreak">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.IsBreak">IsBreak</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.IsBreakField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.IsBreak">IsBreak</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.PerTabScrolling">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.PerTabScrolling">PerTabScrolling</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.PerTabScrollingField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.PerTabScrolling">PerTabScrolling</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.ScrollChildren">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.ScrollChildren">ScrollChildren</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.ScrollChildrenField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.ScrollChildren">ScrollChildren</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.ScrollPosition">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.ScrollPosition">ScrollPosition</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.ScrollPositionField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.ScrollPosition">ScrollPosition</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.SelectedCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.SelectedCssClass">SelectedCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.SelectedCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.SelectedCssClass">SelectedCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.SelectedImageUrl">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.SelectedImageUrl">SelectedImageUrl</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.SelectedImageUrlField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.SelectedImageUrl">SelectedImageUrl</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.SelectedIndexField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.SelectedIndex">SelectedIndex</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.SelectedIndex">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.SelectedIndex">SelectedIndex</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.PageViewID">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.PageViewID">PageViewID</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.PageViewIDField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.PageViewID">PageViewID</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.ScrollButtonsPosition">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTab.ScrollButtonsPosition">ScrollButtonsPosition</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBinding.ScrollButtonsPositionField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTab.ScrollButtonsPosition">ScrollButtonsPosition</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTabBindingCollection">
            <summary>
            	Represents a collection of <see cref="T:Telerik.Web.UI.RadTabBinding"/> objects.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabBindingCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadTabBinding"/> object at the specified index from the collection.
            </summary>
            <returns>
            	The <see cref="T:Telerik.Web.UI.RadTabBinding"/>at the specified index in the collection.
            </returns>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadTabBinding"/> to retrieve.
            </param>
        </member>
        <member name="T:Telerik.Web.UI.RadTabStrip">
            <summary>A navigation control used to create tabbed interfaces.</summary>
            <remarks>
            	<para>
                    The <b>RadTabStrip</b> control is used to display a list of tabs in a Web Forms
                    page and is often used in combination with a
                    <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control for building tabbed
                    interfaces. The <b>RadTabStrip</b> control supports the following features:
                </para>
            	<list type="bullet">
            		<item>Databinding that allows the control to be populated from various
                    datasources</item>
            		<item>Programmatic access to the <strong>RadTabStrip</strong> object model
                    which allows to dynamic creation of tabstrips, populate h tabs, set
                    properties.</item>
            		<item>Customizable appearance through built-in or user-defined skins.</item>
            	</list>
            	<h3>Tabs</h3>
            	<para>
                    The <strong>RadTabStrip</strong> control is made up of tree of tabs represented
                    by <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> objects. Tabs at the top level (level 0) are
                    called root tabs. A tab that has a parent tab is called a child tab. All root
                    tabs are stored in the <see cref="P:Telerik.Web.UI.RadTabStrip.Tabs">Tabs</see> collection. Child tabs are
                    stored in a parent tab's <see cref="P:Telerik.Web.UI.RadTab.Tabs">Tabs</see> collection.
                </para>
            	<para>
                    Each tab has a <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> and a <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property. 
            		The value of the <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is displayed in the <b>RadTabStrip</b> control, 
            		while the <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property is used to store any additional data about the tab, 
            		such as data passed to the postback event associated with the tab. When clicked, a tab can
                    navigate to another Web page indicated by the <see cref="P:Telerik.Web.UI.RadTab.NavigateUrl">NavigateUrl</see> property.
                </para>
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadTabStrip.#ctor">
             <summary>
            		Initializes a new instance of the RadTabStrip class.
             </summary>
             <remarks>
            		Use this constructor to create and initialize a new instance of the RadTabStrip
            		control.
             </remarks>
             <example>
                 The following example demonstrates how to programmatically create a RadTabStrip
                 control. 
                 <code lang="CS">
            			void Page_Load(object sender, EventArgs e)
            			{
            				RadTabStrip RadTabStrip1 = new RadTabStrip();
            				RadTabStrip1.ID = "RadTabStrip1";
             
            				if (!Page.IsPostBack)
            				{
            					//RadTabStrip persist its tab in ViewState (if EnableViewState is true). 
            					//Hence tabs should be created only on initial load.
             
            					RadTab sportTab = new RadTab("Sport");
            					RadTabStrip1.Tabs.Add(sportTab);
            			     
            					RadTab newsTab = new RadTab("News");
            					RadTabStrip1.Tabs.Add(newsTab);
            				}
             
            				PlaceHolder1.Controls.Add(RadTabStrip1);
            			}
                 </code>
             	<code lang="VB">
            			Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
            				Dim RadTabStrip1 As RadTabStrip = New RadTabStrip()
            				RadTabStrip1.ID = "RadTabStrip1"
            				
            				If Not Page.IsPostBack Then
            					'RadTabStrip persist its tab in ViewState (if EnableViewState is true).				
             				'Hence tabs should be created only on initial load.
             
            					Dim sportTab As RadTab = New RadTab("Sport")
            					RadTabStrip1.Tabs.Add(sportTab)
            
            					Dim newsTab As RadTab = New RadTab("News")
            					RadTabStrip1.Tabs.Add(newsTab)
            				End If
             
            				PlaceHolder1.Controls.Add(RadTabStrip1)
            			 End Sub
                 </code>
             </example>
        </member>
        <member name="M:Telerik.Web.UI.RadTabStrip.LoadContentFile(System.String)">
            <summary>
            Populates the <strong>RadTabStrip</strong> control from external XML file.
            </summary>
            <remarks>
            The newly added items will be appended after any existing ones.
            </remarks>
            <example>
                The following example demonstrates how to populate <strong>RadTabStrip</strong> control
                from XML file. 
                <code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                if (!Page.IsPostBack)
                {
                    RadTabStrip1.LoadContentFile("~/Data.xml");
                }
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(sender As Object, e As EventArgs) Handles MyBase.Load
                If Not Page.IsPostBack Then
                    RadTabStrip1.LoadContentFile("~/Data.xml")
                End If
            End Sub
                </code>
            </example>
            <param name="xmlFileName">The name of the XML file.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabStrip.GetAllTabs">
            <summary>
            	Gets a linear list of all tabs in the <b>RadTabStrip</b> control.
            </summary>
            <returns>
            	An <strong>IList</strong> object containing 
            	all tabs in the current RadTabStrip control.
            </returns>		
        </member>
        <member name="M:Telerik.Web.UI.RadTabStrip.FindTabByUrl(System.String)">
            <summary>
                Searches the <strong>RadTabStrip</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.NavigateUrl">NavigateUrl</see>
                property is equal to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.NavigateUrl">NavigateUrl</see> property is equal to the specifed 
            	value. If a tab is not found, null (Nothing in Visual Basic) is returned.
            </returns>
            <param name="url">
            	The URL to search for.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabStrip.FindTabByValue(System.String)">
            <summary>
                Searches the <strong>RadTabStrip</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property is equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property is equal to the specifed 
            	value. If a tab is not found, null (Nothing in Visual Basic) is returned.
            </returns>
            <param name="value">
            	The value to search for.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabStrip.FindTabByValue(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadTabStrip</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property is equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property is equal to the specifed 
            	value. If a tab is not found, null (Nothing in Visual Basic) is returned.
            </returns>
            <param name="value">
            	The value to search for.
            </param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabStrip.FindTabByText(System.String)">
            <summary>
                Searches the <strong>RadTabStrip</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is equal
                to the specified value. If a tab is not found, null (Nothing in Visual Basic) is returned.
            </returns>
            <param name="text">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabStrip.FindTabByText(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadTabStrip</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is equal
                to the specified value. If a tab is not found, null (Nothing in Visual Basic) is returned.
            </returns>
            <param name="text">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabStrip.FindTab(System.Predicate{Telerik.Web.UI.RadTab})">
            <summary>
            Returns  the first <strong>RadTab</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindTab</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadTabStrip1.FindTab(ItemWithEqualsTextAndValue);
            }
            private static bool ItemWithEqualsTextAndValue(RadTab tab)
            {
                if (tab.Text == tab.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadTabStrip1.FindTab(ItemWithEqualsTextAndValue)
            End Sub
            Private Shared Function ItemWithEqualsTextAndValue(ByVal tab As RadTab) As Boolean
                If tab.Text = tab.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
            </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.ClientChanges">
             <summary>
            		Gets a list of all client-side changes (adding a tab, removing a tab, changing a tab's property) which have occurred.
             </summary>
             <value>
            		A list of <see cref="T:Telerik.Web.UI.ClientOperation`1"/> objects which represent all client-side changes the user has performed. 
            		By default the ClientChanges property returns empty list. Client-changes are recorded if and only if the client-side
            		methods trackChanges()/commitChanges() have been invoked.
             </value>
             <remarks>
            		You can use the ClientChanges property to respond to client-side modifications such as
            		<list type="bullet">
            			<tab>adding a new tab</tab>
            			<tab>removing existing tab</tab>
            			<tab>clearing the children of a tab or the control itself</tab>
            			<tab>changing a property of the tab</tab>
            		</list>
            		The ClientChanges property is available in the first postback (ajax) request after the client-side modifications
            		have taken place. After this moment the property will return empty list.
             </remarks>
             <example>
            		The following example demonstrates how to use the ClientChanges property
            		<code lang="CS">
            		foreach (ClientOperation&lt;RadTab&gt; operation in RadTabStrip1.ClientChanges)
            		{
            			RadTab tab = operation.Item;
            
            			switch (operation.Type)
            			{
            				case ClientOperationType.Insert:
            					//An tab has been inserted - operation.Item contains the inserted tab
            				break;
            				case ClientOperationType.Remove:
            					//An tab has been inserted - operation.Item contains the removed tab. 
                             //Keep in mind the tab has been removed from the tabstrip.
            				break;
            				case ClientOperationType.Update:
            					UpdateClientOperation&lt;RadTab&gt; update = operation as UpdateClientOperation&lt;RadTab&gt;
            					//The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            				break;
            				case ClientOperationType.Clear:
            					//All children of have been removed - operation.Item contains the parent tab whose children have been removed. If operation.Item is null then the root tabs have been removed.
            				break;
            			}
            		}
            		</code>
            		<code lang="VB">
            			For Each operation As ClientOperation(Of RadTab) In RadTabStrip1.ClientChanges
            				Dim tab As RadTab = operation.Item
            				Select Case operation.Type
            					Case ClientOperationType.Insert
            						'A tab has been inserted - operation.Item contains the inserted tab
            					Exit Select
            					Case ClientOperationType.Remove
            						'A tab has been inserted - operation.Item contains the removed tab. 
            						'Keep in mind the tab has been removed from the tabstrip.
            					Exit Select
            					Case ClientOperationType.Update
            						Dim update As UpdateClientOperation(Of RadTab) = TryCast(operation, UpdateClientOperation(Of RadTab))
            						'The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            					Exit Select
            					Case ClientOperationType.Clear
            						'All children of have been removed - operation.Item contains the parent tab whose children have been removed. If operation.Item is Nothing then the root tabs have been removed.
            					Exist Select
            				End Select
            			Next
            		</code>
             </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.ScrollChildren">
            <summary>
            	Gets or sets a value indicating whether the immediate children of the <b>RadTabStrip</b> control will be
            	scrollable.
            </summary>
            <value>
            	<c>true</c> if the child tabs will be scrollable; otherwise <c>false</c>. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.ScrollButtonsPosition">
            <summary>The position of the scroll buttons with regards to the tab band.</summary>
            <remarks>
                This property is applicable when the
                <see cref="P:Telerik.Web.UI.RadTabStrip.ScrollChildren">ScrollChildren</see> property is set to
                <c>true</c>; otherwise it is ignored.
            </remarks>
            <value>
                One of the <see cref="T:Telerik.Web.UI.TabStripScrollButtonsPosition">TabStripScrollButtonsPosition</see>
                enumeration values. The default value is <c>Right</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.ScrollPosition">
            <summary>
            	Gets or sets the position of the scrollable band of tabs relative to the
            	beginning of the scrolling area.
            </summary>
            <remarks>
                This property is applicable when the <see cref="P:Telerik.Web.UI.RadTabStrip.ScrollChildren">ScrollChildren</see> property is set to
                <c>true</c>; otherwise it is ignored.
            </remarks>
            <value>
            	An integer specifying the initial scrolling position (measured in pixels). The default value is 0
                (no offset from the default scrolling position). Use negative values to move the tabs to the left.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.PerTabScrolling">
            <summary>
            	Gets or sets a value indicating whether the tabstrip should scroll directly to
            	the next tab.
            </summary>
            <value>
            	<c>true</c> if the tabstrip should scroll to the next (or previous) tab; otherwise <c>false</c>. 
            	The default value is <c>false</c>.
            </value>
            <remarks>
                By default tabs are scrolled smoothly. If you want the tabstrip to scroll directly
                to the next (or previous) tab set this property to <c>true</c>. This
                property is applicable when the <see cref="P:Telerik.Web.UI.RadTabStrip.ScrollChildren">ScrollChildren</see>
                property is set to <c>true</c>; otherwise it is ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.SelectedIndex">
            <summary>
            	Gets or sets the index of the selected child tab.
            </summary>
            <value>
            	The zero based index of the selected tab. The default value is -1 (no child tab is selected).
            </value>
            <remarks>
            	Use the <b>SelectedIndex</b> property to programmatically specify the selected
            	child tab in a <b>IRadTabContainer</b> (<b>RadTabStrip</b> or <b>RadTab</b>). 
            	To clear the selection set the <b>SelectedIndex</b> property to <c>-1</c>.
            </remarks>
            <example>
                The following example demonstrates how to programmatically select a tab by using
                the <b>SelectedIndex</b> property.
                <code lang="CS">
            		void Page_Load(object sender, EventArgs e)
            		{
            			if (!Page.IsPostBack)
            			{
            				RadTab newsTab = new RadTab("News");
            				RadTabStrip1.Tabs.Add(newsTab);
                
            				RadTabStrip1.SelectedIndex = 0; //This will select the "News" tab
             
            				RadTab cnnTab = new RadTab("CNN");
            				newsTab.Tabs.Add(cnnTab);
             
            				RadTab nbcTab = new RadTab("NBC");
            				newsTab.Tabs.Add(nbcTab);
             
            				newsTab.SelectedIndex = 1; //This will select the "NBC" child tab of the "News" tab
            			}
            		}
                </code>
            	<code lang="VB">
            		 Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
            		     If Not Page.IsPostBack Then
            		         Dim newsTab As RadTab = New RadTab("News")
            		         RadTabStrip1.Tabs.Add(newsTab)
            		  
            		         RadTabStrip1.SelectedIndex = 0 'This will select the "News" tab
            		  
            		         Dim cnnTab As RadTab = New RadTab("CNN")
            		         newsTab.Tabs.Add(cnnTab)
            		  
            		         Dim nbcTab As RadTab = New RadTab("NBC")
            		         newsTab.Tabs.Add(nbcTab)
            		  
            		         newsTab.SelectedIndex = 1 'This will select the "NBC" child tab of the "News" tab
            		     End If
            		 End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.SelectedTab">
            <summary>
            	Gets the selected child tab.
            </summary>
            <value>
            	Returns the child tab which is currently selected. If no tab is selected
            	(the <see cref="P:Telerik.Web.UI.RadTabStrip.SelectedIndex">SelectedIndex</see> property is <c>-1</c>) the <b>SelectedTab</b> 
            	property will return <c>null</c> (<c>Nothing</c> in VB.NET).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.Tabs">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see> object that contains the root tabs of the current RadTabStrip control.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see> that contains the root tabs of the current RadTabStrip control. By default
            	the collection is empty (RadTabStrip has no children).
            </value>
            <remarks>
            	Use the <b>Tabs</b> property to access the child tabs of RadTabStrip. You can also use the <b>Tabs</b> property to
            	manage the root tabs. You can add, remove or modify tabs from the <b>Tabs</b> collection.
            </remarks>
            <example>
                The following example demonstrates how to programmatically modify the properties of root tabs.
                <code lang="CS">
            		RadTabStrip1.Tabs[0].Text = "Example";
            		RadTabStrip1.Tabs[0].NavigateUrl = "http://www.example.com";
                </code>
            	<code lang="VB">
            		RadTabStrip1.Tabs(0).Text = "Example"
            		RadTabStrip1.Tabs(0).NavigateUrl = "http://www.example.com"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.TabTemplate">
            <summary>Gets or sets the template for displaying all tabs in the <see cref="T:Telerik.Web.UI.RadTabStrip"/> control.</summary>
            <value>
            	<para>An object implementing the <strong>ITemplate</strong>The default value is a null reference (<strong>Nothing</strong> in
                Visual Basic), which indicates that this property is not set.</para>
            	<para>
                    To specify unique display for specific tabs use the
                    <see cref="P:Telerik.Web.UI.RadTab.TabTemplate"/> property of the <see cref="T:Telerik.Web.UI.RadTab"/> class.
                </para>
            </value>
            <example>
            	The following example demonstrates how to customize the appearance of all tabs
            	<code lang="html">
            		&lt;telerik:RadTabStrip runat="server" ID="RadTabStrip1"&gt;
            			&lt;TabTemplate&gt;
            				&lt;%# DataBinder.Eval(Container, "Text") %&gt;
            				&lt;img style="margin-left: 10px" src="Images/delete.gif" alt="delete"/&gt;
            			&lt;/TabTemplate&gt;
            		&lt;Tabs&gt;
            			&lt;telerik:RadTab Text="Products"&gt;
            			&lt;/telerik:RadTab&gt;
            			&lt;telerik:RadTab Text="Services"&gt;
            			&lt;/telerik:RadTab&gt;
            			&lt;telerik:RadTab Text="Corporate"&gt;
            			&lt;/telerik:RadTab&gt;
            		&lt;/Tabs&gt;
            		&lt;/telerik:RadTabStrip&gt;
            	</code>
            	<code lang="CS">
            	protected void Page_Load(object sender, System.EventArgs e)
            	{
            		if (!Page.IsPostBack)
            		{
            			//Required to evaluate the databinding expressions inside the template (&lt;%# DataBinder.Eval)%&gt;
            			RadTabStrip1.DataBind();
            		}
            	}
            	</code>
            	<code lang="VB">
            	Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
            		If Not Page.IsPostBack Then
            			RadTabStrip1.DataBind()
            		End If
            	End Sub
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.AutoPostBack">
            <summary>
            	Gets or sets a value indicating whether tabs should postback when clicked.
            </summary>
            <value>
            	<c>True</c> if tabs should postback; otherwise <c>false</c>. The default value is <strong>false</strong>.
            </value>
            <remarks>
            	RadTabStrip will postback provided one of the following conditions is met:
            	<list type="bullet">
            		<item>
            			The <see cref="P:Telerik.Web.UI.RadTabStrip.AutoPostBack">AutoPostBack</see> property is set to <c>true</c>.
            		</item>
            		<item>
            			The user has subscribed to the <see cref="E:Telerik.Web.UI.RadTabStrip.TabClick">TabClick</see> event.
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.DataBindings">
            <summary>
            	Gets a collection of <see cref="T:Telerik.Web.UI.RadTabBindingCollection"/> objects that define the relationship 
            	between a data item and the tab it is binding to. 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.AppendDataBoundItems">
            <summary>
            	<para>Gets or sets a value that indicates whether child tabs are cleared before
                data binding.</para>
            </summary>
            <remarks>
            	<para>The <strong>AppendDataBoundTabs</strong> property allows you to add items to
                the RadTabStrp control before data binding occurs. After data binding, the items
                collection contains both the items from the data source and the previously added
                items.</para>
            	<para>The value of this property is stored in view state.</para>
            </remarks>
            <value>
            	<strong>True</strong> if child tabs should not be cleared before databinding;
            otherwise <strong>false</strong>. The default value is <strong>false</strong> (child
            items will be cleared before databinding).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.MaxDataBindDepth">
            <summary>
            	Gets or sets the maximum number of levels to bind to the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control.
            </summary>
            <value>
            	The maximum number of levels to bind to the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control. The default is -1, which binds all the levels in the data source to the control.
            </value>
            <remarks>
            	When binding the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control to a data source, use the MaxDataBindDepth 
            	property to limit the number of levels to bind to the control. For example, setting this property to 2 binds only 
            	the root tabs and their immediate children. All remaining records in the data source are ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.DataTextField">
            <summary>
            	Gets or sets the field of the data source that provides the text content of the tabs.
            </summary>
            <value>
            	A string that specifies the field of the data source that provides the text content of the tabs. 
            	The default value is empty string.
            </value>
            <remarks>
            	Use the DataTextField property to specify the field of the data source (in most cases the name of the database column) 
            	which provides values for the <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property of databound tabs. The DataTextField property is 
            	taken into account only during data binding.
            </remarks>
            <example>
            	The following example demonstrates how to use the DataTextField.
            	<code lang="CS">
            		DataTable data = new DataTable();
            		data.Columns.Add("MyText");
            		
            		data.Rows.Add(new object[] {"Tab Text 1"});
            		data.Rows.Add(new object[] {"Tab Text 2"});
            		
            		RadTabStrip1.DataSource = data;
            		RadTabStrip1.DataTextField = "MyText";		//"MyText" column provides values for the Text property of databound tabs
            		RadTabStrip1.DataBind();
            	</code>
            	<code lang="VB">
            		Dim data As new DataTable();
            		data.Columns.Add("MyText")
            		
            		data.Rows.Add(New Object() {"Tab Text 1"})
            		data.Rows.Add(New Object() {"Tab Text 2"})
            		
            		RadTabStrip1.DataSource = data
            		RadTabStrip1.DataTextField = "MyText"		'"MyText" column provides values for the Text property of databound tabs
            		RadTabStrip1.DataBind()
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.DataValueField">
            <summary>
            	Gets or sets the field of the data source that provides the value of the tabs.
            </summary>
            <value>
            	A string that specifies the field of the data source that provides the value of the tabs. 
            	The default value is empty string.
            </value>
            <remarks>
            	Use the DataValueField property to specify the field of the data source (in most cases the name of the database column) 
            	which provides the values for the <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property of databound tabs. The DataValueField property is 
            	taken into account only during data binding. If the DataValueField property is not set the <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> 
            	property of databound tabs will have its default value - empty string.
            </remarks>
            <example>
            	The following example demonstrates how to use the DataValueField.
            	<code lang="CS">
            		DataTable data = new DataTable();
            		data.Columns.Add("MyText");
            		data.Columns.Add("MyValue");
            		
            		data.Rows.Add(new object[] {"Tab Text 1", "Tab Value 1"});
            		data.Rows.Add(new object[] {"Tab Text 2", "Tab Value 2"});
            		
            		RadTabStrip1.DataSource = data;
            		RadTabStrip1.DataTextField = "MyText";		//"MyText" column provides values for the Text property of databound tabs
            		RadTabStrip1.DataValueField = "MyValue";	//"MyValue" column provides values for the Value property of databound tabs
            		RadTabStrip1.DataBind();
            	</code>
            	<code lang="VB">
            		Dim data As new DataTable();
            		data.Columns.Add("MyText")
            		data.Columns.Add("MyValue")
            		
            		data.Rows.Add(New Object() {"Tab Text 1", "Tab Value 1"})
            		data.Rows.Add(New Object() {"Tab Text 2", "Tab Value 2"})
            		
            		RadTabStrip1.DataSource = data
            		RadTabStrip1.DataTextField = "MyText"		'"MyText" column provides values for the Text property of databound tabs
            		RadTabStrip1.DataValueField = "MyValue"		'"MyValue" column provides values for the Value property of databound tabs
            		RadTabStrip1.DataBind()
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.DataNavigateUrlField">
            <summary>
            	Gets or sets the field of the data source that provides the URL to which tabs navigate.
            </summary>
            <value>
            	A string that specifies the field of the data source that provides the URL to which tabs will navigate. 
            	The default value is empty string.
            </value>
            <remarks>
            	Use the DataNavigateUrlField property to specify the field of the data source (in most cases the name of the database column) 
            	which provides the values for the <see cref="P:Telerik.Web.UI.RadTab.NavigateUrl">NavigateUrl</see> property of databound tabs. 
            	The DataNavigateUrlField property is taken into account only during data binding. If the DataNavigateUrlField property 
            	is not set the <see cref="P:Telerik.Web.UI.RadTab.NavigateUrl">NavigateUrl</see> property of databound tabs will have its default value - empty string.
            </remarks>
            <example>
            	The following example demonstrates how to use the DataNavigateUrlField.
            	<code lang="CS">
            		DataTable data = new DataTable();
            		data.Columns.Add("MyText");
            		data.Columns.Add("MyUrl");
            		
            		data.Rows.Add(new object[] {"Tab Text 1", "http://www.example.com/page1.aspx"});
            		data.Rows.Add(new object[] {"Tab Text 2", "http://www.example.com/page2.aspx"});
            		
            		RadTabStrip1.DataSource = data;
            		RadTabStrip1.DataTextField = "MyText";			//"MyText" column provides values for the Text property of databound tabs
            		RadTabStrip1.DataNavigateUrlField = "MyUrl";	//"MyUrl" column provides values for the NavigateUrl property of databound tabs
            		RadTabStrip1.DataBind();
            	</code>
            	<code lang="VB">
            		Dim data As new DataTable();
            		data.Columns.Add("MyText")
            		data.Columns.Add("MyUrl")
            		
            		data.Rows.Add(New Object() {"Tab Text 1", "http://www.example.com/page1.aspx"})
            		data.Rows.Add(New Object() {"Tab Text 2", "http://www.example.com/page2.aspx"})
            		
            		RadTabStrip1.DataSource = data
            		RadTabStrip1.DataTextField = "MyText"		'"MyText" column provides values for the Text property of databound tabs
            		RadTabStrip1.DataValueField = "MyUrl"		'"MyUrl" column provides values for the NavigateUrl property of databound tabs
            		RadTabStrip1.DataBind()
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.DataFieldID">
            <summary>
            	Gets or sets the field from the data source which is the "child" column in the
            	"parent-child" relationship used to databind the <b>RadTabStrip</b>
            	control.
            </summary>
            <value>
            	A string that specifies the field of the data source that will be the "child"
            	column during databinding. The default is empty string.
            </value>
            <remarks>
            	<b>RadTabStrip</b> requires both <see cref="P:Telerik.Web.UI.RadTabStrip.DataFieldID">DataFieldID</see> and
            	<see cref="P:Telerik.Web.UI.RadTabStrip.DataFieldParentID">DataFieldParentID</see> properties to be set in order to be hierarchically databound.
            </remarks>
            <example>
            	The following example demonstrates how to use DataFieldID and DataFieldParentID.
            	<code lang="CS">
            		DataTable data = new DataTable();
            		data.Columns.Add("MyText");
            		data.Columns.Add("MyID", typeof(int));
            		data.Columns.Add("MyParentID", typeof(int));
            		
            		data.Rows.Add(new object[] {"Root Tab 1", 1, null});
            		data.Rows.Add(new object[] {"Child Tab 1.1", 3, 1});
            		data.Rows.Add(new object[] {"Root Tab 2", 2, null});
            		data.Rows.Add(new object[] {"Child Tab 2.1", 4, 2});
            		
            		RadTabStrip1.DataSource = data;
            		RadTabStrip1.DataTextField = "MyText";			//"MyText" column provides values for the Text property of databound tabs
            		RadTabStrip1.DataFieldID = "MyID";				//"MyID" column provides values for the "child" column in the relation.
            		RadTabStrip1.DataFieldParentID = "MyParentID";	//"MyParentID" column provides values for the "parent" column in the relation.
            		RadTabStrip1.DataBind();
            	</code>
            	<code lang="VB">
            		Dim data As New DataTable()
            		data.Columns.Add("MyText")
            		data.Columns.Add("MyID", GetType(Integer))
            		data.Columns.Add("MyParentID", GetType(Integer))
            		
            		data.Rows.Add(New Object() {"Root Tab 1", 1, Nothing})
            		data.Rows.Add(New Object() {"Child Tab 1.1", 3, 1})
            		data.Rows.Add(New Object() {"Root Tab 2", 2, Nothing})
            		data.Rows.Add(New Object() {"Child Tab 2.1", 4, 2})
            	
            		RadTabStrip1.DataSource = data
            		RadTabStrip1.DataTextField = "MyText"			'"MyText" column provides values for the Text property of databound tabs
            		RadTabStrip1.DataFieldID = "MyID"				'"MyID" column provides values for the "child" column in the relation.
            		RadTabStrip1.DataFieldParentID = "MyParentID"	'"MyParentID" column provides values for the "parent" column in the relation.
            		RadTabStrip1.DataBind()
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.DataFieldParentID">
            <summary>
            	Gets or sets the field from the data source which is the "parent" column in the
            	"parent-child" relationship used to databind the <b>RadTabStrip</b>
            	control.
            </summary>
            <value>
            	A string that specifies the field of the data source that will be the "parent"
            	column during databinding. The default is empty string.
            </value>
            <remarks>
            	<para>
            		<b>RadTabStrip</b> requires both <see cref="P:Telerik.Web.UI.RadTabStrip.DataFieldID">DataFieldID</see> and
            		<see cref="P:Telerik.Web.UI.RadTabStrip.DataFieldParentID">DataFieldParentID</see> properties to be set in order to be hierarchically databound.
            	</para>
            	<para>
            		The value of the column specified by DataFieldParentID must be null (Nothing) for root tabs. This is a requirement 
            		for databinding RadTabStrip.
            	</para>
            </remarks>
            <example>
            	The following example demonstrates how to use DataFieldID and DataFieldParentID.
            	<code lang="CS">
            		DataTable data = new DataTable();
            		data.Columns.Add("MyText");
            		data.Columns.Add("MyID", typeof(int));
            		data.Columns.Add("MyParentID", typeof(int));
            		
            		data.Rows.Add(new object[] {"Root Tab 1", 1, null});
            		data.Rows.Add(new object[] {"Child Tab 1.1", 3, 1});
            		data.Rows.Add(new object[] {"Root Tab 2", 2, null});
            		data.Rows.Add(new object[] {"Child Tab 2.1", 4, 2});
            		
            		RadTabStrip1.DataSource = data;
            		RadTabStrip1.DataTextField = "MyText";			//"MyText" column provides values for the Text property of databound tabs
            		RadTabStrip1.DataFieldID = "MyID";				//"MyID" column provides values for the "child" column in the relation.
            		RadTabStrip1.DataFieldParentID = "MyParentID";	//"MyParentID" column provides values for the "parent" column in the relation.
            		RadTabStrip1.DataBind();
            	</code>
            	<code lang="VB">
            		Dim data As New DataTable()
            		data.Columns.Add("MyText")
            		data.Columns.Add("MyID", GetType(Integer))
            		data.Columns.Add("MyParentID", GetType(Integer))
            		
            		data.Rows.Add(New Object() {"Root Tab 1", 1, Nothing})
            		data.Rows.Add(New Object() {"Child Tab 1.1", 3, 1})
            		data.Rows.Add(New Object() {"Root Tab 2", 2, Nothing})
            		data.Rows.Add(New Object() {"Child Tab 2.1", 4, 2})
            	
            		RadTabStrip1.DataSource = data
            		RadTabStrip1.DataTextField = "MyText"			'"MyText" column provides values for the Text property of databound tabs
            		RadTabStrip1.DataFieldID = "MyID"				'"MyID" column provides values for the "child" column in the relation.
            		RadTabStrip1.DataFieldParentID = "MyParentID"	'"MyParentID" column provides values for the "parent" column in the relation.
            		RadTabStrip1.DataBind()
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.DataTextFormatString">
            <summary>
            	Gets or sets the formatting string used to control how text to the tabstrip
            	control is displayed.
            </summary>
            <remarks>
            	<para>
            		Use the DataTextFormatString property to provide a custom display format for text of the tabs.
            		The data format string consists of two parts, separated by a colon, in the form { A: Bxx }. 
            		For example, the formatting string {0:F2} would display a fixed point number with two decimal places.
            	</para>
            	<para>
            		The entire string must be enclosed in braces to indicate that it is a format string and not a literal string. 
            		Any text outside the braces is displayed as literal text.
            	</para>
            	<para>
            		The value before the colon (A in the general example) specifies the parameter index in a zero-based list of parameters.
            		This value can only be set to 0.
            	</para>
             </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.InnermostSelectedTab">
            <summary>
            	Gets the innermost selected tab in a hierarchical RadTabStrip control.
            </summary>
            <remarks>
            	In hierarchical tabstrips this property returns the innermost selected
                tab.
            </remarks>
            <value>
            	Returns the inner most selected child tab in hierarchical tabstrip scenarios. 
            	Null (Nothing in VB.NET) if no tab is selected.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.ValidationGroup">
            <summary>
            	<para>Gets or sets the name of the validation group to which this validation
                control belongs.</para>
            </summary>
            <value>
            The name of the validation group to which this validation control belongs. The
            default is an empty string (""), which indicates that this property is not set.
            </value>
            <remarks>
                This property works only when <see cref="P:Telerik.Web.UI.RadTabStrip.CausesValidation">CausesValidation</see>
                is set to true.
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.PostBackUrl">
            <summary>
            	Gets or sets the URL of the page to post to from the current page when a tab
                from the tabstrip is clicked.
            </summary>
            <value>
            	The URL of the Web page to post to from the current page when a tab from the
            	tabstrip control is clicked. The default value is an empty string (""), which causes
            	the page to post back to itself.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.MultiPageID">
            <summary>
                Gets or sets the ID of the <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control that
                will be controlled by the current <strong>RadTabStrip</strong> control.
            </summary>
            <remarks>
            	You should use different value depending on the following conditions:
            	<list type="list">
            		<item>
            			Use the <see cref="P:System.Web.UI.Control.ID">ID</see> property of the RadMuitiPage control if the RadMultiPage control is in 
            			the same INamingContainer (user control, page, content page, master page) as the current RadTabStrip control.
            		</item>
            		<item>
            			Use the <see cref="P:System.Web.UI.Control.UniqueID">UniqueID</see> property of the RadMuitiPage control if the RadMultiPage 
            			control is in a different INamingContainer (user control, page, content page, master page) than 
            			the current RadTabStrip control.
            		</item>
            	</list>
            </remarks>
            <value>
            	The <strong>ID</strong> of the associated RadMultiPage. The default value is empty string.
            </value>
            <example>
                The following example demonstrates how to associate a <strong>RadMultiPage</strong>
                control with a <strong>RadTabStrip</strong> control through the
                <strong>MultiPageID</strong> property. 
                <para>
            		<para class="sourcecode">&lt;telerik:RadTabStrip id="RadTabStrip1" runat="server"
                    <strong>MultiPageID="RadMultiPage1"</strong>&gt;<br/>
                    &lt;Tabs&gt;<br/>
                    &lt;telerik:RadTab Text="Personal Details"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Education"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Computing Skills"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;/Tabs&gt;<br/>
                    &lt;/telerik:RadTabStrip&gt;<br/>
            			<br/>
                    &lt;telerik:RadMultiPage <strong>id="RadMultiPage1"</strong>
                    runat="server"&gt;<br/>
                    .....<br/>
                    &lt;/telerik:RadMultiPage&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.MultiPage">
            <summary>
                Gets the associated <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control if the
                <see cref="P:Telerik.Web.UI.RadTabStrip.MultiPageID">MultiPageID</see> property is set.
            </summary>
            <value>
            	The <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control associated with the
            	current <b>RadTabStrip</b> control. Will return null (Nothing in VB.NET) if the <see cref="P:Telerik.Web.UI.RadTabStrip.MultiPageID">MultiPageID</see> 
            	is not set or a corresponding <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> control cannot be found
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.ClickSelectedTab">
            <summary>
            	Gets or sets a value indicating whether the tabstrip should postback when the user clicks the currently selected tab.
            </summary>
            <value>
                <c>True</c> if the tabstrip should postback when the user clicks the currently selected tab; otherwise <c>false</c>. 
            	The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.Orientation">
            <summary>
            	Gets or sets a value indicating the orientation of child tabs within the
            	<b>RadTabStrip</b> control.
            </summary>
            <value>
                One of the <see cref="T:Telerik.Web.UI.TabStripOrientation">TabStripOrientation</see> values.
                The default value is <b>HorizontalTopToBottom</b>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.Align">
            <summary>Gets or sets the alignment of the tabs in the RadTabStrip control.</summary>
            <value>
                One of the <see cref="T:Telerik.Web.UI.TabStripAlign">TabStripAlign</see> enumeration values. The
                default value is <strong>Left</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.ReorderTabsOnSelect">
            <summary>
            	Gets or sets a value indicating whether the row of the selected tab should move
            	to the bottom.
            </summary>
            <value>
            	<strong>true</strong> if the row containing the selected tab should be moved to
            	the bottom; otherwise <strong>false</strong>. The default value is
            <strong>false</strong>.
            </value>
            <remarks>
            	Use the <strong>ReorderTabsOnSelect</strong> property to mimic the behavior of the
            	Windows tabstrip control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.ShowBaseLine">
            <summary>
            	Shows or hides the image at the base of the first level of tabs.
            </summary>
            <value>
            	<strong>true</strong> if line is visible;
            otherwise, <b>false</b>. The default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.UnSelectChildren">
            <summary>
            	Gets or sets a value determining whether child tabs are unselected when a parent
            	tab is unselected.
            </summary>
            <value>
            	<strong>true</strong> if child tabs are unselected when a parent tab is
            	unselected. <strong>false</strong> if the tabs persist their state even when hidden.
            	The default value is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when a tab within
            the <strong>RadTabStrip</strong> control is selected.
            </summary>
            <value>
            	<strong>true</strong> if validation is performed when a tab is selected;
            otherwise, <b>false</b>. The default value is <b>true</b>.
            </value>
            <remarks>
            	<para>By default, page validation is performed when a tab is selected. Page
                validation determines whether the input controls associated with a validation
                control on the page all pass the validation rules specified by the validation
                control. You can specify or determine whether validation is performed on both the
                client and the server when a tab is clicked by using the <b>CausesValidation</b>
                property. To prevent validation from being performed, set the
                <b>CausesValidation</b> property to <b>false</b>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.OnClientTabSelected">
            <summary>
            	Gets or sets a value indicating the client-side event handler that is called
                after selecting a tab.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientTabSelected</strong> property to specify a JavaScript
                function that will be executed after a tab is selected - either by left-clicking it
                with a mouse or hitting enter after tabbing to that tab.</para>
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadTabStrip object)</item>
            		<item>
                        eventArgs with one property 
                        <ul>
            				<li>tab - the instance of the selected tab</li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientTabSelected</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>ClientTabSelectedHandler</strong>(sender, eventArgs)<br/>
                    {<br/>
                    var tabStrip = sender;<br/>
                    var tab = eventArgs.get_tab();<br/>
            			<br/>
                    alert("You have selected the " + tab.get_text() + " tab in the " + tabStrip.get_id() +
                    "tabstrip.");<br/>
                    }<br/>
                    &lt;/script&gt;</para>
            		<para class="sourcecode">&lt;telerik:RadTabStrip id="RadTabStrip1" runat="server"
                    <strong>OnClientTabSelected="ClientTabSelectedHandler"</strong>&gt;<br/>
                    &lt;Tabs&gt;<br/>
                    &lt;telerik:RadTab Text="Personal Details"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Education"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Computing Skills"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;/Tabs&gt;<br/>
                    &lt;/telerik:RadTabStrip&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.OnClientContextMenu">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            before the browser context menu shows (after right-clicking an item).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientContextMenu</strong> property to specify a JavaScript
                function that will be executed before the context menu shows after right clicking a
                tab.</para>
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadTabStrip object)</item>
            		<item>
                        eventArgs with two properties 
                        <ul>
            				<li>tab - the instance of the selected tab</li>
            				<li>domEvent - the browser DOM event</li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientContextMenu</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>OnContextMenuHandler</strong>(sender, eventArgs)<br/>
                    {<br/>
                    var tabStrip = sender;<br/>
                    var tab = eventArgs.get_tab();<br/>
            			<br/>
                    alert("You have right-clicked the " + tab.get_text() + " tab in the " + tabStrip.get_id() +
                    "tabstrip.");<br/>
                    }<br/>
                    &lt;/script&gt;</para>
            		<para class="sourcecode">&lt;telerik:RadTabStrip id="RadTabStrip1" runat="server"
                    <strong>OnClientContextMenu="OnContextMenuHandler"</strong>&gt;<br/>
                    &lt;Tabs&gt;<br/>
                    &lt;telerik:RadTab Text="Personal Details"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Education"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Computing Skills"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;/Tabs&gt;<br/>
                    &lt;/telerik:RadTabStrip&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.OnClientDoubleClick">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            when the user double-clicks a tab.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientDoubleClick</strong> property to specify a JavaScript
                function that will be executed when the user double-clicks a tab.
            </para>
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadTabStrip object)</item>
            		<item>
                        eventArgs with two properties 
                        <ul>
            				<li>tab - the instance of the selected tab</li>
            				<li>domEvent - the browser DOM event</li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientDoubleClick</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>OnDoubleClickHandler</strong>(sender, eventArgs)<br/>
                    {<br/>
                    var tabStrip = sender;<br/>
                    var tab = eventArgs.get_tab();<br/>
            			<br/>
                    alert("You have double-clicked the " + tab.get_text() + " tab in the " + tabStrip.get_id() +
                    "tabstrip.");<br/>
                    }<br/>
                    &lt;/script&gt;</para>
            		<para class="sourcecode">&lt;telerik:RadTabStrip id="RadTabStrip1" runat="server"
                    <strong>OnClientDoubleClick="OnDoubleClickHandler"</strong>&gt;<br/>
                    &lt;Tabs&gt;<br/>
                    &lt;telerik:RadTab Text="Personal Details"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Education"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Computing Skills"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;/Tabs&gt;<br/>
                    &lt;/telerik:RadTabStrip&gt;</para>
            	</para>
            </example>		
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.OnClientTabSelecting">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called just
            prior to selecting a tab.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientTabSelecting</strong> property to specify a
                JavaScript function that will be executed prior to tab selecting - either by
                left-clicking it with a mouse or hitting enter after tabbing to that tab. You can
                cancel that event (prevent tab selecting) by seting the cancel property of the event argument to <c>true</c>.
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadTabStrip object)</item>
            		<item>
                        eventArgs with one property 
                        <ul>
            				<li>tab - the instance of the selected tab</li>
            				<li>cancel - whether to cancel the event</li>
            			</ul>
            		</item>
            	</list>
            </para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientTabSelecting</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>ClientTabSelectingHandler</strong>(sender, eventArgs)<br/>
                    {<br/>
                    var tabStrip = sender;<br/>
                    var tab = eventArgs.get_tab();<br/>
            			<br/>
                    alert("You will be selecting the " + tab.get_text() + " tab in the " + tabStrip.get_id() +
                    " tabstrip.");<br/>
            			<br/>
                    if (tab.Text == "Education")<br/>
                    {<br/>
                    alert("Education cannot be selected");<br/>
            			<strong>eventArgs.set_cancel(true);</strong><br/>
                    }<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadTabStrip id="RadTabStrip1" runat="server"
                    <strong>OnClientTabSelecting="ClientTabSelectedHandler"</strong>&gt;<br/>
                    &lt;Tabs&gt;<br/>
                    &lt;telerik:RadTab Text="Personal Details"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Education"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Computing Skills"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;/Tabs&gt;<br/>
                    &lt;/telerik:RadTabStrip&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.OnClientMouseOver">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the mouse hovers a tab in the <strong>RadTabStrip</strong> control.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientMouseOver</strong> property to specify a JavaScript
                function that is called when the user hovers a tab with the mouse.</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item>sender (the client-side RadTabStrip object);</item>
            		<item>
                        eventArgs with two properties 
                        <ul>
            				<li>tab - the instance of the tab that is being hovered</li>
            				<li>domEvent - the instance of the browser event.</li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientMouseOver</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>ClientMouseOverHandler</strong>(sender, eventArgs)<br/>
                    {<br/>
                    var tabStrip = sender;<br/>
                    var tab = eventArgs.get_tab();<br/>
                    var domEvent = eventArgs.get_domEvent();<br/>
            			<br/>
                    alert("You have just moved over the " + tab.get_text() + " tabs in the " +
                    tabStrip.get_id() + " tabstrip");<br/>
                    alert("Mouse coordinates: " + domEvent.clientX + ":" +
                    domEvent.clientY);<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadTabStrip id="RadTabStrip1" runat="server"
                    <strong>OnClientMouseOver="ClientMouseOverHandler"</strong>&gt;<br/>
                    &lt;Tabs&gt;<br/>
                    &lt;telerik:RadTab Text="Personal Details"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Education"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Computing Skills"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;/Tabs&gt;<br/>
                    &lt;/telerik:RadTabStrip&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.OnClientMouseOut">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the mouse leaves a tab in the <strong>RadTabStrip</strong> control.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientMouseOut</strong> property to specify a JavaScript
                function that is executed <font color="black">whenever the user moves the mouse
                away from a particular tab in the RadTabStrip control.</font></para>
            	<para><font color="black">Two parameters are passed to the handler:</font></para>
            	<list type="bullet">
            		<item><font color="black">sender (the client-side RadTabStrip
                    object);</font></item>
            		<item>
                        eventArgs <font color="black">with two properties:</font>
            			<ul>
            				<li><font color="black">tab - the instance of the tab we are moving
                            away from;</font></li>
            				<li><font color="black">domEvent - the instance of the browser
                            event.</font></li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>OnClientMouseOut</strong>
                property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>ClientMouseOutHandler</strong>(sender, eventArgs)<br/>
                    {<br/>
                    var tabStrip = sender;<br/>
                    var tab = eventArgs.Tab;<br/>
                    var domEvent = eventArgs.get_domEvent();</para>
            		<para class="sourcecode">alert("You have just moved out of " + tab.get_text() + " in
                    the " + tabStrip.get_id() + " tabstrip.");<br/>
                    alert("Mouse coordinates: " + domEvent.clientX + ":" +
                    domEvent.clientY);<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadTabStrip id="RadTabStrip1" runat="server"
                    <strong>OnClientMouseOut="ClientMouseOutHandler"</strong>&gt;<br/>
                    &lt;Tabs&gt;<br/>
                    &lt;telerik:RadTab Text="Personal Details"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Education"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Computing Skills"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;/Tabs&gt;<br/>
                    &lt;/telerik:RadTabStrip&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.OnClientTabUnSelected">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            after a tab is unselected (i.e. the user has selected another tab).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientTabUnSelected</strong> property to specify a
                JavaScript function that is executed <font color="black">after a tab is
                unselected.</font></para>
            	<para><font color="black">Two parameters are passed to the handler:</font></para>
            	<list type="bullet">
            		<item><font color="black">sender (the client-side RadTabStrip
                    object);</font></item>
            		<item>
                        eventArgs <font color="black">with one property:</font>
            			<ul>
            				<li><font color="black">tab - the instance of the tab which is
                            unselected;</font></li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>OnClientMouseOut</strong>
                property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>ClientTabUnSelectedHandler</strong>(sender, eventArgs)<br/>
                    {<br/>
                    var tabStrip = sender;<br/>
                    var tab = eventArgs.get_tab();<br/>
            			<br/>
                    alert("You have unselected the " + tab.get_text() + " tab in the " + tabStrip.get_id() +
                    "tabstrip.");<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadTabStrip id="RadTabStrip1" runat="server"
                    <strong>OnClientTabUnSelected="ClientTabUnSelectedHandler"</strong>&gt;<br/>
                    &lt;Tabs&gt;<br/>
                    &lt;telerik:RadTab Text="Personal Details"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Education"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Computing Skills"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;/Tabs&gt;<br/>
                    &lt;/telerik:RadTabStrip&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTabStrip.OnClientLoad">
            <summary>
            Gets or sets the name of the javascript function called when the control is fully
            initialized on the client side.
            </summary>
            <value>
            A string specifying the name of the javascript function called when the control
            is fully initialized on the client side. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientLoad</strong> property to specify a JavaScript
                function that is executed after the control is initialized on the client side.
                <font color="black">A single parameter is passed to the handler, which is the
                client-side RadTabStrip object.</font></para>
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>OnClientLoad</strong>
                property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>ClientTabstripLoad</strong>(tabstrip, eventArgs)<br/>
                    {<br/>
                    alert(tabstrip.get_id() + " is loaded.");<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadTabStrip id="RadTabStrip1" runat="server"
                    <strong>OnClientLoad="ClientTabstripLoad"</strong>&gt;<br/>
                    &lt;Tabs&gt;<br/>
                    &lt;telerik:RadTab Text="Personal Details"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Education"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;telerik:RadTab Text="Computing Skills"&gt;&lt;/telerik:RadTab&gt;<br/>
                    &lt;/Tabs&gt;<br/>
                    &lt;/telerik:RadTabStrip&gt;</para>
            	</para>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadTabStrip.TabCreated">
            <summary>Occurs when a tab is created.</summary>
            <remarks>
            	The TabCreated event is raised when an tab in the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control is created, 
            	both during round-trips and at the time data is bound to the control. The TabCreated event is not raised for tabs
            	which are defined inline in the page or user control.
            	<para>The TabCreated event is commonly used to initialize tab properties.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>TabCreated</strong> event
                to set the <strong>ToolTip</strong> property of each tab. 
                <code lang="CS">
            		 protected void RadTabStrip1_TabCreated(object sender, Telerik.Web.UI.RadTabStripEventArgs e)
            		 {
            		     e.Tab.ToolTip = e.Tab.Text;
            		 }
                </code>
            	<code lang="VB">
            		 Sub RadTabStrip1_TabCreated(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadTabStripEventArgs) Handles RadTabStrip1.TabCreated
            		     e.Tab.ToolTip = e.Tab.Text
            		 End Sub
                </code>
            </example>		
        </member>
        <member name="E:Telerik.Web.UI.RadTabStrip.TabDataBound">
            <summary>Occurs when a tab is data bound.</summary>
            <remarks>
            	<para>
                    The <strong>TabDataBound</strong> event is raised for each tab upon
                    databinding. You can retrieve the tab being bound using the event arguments.
                    The <strong>DataItem</strong> associated with the tab can be retrieved using
                    the <see cref="P:Telerik.Web.UI.RadTab.DataItem">DataItem</see> property.
                </para>
            	<para>The <strong>TabDataBound</strong> event is often used in scenarios when you
                want to perform additional mapping of fields from the DataItem to their respective
                properties in the Tab class.</para>
            </remarks>
            <example>
                The following example demonstrates how to map fields from the data item to
                <see cref="T:Telerik.Web.UI.RadTab">tab</see> properties using the <strong>TabDataBound</strong> event.
            	<code lang="CS">
            		protected void RadTabStrip1_TabDataBound(object sender, Telerik.Web.UI.RadTabStripEventArgs e)
            		{
            			e.Tab.ImageUrl = "image" + (string)DataBinder.Eval(e.Tab.DataItem, "ID") + ".gif";
            			e.Tab.NavigateUrl = (string)DataBinder.Eval(e.Tab.DataItem, "URL");
            		}
                </code>
            	<code lang="VB">
            		Sub RadTabStrip1_TabDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadTabStripEventArgs) Handles RadTabStrip1.TabDataBound
            			e.Tab.ImageUrl = "image" &amp; DataBinder.Eval(e.Tab.DataItem, "ID") &amp; ".gif"
            			e.Tab.NavigateUrl = CStr(DataBinder.Eval(e.Tab.DataItem, "URL"))
            		End Sub
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadTabStrip.TabClick">
            <summary>
                Occurs on the server when a tab in the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see>
                control is clicked.
            </summary>
            <example>
            	The following example demonstrates how to use the <b>TabClick</b> event to determine the clicked tab.
            	<code lang="CS">
            		protected void RadTabStrip1_TabClick(object sender, Telerik.Web.UI.RadTabStripEventArgs e)
            		{
            			Response.Write("Clicked tab is " + e.Tab.Text);
            		}
            	</code>
            	<code lang="VB">
            		Sub RadTabStrip1_TabClick(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadTabStripEventArgs) Handles RadTabStrip1.TabClick
            			Response.Write("Clicked tab is " &amp; e.Tab.Text)
            		End Sub		
            	</code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.RadTab">
            <summary>Represents a tab in the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control.</summary>
            <remarks>
            	<para>
            		The <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control is made up of tabs. Tabs which are immediate children
            		of the tabstrip are root tabs. tabs which are children of root tabs are child tabs.
            	</para>
            	<para>
            		A tab usually stores data in two properties, the <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property and 
            		the <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property. The value of the <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is displayed 
            		in the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control, and the <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> 
            		property is used to store additional data.
            	</para>
            	<para>To create tabs, use one of the following methods:</para>
            	<list type="bullet">
            		<item>
            			Use declarative syntax to define tabs inline in your page or user control.
            		</item>
            		<item>
            			Use one of the constructors to dynamically create new instances of the
            			<see cref="T:Telerik.Web.UI.RadTab">RadTab</see> class. These tabs can then be added to the
            			<b>Tabs</b> collection of another tab or tabstrip.
            		</item>
            		<item>
            			Data bind the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control to a data source.
            		</item>
            	</list>
            	<para>
                    When the user clicks a tab, the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control can navigate
                    to a linked Web page, post back to the server or select that tab. If the
                    <see cref="P:Telerik.Web.UI.RadTab.NavigateUrl">NavigateUrl</see> property of a tab is set, the
                    <b>RadTabStrip</b> control navigates to the linked page. By default, a linked page
                    is displayed in the same window or frame. To display the linked content in a different 
            		window or frame, use the <see cref="P:Telerik.Web.UI.RadTab.Target">Target</see> property.
                </para>
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadTab.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> class.</summary>
            <remarks>
                Use this constructor to create and initialize a new instance of the
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> class using default values.
            </remarks>
            <example>
                The following example demonstrates how to add tabs to the 
                <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control.
                <code lang="CS">
            		RadTab tab = new RadTab();
            		tab.Text = "News";
            		tab.NavigateUrl = "~/News.aspx";
             
            		RadTabStrip1.Tabs.Add(tab);
                </code>
            	<code lang="VB">
            		Dim tab As New RadTab()
            		tab.Text = "News"
            		tab.NavigateUrl = "~/News.aspx"
             
            		RadTabStrip1.Tabs.Add(tab)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadTab.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> class with the
                specified text data.
            </summary>
            <remarks>
                Use this constructor to create and initialize a new instance of the
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> class using the specified text.
            </remarks>
            <example>
                The following example demonstrates how to add tabs to the
                <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control. 
                <code lang="CS">
            		RadTab tab = new RadTab("News");
             
            		RadTabStrip1.Tabs.Add(tab);
                </code>
            	<code lang="VB">
            		Dim tab As New RadTab("News")
             
            		RadTabStrip1.Tabs.Add(tab)
                </code>
            </example>
            <param name="text">
                The text displayed for the tab. The <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is initialized with the value
            	of this parameter.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTab.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> class with the
                specified text and value data.
            </summary>
            <remarks>
            	<para>
                    Use this constructor to create and initialize a new instance of the
                    <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> class using the specified text and value.
                </para>
            </remarks>
            <example>
                This example demonstrates how to add tabs to the 
                <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control. 
                <code lang="CS">
            		RadTab tab = new RadTab("News", "NewsTabValue");
             
            		RadTabStrip1.Tabs.Add(tab);
                </code>
            	<code lang="VB">
            		Dim tab As New RadTab("News", "NewsTabValue")
             
            		RadTabStrip1.Tabs.Add(tab)
                </code>
            </example>
            <param name="text">
                The text displayed for the tab. The <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is initialized with the value
            	of this argument.
            </param>
            <param name="value">
                The value associated with the tab. The <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property is initialized with the value
            	of this parameter.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTab.SelectParents">
            <summary>
            	Selects recursively all parent tabs in the hierarchy.
            </summary>
            <remarks>
            	Use this method to programmatically select all parents of the tab. Selected tabs
            	will be visible in the browser.
            </remarks>
            <example>
                The following example demonstrates how to select the parents of the tab which
                corresponds to the current URL.
                <code lang="CS">
            		RadTab currentTab = RadTabStrip1.FindTabByUrl(Request.Url.PathAndQuery);
            		if (currentTab != null)
            		{
            			currentTab.SelectParents();
            		}
                </code>
            	<code lang="VB">
            		Dim currentTab as RadTab = RadTabStrip1.FindTabByUrl(Request.Url.PathAndQuery)
            	 
            		If Not currentTab Is Nothing Then
            			currentTab.SelectParents()
            		End If
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.IsSeparator">
            <summary>
            	Gets or sets a value indicating whether the tab will behave as separator.</summary>
            <value>
            	<c>true</c> if the tab is separator; otherwise <c>false</c>. The default value is <c>false</c>.
            </value>
            <remarks>
            	Use separators to visually separate the tabs. You also need to specify the width
            	of the separator tab through the <strong>Width</strong> property.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.TabTemplate">
            <summary>Gets or sets the template for displaying the tab.</summary>
            <value>
            	<para>An object implementing the <strong>ITemplate</strong>The default value is a null reference (<strong>Nothing</strong> in
                Visual Basic), which indicates that this property is not set.</para>
            	<para>
                    To specify common display for all tabs use the
                    <see cref="P:Telerik.Web.UI.RadTabStrip.TabTemplate"/> property of the <see cref="T:Telerik.Web.UI.RadTabStrip"/> control.
                </para>
            </value>
            <example>
            	The following example demonstrates how to customize the appearance of a specific tab using the 
            	<b>TabTemplate</b> property
            	<code lang="html">
            	&lt;telerik:RadTabStrip ID="RadTabStrip1" runat="server"&gt;
            		&lt;Tabs&gt;
            			&lt;telerik:RadTab&gt;
            				&lt;TabTemplate&gt;
            					Tab 1 &lt;img src="Images/tabIcon.gif" alt="" /&gt;
            				&lt;/TabTemplate&gt;
            			&lt;/telerik:RadTab&gt;
            		&lt;/Tabs&gt;
            	&lt;/telerik:RadTabStrip&gt;
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.Level">
            <summary>
            	Gets the level of the current tab.
            </summary>
            <value>
            	An integer representing the level of the tab. Root tabs are level 0 (zero).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.Selected">
            <summary>
            	Gets or sets a value indicating whether the tab is selected.
            </summary>
            <value>
            	<c>true</c> if the tab is selected; otherwise <c>false</c>.
            	The default value is <c>false</c>.
            </value>
            <remarks>
                Use the <b>Selected</b> property to determine whether the tab is currently selected
                within its parent <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see>. Setting the <b>Selected</b>
                property to <c>true</c> will deselect the previously selected tab.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.TabStrip">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> instance which contains the current tab.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.PostBack">
            <summary>
            	Gets or sets a value indicating whether clicking on the tab will postback.
            </summary>
            <value>
            	<c>true</c> if the node should postback; otherwise <c>false</c>.
            </value>
            <remarks>
                If you subscribe to the <see cref="E:Telerik.Web.UI.RadTabStrip.TabClick">TabClick</see> event all tabs
                will postback. To prevent the current tab from initiating postback you can set the <b>PostBack</b> 
            	property to <c>false</c>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.DataItem">
            <summary>Gets the data item that is bound to the tab</summary>
            <value>
            	An Object that represents the data item that is bound to the tab. The default value is null (Nothing in Visual Basic), 
            	which indicates that the tab is not bound to any data item. The return value will always be null unless accessed within
            	a <see cref="E:Telerik.Web.UI.RadTabStrip.TabDataBound">TabDataBound</see> event handler.
            </value>
            <remarks>
                This property is applicable only during data binding. Use it along with the
                <see cref="E:Telerik.Web.UI.RadTabStrip.TabDataBound">TabDataBound</see> event to perform additional
                mapping of fields from the data item to <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> properties.
            </remarks>
            <example>
                The following example demonstrates how to map fields from the data item to
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> properties. It assumes the user has subscribed to the
                <see cref="E:Telerik.Web.UI.RadTabStrip.TabDataBound">TabDataBound</see> event. 
                <code lang="CS">
            		private void RadTabStrip1_TabDataBound(object sender, Telerik.Web.UI.RadTabStripEventArgs e)
            		{
            			e.Tab.ImageUrl = "image" + (string)DataBinder.Eval(e.Tab.DataItem, "ID") + ".gif";
            			e.Tab.NavigateUrl = (string)DataBinder.Eval(e.Tab.DataItem, "URL");
            		}
                </code>
            	<code lang="VB">
            		Sub RadTabStrip1_TabDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadTabStripEventArgs) Handles RadTabStrip1.TabDataBound
            			e.Tab.ImageUrl = "image" &amp; DataBinder.Eval(e.Tab.DataItem, "ID") &amp; ".gif"
            			e.Tab.NavigateUrl = CStr(DataBinder.Eval(e.Tab.DataItem, "URL"))
            		End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.ScrollChildren">
            <summary>
            	Gets or sets a value indicating whether the children of the tab will be
            	scrollable.
            </summary>
            <value>
            	<c>true</c> if the child tabs will be scrollable; otherwise <c>false</c>. The default value is <c>false</c>.
            </value>
            <remarks>
            	To enable scrolling of the child tabs the <see cref="P:Telerik.Web.UI.RadTabStrip.ScrollChildren">ScrollChildren</see> property
            	must also be set to <c>true</c>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.ScrollButtonsPosition">
            <summary>The position of the scroll buttons with regards to the tab band.</summary>
            <remarks>
                This property is applicable when the
                <see cref="P:Telerik.Web.UI.RadTab.ScrollChildren">ScrollChildren</see> property is set to
                <c>true</c>; otherwise it is ignored.
            </remarks>
            <value>
                One of the <see cref="T:Telerik.Web.UI.TabStripScrollButtonsPosition">TabStripScrollButtonsPosition</see>
                enumeration values. The default value is <c>Right</c>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.ScrollPosition">
            <summary>
            	Gets or sets the position of the scrollable band of tabs relative to the
            	beginning of the scrolling area.
            </summary>
            <remarks>
                This property is applicable when the
                <see cref="P:Telerik.Web.UI.RadTab.ScrollChildren">ScrollChildren</see> property is set to
                <strong>true</strong>; otherwise it is ignored.
            </remarks>
            <value>
            	An integer specifying the initial scrolling position (measured in pixels). The default value is 0
                (no offset from the default scrolling position). Use negative values to move the tabs to the left.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.PerTabScrolling">
            <summary>
            	Gets or sets a value indicating whether the tabstrip should scroll directly to
            	the next tab.
            </summary>
            <value>
            	<c>true</c> if the tabstrip should scroll to the next (or previous) tab; otherwise <c>false</c>. 
            	The default value is <c>false</c>.
            </value>
            <remarks>
                By default tabs are scrolled smoothly. If you want the tabstrip to scroll directly
                to the next (or previous) tab set this property to <c>true</c>. This
                property is applicable when the <see cref="P:Telerik.Web.UI.RadTab.ScrollChildren">ScrollChildren</see>
                property is set to <c>true</c>; otherwise it is ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.SelectedIndex">
            <summary>
            	Gets or sets the index of the selected child tab.
            </summary>
            <value>
            	The zero based index of the selected tab. The default value is -1 (no child tab is selected).
            </value>
            <remarks>
            	Use the <b>SelectedIndex</b> property to programmatically specify the selected
            	child tab in a <b>IRadTabContainer</b> (<b>RadTabStrip</b> or <b>RadTab</b>). 
            	To clear the selection set the <b>SelectedIndex</b> property to <c>-1</c>.
            </remarks>
            <example>
                The following example demonstrates how to programmatically select a tab by using
                the <b>SelectedIndex</b> property.
                <code lang="CS">
            		void Page_Load(object sender, EventArgs e)
            		{
            			if (!Page.IsPostBack)
            			{
            				RadTab newsTab = new RadTab("News");
            				RadTabStrip1.Tabs.Add(newsTab);
                
            				RadTabStrip1.SelectedIndex = 0; //This will select the "News" tab
             
            				RadTab cnnTab = new RadTab("CNN");
            				newsTab.Tabs.Add(cnnTab);
             
            				RadTab nbcTab = new RadTab("NBC");
            				newsTab.Tabs.Add(nbcTab);
             
            				newsTab.SelectedIndex = 1; //This will select the "NBC" child tab of the "News" tab
            			}
            		}
                </code>
            	<code lang="VB">
            		 Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
            		     If Not Page.IsPostBack Then
            		         Dim newsTab As RadTab = New RadTab("News")
            		         RadTabStrip1.Tabs.Add(newsTab)
            		  
            		         RadTabStrip1.SelectedIndex = 0 'This will select the "News" tab
            		  
            		         Dim cnnTab As RadTab = New RadTab("CNN")
            		         newsTab.Tabs.Add(cnnTab)
            		  
            		         Dim nbcTab As RadTab = New RadTab("NBC")
            		         newsTab.Tabs.Add(nbcTab)
            		  
            		         newsTab.SelectedIndex = 1 'This will select the "NBC" child tab of the "News" tab
            		     End If
            		 End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.SelectedTab">
            <summary>
            	Gets the selected child tab.
            </summary>
            <value>
            	Returns the child tab which is currently selected. If no tab is selected
            	(the <see cref="P:Telerik.Web.UI.RadTab.SelectedIndex">SelectedIndex</see> property is <c>-1</c>) the <b>SelectedTab</b> 
            	property will return <c>null</c> (<c>Nothing</c> in VB.NET).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.Owner">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.IRadTabContainer">IRadTabContainer</see> instance which contains the current tab.
            </summary>
            <value>
                The object which contains the tab. It might be an instance of the
                <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> class or the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see>
                class depending on the hierarchy level.
            </value>
            <remarks>
                The value is of the <see cref="T:Telerik.Web.UI.IRadTabContainer">IRadTabContainer</see> type which is
                implemented by the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> class and the
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> class. Use the <b>Owner</b> property when
                recursively traversing tabs in the <b>RadTabStrip</b> control.
            </remarks>
            <example>
                The following example demonstrates how to make a bread crumb trail out of
                hierarchical RadTabStrip. 
                <code lang="CS">
            	void Page_Load(object sender, EventArgs e)
            	{
            		if (RadTabStrip1.SelectedIndex &gt;= 0)
            		{
            			RadTab selected = RadTabStrip1.InnermostSelectedTab;
            			IRadTabContainer owner = selected.Owner;
            			string breadCrumbTrail = string.Empty;
            			while (owner != null)
            			{
            				breadCrumbTrail =  " &gt; " +  owner.SelectedTab.Text + breadCrumbTrail;
            				owner = owner.Owner;
            			}
            			Label1.Text = breadCrumbTrail;
            		}
            	}
                </code>
            	<code lang="VB">
            		Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
            			If RadTabStrip1.SelectedIndex &gt;= 0 Then
            				Dim selected As RadTab = RadTabStrip1.InnermostSelectedTab
            				Dim owner As IRadTabContainer = selected.Owner
            				Dim breadCrumbTrail As String = String.Empty
            				While Not owner Is Nothing
            					breadCrumbTrail = " &gt; " &amp; owner.SelectedTab.Text &amp; breadCrumbTrail
            					owner = owner.Owner
            				End While
            				Label1.Text = breadCrumbTrail
            			End If
            		End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.Tabs">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see> object that contains the child tabs of the current tab.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see> that contains the child tabs of the current tab. By default
            	the collection is empty (the tab has no children).
            </value>
            <remarks>
            	Use the <b>Tabs</b> property to access the child tabs of the current tab. You can also use the <b>Tabs</b> property to
            	manage the children of the current tab. You can add, remove or modify tabs from the <b>Tabs</b> collection.
            </remarks>
            <example>
                The following example demonstrates how to programmatically modify the properties of child tabs.
                <code lang="CS">
            		RadTabStrip1.Tabs[0].Tabs[0].Text = "Example";
            		RadTabStrip1.Tabs[0].Tabs[0].NavigateUrl = "http://www.example.com";
                </code>
            	<code lang="VB">
            		RadTabStrip1.Tabs(0).Tabs(0).Text = "Example"
            		RadTabStrip1.Tabs(0).Tabs(0).NavigateUrl = "http://www.example.com"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.SelectedCssClass">
            <summary>
            	Gets or sets the Cascading Style Sheet (CSS) class applied when the tab is selected.
            </summary>
            <value>
            	The CSS class applied when the tab is selected. The default value is empty string.
            </value>
            <remarks>
            	By default the visual appearance of selected tabs is defined in the skin CSS
            	file. You can use the <b>SelectedCssClass</b> property to specify unique
            	appearance for the current tab when it is selected.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.DisabledCssClass">
            <summary>
            	Gets or sets the Cascading Style Sheet (CSS) class applied when the tab is disabled.
            </summary>
            <value>
            	The CSS class applied when the tab is disabled. The default value is empty string.
            </value>
            <remarks>
            	By default the visual appearance of disabled tabs is defined in the skin CSS
            	file. You can use the <b>DisabledCssClass</b> property to specify unique
            	appearance for the tab when it is disabled.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.HoveredCssClass">
            <summary>
            	Gets or sets the Cascading Style Sheet (CSS) class applied when the tab is hovered with the mouse.
            </summary>
            <value>
            	The CSS class applied when the tab is hovered. The default value is empty string.
            </value>
            <remarks>
            	By default the visual appearance of hovered tabs is defined in the skin CSS
            	file. You can use the <b>HoveredCssClass</b> property to specify unique
            	appearance for the tab when it is hovered.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.ChildGroupCssClass">
            <summary>
            	Gets or sets the Cascading Style Sheet (CSS) class applied to the HTML element
            	containing the child tabs.
            </summary>
            <value>
            	The CSS class applied to the child tabs container. The default value is empty
            	string.
            </value>
            <remarks>
            	Tabs are rendered as <b>LI</b> (list item) HTML elements inside a
                <b>UL</b> (unordered list). The CSS class specified by the
                <b>ChildGroupCssClass</b> property is applied to the <b>UL</b>
                tag.
            </remarks>
            <example>
            	<h3>ASPX:</h3>&lt;telerik:RadTabStrip ID="RadTabStrip1" runat="server"&gt;<br/>
                 &lt;Tabs&gt;<br/>
                 &lt;telerik:RadTab Text="News" <strong>ChildGroupCssClass="news"</strong>&gt;<br/>
                 &lt;Tabs&gt;<br/>
                 &lt;telerik:RadTab Text="CNN" /&gt;<br/>
                 &lt;telerik:RadTab Text="NBC" /&gt;<br/>
                 &lt;/Tabs&gt;<br/>
                 &lt;/telerik:RadTab&gt;<br/>
                 &lt;/Tabs&gt;<br/>
                &lt;/telerik:RadTabStrip&gt; 
                <h3>HTML:</h3>
            	<para class="sourcecode">
            		&lt;li&gt;News<br/>
            		&lt;ul <strong>class="news"</strong>&gt;<br/>
            		&lt;li&gt;CNN&lt;/li&gt;<br/>
            		&lt;li&gt;NBC&lt;/li&gt;<br/>
            		&lt;/ul&gt;<br/>
            		&lt;/li&gt;
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.IsBreak">
            <summary>
            Gets or sets a value indicating whether next tab will be displayed on a new
            line.
            </summary>
            <value>
            	<c>true</c> if the next tab should be displayed on a new line; otherwise <c>false</c>.
            	The default value is <c>false</c>.
            </value>
            <remarks>
            	Use the <b>IsBreak</b> property to create multi-row tabstrip. All tabs after the "break" 
            	tab will be displayed on a new line.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.PageViewID">
            <summary>
                Gets or sets the <strong>ID</strong> of the <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> in
                a <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> that will be switched when the tab is
                selected.
            </summary>
            <remarks>
                This property overrides the default relation between the page views within a
                <see cref="T:Telerik.Web.UI.RadMultiPage">RadMultiPage</see> and the tabs in a
                <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see>. By default a tab activates the page view
                with the same index.
            </remarks>
            <value>
                The <strong>ID</strong> of the <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> that will be
                activated when the tab is selected. The default value is empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.Text">
            <summary>
            	Gets or sets the text displayed for the current tab.
            </summary>
            <value>
            	The text displayed for the tab in the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control. The default is empty string.
            </value>
            <remarks>
            	Use the <b>Text</b> property to specify or determine the text that is displayed for the tab 
            	in the <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.Value">
            <summary>
            	Gets or sets custom (user-defined) data associated with the current tab.
            </summary>
            <value>
            	A string representing the user-defined data. The default value is emptry string.
            </value>
            <remarks>
            	Use the <b>Value</b> property to associate custom data with a <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> object. 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.NavigateUrl">
            <summary>
            	Gets or sets the URL to navigate to when the current tab is clicked.
            </summary>
            <value>
            	The URL to navigate to when the tab is clicked. The default value is empty string which means that
            	clicking the current tab will not navigate.
            </value>
            <remarks>
            	<para>
            		By default clicking a tab will select it. If the tab has any child tabs they will be displayed. To make a tab
            		navigate to some designated URL you can use the <b>NavigateUrl</b> property. You can optionally set the 
            		<see cref="P:Telerik.Web.UI.RadTab.Target">Target</see> property to specify the window or frame in which to display the linked content.
            	</para>
            	<para>
            		Setting the <b>NavigateUrl</b> property will disable tab selection and as a result the 
            		<see cref="E:Telerik.Web.UI.RadTabStrip.TabClick">TabClick</see> event won't be raised for the current tab.
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.ImageUrl">
            <summary>
            	Gets or sets the URL to an image which is displayed next to the text of a tab.
            </summary>
            <value>
            	The URL to the image to display for the tab. The default value is empty
            	string which means by default no image is displayed.
            </value>
            <remarks>
            	Use the <b>ImageUrl</b> property to specify a custom image that will be
            	displayed before the text of the current tab.
            </remarks>
            <example>
            	<para>
            		The following example demonstrates how to specify the image to display for
            		the tab using the <b>ImageUrl</b> property.
            	</para>
                <para class="sourcecode">
               		 &lt;telerik:RadTabStrip id="RadTabStrip1" runat="server"&gt;<br/>
               		  &lt;Tabs&gt;<br/>
               		  &lt;telerik:RadTab<strong>ImageUrl="~/Img/inbox.gif"</strong>
               		 Text="Index"&gt;&lt;/telerik:RadTab&gt;<br/>
               		  &lt;telerik:RadTab<strong>ImageUrl="~/Img/outbox.gif"</strong>
               		 Text="Outbox"&gt;&lt;/telerik:RadTab&gt;<br/>
               		  &lt;telerik:RadTab<strong>ImageUrl="~/Img/trash.gif"</strong>
               		 Text="Trash"&gt;&lt;/telerik:RadTab&gt;<br/>
               		  &lt;telerik:RadTab<strong>ImageUrl="~/Img/meetings.gif"</strong>
               		 Text="Meetings"&gt;&lt;/telerik:RadTab&gt;<br/>
               		  &lt;/Tabs&gt;<br/>
               		 &lt;/telerik:RadTabStrip&gt;
                </para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.HoveredImageUrl">
            <summary>
            	Gets or sets the URL to an image which is displayed when the 
            	user hovers the current tab with the mouse.
            </summary>
            <value>
            	The URL to the image to display for the tab when the user hovers it with the mouse. The default value is empty
            	string which means the image specified via <see cref="P:Telerik.Web.UI.RadTab.ImageUrl">ImageUrl</see> will be used.
            </value>
            <remarks>
            	<para>
            		Use the <b>HoveredImageUrl</b> property to specify a custom image that will be
            		displayed when the user hovers the tab with the mouse. Setting the <b>HoveredImageUrl</b>
            		property required the <see cref="P:Telerik.Web.UI.RadTab.ImageUrl">ImageUrl</see> property to be set beforehand. 
            	</para>
            	<para>
            		If the <b>HoveredImageUrl</b> property is not set the value of the <see cref="P:Telerik.Web.UI.RadTab.ImageUrl">ImageUrl</see> 
            		will be used instead.
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.SelectedImageUrl">
            <summary>
            	Gets or sets the URL to an image which is displayed when the tab is selected.
            </summary>
            <value>
            	The URL to the image to display when the tab is selected. The default value is empty
            	string which means the image specified via <see cref="P:Telerik.Web.UI.RadTab.ImageUrl">ImageUrl</see> will be used.
            </value>
            <remarks>
            	<para>
            		Use the <b>SelectedImageUrl</b> property to specify a custom image that will be
            		displayed when the current tab is selected. Setting the <b>SelectedImageUrl</b>
            		property required the <see cref="P:Telerik.Web.UI.RadTab.ImageUrl">ImageUrl</see> property to be set beforehand. 
            	</para>
            	<para>
            		If the <b>SelectedImageUrl</b> property is not set the value of the <see cref="P:Telerik.Web.UI.RadTab.ImageUrl">ImageUrl</see> 
            		will be used instead.
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.DisabledImageUrl">
            <summary>
            	Gets or sets the URL to an image which is displayed when the tab is disabled 
            	(its <strong>Enabled</strong> property is set to <c>false</c>).
            </summary>
            <value>
            	The URL to the image to display when the tab is disabled. The default value is empty
            	string which means the image specified via <see cref="P:Telerik.Web.UI.RadTab.ImageUrl">ImageUrl</see> will be used.
            </value>
            <remarks>
            	<para>
            		Use the <b>DisabledImageUrl</b> property to specify a custom image that will be
            		displayed when the current tab is disabled. Setting the <b>DisabledImageUrl</b>
            		property required the <see cref="P:Telerik.Web.UI.RadTab.ImageUrl">ImageUrl</see> property to be set beforehand. 
            	</para>
            	<para>
            		If the <b>DisabledImageUrl</b> property is not set the value of the <see cref="P:Telerik.Web.UI.RadTab.ImageUrl">ImageUrl</see> 
            		will be used instead.
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.Target">
            <summary>
            	Gets or sets the target window or frame in which to display the Web page content associated with the current tab.
            </summary>
            <value>
            	<para>The target window or frame to load the Web page linked to when the tab is
                selected. Values must begin with a letter in the range of a through z (case
                insensitive), except for the following special values, which begin with an
                underscore:</para>
            	<para>
            		<list type="table">
            			<item>
            				<term>_blank</term>
            				<description>Renders the content in a new window without frames.</description>
            			</item>
            			<item>
            				<term>_parent</term>
            				<description>Renders the content in the immediate frameset parent.</description>
            			</item>
            			<item>
            				<term>_self</term>
            				<description>Renders the content in the frame with focus.</description>
            			</item>
            			<item>
            				<term>_top</term>
            				<description>Renders the content in the full window without frames.</description>
            			</item>
            		</list>
            	</para>
            	The default value is empty string which means the linked resource will be loaded in the current window.
            </value>
            <remarks>
            	<para>
                    Use the <b>Target</b> property to target window or frame in which to display the 
            		Web page content associated with the current tab. The Web page is specified by
                    the <see cref="P:Telerik.Web.UI.RadTab.NavigateUrl">NavigateUrl</see> property.
                </para>
            	<para>
            		If this property is not set, the Web page specified by the
            		<see cref="P:Telerik.Web.UI.RadTab.NavigateUrl">NavigateUrl</see> property is loaded in the current window.
            	</para>
            	<para>
            		The <b>Target</b> property is taken into consideration only when the <see cref="P:Telerik.Web.UI.RadTab.NavigateUrl">NavigateUrl</see> 
            		property is set.
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to use the <b>Target</b> property 
                <para>
            		<para class="sourcecode">
            		&lt;telerik:RadTabStrip id="RadTabStrip1" runat="server"&gt;<br/>
                    &lt;Tabs&gt;<br/>
                    &lt;telerik:RadTab Text="News" NavigateUrl="~/News.aspx"
                    <strong>Target="_self"</strong> /&gt;<br/>
                    &lt;telerik:RadTab Text="External URL" NavigateUrl="http://www.example.com"
                    <strong>Target="_blank"</strong> /&gt;<br/>
                    &lt;/Tabs&gt;<br/>
                    &lt;/telerik:RadTabStrip&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadTab.PageView">
            <summary>Gets the <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> activated when the tab is selected.</summary>
            <value>
                The <see cref="T:Telerik.Web.UI.RadPageView">RadPageView</see> that is activated when the tab is selected.
                The default value is <strong>null</strong> (<strong>Nothing</strong> in VB.NET).
            </value>
        </member>
        <member name="T:Telerik.Web.UI.RadTabCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> objects in a
                <see cref="T:Telerik.Web.UI.RadTabStrip">RadTabStrip</see> control.
            </summary>
            <remarks>
            	The <strong>RadTabCollection</strong> class represents a collection of
                <strong>RadTab</strong> objects.
            	<list type="bullet">
            		<item>
                        Use the <see cref="P:Telerik.Web.UI.RadTabCollection.Item(System.Int32)">indexer</see> to programmatically retrieve a
                        single RadTab from the collection, using array notation.
                    </item>
            		<item>
                        Use the <strong>Count</strong> property to determine the total
                        number of menu items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadTabCollection.Add(Telerik.Web.UI.RadTab)">Add</see> method to add tabs in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadTabCollection.Remove(Telerik.Web.UI.RadTab)">Remove</see> method to remove tabs from the
                        collection.
                    </item>
            	</list>
            </remarks>
            <moduleiscollection/>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see> class.
            </summary>
            <param name="parent">The owner of the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.Add(Telerik.Web.UI.RadTab)">
            <summary>
            Appends the specified <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> object to the end of the current <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see>.
            </summary>
            <param name="tab">
            The <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> to append to the end of the current <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see>.
            </param>
            <example>
            	The following example demonstrates how to programmatically add tabs in a
                <strong>RadTabStrip</strong> control.
            	<code lang="CS">
            		RadTab newsTab = new RadTab("News");
            		RadTabStrip1.Tabs.Add(newsTab);
                </code>
            	<code lang="VB">
            		Dim newsTab As RadTab = New RadTab("News")
            		RadTabStrip1.Tabs.Add(newsTab)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.AddRange(Telerik.Web.UI.RadTab[])">
            <summary>Appends the specified array of <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> objects to the end of the 
            current <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see>.
            </summary>
            <example>
                The following example demonstrates how to use the <strong>AddRange</strong> method
                to add multiple tabs in a single step. 
                <code lang="CS">
            		RadTab[] tabs = new RadTab[] { new RadTab("First"), new RadTab("Second"), new RadTab("Third") };
            		RadTabStrip1.Tabs.AddRange(tabs);
                </code>
            	<code lang="VB">
                    Dim tabs() As RadTab = {New RadTab("First"), New RadTab("Second"), New RadTab("Third")}
                    RadTabStrip1.Tabs.AddRange(tabs)
                </code>
            </example>
            <param name="tabs">
                The array of <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> o append to the end of the current 
            <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.Insert(System.Int32,Telerik.Web.UI.RadTab)">
            <summary>
            Inserts the specified <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> object in the current 
            <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see> at the specified index location.
            </summary>
            <param name="index">The zero-based index location at which to insert the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see>.</param>
            <param name="tab">The <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.IndexOf(Telerik.Web.UI.RadTab)">
            <summary>
            Determines the index of the specified <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> object in the collection.
            </summary>
            <param name="tab">
            	The <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> to locate.
            </param>
            <returns>
            	The zero-based index of tab within the current <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see>, 
            	if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.Contains(Telerik.Web.UI.RadTab)">
            <summary>
            	Determines whether the specified <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> object is in the current 
            	<see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see>.
            </summary>
            <param name="tab">
            	The <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> object to find.
            </param>
            <returns>
            	<c>true</c> if the current collection contains the specified <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> object; 
            	otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.Remove(Telerik.Web.UI.RadTab)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> object from the current
            	<see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see>.
            </summary>
            <param name="tab">
            	The <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> object to remove.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> object at the specified index 
            from the current <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see>.
            </summary>
            <param name="index">The zero-based index of the tab to remove.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.FindTabByValue(System.String)">
            <summary>
                Searches the <strong>RadTabStrip</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property is equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property is equal to the specifed 
            	value. If a tab is not found, null (Nothing in Visual Basic) is returned.
            </returns>
            <param name="value">
            	The value to search for.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.FindTabByValue(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadTabStrip</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property is equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Value">Value</see> property is equal to the specifed 
            	value. If a tab is not found, null (Nothing in Visual Basic) is returned.
            </returns>
            <param name="value">
            	The value to search for.
            </param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.FindTabByText(System.String)">
            <summary>
                Searches the <strong>RadTabStrip</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is equal
                to the specified value. If a tab is not found, null (Nothing in Visual Basic) is returned.
            </returns>
            <param name="text">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.FindTabByText(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadTabStrip</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> whose <see cref="P:Telerik.Web.UI.RadTab.Text">Text</see> property is equal
                to the specified value. If a tab is not found, null (Nothing in Visual Basic) is returned.
            </returns>
            <param name="text">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTabCollection.FindTab(System.Predicate{Telerik.Web.UI.RadTab})">
            <summary>
            Returns  the first <strong>RadTab</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindTab</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadTabStrip1.FindTab(ItemWithEqualsTextAndValue);
            }
            private static bool ItemWithEqualsTextAndValue(RadTab tab)
            {
                if (tab.Text == tab.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadTabStrip1.FindTab(ItemWithEqualsTextAndValue)
            End Sub
            Private Shared Function ItemWithEqualsTextAndValue(ByVal tab As RadTab) As Boolean
                If tab.Text = tab.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
            </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="P:Telerik.Web.UI.RadTabCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> object at the specified index in 
            	the current <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see>.
            </summary>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> to retrieve.
            </param>
            <returns>
            	The <see cref="T:Telerik.Web.UI.RadTab">RadTab</see> at the specified index in the 
            	current <see cref="T:Telerik.Web.UI.RadTabCollection">RadTabCollection</see>.
            </returns>
        </member>
        <member name="T:Telerik.Web.UI.TabStripClientState">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarButtonEventArgs">
            <summary>
            Provides data for the <see cref="E:Telerik.Web.UI.RadToolBar.ButtonDataBound">ButtonDataBound</see> event
            of the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonEventArgs.#ctor(Telerik.Web.UI.RadToolBarButton)">
            <summary>
                Initializes a new instance of the
                <see cref="T:Telerik.Web.UI.RadToolBarButtonEventArgs">RadToolBarButtonEventArgs</see> class.
            </summary>
            <param name="button">
                A <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> which represents a button in the
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButtonEventArgs.Button">
            <summary>
               Gets the referenced button in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control when the
            	<see cref="E:Telerik.Web.UI.RadToolBar.ButtonDataBound">ButtonDataBound</see> event is raised.
            </summary>
            <value>
                The referenced button in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control when the
            	<see cref="E:Telerik.Web.UI.RadToolBar.ButtonDataBound">ButtonDataBound</see> event is raised.
            </value>
            <remarks>
                Use this property to programmatically access the button referenced in the
            	<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control when the
            	<see cref="E:Telerik.Web.UI.RadToolBar.ButtonDataBound">ButtonDataBound</see> event is raised.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarButtonEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Telerik.Web.UI.RadToolBar.ButtonDataBound">ButtonDataBound</see>
            event of a <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Telerik.Web.UI.RadToolBarButtonEventArgs">RadToolBarButtonEventArgs</see> that
            contains the event data.</param>
            <remarks>
            When you create a <strong>RadToolBarButtonEventHandler</strong> delegate, you identify the method that will
            handle the event. To associate the event with your event handler, add an instance of the delegate to the
            event. The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarEventArgs">
            <summary>
            Provides data for the events of the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarEventArgs.#ctor(Telerik.Web.UI.RadToolBarItem)">
            <summary>
                Initializes a new instance of the
                <see cref="T:Telerik.Web.UI.RadToolBarEventArgs">RadToolBarEventArgs</see> class.
            </summary>
            <param name="item">
                A <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> which represents an item in the
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarEventArgs.Item">
            <summary>
               Gets the referenced item in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control when the
            	event is raised.
            </summary>
            <value>
                The referenced item in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control when the event is raised.
            </value>
            <remarks>
                Use this property to programmatically access the item referenced in the
            	<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control when the event is raised.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarEventHandler">
            <summary>
            Represents the method that handles the events of a <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Telerik.Web.UI.RadToolBarEventArgs">RadToolBarEventArgs</see> that contains the event data.</param>
            <remarks>
            When you create a <strong>RadToolBarEventHandler</strong> delegate, you identify the method that will
            handle the event. To associate the event with your event handler, add an instance of the delegate to the
            event. The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.IRadToolBarButton">
            <summary>
            Defines properties that must be implemented to allow a control to act like
            a RadToolBarButton item in a <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.PostBack">
            <summary>
            Gets or sets a value, indicating if the item will perform a postback.
            </summary>
            <remarks>
            Used to indicate that an item should not perform a postback when
            the containing <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> performs postback through.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.Value">
            <summary>Gets or sets the value associated with the toolbar item.</summary>
            <value>The value associated with the item. The default value is empty string.</value>
            <remarks>
            	<para>Use the <b>Value</b> property to specify or determine the value associated
                with the item.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.NavigateUrl">
            <summary>Gets or sets the URL to link to when the item is clicked.</summary>
            <value>
            The URL to link to when the item is clicked. The default value is empty
            string.
            </value>
            <remarks>
            Use the <strong>NavigateUrl</strong> property to specify the URL to link to when
            the item is clicked. Use "~" (tilde) in front of an URL within the same ASP.NET
            application. When specifying external URL do not forget the protocol (e.g.
            "http://").
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.Target">
            <summary>
            Gets or sets the target window or frame to display the Web page content linked to
            when the toolbar item is clicked.
            </summary>
            <value>
            	<para>The target window or frame to load the Web page linked to when the item is
                selected. Values must begin with a letter in the range of a through z (case
                insensitive), except for the following special values, which begin with an
                underscore:</para>
            	<para>
            		<list type="Itemle">
            			<item>
            				<term>_blank</term>
            				<description>Renders the content in a new window without
                            frames.</description>
            			</item>
            			<item>
            				<term>_parent</term>
            				<description>Renders the content in the immediate frameset
                            parent.</description>
            			</item>
            			<item>
            				<term>_self</term>
            				<description>Renders the content in the frame with focus.</description>
            			</item>
            			<item>
            				<term>_top</term>
            				<description>Renders the content in the full window without
                            frames.</description>
            			</item>
            		</list>
            	</para>The default value is empty string.
            </value>
            <remarks>
            	<para>
                    Use the <b>Target</b> property to specify the frame or window that displays the
                    Web page linked to when the toolbar item is clicked. The Web page is specified by
                    setting the <see cref="P:Telerik.Web.UI.IRadToolBarButton.NavigateUrl">NavigateUrl</see> property.
                </para>
            	<para>If this property is not set, the Web page specified by the
                <strong>NavigateUrl</strong> property is loaded in the current window.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.ItemTemplate">
            <summary>Gets or sets the template for displaying the item.</summary>
            <value>
            	<para>A <strong>ITemplate</strong> implemented object that contains the template
                for displaying the item. The default value is a null reference (<b>Nothing</b> in
                Visual Basic), which indicates that this property is not set.</para>
            </value>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.CommandName">
            <summary>
            Gets or sets the command name associated with the toolbar item that is passed to the
            	ItemCommand event of the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> instance.
            </summary>
            <value>
            	The command name of the toolbar item. The default value is an empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.CommandArgument">
            <summary>
            Gets or sets an optional parameter passed to the Command event of the
            	<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> instance along with the associated
            	<see cref="P:Telerik.Web.UI.IRadToolBarButton.CommandName">CommandName</see>
            </summary>
            <value>
            	An optional parameter passed to the Command event of the
            	<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> instance along with the associated
            	<see cref="P:Telerik.Web.UI.IRadToolBarButton.CommandName">CommandName</see>. The default value is an empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.CausesValidation">
            <summary>
            Gets or sets a value indicating whether clicking the button causes page validation
            to occur.
            </summary>
            <value>
            true if clicking the button causes page validation to occur; otherwise, false.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.PostBackUrl">
            <summary>
            Gets or sets the URL of the Web page to post to from the current page when
            the button control is clicked.
            </summary>
            <value>
            The URL of the Web page to post to from the current page when the button
            control is clicked.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.ValidationGroup">
            <summary>
            Gets or sets the name for the group of controls for which the button control
            causes validation when it posts back to the server.
            </summary>
            <value>
            The name for the group of controls for which the button control causes validation
             when it posts back to the server.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.ToolBar">
            <summary>Gets the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> instance which contains the item.</summary>
            <remarks>
                Use this property to obtain an instance to the
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> object containing the item.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.Text">
            <summary>
            	Gets or sets the text displayed for the current item.
            </summary>
            <value>
            	The text an item in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control displays. The default is empty string.
            </value>
            <remarks>
            	Use the <b>Text</b> property to specify or determine the text an item displays displays
            	in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.ImageUrl">
            <summary>Gets or sets the path to an image to display for the item.</summary>
            <value>
            The path to the image to display for the item. The default value is empty
            string.
            </value>
            <remarks>
            Use the <strong>ImageUrl</strong> property to specify the image for the item. If
            the <strong>ImageUrl</strong> property is set to empty string no image will be
            rendered. Use "~" (tilde) when referring to images within the current ASP.NET
            application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.HoveredImageUrl">
            <summary>
            Gets or sets the path to an image to display when the user moves the
            mouse over the item.
            </summary>
            <value>
            The path to the image to display when the user moves the mouse over the item. The
            default value is empty string.
            </value>
            <example>
            	<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadToolBarButton ImageUrl="~/Img/inbox.gif"
                <strong>HoveredImageUrl="~/Img/inboxOver.gif"</strong> Text="Index" /&gt;<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadToolBar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.HoveredCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the user moves the mouse
            over the toolbar item.
            </summary>
            <value>
            The CSS class applied when the user moves the mouse over the toolbar item. The default value is
            <strong>String.Empty</strong>.
            </value>
            <remarks>
            By default the visual appearance of a hovered toolbar items is defined in the skin CSS
            file. You can use the <strong>HoveredCssClass</strong> property to specify unique
            appearance for the toolbar item when it is hovered.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.ClickedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the toolbar item is
            clicked.
            </summary>
            <value>
            The CSS class applied when the toolbar item is clicked. The default value is
            <strong>String.Empty</strong>.
            </value>
            <example>
            By default the visual appearance of clicked toolbar items is defined in the skin CSS
            file. You can use the <strong>ClickedCssClass</strong> property to specify unique
            appearance for the toolbar item when it is clicked.
            </example>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.ClickedImageUrl">
            <summary>
            Gets or sets the path to an image to display for the item when the user clicks it.
            </summary>
            <value>
            The path to the image to display when the user clicks the item. The default value
            is empty string.
            </value>
            <remarks>
            Use the <strong>ClickedImageUrl</strong> property to specify the image that will be
            used when the user clicks the item. If the <strong>ClickedImageUrl</strong>
            property is set to empty string the image specified by the <strong>ImageUrl</strong>
            property will be used. Use "~" (tilde) when referring to images within the current
            ASP.NET application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.DisabledImageUrl">
            <summary>
            Gets or sets the path to an image to display when the item is disabled.
            </summary>
            <value>
            The path to the image to display when the item is disabled. The
            default value is empty string.
            </value>
            <remarks>
            Use the <strong>DisabledImageUrl</strong> property to specify the image that will be
            used when the item is disabled. If the <strong>DisabledImageUrl</strong>
            property is set to empty string the image specified by the <strong>ImageUrl</strong>
            property will be used. Use "~" (tilde) when referring to images within the current
            ASP.NET application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.DisabledCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the toolbar item is
            disabled.
            </summary>
            <value>
            The CSS class applied when the toolbar item is disabled. The default value is
            <strong>String.Empty</strong>.
            </value>
            <remarks>
            By default the visual appearance of disabled toolbar items is defined in the skin CSS
            file. You can use the <strong>DisabledCssClass</strong> property to specify unique
            appearance for the toolbar item when it is disabled.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.FocusedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the toolBar item is
            focused after tabbing to it, or by using its AccessKey
            </summary>
            <value>
            The CSS class applied when the toolBar item is focused. The default value is
            <strong>String.Empty</strong>.
            </value>
            <remarks>
            By default the visual appearance of focused toolBar items is defined in the skin CSS
            file. You can use the <strong>FocusedCssClass</strong> property to specify unique
            appearance for the toolBar item when it is focused.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.FocusedImageUrl">
            <summary>
            Gets or sets the path to an image to display when the user focuses the
            item either by tabbing to it or by using the AccessKey
            </summary>
            <value>
            The path to the image to display when the user user focuses the
            item either by tabbing to that it or by using the AccessKey. The
            default value is empty string.
            </value>
            <remarks>
            Use the <strong>FocusedImageUrl</strong> property to specify the image that will be
            used when the item gets the focus after tabbing or using its AccessKey.
            If the <strong>FocusedImageUrl</strong> property is set to empty string the image specified
            by the <strong>ImageUrl</strong> property will be used. Use "~" (tilde) when referring to
            images within the current ASP.NET application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarButton.ImagePosition">
            <summary>
            Gets or sets the position of the item image according to the item text.
            </summary>
            <value>
            The position of the item image according to the item text. The
            default value is <strong>ToolBarImagePosition.Left</strong>.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.IRadToolBarButtonContainer">
            <summary>
                Defines properties that toolbar button containers
            	(<see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see>,
                <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>) should implement.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.IRadToolBarItemContainer">
            <summary>
                Defines properties that toolbar item container (<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>)
            	should implement
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IRadToolBarItemContainer.Items">
            <summary>Gets the collection of child items.</summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see> that represents the child
                items.
            </value>
            <remarks>
            Use this property to retrieve the child items. You can also use it to
            programmatically add or remove items.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.ToolBarImagePosition">
            <summary>
            Specifies the position of the image of an item within the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>
            control according to the item text.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ToolBarImagePosition.Left">
            <summary>
            The image will be displayed to the left of the text
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ToolBarImagePosition.Right">
            <summary>
            The image will be displayed to the right of the text
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ToolBarImagePosition.AboveText">
            <summary>
            The image will be displayed above the text
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.ToolBarImagePosition.BelowText">
            <summary>
            The image will be displayed below the text
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarButton">
            <summary>Represents a single button in the RadToolBar class.</summary>
            <remarks>
            	<para>
                    When the user clicks a toolbar button, the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control can
            		either navigate to a linked Web page or simply post back to the server. If the
                    <see cref="P:Telerik.Web.UI.RadToolBarButton.NavigateUrl">NavigateUrl</see> property of a toolbar button is set, the
                    <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control navigates to the linked page. By default,
            		a linked page is displayed in the same window or frame as the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>
                    control. To display the linked content in a different window or frame, use the
                    <see cref="P:Telerik.Web.UI.RadToolBarButton.Target">Target</see> property.
                </para>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarItem">
            <summary>Represents a single item in the RadToolBar class.</summary>
            <remarks>
            	<para>
                    The <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control is made up of a list of toolbar items
                    represented by <b>RadToolBarItem</b> objects (<see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see>,
            		<see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see>,
            		<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>). All toolbar  items are stored
            		in the <see cref="P:Telerik.Web.UI.RadToolBar.Items">Items</see> collection of the toolbar.
            		You can access the toolbar to which the item belongs
                    by using the <see cref="P:Telerik.Web.UI.RadToolBarItem.ToolBar">ToolBar</see> property.
                </para>
            	<para>To create the toolbar items for a <b>RadToolBar</b> control, use one of the
                following methods:</para>
            	<list type="bullet">
            		<item>Use declarative syntax to create static toolbar items.</item>
            		<item>Use a constructor to dynamically create new instances of either toolbar item classes
            			(<see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see>,
            			<see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see>,
            			<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>). These <b>RadToolBarItem</b>
            			objects can then be added to the <see cref="P:Telerik.Web.UI.RadToolBar.Items">Items</see> collection of the
            			<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>.</item>
            		<item>Bind the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control to a data source.</item>
            	</list>
            	<para>
                    Each toolbar item has a <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property. The Button items
            		(<see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> and
            		<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>) have a
                    <see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see> property. The value of the
            		<see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property is displayed in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>
            		control, while the <see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see> property is used to store any
            		additional data about the toolbar item.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.ToolBar">
            <summary>Gets the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> instance which contains the item.</summary>
            <remarks>
                Use this property to obtain an instance to the
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> object containing the item.
            </remarks>		
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.Text">
            <summary>
            	Gets or sets the text displayed for the current item.
            </summary>
            <value>
            	The text an item in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control displays. The default is empty string.
            </value>
            <remarks>
            	Use the <b>Text</b> property to specify or determine the text an item displays displays
            	in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.ImageUrl">
            <summary>Gets or sets the path to an image to display for the item.</summary>
            <value>
            The path to the image to display for the item. The default value is empty
            string.
            </value>
            <remarks>
            Use the <strong>ImageUrl</strong> property to specify the image for the item. If
            the <strong>ImageUrl</strong> property is set to empty string no image will be
            rendered. Use "~" (tilde) when referring to images within the current ASP.NET
            application.
            </remarks>
            <example>
            	<para>The following example demonstrates how to specify the image to display for
                a button using the <strong>ImageUrl</strong> property.</para>
            	<para>
            		<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1"
                    runat="server"&gt;<br/>
                    &lt;Items&gt;<br/>
                    &lt;telerik:RadToolBarButton <strong>ImageUrl="~/Img/inbox.gif"</strong> Text="Index"
                    /&gt;<br/>
                    &lt;telerik:RadToolBarButton <strong>ImageUrl="~/Img/outbox.gif"</strong> Text="Outbox"
                    /&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.HoveredImageUrl">
            <summary>
            Gets or sets the path to an image to display when the user moves the
            mouse over the item.
            </summary>
            <value>
            The path to the image to display when the user moves the mouse over the item. The
            default value is empty string.
            </value>
            <example>
            	<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadToolBarButton ImageUrl="~/Img/inbox.gif"
                <strong>HoveredImageUrl="~/Img/inboxOver.gif"</strong> Text="Index" /&gt;<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadToolBar&gt;</para>
            </example>
            <remarks>
            Use the <strong>HoveredImageUrl</strong> property to specify the image that will be
            used when the user moves the mouse over the item. If the <strong>HoveredImageUrl</strong>
            property is set to empty string the image specified by the <strong>ImageUrl</strong>
            property will be used. Use "~" (tilde) when referring to images within the current
            ASP.NET application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.HoveredCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the user moves the mouse
            over the toolbar item.
            </summary>
            <value>
            The CSS class applied when the user moves the mouse over the toolbar item. The default value is
            <strong>String.Empty</strong>.
            </value>
            <remarks>
            By default the visual appearance of a hovered toolbar items is defined in the skin CSS
            file. You can use the <strong>HoveredCssClass</strong> property to specify unique
            appearance for the toolbar item when it is hovered.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.ClickedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the toolbar item is
            clicked.
            </summary>
            <value>
            The CSS class applied when the toolbar item is clicked. The default value is
            <strong>String.Empty</strong>.
            </value>
            <example>
            By default the visual appearance of clicked toolbar items is defined in the skin CSS
            file. You can use the <strong>ClickedCssClass</strong> property to specify unique
            appearance for the toolbar item when it is clicked.
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.ClickedImageUrl">
            <summary>
            Gets or sets the path to an image to display for the item when the user clicks it.
            </summary>
            <value>
            The path to the image to display when the user clicks the item. The default value
            is empty string.
            </value>
            <example>
            	<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadToolBarDropDown ImageUrl="~/Img/inbox.gif"
                <strong>ClickedImageUrl="~/Img/inboxClicked.gif"</strong> Text="DropDown1" &gt;
                    &lt;Items&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Mail1" <strong>ClickedImageUrl="~/Img/mail1Clicked.gif"</strong>
            			/&gt;
                    &lt;/Items&gt;<br/>
            	&lt;/telerik:RadToolBarDropDown&gt;/<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadToolBar&gt;</para>
            </example>
            <remarks>
            Use the <strong>ClickedImageUrl</strong> property to specify the image that will be
            used when the user clicks the item. If the <strong>ClickedImageUrl</strong>
            property is set to empty string the image specified by the <strong>ImageUrl</strong>
            property will be used. Use "~" (tilde) when referring to images within the current
            ASP.NET application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.DisabledImageUrl">
            <summary>
            Gets or sets the path to an image to display when the item is disabled.
            </summary>
            <value>
            The path to the image to display when the item is disabled. The
            default value is empty string.
            </value>
            <example>
            	<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadToolBarButton ImageUrl="~/Img/inbox.gif"
                <strong>DisabledImageUrl="~/Img/inboxDisabled.gif"</strong> Text="Index" /&gt;<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadToolBar&gt;</para>
            </example>
            <remarks>
            Use the <strong>DisabledImageUrl</strong> property to specify the image that will be
            used when the item is disabled. If the <strong>DisabledImageUrl</strong>
            property is set to empty string the image specified by the <strong>ImageUrl</strong>
            property will be used. Use "~" (tilde) when referring to images within the current
            ASP.NET application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.DisabledCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the toolbar item is
            disabled.
            </summary>
            <value>
            The CSS class applied when the toolbar item is disabled. The default value is
            <strong>String.Empty</strong>.
            </value>
            <remarks>
            By default the visual appearance of disabled toolbar items is defined in the skin CSS
            file. You can use the <strong>DisabledCssClass</strong> property to specify unique
            appearance for the toolbar item when it is disabled.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.FocusedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the toolBar item is
            focused after tabbing to it, or by using its AccessKey
            </summary>
            <value>
            The CSS class applied when the toolBar item is focused. The default value is
            <strong>String.Empty</strong>.
            </value>
            <example>
            	<para class="sourcecode">
            	&lt;style type="text/css"&gt;
            	.myFocusedCssClass .rtbText
            	{
            		font-weight:bold !important;
            		color:red !important;
            	}
            	&lt;/style&gt;
            	&lt;telerik:RadToolBar id="RadToolBar1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadToolBarButton
                <strong>FocusedCssClass="myFocusedCssClass"</strong> Text="Bold" /&gt;<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadToolBar&gt;</para>
            </example>
            <remarks>
            By default the visual appearance of focused toolBar items is defined in the skin CSS
            file. You can use the <strong>FocusedCssClass</strong> property to specify unique
            appearance for the toolBar item when it is focused.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.FocusedImageUrl">
            <summary>
            Gets or sets the path to an image to display when the user focuses the
            item either by tabbing to it or by using the AccessKey
            </summary>
            <value>
            The path to the image to display when the user user focuses the
            item either by tabbing to that it or by using the AccessKey. The
            default value is empty string.
            </value>
            <example>
            	<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadToolBarButton ImageUrl="~/Img/bold.gif"
                <strong>FocusedImageUrl="~/Img/boldFocused.gif"</strong> Text="Bold" /&gt;<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadToolBar&gt;</para>
            </example>
            <remarks>
            Use the <strong>FocusedImageUrl</strong> property to specify the image that will be
            used when the item gets the focus after tabbing or using its AccessKey.
            If the <strong>FocusedImageUrl</strong> property is set to empty string the image specified
            by the <strong>ImageUrl</strong> property will be used. Use "~" (tilde) when referring to
            images within the current ASP.NET application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItem.ImagePosition">
            <summary>
            Gets or sets the position of the item image according to the item text.
            </summary>
            <value>
            The position of the item image according to the item text. The
            default value is <strong>ToolBarImagePosition.Left</strong>.
            </value>
            <example>
            	<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadToolBarButton ImageUrl="~/Img/bold.gif"
                <strong>ImagePosition="Right"</strong> Text="Bold" /&gt;<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadToolBar&gt;</para>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarItem.Renderer">
            <summary>
            	For internal use only
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButton.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> class.</summary>
            <remarks>
                Use this constructor to create and initialize a new instance of the
                <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> class using default values.
            </remarks>
            <example>
                The following example demonstrates how to add items to
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> controls. 
                <code lang="CS" title="[New Example]">
            RadToolBarButton button = new RadToolBarButton();
            button.Text = "Create New";
            button.CommandName = "CreateNew";
            button.ImageUrl = "~/ToolBarImages/CreateNew.gif";
             
            RadToolBar1.Items.Add(button);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim button As New RadToolBarButton()
            button.Text = "Create New"
            button.CommandName = "CreateNew"
            button.ImageUrl = "~/ToolBarImages/CreateNew.gif"
             
            RadToolBar1.Items.Add(button)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButton.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> class with the
                specified text data.
            </summary>
            <remarks>
            	<para>
                    Use this constructor to create and initialize a new instance of the
                    <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> class using the specified text.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to add items to
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> controls. 
                <code lang="CS" title="[New Example]">
            RadToolBarButton button = new RadToolBarButton("Create New");
            button.CommandName = "CreateNew";
            button.ImageUrl = "~/ToolBarImages/CreateNew.gif";
             
            RadToolBar1.Items.Add(button);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim button As New RadToolBarButton("Create New")
            button.CommandName = "CreateNew"
            button.ImageUrl = "~/ToolBarImages/CreateNew.gif"
             
            RadToolBar1.Items.Add(button)
                </code>
            </example>
            <param name="text">
                The text of the button. The <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property is set to the value
                of this parameter.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButton.#ctor(System.String,System.Boolean,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> class with the
                specified text, checked state and group name data.
            </summary>
            <remarks>
            	<para>
                    Use this constructor to create and initialize a new instance of the
                    <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> class using the specified text,
            		checked state and group name.
                </para>
            	<para>
            		When this constructor used, the CheckOnClick property of the created
            		<see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> is automatically set to true.
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to add items to
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> controls. 
                <code lang="CS" title="[New Example]">
            RadToolBarButton alighLeftButton = new RadToolBarButton("Left", false, "Alignment");
            alighLeftButton.CommandName = "AlignLeft";
            alighLeftButton.ImageUrl = "~/ToolBarImages/AlignLeft.gif";
            RadToolBar1.Items.Add(alighLeftButton);
            
            RadToolBarButton alignCenterButton = new RadToolBarButton("Center", false, "Alignment");
            alignCenterButton.CommandName = "AlignCenter";
            alignCenterButton.ImageUrl = "~/ToolBarImages/AlignCenter.gif";
            RadToolBar1.Items.Add(alignCenterButton);
            
            RadToolBarButton alignRightButton = new RadToolBarButton("Right", false, "Alignment");
            alignRightButton.CommandName = "AlignRight";
            alignRightButton.ImageUrl = "~/ToolBarImages/AlignRight.gif";
            RadToolBar1.Items.Add(alignRightButton);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim alighLeftButton As RadToolBarButton = New RadToolBarButton("Left", False, "Alignment")
            alighLeftButton.CommandName = "AlignLeft"
            alighLeftButton.ImageUrl = "~/ToolBarImages/AlignLeft.gif"
            RadToolBar1.Items.Add(alighLeftButton)
            
            Dim alignCenterButton As RadToolBarButton = New RadToolBarButton("Center", False, "Alignment")
            alignCenterButton.CommandName = "AlignCenter"
            alignCenterButton.ImageUrl = "~/ToolBarImages/AlignCenter.gif"
            RadToolBar1.Items.Add(alignCenterButton)
            
            Dim alignRightButton As RadToolBarButton = New RadToolBarButton("Right", False, "Alignment")
            alignRightButton.CommandName = "AlignRight"
            alignRightButton.ImageUrl = "~/ToolBarImages/AlignRight.gif"
            RadToolBar1.Items.Add(alignRightButton)
                </code>
            </example>
            <param name="text">
                The text of the button. The <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property is set to the value
                of this parameter.
            </param>
            <param name="isChecked">
                The checked state of the button. The <see cref="P:Telerik.Web.UI.RadToolBarButton.Checked">Checked</see> property is set to the value
                of this parameter.
            </param>
            <param name="group">
                The group to which the button belongs. The <see cref="P:Telerik.Web.UI.RadToolBarButton.Group">Group</see> property is set
            	to the value of this parameter.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButton.Clone">
            <summary>Creates a copy of the current <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object.</summary>
            <returns>A <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> which is a copy of the current one.</returns>
            <remarks>
            Use the <strong>Clone</strong> method to create a copy of the current button. All
            properties of the clone are set to the same values as the current ones.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.Owner">
            <summary>
            Gets a reference to the owner of the RadToolBarButton.
            </summary>
            <value>
            The IToolBarItemContainer control (<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>,
            <see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see>,
            <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>) which holds the RadToolBarButton.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.DataItem">
            <summary>Gets the data item that is bound to the button</summary>
            <value>
            	An Object that represents the data item that is bound to the button. The default value is null
            	(Nothing in Visual Basic), which indicates that the button is not bound to any data item. The
            	return value will always be null unless accessed within a
            	<see cref="E:Telerik.Web.UI.RadToolBar.ButtonDataBound">ButtonDataBound</see> event handler.
            </value>
            <remarks>
                This property is applicable only during data binding. Use it along with the
                <see cref="E:Telerik.Web.UI.RadToolBar.ButtonDataBound">ButtonDataBound</see> event to perform additional
                mapping of fields from the data item to <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> properties.
            </remarks>
            <example>
                The following example demonstrates how to map fields from the data item to
                <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> properties. It assumes the user has subscribed to the
                <see cref="E:Telerik.Web.UI.RadToolBar.ButtonDataBound">ButtonDataBound</see> event. 
                <code lang="CS">
            		private void RadToolBar1_ButtonDataBound(object sender, Telerik.Web.UI.RadToolBarButtonEventArgs e)
            		{
            			e.Button.ImageUrl = "image" + (string)DataBinder.Eval(e.Button.DataItem, "ID") + ".gif";
            			e.Button.NavigateUrl = (string)DataBinder.Eval(e.Button.DataItem, "URL");
            		}
                </code>
            	<code lang="VB">
            		Sub RadToolBar1_ButtonDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadToolBarButtonEventArgs) Handles RadToolBar1.ButtonDataBound
            			e.Button.ImageUrl = "image" &amp; DataBinder.Eval(e.Button.DataItem, "ID") &amp; ".gif"
            			e.Button.NavigateUrl = CStr(DataBinder.Eval(e.Button.DataItem, "URL"))
            		End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.IsSeparator">
            <summary>
            Gets or sets whether the button is separator.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.CheckOnClick">
            <summary>
            Gets or sets whether the button has a check state.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.Checked">
            <summary>
            Gets or sets if the button is checked.
            </summary>
            <remarks>
            	<para>The <strong>Checked</strong> property of the button depends on the
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.CheckOnClick">CheckOnClick</see> property. If the
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.CheckOnClick">CheckOnClick</see> property is set to
            	<strong>false</strong>, the <strong>Checked</strong> property will be ignored.
            	</para>
            	<para>When a button's Checked state is set to true, all the buttons that belong
            	to the same group in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> get their Checked
            	state set to false.
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.Group">
            <summary>
            Gets or sets the group to which the button belongs.
            </summary>
            <remarks>
            	The <strong>Group</strong> property of the button depends on the
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.CheckOnClick">CheckOnClick</see> property. When several buttons
            	in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> are assigned to the same group, checking one
            	of them will uncheck the one that is currently checked. If the
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.CheckOnClick">CheckOnClick</see> property is set to
            	<strong>false</strong>, the <strong>Group</strong> property will be ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.CheckedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the toolbar button is
            checked.
            </summary>
            <value>
            The CSS class applied when the toolbar button is checked. The default value is
            <strong>string.Empty</strong>.
            </value>
            <example>
            By default the visual appearance of clicked toolbar buttons is defined in the skin CSS
            file. You can use the <strong>ClickedCssClass</strong> property to specify unique
            appearance for the toolbar button when it is clicked.
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.CheckedImageUrl">
            <summary>
            Gets or sets the path to an image to display for the button when its <see cref="P:Telerik.Web.UI.RadToolBarButton.Checked">Checked</see> state is "true".
            </summary>
            <value>
            The path to the image to display when its <see cref="P:Telerik.Web.UI.RadToolBarButton.Checked">Checked</see> state is "true". The default value
            is empty string.
            </value>
            <example>
            	<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1" runat="server"&gt;<br/>
                &lt;Items&gt;<br/>
                &lt;telerik:RadToolBarButton ImageUrl="~/Img/alignLeft.gif"
                <strong>CheckedImageUrl="~/Img/alignLeftChecked.gif"</strong> Text="Left" /&gt;<br/>
                &lt;telerik:RadToolBarButton ImageUrl="~/Img/alignRight.gif"
                <strong>CheckedImageUrl="~/Img/alignRightChecked.gif"</strong> Text="Right"
                /&gt;<br/>
                &lt;/Items&gt;<br/>
                &lt;/telerik:RadToolBar&gt;</para>
            </example>
            <remarks>
            Use the <strong>CheckedImageUrl</strong> property to specify the image that will be
            used when the button is checked. If the <strong>CheckedImageUrl</strong>
            property is set to empty string the image specified by the <strong>ImageUrl</strong>
            property will be used. Use "~" (tilde) when referring to images within the current
            ASP.NET application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.AllowSelfUnCheck">
            <summary>
            Gets or sets a value indicating if a checked button will get unchecked when clicked.
            </summary>
            <value>
            If a checked button will get unchecked when clicked. The default value is
            <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.ItemTemplate">
            <summary>Gets or sets the template for displaying the button.</summary>
            <value>
            	<para>A <strong>ITemplate</strong> implemented object that contains the template
                for displaying the item. The default value is a null reference (<b>Nothing</b> in
                Visual Basic), which indicates that this property is not set.</para>
            </value>
            <example>
            	<para>The following template demonstrates how to add a Calendar control in a certain
                ToolBar button.</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadToolBar runat="server" ID="RadToolBar1"&gt;</para>
            	<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            		<para>&lt;Items&gt;</para>
            		<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            			<para>&lt;telerik:RadToolBarDropDown Text="Date"&gt;</para>
            			<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            				<para>&lt;Items&gt;</para>
            					<para>&lt;telerik:RadToolBarButton Text="Date"&gt;</para>
            						<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            							<para>&lt;ItemTemplate&gt;</para>
            							<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            								<para>&lt;asp:Calendar runat="server" ID="Calendar1"
            								/&gt;</para>
            							</blockquote>
            							<para>&lt;/ItemTemplate&gt;</para>
            						</blockquote>
            					<para>&lt;/telerik:RadToolBarDropButton&gt;</para>
            				<para>&lt;/Items&gt;</para>
            			</blockquote>
            			<para>&lt;/telerik:RadToolBarDropDown&gt;</para>
            		</blockquote>
            		<para>&lt;/Items&gt;</para>
            	</blockquote>
            	<para>&lt;/telerik:RadToolBar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.PostBack">
            <summary>
            Gets or sets a value indicating whether clicking on the button will
            postback.
            </summary>
            <value>
            	<strong>True</strong> if the toolbar button should postback; otherwise
                <strong>false</strong>. By default all the items will postback provided the user
                has subscribed to the <see cref="E:Telerik.Web.UI.RadToolBar.ButtonClick">ButtonClick</see> event.
            </value>
            <remarks>
                If you subscribe to the <see cref="E:Telerik.Web.UI.RadToolBar.ButtonClick">ButtonClick</see> all toolbar
                buttons will postback. To turn off that behavior you should set the
                <strong>PostBack</strong> property to <strong>false</strong>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.Value">
            <summary>Gets or sets the value associated with the toolbar button.</summary>
            <value>The value associated with the button. The default value is empty string.</value>
            <remarks>
            	<para>Use the <b>Value</b> property to specify or determine the value associated
                with the button.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.NavigateUrl">
            <summary>Gets or sets the URL to link to when the button is clicked.</summary>
            <value>
            The URL to link to when the button is clicked. The default value is empty
            string.
            </value>
            <example>
                The following example demonstrates how to use the <strong>NavigateUrl</strong>
                property 
                <para>
            		<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1"
                    runat="server"&gt;<br/>
                    &lt;Items&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="News" <strong>NavigateUrl="~/News.aspx"</strong>
                    /&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="External URL"
                    <strong>NavigateUrl="http://www.example.com"</strong> /&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
            <remarks>
            Use the <strong>NavigateUrl</strong> property to specify the URL to link to when
            the button is clicked. Use "~" (tilde) in front of an URL within the same ASP.NET
            application. When specifying external URL do not forget the protocol (e.g.
            "http://").
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.Target">
            <summary>
            Gets or sets the target window or frame to display the Web page content linked to
            when the toolbar button is clicked.
            </summary>
            <value>
            	<para>The target window or frame to load the Web page linked to when the button is
                selected. Values must begin with a letter in the range of a through z (case
                insensitive), except for the following special values, which begin with an
                underscore:</para>
            	<para>
            		<list type="Itemle">
            			<item>
            				<term>_blank</term>
            				<description>Renders the content in a new window without
                            frames.</description>
            			</item>
            			<item>
            				<term>_parent</term>
            				<description>Renders the content in the immediate frameset
                            parent.</description>
            			</item>
            			<item>
            				<term>_self</term>
            				<description>Renders the content in the frame with focus.</description>
            			</item>
            			<item>
            				<term>_top</term>
            				<description>Renders the content in the full window without
                            frames.</description>
            			</item>
            		</list>
            	</para>The default value is empty string.
            </value>
            <remarks>
            	<para>
                    Use the <b>Target</b> property to specify the frame or window that displays the
                    Web page linked to when the toolbar button is clicked. The Web page is specified by
                    setting the <see cref="P:Telerik.Web.UI.RadToolBarButton.NavigateUrl">NavigateUrl</see> property.
                </para>
            	<para>If this property is not set, the Web page specified by the
                <strong>NavigateUrl</strong> property is loaded in the current window.</para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to use the <strong>Target</strong>
                property</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadToolBar runat="server" ID="RadToolBar1"&gt;</para>
            	<para>&lt;Items&gt;</para>
            	<para>&lt;telerik:RadToolBarButton <strong>Target="_blank"</strong>
                NavigateUrl="http://www.google.com" /&gt;</para>
            	<para>&lt;/Items&gt;</para>
            	<para>&lt;/telerik:RadToolBar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.CommandName">
            <summary>
            Gets or sets the command name associated with the toolbar button that is passed to the
            	ItemCommand event of the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> instance.
            </summary>
            <value>
            	The command name of the toolbar button. The default value is an empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.CommandArgument">
            <summary>
            Gets or sets an optional parameter passed to the Command event of the
            	<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> instance along with the associated
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.CommandName">CommandName</see>
            </summary>
            <value>
            	An optional parameter passed to the Command event of the
            	<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> instance along with the associated
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.CommandName">CommandName</see>. The default value is an empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when
            the <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> is clicked
            </summary>
            <value>
            	<strong>true</strong> if validation is performed when the <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see>
            is clicked otherwise, <b>false</b>. The default value is <b>true</b>.
            </value>
            <remarks>
            	<para>By default, page validation is performed when the button is clicked. Page
                validation determines whether the input controls associated with a validation
                control on the page all pass the validation rules specified by the validation
                control. You can specify or determine whether validation is performed when the button is clicked
            	on both the client and the server by using the <b>CausesValidation</b>
                property. To prevent validation from being performed, set the
                <b>CausesValidation</b> property to <b>false</b>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.ValidationGroup">
            <summary>
            	<para>Gets or sets the name of the validation group to which the
            	<see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> belongs.</para>
            </summary>
            <value>
            The name of the validation group to which this <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see>
            belongs. The default is an empty string (""), which indicates that this property is not set.
            </value>
            <remarks>
                This property works only when <see cref="P:Telerik.Web.UI.RadToolBarButton.CausesValidation">CausesValidation</see>
                is set to true.
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButton.PostBackUrl">
            <summary>
            	Gets or sets the URL of the page to post to from the current page when the
                <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> is clicked.
            </summary>
            <value>
            	The URL of the Web page to post to from the current page when the
            	<see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> is clicked. The default value is an empty
            	string (""), which causes the page to post back to itself.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarButton.ButtonRenderer">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarButton.DropDownItemRenderer">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarButton.SeparatorRenderer">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarButton.TemplatedButtonRenderer">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarDropDown">
            <summary>Represents a dropdown in the RadToolBar class.</summary>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarDropDown.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see> class.</summary>
            <remarks>
                Use this constructor to create and initialize a new instance of the
                <see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see> class using default values.
            </remarks>
            <example>
                The following example demonstrates how to add items to
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> controls. 
                <code lang="CS" title="[New Example]">
            RadToolBarDropDown dropdown = new RadToolBarDropDown();
            dropdown.Text = "Manage";
            dropdown.ImageUrl = "~/ToolbarImages/Manage.gif";
             
            RadToolBar1.Items.Add(dropdown);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim dropdown As New RadToolBarDropDown()
            dropdown.Text = "Manage"
            dropdown.ImageUrl = "~/ToolbarImages/Manage.gif"
             
            RadToolBar1.Items.Add(dropdown)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarDropDown.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see> class with the
                specified text data.
            </summary>
            <remarks>
            	<para>
                    Use this constructor to create and initialize a new instance of the
                    <see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see> class using the specified text.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to add items to
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> controls. 
                <code lang="CS" title="[New Example]">
            RadToolBarDropDown dropdown = new RadToolBarDropDown("Manage");
             
            RadToolBar1.Items.Add(dropdown);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim dropdown As New RadToolBarDropDown("Manage")
            
            RadToolBar1.Items.Add(dropdown)
                </code>
            </example>
            <param name="text">
                The text of the dropdown. The <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property is set to the value
                of this parameter.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarDropDown.Buttons">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see> object that
            	contains the child buttons of the dropdown.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see> that contains the
            	child buttons of the dropdown. By default the collection is empty (the dropdown has no buttons).
            </value>
            <remarks>
            	Use the <strong>Buttons</strong> property to access the child buttons of the dropdown. You can also use
            	the <strong>Buttons</strong> property to manage the children of the dropdown. You can add,
            	remove or modify buttons from the <strong>Buttons</strong> collection.
            </remarks>
            <example>
                The following example demonstrates how to programmatically modify the properties of child buttons.
                <code lang="CS">
            		manageDropDown.Buttons[0].Text = "Users";
            		manageDropDown.Buttons[0].ImageUrl = "~/ToolbarImages/ManageUsers.gif";
                </code>
            	<code lang="VB">
            		manageDropDown.Buttons[0].Text = "Users"
            		manageDropDown.Buttons[0].ImageUrl = "~/ToolbarImages/ManageUsers.gif"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarDropDown.DropDownWidth">
            <summary>
            Gets or sets the width of the dropdown in pixels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarDropDown.DropDownHeight">
            <summary>
            Gets or sets the height of the dropdown in pixels.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarDropDown.DropDownRenderer">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarSplitButton">
            <summary>Represents a splitbutton in the RadToolBar class.</summary>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarSplitButton.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> class.</summary>
            <remarks>
                Use this constructor to create and initialize a new instance of the
                <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> class using default values.
            </remarks>
            <example>
                The following example demonstrates how to add items to
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> controls. 
                <code lang="CS" title="[New Example]">
            RadToolBarSplitButton splitButton = new RadToolBarSplitButton();
            splitButton.Text = "News";
            splitButton.ImageUrl = "~/News.gif";
             
            RadToolBar1.Items.Add(splitButton);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim splitButton As New RadToolBarSplitButton()
            splitButton.Text = "News"
            splitButton.ImageUrl = "~/News.gif"
             
            RadToolBar1.Items.Add(splitButton)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarSplitButton.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> class with the
                specified text data.
            </summary>
            <remarks>
            	<para>
                    Use this constructor to create and initialize a new instance of the
                    <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> class using the specified text.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to add items to
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> controls. 
                <code lang="CS" title="[New Example]">
            RadToolBarSplitButton splitButton = new RadToolBarSplitButton("News");
             
            RadToolBar1.Items.Add(splitButton);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim splitButton As New RadToolBarSplitButton("News")
             
            RadToolBar1.Items.Add(splitButton)
                </code>
            </example>
            <param name="text">
                The text of the split button. The <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property is set to the value
                of this parameter.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.Buttons">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see> object that
            	contains the child buttons of the split button.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see> that contains the
            	child buttons of the split button. By default the collection is empty (the split button has
            	no buttons).
            </value>
            <remarks>
            	Use the <strong>Buttons</strong> property to access the child buttons of the split button.
            	You can also use the <strong>Buttons</strong> property to manage the children of the
            	current tab. You can add, remove or modify buttons from the <strong>Buttons</strong> collection.
            </remarks>
            <example>
                The following example demonstrates how to programmatically modify the properties of child buttons.
                <code lang="CS">
            		registerPurchaseSplitButton.Buttons[0].Text = "Cache Purchase";
            		registerPurchaseSplitButton.Buttons[0].ImageUrl = "~/ToolBarImages/RegisterCachePurchase.gif";
            
            		registerPurchaseSplitButton.Buttons[1].Text = "Check Purchase";
            		registerPurchaseSplitButton.Buttons[1].ImageUrl = "~/ToolBarImages/RegisterCheckPurchase.gif";
                </code>
            	<code lang="VB">
            		registerPurchaseSplitButton.Buttons[0].Text = "Cache Purchase"
            		registerPurchaseSplitButton.Buttons[0].ImageUrl = "~/ToolBarImages/RegisterCachePurchase.gif"
            
            		registerPurchaseSplitButton.Buttons[1].Text = "Check Purchase"
            		registerPurchaseSplitButton.Buttons[1].ImageUrl = "~/ToolBarImages/RegisterCheckPurchase.gif"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.DropDownWidth">
            <summary>
            Gets or sets the width of the dropdown in pixels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.DropDownHeight">
            <summary>
            Gets or sets the height of the dropdown in pixels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.EnableDefaultButton">
            <summary>Gets or sets a value, indicating if the <strong>RadToolBarSplitButton</strong> will
            	use the <strong>DefaultButton</strong> behavior.</summary>
            <value>
            	A value, indicating if the <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> wll
            	use the <strong>DefaultButton</strong> behavior. The default value is <strong>true</strong>
            </value>
            <remarks>
            	<para>Use the <strong>EnableDefaultButton</strong> property to set if
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> will use the <strong>DefaultButton</strong>
            	behavior or not. When the <strong>DefaultButton</strong> behavior is used, the
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> properties are ignored and the
            	properties of the last selected button are used instead. Use the <strong>EnableDefaultButton</strong>
            	property in conjunction with the <see cref="P:Telerik.Web.UI.RadToolBarSplitButton.DefaultButtonIndex">DefaultButtonIndex</see> property to
            	specify which of the <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> child buttons will
            	be used when the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> is initially displayed.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>EnableDefaultButton</strong>
                property 
                <para>
            		<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1"
                    runat="server"&gt;<br/>
                    &lt;Items&gt;<br/>
                        &lt;telerik:RadToolBarSplitButton <strong>EnableDefaultButton="true"
            			DefaultButtonIndex="1"&gt;</strong>
                            &lt;Buttons&gt;<br/>
            	        		&lt;telerik:RadToolBarButton ImageUrl="~/images/red.gif" Text="Red" /&gt;
            	        		&lt;telerik:RadToolBarButton ImageUrl="~/images/green.gif" Text="Green" /&gt;
            	        		&lt;telerik:RadToolBarButton ImageUrl="~/images/blue.gif" Text="Blue" /&gt;
                            &lt;/Buttons&gt;<br/>
            	        &lt;/telerik:RadToolBarSplitButton&gt;/<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.DefaultButtonIndex">
            <summary>Gets or sets the index of the button which properties will be used by default when the
            	<see cref="P:Telerik.Web.UI.RadToolBarSplitButton.EnableDefaultButton">EnableDefaultButton</see> property set to true.</summary>
            <value>
            	The index of the button which properties will be used by default when the
            	<see cref="P:Telerik.Web.UI.RadToolBarSplitButton.EnableDefaultButton">EnableDefaultButton</see> property set to true.
            	The default value is <strong>0</strong>
            </value>
            <remarks>
            	Use the <strong>DefaultButtonIndex</strong> property to specify the button
            which properties <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> will use
            when the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> is initially displayed.
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>DefaultButtonIndex</strong>
                property 
                <para>
            		<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1"
                    runat="server"&gt;<br/>
                    &lt;Items&gt;<br/>
                        &lt;telerik:RadToolBarSplitButton <strong>EnableDefaultButton="true"
            			DefaultButtonIndex="1"&gt;</strong>
                            &lt;Buttons&gt;<br/>
            	        		&lt;telerik:RadToolBarButton ImageUrl="~/images/red.gif" Text="Red" /&gt;
            	        		&lt;telerik:RadToolBarButton ImageUrl="~/images/green.gif" Text="Green" /&gt;
            	        		&lt;telerik:RadToolBarButton ImageUrl="~/images/blue.gif" Text="Blue" /&gt;
                            &lt;/Buttons&gt;<br/>
            	        &lt;/telerik:RadToolBarSplitButton&gt;/<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.ItemTemplate">
            <summary>Gets or sets the template for displaying the button.</summary>
            <value>
            	<para>A <strong>ITemplate</strong> implemented object that contains the template
                for displaying the button. The default value is a null reference (<strong>Nothing</strong> in
                Visual Basic), which indicates that this property is not set.</para>
            </value>
            <example>
            	<para>The following template demonstrates how to add a Calendar control in a certain
                ToolBar button.</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadToolBar runat="server" ID="RadToolBar1"&gt;</para>
            	<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            		<para>&lt;Items&gt;</para>
            		<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            			<para>&lt;telerik:RadToolBarDropDown Text="Date"&gt;</para>
            			<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            				<para>&lt;Items&gt;</para>
            				<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            					<para>&lt;ItemTemplate&gt;</para>
            					<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            						<para>&lt;asp:Calendar runat="server" ID="Calendar1"
                                       /&gt;</para>
            					</blockquote>
            					<para>&lt;/ItemTemplate&gt;</para>
            				</blockquote>
            				<para>&lt;/Items&gt;</para>
            			</blockquote>
            			<para>&lt;/telerik:RadToolBarDropDown&gt;</para>
            		</blockquote>
            		<para>&lt;/Items&gt;</para>
            	</blockquote>
            	<para>&lt;/telerik:RadToolBar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.PostBack">
            <summary>
            Gets or sets a value indicating whether clicking on the button will
            postback.
            </summary>
            <value>
            	<strong>True</strong> if the toolbar split button should postback; otherwise
                <strong>false</strong>. By default all the items will postback provided the user
                has subscribed to the <see cref="E:Telerik.Web.UI.RadToolBar.ButtonClick">ButtonClick</see> event.
            </value>
            <remarks>
                If you subscribe to the <see cref="E:Telerik.Web.UI.RadToolBar.ButtonClick">ButtonClick</see> all toolbar
                buttons will postback. To turn off that behavior you should set the
                <strong>PostBack</strong> property to <strong>false</strong>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.Value">
            <summary>Gets or sets the value associated with the toolbar split button.</summary>
            <value>The value associated with the button. The default value is empty string.</value>
            <remarks>
            	<para>Use the <b>Value</b> property to specify or determine the value associated
                with the button.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.NavigateUrl">
            <summary>Gets or sets the URL to link to when the button is clicked.</summary>
            <value>
            The URL to link to when the button is clicked. The default value is empty
            string.
            </value>
            <example>
                The following example demonstrates how to use the <strong>NavigateUrl</strong>
                property 
                <para>
            		<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1"
                    runat="server"&gt;<br/>
                    &lt;Items&gt;<br/>
                        &lt;telerik:RadToolBarSplitButton Text="News" <strong>NavigateUrl="~/News.aspx"</strong>
                        ImageUrl="~/Img/News.gif"&gt;
                            &lt;Buttons&gt;<br/>
            	        		&lt;telerik:RadToolBarButton Text="Button1" /&gt;
                            &lt;/Buttons&gt;<br/>
            	        &lt;/telerik:RadToolBarSplitButton&gt;/<br/>
                        &lt;telerik:RadToolBarButton Text="News" <strong>NavigateUrl="~/News.aspx"</strong>
                        /&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="External URL"
                    <strong>NavigateUrl="http://www.example.com"</strong> /&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
            <remarks>
            Use the <strong>NavigateUrl</strong> property to specify the URL to link to when
            the button is clicked. Use "~" (tilde) in front of an URL within the same ASP.NET
            application. When specifying external URL do not forget the protocol (e.g.
            "http://").
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.Target">
            <summary>
            Gets or sets the target window or frame to display the Web page content linked to
            when the toolbar button is clicked.
            </summary>
            <value>
            	<para>The target window or frame to load the Web page linked to when the button is
                selected. Values must begin with a letter in the range of a through z (case
                insensitive), except for the following special values, which begin with an
                underscore:</para>
            	<para>
            		<list type="Itemle">
            			<item>
            				<term>_blank</term>
            				<description>Renders the content in a new window without
                            frames.</description>
            			</item>
            			<item>
            				<term>_parent</term>
            				<description>Renders the content in the immediate frameset
                            parent.</description>
            			</item>
            			<item>
            				<term>_self</term>
            				<description>Renders the content in the frame with focus.</description>
            			</item>
            			<item>
            				<term>_top</term>
            				<description>Renders the content in the full window without
                            frames.</description>
            			</item>
            		</list>
            	</para>The default value is empty string.
            </value>
            <remarks>
            	<para>
                    Use the <b>Target</b> property to specify the frame or window that displays the
                    Web page linked to when the toolbar button is clicked. The Web page is specified by
                    setting the <see cref="P:Telerik.Web.UI.RadToolBarSplitButton.NavigateUrl">NavigateUrl</see> property.
                </para>
            	<para>If this property is not set, the Web page specified by the
                <strong>NavigateUrl</strong> property is loaded in the current window.</para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to use the <strong>Target</strong>
                property</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadToolBar runat="server" ID="RadToolBar1"&gt;</para>
            	<para>&lt;Items&gt;</para>
                        &lt;telerik:RadToolBarSplitButton Text="News" NavigateUrl="~/News.aspx"
                        <strong>Target="_blank"</strong> ImageUrl="~/Img/News.gif"&gt;
                            &lt;Buttons&gt;<br/>
            	        		&lt;telerik:RadToolBarButton Text="Button1" /&gt;
                            &lt;/Buttons&gt;<br/>
            	        &lt;/telerik:RadToolBarSplitButton&gt;/<br/>
            	<para>&lt;/Items&gt;</para>
            	<para>&lt;/telerik:RadToolBar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.CommandName">
            <summary>
            Gets or sets the command name associated with the toolbar button that is passed to the
            	ItemCommand event of the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> instance.
            </summary>
            <value>
            	The command name of the toolbar button. The default value is an empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.CommandArgument">
            <summary>
            Gets or sets an optional parameter passed to the Command event of the
            	<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> instance along with the associated
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.CommandName">CommandName</see>
            </summary>
            <value>
            	An optional parameter passed to the Command event of the
            	<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> instance along with the associated
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.CommandName">CommandName</see>. The default value is an empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when
            the <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> is clicked
            </summary>
            <value>
            	<strong>true</strong> if validation is performed when the
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> is clicked otherwise, <b>false</b>.
            	The default value is <b>true</b>.
            </value>
            <remarks>
            	<para>By default, page validation is performed when the button is clicked. Page
                validation determines whether the input controls associated with a validation
                control on the page all pass the validation rules specified by the validation
                control. You can specify or determine whether validation is performed when the button is clicked
            	on both the client and the server by using the <b>CausesValidation</b>
                property. To prevent validation from being performed, set the
                <b>CausesValidation</b> property to <b>false</b>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.ValidationGroup">
            <summary>
            	<para>Gets or sets the name of the validation group to which the
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> belongs.</para>
            </summary>
            <value>
            The name of the validation group to which this <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>
            belongs. The default is an empty string (""), which indicates that this property is not set.
            </value>
            <remarks>
                This property works only when <see cref="P:Telerik.Web.UI.RadToolBarSplitButton.CausesValidation">CausesValidation</see>
                is set to true.
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarSplitButton.PostBackUrl">
            <summary>
            	Gets or sets the URL of the page to post to from the current page when the
                <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> is clicked.
            </summary>
            <value>
            	The URL of the Web page to post to from the current page when the
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> is clicked. The default value is an empty
            	string (""), which causes the page to post back to itself.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarSplitButton.SplitButtonRenderer">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarSplitButton.TemplatedSplitButtonRenderer">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadToolBar">
            <summary>
            RadToolBar control class.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBar.LoadContentFile(System.String)">
            <summary>
            Populates the <strong>RadToolBar</strong> control from external XML file.
            </summary>
            <remarks>
            The newly added items will be appended after any existing ones.
            </remarks>
            <example>
                The following example demonstrates how to populate <strong>RadToolBar</strong> control
                from XML file. 
                <code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                if (!Page.IsPostBack)
                {
                    RadToolBar1.LoadContentFile("~/ToolBarData.xml");
                }
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(sender As Object, e As EventArgs) Handles MyBase.Load
                If Not Page.IsPostBack Then
                    RadToolBar1.LoadContentFile("~/ToolBarData.xml")
                End If
            End Sub
                </code>
            </example>
            <param name="xmlFileName">The name of the XML file.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBar.GetAllItems">
            <summary>
            	Gets a linear list of all toolbar items in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </summary>
            <returns>
            	An <see cref="T:System.Collections.Generic.IList`1">IList</see> object containing 
            	all items in the current RadToolBar control.
            </returns>		
        </member>
        <member name="M:Telerik.Web.UI.RadToolBar.GetGroupButtons(System.String)">
            <summary>
            	Gets a linear list of all toolbar buttons in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control,
            	which belong to the specified group
            </summary>
            <param name="group">The name of the group to search for.</param>
            <returns>An <see cref="T:System.Collections.Generic.IList`1">IList</see> object containing 
            	all the buttons in the current RadToolBar control, which belong to the specified group.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBar.GetCheckedGroupButton(System.String)">
            <summary>
            	Gets the checked button which belongs to the specified group in the
            	<see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control
            </summary>
            <param name="group">The name of the group to search for.</param>
            <returns>A <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object which
            	CheckOnClick and Checked properties are set to <strong>true</strong>.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBar.FindItemByText(System.String)">
            <summary>
                Searches the <strong>RadToolBar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> whose <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see>
            	property is equal to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> whose <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see>
            	property is equal to the specified value. If an item is not found, null
            	(Nothing in Visual Basic) is returned.
            </returns>
            <param name="text">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBar.FindItemByText(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadToolBar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> whose <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see>
            	property is equal to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> whose <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see>
            	property is equal to the specified value. If an item is not found, null
            	(Nothing in Visual Basic) is returned.
            </returns>
            <param name="text">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBar.FindItemByValue(System.String)">
            <summary>
                Searches the <strong>RadToolBar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> or
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> which
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see>
            	property is equal to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> or
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> which
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see>
            	property is equal to the specified value. If an item is not found, null
            	(Nothing in Visual Basic) is returned.
            </returns>
            <param name="value">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBar.FindItemByValue(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadToolBar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> or
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> which
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see>
            	property is equal to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> or
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> which
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see>
            	property is equal to the specified value. If an item is not found, null
            	(Nothing in Visual Basic) is returned.
            </returns>
            <param name="value">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBar.FindItemByUrl(System.String)">
            <summary>
                Searches the <strong>RadToolBar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> or
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> which
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.NavigateUrl">NavigateUrl</see>
            	property is equal to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> or
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see> which
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.NavigateUrl">NavigateUrl</see>
            	property is equal to the specified value. If an item is not found, null
            	(Nothing in Visual Basic) is returned.
            </returns>
            <param name="url">The url to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBar.FindButtonByCommandName(System.String)">
            <summary>
                Searches the <strong>RadToolBar</strong> control for the first
                <see cref="T:Telerik.Web.UI.IRadToolBarButton">IRadToolBarButton</see>
            	<see cref="P:Telerik.Web.UI.IRadToolBarButton.CommandName">CommandName</see>
            	property is equal to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.IRadToolBarButton">IRadToolBarButton</see> which
            	<see cref="P:Telerik.Web.UI.IRadToolBarButton.CommandName">CommandName</see>
            	property is equal to the specified value. If an item is not found, null
            	(Nothing in Visual Basic) is returned.
            </returns>
            <param name="commandName">The commandName to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBar.FindItem(System.Predicate{Telerik.Web.UI.RadToolBarItem})">
            <summary>
            Returns  the first <strong>RadToolBarItem</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindItem</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadToolBar1.FindItem(ItemWithEqualsTextAndValue);
            }
            private static bool ItemWithEqualsTextAndValue(RadToolBarItem item)
            {
                if (item.Text == item.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadToolBar1.FindItem(ItemWithEqualsTextAndValue)
            End Sub
            Private Shared Function ItemWithEqualsTextAndValue(ByVal item As RadToolBarItem) As Boolean
                If item.Text = item.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
            </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.ClientChanges">
             <summary>
            		Gets a list of all client-side changes (adding an item, removing an item, changing an item's property) which have occurred.
             </summary>
             <value>
            		A list of <see cref="T:Telerik.Web.UI.ClientOperation`1"/> objects which represent all client-side changes the user has performed. 
            		By default the ClientChanges property returns empty list. Client-changes are recorded if and only if the client-side
            		methods trackChanges()/commitChanges() have been invoked.
             </value>
             <remarks>
            		You can use the ClientChanges property to respond to client-side modifications such as
            		<list type="bullet">
            			<item>adding a new item</item>
            			<item>removing existing item</item>
            			<item>clearing the children of an item or the control itself</item>
            			<item>changing a property of the item</item>
            		</list>
            		The ClientChanges property is available in the first postback (ajax) request after the client-side modifications
            		have taken place. After this moment the property will return empty list.
             </remarks>
             <example>
            		The following example demonstrates how to use the ClientChanges property
            		<code lang="CS">
            		foreach (ClientOperation&lt;RadToolBarItem&gt; operation in RadToolBar1.ClientChanges)
            		{
            			RadToolBarItem item = operation.Item;
            
            			switch (operation.Type)
            			{
            				case ClientOperationType.Insert:
            					//An item has been inserted - operation.Item contains the inserted item
            				break;
            				case ClientOperationType.Remove:
            					//An item has been inserted - operation.Item contains the removed item. 
                             //Keep in mind the item has been removed from the toolbar.
            				break;
            				case ClientOperationType.Update:
            					UpdateClientOperation&lt;RadToolBarItem&gt; update = operation as UpdateClientOperation&lt;RadToolBarItem&gt;
            					//The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            				break;
            				case ClientOperationType.Clear:
            					//All children of have been removed - operation.Item contains the parent item whose children have been removed. If operation.Item is null then the root items have been removed.
            				break;
            			}
            		}
            		</code>
            		<code lang="VB">
            			For Each operation As ClientOperation(Of RadToolBarItem) In RadToolBar1.ClientChanges
            				Dim item As RadToolBarItem = operation.Item
            				Select Case operation.Type
            					Case ClientOperationType.Insert
            						'An item has been inserted - operation.Item contains the inserted item
            					Exit Select
            					Case ClientOperationType.Remove
            						'An item has been inserted - operation.Item contains the removed item. 
            						'Keep in mind the item has been removed from the toolbar.
            					Exit Select
            					Case ClientOperationType.Update
            						Dim update As UpdateClientOperation(Of RadToolBarItem) = TryCast(operation, UpdateClientOperation(Of RadToolBarItem))
            						'The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            					Exit Select
            					Case ClientOperationType.Clear
            						'All children of have been removed - operation.Item contains the parent item whose children have been removed. If operation.Item is Nothing then the root items have been removed.
            					Exist Select
            				End Select
            			Next
            		</code>
             </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.Items">
            <summary>
            Gets a collection of <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> objects representing
            the individual items within the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>.
            </summary>
            <value>
            A <see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see> that contains a collection of
            <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> objects representing
            the individual items within the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>.
            </value>
            <remarks>
            Use the Items collection to programmatically control the items in the
            <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </remarks>
            <example>
                The following example demonstrates how to declare a <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>
            	with different items.
                <para class="sourcecode">
            		&lt;telerik:RadToolBar ID="RadToolBar1" runat="server"&gt;
            			&lt;Items&gt;
            				&lt;telerik:RadToolBarButton ImageUrl="~/ToolBarImages/CreateNew.gif"
            					Text="Create new" CommandName="CreateNew"/&gt;
            				&lt;telerik:RadToolBarButton IsSeparator="true" /&gt;
            				&lt;telerik:RadToolBarDropDown ImageUrl="~/ToolbarImages/Manage.gif" Text="Manage"&gt;
            					&lt;Buttons&gt;
            						&lt;telerik:RadToolBarButton ImageUrl="~/ToolbarImages/ManageUsers.gif"
            							Text="Users" /&gt;
            						&lt;telerik:RadToolBarButton ImageUrl="~/ToolbarImages/ManageOrders.gif"
            							Text="Orders" /&gt;
            					&lt;/Buttons&gt;
            				&lt;/telerik:RadToolBarDropDown&gt;
            				&lt;telerik:RadToolBarSplitButton ImageUrl="~/ToolBarImages/RegisterPurchase.gif"
            					Text="Register Purchase"&gt;
            					&lt;Buttons&gt;
            						&lt;telerik:RadToolBarButton ImageUrl="~/ToolBarImages/RegisterCachePurchase.gif"
            							Text="Cache Purchase" /&gt;
            						&lt;telerik:RadToolBarButton ImageUrl="~/ToolBarImages/RegisterCheckPurchase.gif"
            							Text="Check Purchase" /&gt;
            						&lt;telerik:RadToolBarButton ImageUrl="~/ToolBarImages/RegisterDirectBankPurchase.gif"
            							Text="Bank Purchase" /&gt;
            					&lt;/Buttons&gt;
            				&lt;/telerik:RadToolBarSplitButton&gt;
            			&lt;/Items&gt;
            		&lt;/telerik:RadToolBar&gt;
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.Orientation">
            <summary>
            Gets or sets the direction in which to render the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </summary>
            <value>
            One of the Orientation enumeration values. The default is Orientation.Horizontal.
            </value>
            <remarks>
            Use the Orientation property to specify the direction in which to render the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>
            control. The following table lists the available directions.
            	<para>
            		<list type="table">
            			<item>
            				<term>Orientation</term>
            				<description>Description</description>
            			</item>
            			<item>
            				<term><strong>Orientation.Horizontal</strong></term>
            				<description>The <strong>RadToolBar</strong> control is rendered horizontally.</description>
            			</item>
            			<item>
            				<term><strong>Orientation.Vertical</strong></term>
            				<description>The <strong>RadToolBar</strong> control is rendered vertically.</description>
            			</item>
            		</list>
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to use the Orientation property
            	to display a vertical <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>.
                <para class="sourcecode">
            		&lt;telerik:RadToolBar ID="RadToolBar1" runat="server"&gt;
            			&lt;Items&gt;
            				&lt;telerik:RadToolBarButton ImageUrl="~/ToolBarImages/CreateNew.gif"
            					Text="Create new" CommandName="CreateNew"/&gt;
            				&lt;telerik:RadToolBarButton IsSeparator="true" /&gt;
            				&lt;telerik:RadToolBarDropDown ImageUrl="~/ToolbarImages/Manage.gif" Text="Manage"&gt;
            					&lt;Buttons&gt;
            						&lt;telerik:RadToolBarButton ImageUrl="~/ToolbarImages/ManageUsers.gif"
            							Text="Users" /&gt;
            						&lt;telerik:RadToolBarButton ImageUrl="~/ToolbarImages/ManageOrders.gif"
            							Text="Orders" /&gt;
            					&lt;/Buttons&gt;
            				&lt;/telerik:RadToolBarDropDown&gt;
            				&lt;telerik:RadToolBarSplitButton ImageUrl="~/ToolBarImages/RegisterPurchase.gif"
            					Text="Register Purchase"&gt;
            					&lt;Buttons&gt;
            						&lt;telerik:RadToolBarButton ImageUrl="~/ToolBarImages/RegisterCachePurchase.gif"
            							Text="Cache Purchase" /&gt;
            						&lt;telerik:RadToolBarButton ImageUrl="~/ToolBarImages/RegisterCheckPurchase.gif"
            							Text="Check Purchase" /&gt;
            						&lt;telerik:RadToolBarButton ImageUrl="~/ToolBarImages/RegisterDirectBankPurchase.gif"
            							Text="Bank Purchase" /&gt;
            					&lt;/Buttons&gt;
            				&lt;/telerik:RadToolBarSplitButton&gt;
            			&lt;/Items&gt;
            		&lt;/telerik:RadToolBar&gt;
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.ExpandAnimation">
            <summary>Gets the settings for the animation played when a dropdown opens.</summary>
            <value>
                An <see cref="T:Telerik.Web.UI.AnimationSettings">AnnimationSettings</see> that represents the
                expand animation.
            </value>
            <remarks>
            	<para>
                    Use the <strong>ExpandAnimation</strong> property to customize the expand
                    animation of the <strong>RadToolBar</strong> dropdown items -
            		<see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see> and
            		<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>. You can specify the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> and
                    the <see cref="P:Telerik.Web.UI.AnimationSettings.Duration">Duration</see> of the expand animation.
                    To disable expand animation effects you should set the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> to
                    <strong>AnimationType.None</strong>.<br/>
                    To customize the collapse animation you can use the
                    <see cref="P:Telerik.Web.UI.RadToolBar.CollapseAnimation">CollapseAnimation</see> property.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to set the <strong>ExpandAnimation</strong>
                of the <strong>RadToolBar</strong> dropdown items.
                <para>
            		<para><strong>ASPX:</strong></para>
            	</para>
            	<para>
            		<para>&lt;telerik:RadToolBar ID="RadToolBar1" runat="server"&gt;</para>
            		<para><strong>&lt;ExpandAnimation Type="OutQuint" Duration="300"
                    /&gt;</strong></para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadToolBarDropDown Text="Insert Html Element" &gt;</para>
            		<para>	&lt;Buttons&gt;</para>
            		<para>		&lt;telerik:RadToolBarButton Text="Image" /&gt;</para>
            		<para>		&lt;telerik:RadToolBarButton Text="Editable Div element" /&gt;</para>
            		<para>	&lt;/Buttons&gt;</para>
            		<para>&lt;/telerik:RadToolBarDropDown&gt;</para>
            		<para>&lt;telerik:RadToolBarSplitButton Text="Insert Form Element" &gt;</para>
            		<para>&lt;Buttons&gt;</para>
            		<para>	&lt;telerik:RadToolBarButton Text="Button" /&gt;</para>
            		<para>	&lt;telerik:RadToolBarButton Text="TextBox" /&gt;</para>
            		<para>	&lt;telerik:RadToolBarButton Text="TextArea" /&gt;</para>
            		<para>	&lt;telerik:RadToolBarButton Text="CheckBox" /&gt;</para>
            		<para>	&lt;telerik:RadToolBarButton Text="RadioButton" /&gt;</para>
            		<para>&lt;/Buttons&gt;</para>
            		<para>&lt;/telerik:RadToolBarSplitButton&gt;</para>
            		<para>&lt;/Items&gt;</para>
            		<para>&lt;/telerik:RadToolBar&gt;</para>
            	</para>
            	<code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                RadToolBar1.ExpandAnimation.Type = AnimationType.Linear;
                RadToolBar1.ExpandAnimation.Duration = 300;
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                RadToolBar1.ExpandAnimation.Type = AnimationType.Linear
                RadToolBar1.ExpandAnimation.Duration = 300
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.CollapseAnimation">
            <summary>Gets the settings for the animation played when a dropdown closes.</summary>
            <value>
                An <see cref="T:Telerik.Web.UI.AnimationSettings">AnnimationSettings</see> that represents the
                collapse animation.
            </value>
            <remarks>
            	<para>
                    Use the <strong>CollapseAnimation</strong> property to customize the collapse
                    animation of the <strong>RadToolBar</strong> dropdown items -
            		<see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see> and
            		<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>. You can specify the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> and
                    the <see cref="P:Telerik.Web.UI.AnimationSettings.Duration">Duration</see> of the collapse animation.
                    To disable collapse animation effects you should set the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> to
                    <strong>AnimationType.None</strong>.<br/>
                    To customize the expand animation you can use the
                    <see cref="P:Telerik.Web.UI.RadToolBar.ExpandAnimation">ExpandAnimation</see> property.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to set the <strong>CollapseAnimation</strong>
                of the <strong>RadToolBar</strong> dropdown items.
                <para>
            		<para><strong>ASPX:</strong></para>
            	</para>
            	<para>
            		<para>&lt;telerik:RadToolBar ID="RadToolBar1" runat="server"&gt;</para>
            		<para><strong>&lt;CollapseAnimation Type="OutQuint" Duration="300"
                    /&gt;</strong></para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadToolBarDropDown Text="Insert Html Element" &gt;</para>
            		<para>	&lt;Buttons&gt;</para>
            		<para>		&lt;telerik:RadToolBarButton Text="Image" /&gt;</para>
            		<para>		&lt;telerik:RadToolBarButton Text="Editable Div element" /&gt;</para>
            		<para>	&lt;/Buttons&gt;</para>
            		<para>&lt;/telerik:RadToolBarDropDown&gt;</para>
            		<para>&lt;telerik:RadToolBarSplitButton Text="Insert Form Element" &gt;</para>
            		<para>&lt;Buttons&gt;</para>
            		<para>	&lt;telerik:RadToolBarButton Text="Button" /&gt;</para>
            		<para>	&lt;telerik:RadToolBarButton Text="TextBox" /&gt;</para>
            		<para>	&lt;telerik:RadToolBarButton Text="TextArea" /&gt;</para>
            		<para>	&lt;telerik:RadToolBarButton Text="CheckBox" /&gt;</para>
            		<para>	&lt;telerik:RadToolBarButton Text="RadioButton" /&gt;</para>
            		<para>&lt;/Buttons&gt;</para>
            		<para>&lt;/telerik:RadToolBarSplitButton&gt;</para>
            		<para>&lt;/Items&gt;</para>
            		<para>&lt;/telerik:RadToolBar&gt;</para>
            	</para>
            	<code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                RadToolBar1.CollapseAnimation.Type = AnimationType.Linear;
                RadToolBar1.CollapseAnimation.Duration = 300;
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                RadToolBar1.CollapseAnimation.Type = AnimationType.Linear
                RadToolBar1.CollapseAnimation.Duration = 300
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.ValidationGroup">
            <summary>
            	<para>Gets or sets the name of the validation group to which this validation
                control belongs.</para>
            </summary>
            <value>
            The name of the validation group to which this validation control belongs. The
            default is an empty string (""), which indicates that this property is not set.
            </value>
            <remarks>
                This property works only when <see cref="P:Telerik.Web.UI.RadToolBar.CausesValidation">CausesValidation</see>
                is set to true.
            </remarks>
            
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.PostBackUrl">
            <summary>
            	Gets or sets the URL of the page to post to from the current page when a button item
                from the <strong>RadToolBar</strong> control is clicked.
            </summary>
            <value>
            	The URL of the Web page to post to from the current page when a tab from the
            	tabstrip control is clicked. The default value is an empty string (""), which causes
            	the page to post back to itself.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when a button item within
            the <strong>RadToolBar</strong> control is clicked.
            </summary>
            <value>
            	<strong>true</strong> if validation is performed when a button item is clicked;
            otherwise, <b>false</b>. The default value is <b>true</b>.
            </value>
            <remarks>
            	<para>By default, page validation is performed when a button item is clicked. Page
                validation determines whether the input controls associated with a validation
                control on the page all pass the validation rules specified by the validation
                control. You can specify or determine whether validation is performed on both the
                client and the server when a tab is clicked by using the <b>CausesValidation</b>
                property. To prevent validation from being performed, set the
                <b>CausesValidation</b> property to <b>false</b>.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.AutoPostBack">
            <summary>
            	Gets or sets a value indicating whether button items should postback when clicked.
            </summary>
            <value>
            	<c>True</c> if button items should postback; otherwise <c>false</c>. The default
            	value is <strong>false</strong>.
            </value>
            <remarks>
            	RadToolBar will postback provided one of the following conditions is met:
            	<list type="bullet">
            		<item>
            			The <see cref="P:Telerik.Web.UI.RadToolBar.AutoPostBack">AutoPostBack</see> property is set to <c>true</c>.
            		</item>
            		<item>
            			The user has subscribed to the <see cref="E:Telerik.Web.UI.RadToolBar.ButtonClick">ButtonClick</see> event.
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientLoad">
            <summary>
            Gets or sets the name of the javascript function called when the control is fully
            initialized on the client side.
            </summary>
            <value>
            A string specifying the name of the javascript function called when the control
            is fully initialized on the client side. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientLoad</strong> property to specify a JavaScript
                function that is executed after the control is initialized on the client side.
                <font color="black">A single parameter is passed to the handler, which is the
                client-side RadToolBar object.</font></para>
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>OnClientLoad</strong>
                property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>onClientToolBarLoad</strong>(toolBar, eventArgs)<br/>
                    {<br/>
            			alert(toolBar.get_id() + " is loaded.");<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientButtonClicking="onButtonClicking"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Save"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Load"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarDropDown Text="Align"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarDropDown&gt;<br/>
            			&lt;telerik:RadToolBarSplitButton Text="Apply Color (Red)"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Red"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Yellow"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Blue"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarSplitButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientButtonClicking">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called just
            prior to clicking a toolbar button item (RadToolBarButton or RadToolBarSplitButton).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientButtonClicking</strong> property to specify a
                JavaScript function that will be executed prior to button item clicking - either by
                left-clicking it with the mouse or hitting enter after tabbing to that button. You can
                cancel that event (prevent button clicking) by seting the cancel property of the event argument to <c>true</c>.
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadToolBar object)</item>
            		<item>
                        eventArgs with three properties
                        <ul>
            				<li>item - the instance of the button item being clicked</li>
            				<li>cancel - whether to cancel the event</li>
            				<li>domEvent - the reference to the browser DOM event</li>
            			</ul>
            		</item>
            	</list>
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientButtonClicking</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>clientButtonClicking</strong>(sender, eventArgs)<br/>
                    {<br/>
            			var toolBar = sender;<br/>
            			var button = eventArgs.get_item();<br/>
            			<br/>
            			alert("You are clicking the '" + button.get_text() + "' button in the '" + toolBar.get_id() +
                    "' toolBar.");<br/>
            			<br/>
            			if (button.get_text() == "Right")<br/>
            			{<br/>
            				alert("Right alignment is not available");<br/>
            				<strong>eventArgs.set_cancel(true);</strong><br/>
            			}<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientButtonClicking="clientButtonClicking"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarDropDown Text="Align"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarDropDown&gt;<br/>
            			&lt;telerik:RadToolBarSplitButton Text="Right"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarSplitButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientButtonClicked">
            <summary>
            	Gets or sets a value indicating the client-side event handler that is called
                after clicking a button item (RadToolBarButton or RadToolBarSplitButton).
            </summary>
            <value>
            	A string specifying the name of the JavaScript function that will handle the
            	event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientButtonClicked</strong> property to specify a JavaScript
                function that will be executed after a button is clicked - either by left-clicking it
                with the mouse or hitting enter after tabbing to that button item.</para>
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadToolBar object)</item>
            		<item>
                        eventArgs with two properties
                        <ul>
            				<li>item - the instance of the clicked button</li>
            				<li>domEvent - the reference to the browser DOM event</li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientButtonClicked</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>clientButtonClicked</strong>(sender, eventArgs)<br/>
                    {<br/>
            			var toolBar = sender;<br/>
            			var button = eventArgs.get_item();<br/>
            			<br/>
            			alert(String.format("You clicked the '{0}' button in the '{1}' toolBar.",
            				button.get_text(), toolBar.get_id()));<br/>
                    }<br/>
                    &lt;/script&gt;</para>
                    &lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientButtonClicked="clientButtonClicked"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarDropDown Text="Align"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarDropDown&gt;<br/>
            			&lt;telerik:RadToolBarSplitButton Text="Right"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarSplitButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientDropDownOpening">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called just
            prior to opening a toolbar dropdown item (RadToolBarDropDown or RadToolBarSplitButton).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientDropDownOpening</strong> property to specify a
                JavaScript function that will be executed prior to dropdown item opening - either by
                left-clicking it with the mouse or hitting the down arrow after tabbing to that item. You can
                cancel that event (prevent dropdown opening) by seting the cancel property of the event argument to <c>true</c>.
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadToolBar object)</item>
            		<item>
                        eventArgs with three properties
                        <ul>
            				<li>item - the instance of the dropdown item being opened</li>
            				<li>cancel - whether to cancel the event</li>
            				<li>domEvent - the reference to the browser DOM event (null if the event was initiated by
            		calling a client-side method such as dropDownItem.showDropDown();)</li>
            			</ul>
            		</item>
            	</list>
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientDropDownOpening</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>clientDropDownOpening</strong>(sender, eventArgs)<br/>
                    {<br/>
            			var toolBar = sender;<br/>
            			var dropDownItem = eventArgs.get_item();<br/>
            			<br/>
            			alert("You are opening the '" + dropDownItem.get_text() + "' dropDown in the '" + toolBar.get_id() +
                    "' toolBar.");<br/>
            			<br/>
            			if (dropDownItem.get_text() == "Align")<br/>
            			{<br/>
            				alert("Alignment is not available");<br/>
            				<strong>eventArgs.set_cancel(true);</strong><br/>
            			}<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientDropDownOpening="clientDropDownOpening"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarDropDown Text="Align"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarDropDown&gt;<br/>
            			&lt;telerik:RadToolBarSplitButton Text="Right"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarSplitButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientDropDownOpened">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called after a
            toolbar dropdown item (RadToolBarDropDown or RadToolBarSplitButton) is opened.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientDropDownOpened</strong> property to specify a
                JavaScript function that will be executed  after a toolbar dropdown item
            	is opened - either by left-clicking it with the mouse or hitting the down arrow
            	after tabbing to that item.
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadToolBar object)</item>
            		<item>
                        eventArgs with two properties
                        <ul>
            				<li>item - the instance of the dropdown item which is opened</li>
            				<li>domEvent - the reference to the browser DOM event (null if the event was initiated by
            		calling a client-side method such as dropDownItem.showDropDown())</li>
            			</ul>
            		</item>
            	</list>
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientDropDownOpened</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>clientDropDownOpened</strong>(sender, eventArgs)<br/>
                    {<br/>
            			var toolBar = sender;<br/>
            			var dropDownItem = eventArgs.get_item();<br/>
            			<br/>
            			alert("You just opened the '" + dropDownItem.get_text() + "' dropDown in the '" + toolBar.get_id() +
                    "' toolBar.");<br/>
            			<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientDropDownOpened="clientDropDownOpened"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarDropDown Text="Align"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarDropDown&gt;<br/>
            			&lt;telerik:RadToolBarSplitButton Text="Right"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarSplitButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientDropDownClosing">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called just
            prior to closing a toolbar dropdown item (RadToolBarDropDown or RadToolBarSplitButton).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientDropDownClosing</strong> property to specify a
                JavaScript function that will be executed prior to dropdown item closing - either by
                left-clicking an open dropdown with the mouse, hitting the ESC key when the dropdown or
            	a button in it is focused, or clicking a non-checkable button in the dropdown. You can
                cancel that event (prevent dropdown closing) by seting the cancel property of the event argument to <c>true</c>.
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadToolBar object)</item>
            		<item>
                        eventArgs with three properties
                        <ul>
            				<li>item - the instance of the dropdown item being closed</li>
            				<li>cancel - whether to cancel the event</li>
            				<li>domEvent - the reference to the browser DOM event (null if the event was initiated by
            		calling a client-side method such as dropDownItem.hideDropDown())</li>
            			</ul>
            		</item>
            	</list>
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientDropDownClosing</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>clientDropDownClosing</strong>(sender, eventArgs)<br/>
                    {<br/>
            			var toolBar = sender;<br/>
            			var dropDownItem = eventArgs.get_item();<br/>
            			<br/>
            			alert("You are about to close the '" + dropDownItem.get_text() + "' dropDown in the '" + toolBar.get_id() +
                    "' toolBar.");<br/>
            			<br/>
            			if (dropDownItem.get_text() == "Align")<br/>
            			{<br/>
            				alert("You cannot close the Align dropdown!");<br/>
            				<strong>eventArgs.set_cancel(true);</strong><br/>
            			}<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientDropDownClosing="clientDropDownClosing"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarDropDown Text="Align"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarDropDown&gt;<br/>
            			&lt;telerik:RadToolBarSplitButton Text="Right"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarSplitButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientDropDownClosed">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called after a
            toolbar dropdown item (RadToolBarDropDown or RadToolBarSplitButton) is closed.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientDropDownClosed</strong> property to specify a
                JavaScript function that will be executed  after a toolbar dropdown item
            	is closed - either by left-clicking an open dropdown with the mouse, hitting
            	the ESC key when the dropdown or a button in it is focused, or clicking a
            	non-checkable button in the dropdown.
            <para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadToolBar object)</item>
            		<item>
                        eventArgs with two properties
                        <ul>
            				<li>item - the instance of the dropdown item which is closed</li>
            				<li>domEvent - the reference to the browser DOM event (null if the event was initiated by
            		calling a client-side method such as dropDownItem.hideDropDown())</li>
            			</ul>
            		</item>
            	</list>
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientDropDownClosed</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>clientDropDownClosed</strong>(sender, eventArgs)<br/>
                    {<br/>
            			var toolBar = sender;<br/>
            			var dropDownItem = eventArgs.get_item();<br/>
            			<br/>
            			alert("You just closed the '" + dropDownItem.get_text() + "' dropDown in the '" + toolBar.get_id() +
                    "' toolBar.");<br/>
            			<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientDropDownClosed="clientDropDownClosed"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarDropDown Text="Align"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarDropDown&gt;<br/>
            			&lt;telerik:RadToolBarSplitButton Text="Right"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarSplitButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientContextMenu">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            before the browser context menu shows (after right-clicking an item).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientContextMenu</strong> property to specify a JavaScript
                function that will be executed before the context menu shows after right clicking an
                item.</para>
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadToolBar object)</item>
            		<item>
                        eventArgs with two properties 
                        <ul>
            				<li>item - the instance of the selected toolbar item</li>
            				<li>domEvent - the reference to the browser DOM event</li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientContextMenu</strong> property.
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>onContextMenuHandler</strong>(sender, eventArgs)<br/>
                    {<br/>
            			var toolBar = sender;<br/>
            			var item = eventArgs.get_item();<br/>
            			<br/>
            			alert(String.format("You have right-clicked the {0} item in the {1} toolBar.", item.get_text(), toolBar.get_id());<br/>
                    }<br/>
                    &lt;/script&gt;</para>
            		<para class="sourcecode">&lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientContextMenu="onContextMenuHandler"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="Bold"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="Italic"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="Underline"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientMouseOver">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the mouse hovers an item in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientMouseOver</strong> property to specify a JavaScript
                function that is called when the user hovers an item with the mouse.</para>
            	<para>Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item>sender (the client-side RadToolBar object);</item>
            		<item>
                        eventArgs with two properties 
                        <ul>
            				<li>item - the instance of the toolbar item that is being hovered</li>
            				<li>domEvent - the reference to the browser DOM event</li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientMouseOver</strong> property. 
                <para class="sourcecode">
            		&lt;script language="javascript"&gt;<br/>
                    function <strong>onClientMouseOver</strong>(sender, eventArgs)<br/>
                    {<br/>
            			var toolBar = sender;<br/>
            			var item = eventArgs.get_item();<br/>
            			var domEvent = eventArgs.get_domEvent();<br/>
            			<br/>
            			alert(String.format("You have just moved over the {0} item in the {1} toolBar", item.get_text(), toolBar.get_id());<br/>
            			alert(String.format("Mouse coordinates: \n\nx = {0};\ny = {1}", domEvent.clientX, domEvent.clientY));<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
            		&lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientMouseOver="onClientMouseOver"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="Bold"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="Italic"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="Underline"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientMouseOut">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the mouse leaves an item in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientMouseOut</strong> property to specify a JavaScript
                function that is executed <font color="black">whenever the user moves the mouse
                away from a particular item in the RadToolBar control.</font></para>
            	<para><font color="black">Two parameters are passed to the handler:</font></para>
            	<list type="bullet">
            		<item>sender (the client-side RadToolBar object);</item>
            		<item>
                        eventArgs with two properties:
            			<ul>
            				<li>item - the instance of the item which the mouse is moving
                            away from;</li>
            				<li>domEvent - the reference to the browser DOM event</li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>OnClientMouseOut</strong>
                property.
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>onClientMouseOut</strong>(sender, eventArgs)<br/>
                    {<br/>
            			var toolBar = sender;<br/>
            			var item = eventArgs.get_item();<br/>
            			var domEvent = eventArgs.get_domEvent();
            			alert(String.format("You have just moved out of '{0}' item in the {1} toolBar.",
            				item.get_text(), toolBar.get_id()));<br/>
            			alert(String.format("Mouse coordinates: \n\nx = {0}\ny = {1}",
            				domEvent.clientX, domEvent.clientY));<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            		&lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientMouseOut="onClientMouseOut"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="Bold"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="Italic"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
                    &lt;telerik:RadToolBarButton Text="Underline"&gt;&lt;/telerik:RadToolBarButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;
            	</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientCheckedStateChanging">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called just
            prior to changing the state of a checkable <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see>.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientCheckedStateChanging</strong> property to specify a
                JavaScript function that will be executed prior to button checked state changing - either by
                left-clicking a checkable button or pressing the ENTER key after tabbing to that button. You can
                cancel that event (prevent button checked state changing) by seting the cancel property of the
            	event argument to <c>true</c>.
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadToolBar object)</item>
            		<item>
                        eventArgs with three properties
                        <ul>
            				<li>item - the instance of the button which checked state is being changed</li>
            				<li>cancel - whether to cancel the event</li>
            				<li>domEvent - the reference to the browser DOM event (null if the event was initiated by
            		calling a client-side method such as button.toggle())</li>
            			</ul>
            		</item>
            	</list>
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientCheckedStateChanging</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>clientCheckedStateChanging</strong>(sender, eventArgs)<br/>
                    {<br/>
            			var toolBar = sender;<br/>
            			var button = eventArgs.get_item();<br/>
            			<br/>
            			alert(String.format("You are about to change the checked state of the '{0}' button in the '{1}' toolBar.",
            				button.get_text(), toolBar.get_id()));<br/>
            			<br/>
            			if (item.get_text() == "Left" &amp;&amp; item.get_group() == "Align")<br/>
            			{<br/>
            				alert("You cannot change the checked state of the 'Align Left' button!");<br/>
            				<strong>eventArgs.set_cancel(true);</strong><br/>
            			}<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientCheckedStateChanging="clientCheckedStateChanging"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Left" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Center" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Right" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarDropDown Text="Align"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarDropDown&gt;<br/>
            			&lt;telerik:RadToolBarSplitButton Text="Reset"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarSplitButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBar.OnClientCheckedStateChanged">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called after a
            <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> is checked.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientCheckedStateChanged</strong> property to specify a
                JavaScript function that will be executed  after a toolbar dropdown button
            	is checked - either by left-clicking a checkable button or pressing the ENTER
            	key after tabbing to that button.
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadToolBar object)</item>
            		<item>
                        eventArgs with two properties
                        <ul>
            				<li>item - the instance of the button which is checked</li>
            				<li>domEvent - the reference to the browser DOM event (null if the event was initiated by
            		calling a client-side method such as button.toggle())</li>
            			</ul>
            		</item>
            	</list>
            	</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientCheckedStateChanged</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>clientCheckedStateChanged</strong>(sender, eventArgs)<br/>
                    {<br/>
            			var toolBar = sender;<br/>
            			var button = eventArgs.get_item();<br/>
            			<br/>
            			alert(String.format("You just changed the checked state of the '{0}' button in the '{1}' toolBar.",
            				button.get_text(), toolBar.get_id()));<br/>
            			<br/>
                    }<br/>
                    &lt;/script&gt;<br/>
            			<br/>
                    &lt;telerik:RadToolBar id="RadToolBar1" runat="server"
                    <strong>OnClientCheckedStateChanged="clientCheckedStateChanged"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Left" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Center" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarButton Text="Right" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            			&lt;telerik:RadToolBarDropDown Text="Align"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarDropDown&gt;<br/>
            			&lt;telerik:RadToolBarSplitButton Text="Reset"&gt;<br/>
            				&lt;Buttons&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Left" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Center" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            					&lt;telerik:RadToolBarButton Text="Right" CheckOnClick="true" Group="Align" &gt;&lt;/telerik:RadToolBarButton&gt;<br/>
            				&lt;/Buttons&gt;<br/>
            			&lt;/telerik:RadToolBarSplitButton&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadToolBar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadToolBar.ItemCreated">
            <summary>Occurs when a toolbar item is created.</summary>
            <remarks>
            	The ItemCreated event is raised when an item in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>
            	control is created, both during round-trips and at the time data is bound to the control.
            	The ItemCreated event is not raised for items which are defined inline in the page or user control.
            	<para>The ItemCreated event is commonly used to initialize item properties.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>ItemCreated</strong> event
                to set the <strong>ToolTip</strong> property of each item. 
                <code lang="CS">
            		 protected void RadToolBar1_ItemCreated(object sender, Telerik.Web.UI.RadToolBarEventArgs e)
            		 {
            		     e.Item.ToolTip = e.Item.Text;
            		 }
                </code>
            	<code lang="VB">
            		 Sub RadToolBar1_ItemCreated(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadToolBarEventArgs) Handles RadToolBar1.ItemCreated
            		     e.Item.ToolTip = e.Item.Text
            		 End Sub
                </code>
            </example>		
        </member>
        <member name="E:Telerik.Web.UI.RadToolBar.ButtonDataBound">
            <summary>Occurs when a button is data bound.</summary>
            <remarks>
            	<para>
                    The <strong>ButtonDataBound</strong> event is raised for each button upon
                    databinding. You can retrieve the button being bound using the event arguments.
                    The <strong>DataItem</strong> associated with the button can be retrieved using
                    the <see cref="P:Telerik.Web.UI.RadToolBarButton.DataItem">DataItem</see> property.
                </para>
            	<para>The <strong>ButtonDataBound</strong> event is often used in scenarios when you
                want to perform additional mapping of fields from the DataItem to their respective
                properties in the RadToolBarButton class.</para>
            </remarks>
            <example>
                The following example demonstrates how to map fields from the data item to
                <see cref="T:Telerik.Web.UI.RadToolBarButton">button</see> properties using the <strong>ButtonDataBound</strong>
            	event.
            	<code lang="CS">
            		protected void RadToolBar1_ButtonDataBound(object sender, Telerik.Web.UI.RadToolBarButtonEventArgs e)
            		{
            			e.Button.ImageUrl = "~/ToolBarImages/tool" + (string)DataBinder.Eval(e.Button.DataItem, "Text") + ".gif";
            			e.Button.NavigateUrl = (string)DataBinder.Eval(e.Button.DataItem, "URL");
            		}
                </code>
            	<code lang="VB">
            		Sub RadToolBar1_ButtonDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadToolBarButtonEventArgs) Handles RadToolBar1.ButtonDataBound
            			e.Button.ImageUrl = "~/ToolBarImages/tool" &amp; CStr(DataBinder.Eval(e.Button.DataItem, "Text")) &amp; ".gif"
            			e.Button.NavigateUrl = CStr(DataBinder.Eval(e.Button.DataItem, "URL"))
            		End Sub
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadToolBar.ButtonClick">
            <summary>
                Occurs on the server when a button or in the <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see>
                control is clicked.
            </summary>
            <example>
            	The following example demonstrates how to use the <b>ButtonClick</b> event to
            	determine the clicked button.
            	<code lang="CS">
            		protected void RadToolBar1_ButtonClick(object sender, Telerik.Web.UI.RadToolBarButtonEventArgs e)
            		{
            			Label1.Text = "Clicked button is " + e.Item.Text;
            		}
            	</code>
            	<code lang="VB">
            		Sub RadToolBar1_ButtonClick(ByVal sender As Object, ByVal e As Telerik.Web.UI.RadToolBarButtonEventArgs) Handles RadToolBar1.ButtonClick
            			Label1.Text = "Clicked button is " &amp; e.Item.Text;
            		End Sub
            	</code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.ComboBoxPostBackArguments">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadComboBoxClientState">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Attributes">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.ClientStateLogPlayer`1">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.ClientStateLogEntry">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.ClientStateLogEntryType">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.EventMap">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.GridExcelBuilder.AutoFilterColumnElement">
            <summary>
            Defines the filtering properties for a single column of the AutoFilter range. 
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridExcelBuilder.AutoFilterConditionElement">
            <summary>
            Defines a single condition in a custom AutoFilter function.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridExcelBuilder.AutoFilterAndElement">
            <summary>
            Defines an AND condition in a custom AutoFilter function.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridExcelBuilder.AutoFilterOrElement">
            <summary>
            Defines an OR condition in a custom AutoFilter function.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.GridExcelBuilder.AutoFilterElement">
            <summary>
            Defines an AutoFilter range on the current worksheet.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridExcelBuilder.BorderStyles.Weight">
            <summary>
            Max value 3
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridExcelBuilder.BorderStyles.PositionType">
            <summary>
            This is required
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridExcelBuilder.RowElement.InnerElements">
            <summary>
            This element cannot have inner elements.
            Use Cells property 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.GridExcelBuilder.StylesElement.Attributes">
            <summary>
            This element cannot have attributes
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.AnimationType">
            <summary>Represents the effects that can be used in an animation.</summary>
        </member>
        <member name="T:Telerik.Web.UI.ContextMenuControlTarget">
            <summary>
            Represents a <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see>target, specified
            by the id of a server control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ContextMenuTarget">
            <summary>
            An abstract class representing a target
               which <see cref="T:Telerik.Web.UI.RadContextMenu">RadContextMenu</see> will be attached to.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ContextMenuControlTarget.ControlID">
            <summary>
            Gets or sets the ID of the server control <see cref="T:Telerik.Web.UI.RadContextMenu">RadContextMenu</see>
               will attach to.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ContextMenuDocumentTarget">
            <summary>
            Specifies that the <see cref="T:Telerik.Web.UI.RadContextMenu">RadContextMenu</see> will be displayed
                when a right-click on the entire page occurs.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ContextMenuElementTarget">
            <summary>
            Represents a <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see>target, specified
            by client-side element id.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ContextMenuElementTarget.ElementID">
            <summary>
            Gets or sets the ID of the element <see cref="T:Telerik.Web.UI.RadContextMenu">RadContextMenu</see>
               will attach to on the client.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ContextMenuTagNameTarget">
            <summary>
            Represents a <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see>target, specified
            by element tagName.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ContextMenuTagNameTarget.TagName">
            <summary>
            Gets or sets the TagName of the elements <see cref="T:Telerik.Web.UI.RadContextMenu">RadContextMenu</see>
               will search and attach to on the client.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.ContextMenuTargetCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Web.UI.ContextMenuTarget"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.ContextMenuTargetCollection.#ctor(Telerik.Web.UI.RadContextMenu)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see> class.
            </summary>
            <param name="owner">The owner of the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.ContextMenuTargetCollection.Add(Telerik.Web.UI.ContextMenuTarget)">
            <summary>
            Appends the specified <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> object to the end of the current <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see>.
            </summary>
            <param name="target">
            The <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> to append to the end of the current <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.ContextMenuTargetCollection.Contains(Telerik.Web.UI.ContextMenuTarget)">
            <summary>
            	Determines whether the specified <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> object is in the current 
            	<see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see>.
            </summary>
            <param name="target">
            	The <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> object to find.
            </param>
            <returns>
            	<c>true</c> if the current collection contains the specified <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> object; 
            	otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.ContextMenuTargetCollection.CopyTo(Telerik.Web.UI.ContextMenuTarget[],System.Int32)">
            <summary>
            Copies the contents of the current <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see> into the 
            specified array of <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> objects.
            </summary>
            <param name="array">The target array.</param>
            <param name="index">The index to start copying from.</param>
        </member>
        <member name="M:Telerik.Web.UI.ContextMenuTargetCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Web.UI.ContextMenuTarget})">
            <summary>Appends the specified array of <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> objects to the end of the 
            current <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see>.
            </summary>
            <param name="targets">
                The array of <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> o append to the end of the current 
            <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.ContextMenuTargetCollection.IndexOf(Telerik.Web.UI.ContextMenuTarget)">
            <summary>
            Determines the index of the specified <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> object in the collection.
            </summary>
            <param name="target">
            	The <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> to locate.
            </param>
            <returns>
            	The zero-based index of tab within the current <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see>, 
            	if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.ContextMenuTargetCollection.Insert(System.Int32,Telerik.Web.UI.ContextMenuTarget)">
            <summary>
            Inserts the specified <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> object in the current 
            <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see> at the specified index location.
            </summary>
            <param name="index">The zero-based index location at which to insert the <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see>.</param>
            <param name="target">The <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.ContextMenuTargetCollection.Remove(Telerik.Web.UI.ContextMenuTarget)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> object from the current
            	<see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see>.
            </summary>
            <param name="target">
            	The <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> object to remove.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.ContextMenuTargetCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> object at the specified index 
            from the current <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see>.
            </summary>
            <param name="index">The zero-based index of the tab to remove.</param>
        </member>
        <member name="P:Telerik.Web.UI.ContextMenuTargetCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> object at the specified index in 
            	the current <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see>.
            </summary>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> to retrieve.
            </param>
            <returns>
            	The <see cref="T:Telerik.Web.UI.ContextMenuTarget">ContextMenuTarget</see> at the specified index in the 
            	current <see cref="T:Telerik.Web.UI.ContextMenuTargetCollection">ContextMenuTargetCollection</see>.
            </returns>
        </member>
        <member name="T:Telerik.Web.UI.MenuItemExpandMode">
            <summary>
            This enumeration controls the expand behaviour of the items.	
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.MenuItemExpandMode.ClientSide">
            <summary>
            The default behaviour - all items are loaded in the intial request and expand is performed on the client, without server interaction
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.MenuItemExpandMode.WebService">
            <summary>
            The child items are loaded from the web service specified by the RadMenu.WebServicePath and RadMenu.WebServiceMethod properties.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.AnimationSettingsConverter">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.RadMenuItemGroupSettingsConverter">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.RadMenuItemBindingCollection">
            <summary>
            	Represents a collection of <see cref="T:Telerik.Web.UI.RadMenuItemBinding"/> objects.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBindingCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadMenuItemBinding"/> object at the specified index from the collection.
            </summary>
            <returns>
            	The <see cref="T:Telerik.Web.UI.RadMenuItemBinding"/>at the specified index in the collection.
            </returns>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadMenuItemBinding"/> to retrieve.
            </param>
        </member>
        <member name="T:Telerik.Web.UI.RadMenuItemBinding">
            <summary>
            	Defines the relationship between a data item and the menu item it is binding to in a 
            	<see cref="T:Telerik.Web.UI.RadMenu"/>control. 
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadMenuItemBinding.ApplyTo(Telerik.Web.UI.NavigationItem,System.Object,Telerik.Web.UI.PropertyDescriptorCache)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.ClickedCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadMenuItem.ClickedCssClass">ClickedCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.ClickedCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadMenuItem.ClickedCssClass">ClickedCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.DisabledCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadMenuItem.DisabledCssClass">DisabledCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.DisabledCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadMenuItem.DisabledCssClass">DisabledCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.DisabledImageUrl">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadMenuItem.DisabledImageUrl">DisabledImageUrl</see> property of the
            	<see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.DisabledImageUrlField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadMenuItem.DisabledImageUrl">DisabledImageUrl</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.ExpandedImageUrl">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadMenuItem.ExpandedImageUrl">ExpandedImageUrl</see> property of the
            	<see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.ExpandedImageUrlField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadMenuItem.ExpandedImageUrl">ExpandedImageUrl</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.ExpandedCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadMenuItem.ExpandedCssClass">ExpandedCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.ExpandedCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadMenuItem.ExpandedCssClass">ExpandedCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.ExpandMode">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadMenuItem.ExpandMode">ExpandMode</see> property of the
            	<see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.ExpandModeField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadMenuItem.ExpandMode">ExpandMode</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.FocusedCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.FocusedCssClass">FocusedCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.FocusedCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadMenuItem.FocusedCssClass">FocusedCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.IsSeparator">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadMenuItem.IsSeparator">IsSeparator</see> property of the
            	<see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemBinding.IsSeparatorField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadMenuItem.IsSeparator">IsSeparator</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadMenuClientState">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadMenuItemData">
            <summary>
            	Data class used for transferring menu items from and to web services.
            </summary>
            <remarks>
            	For information about the role of each property see the
            	<see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem class</see>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.ExpandMode">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.ExpandMode">RadMenuItem.ExpandMode</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.NavigateUrl">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.NavigateUrl">RadMenuItem.NavigateUrl</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.PostBack">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.PostBack">RadMenuItem.PostBack</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.Target">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.Target">RadMenuItem.Target</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.IsSeparator">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.IsSeparator">RadMenuItem.IsSeparator</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.CssClass">
            <summary>
            See <see cref="P:System.Web.UI.WebControls.WebControl.CssClass">RadMenuItem.CssClass</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.DisabledCssClass">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.DisabledCssClass">RadMenuItem.DisabledCssClass</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.ExpandedCssClass">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.ExpandedCssClass">RadMenuItem.ExpandedCssClass</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.FocusedCssClass">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.FocusedCssClass">RadMenuItem.FocusedCssClass</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.ClickedCssClass">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.ClickedCssClass">RadMenuItem.ClickedCssClass</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.ImageUrl">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.ImageUrl">RadMenuItem.ImageUrl</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.HoveredImageUrl">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.HoveredImageUrl">RadMenuItem.HoveredImageUrl</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.ClickedImageUrl">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.ClickedImageUrl">RadMenuItem.ClickedImageUrl</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.DisabledImageUrl">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.DisabledImageUrl">RadMenuItem.DisabledImageUrl</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadMenuItemData.ExpandedImageUrl">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadMenuItem.ExpandedImageUrl">RadMenuItem.ExpandedImageUrl</see>.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.PanelBarExpandMode">
            <summary>
            Represents the different ways RadPanelbar behaves when an item is
            expanded.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.PanelBarExpandMode.MultipleExpandedItems">
            <summary>More than one item can be expanded at a time.</summary>
        </member>
        <member name="F:Telerik.Web.UI.PanelBarExpandMode.SingleExpandedItem">
            <summary>
            Only one item can be expanded at a time. Expanding another item collapses the
            previously expanded one.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.PanelBarExpandMode.FullExpandedItem">
            <summary>
            Only one item can be expanded at a time. The expanded area occupies the entire height of the RadPanelbar.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadPanelItemImagePosition">
            <summary>The position of the image within a panel item.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RadPanelItemImagePosition.Left">
            <summary>The image is rendered leftmost.</summary>
        </member>
        <member name="F:Telerik.Web.UI.RadPanelItemImagePosition.Right">
            <summary>The image is rendered rightmost.</summary>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBarEventArgs.#ctor(Telerik.Web.UI.RadPanelItem)">
            <summary>
                Initializes a new instance of the
                <see cref="T:Telerik.Web.UI.RadMenuEventArgs">RadMenuEventArgs</see> class.
            </summary>
            <param name="item">
                A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> which represents an item in the
                <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> control.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBarEventArgs.Item">
            <summary>
                Gets the referenced <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> in the
                <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> control when the event is raised.
            </summary>
            <value>
                The referenced item in the <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> control when
                the event is raised.
            </value>
            <remarks>
                Use this property to programmatically access the item referenced in the
                <see cref="T:Telerik.Web.UI.RadMenu">RadMenu</see> when the event is raised.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadPanelBarClientState">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadPanelBar">
            <summary>A navigation control used for building collapsible side-menu systems and Outlook-type panels. </summary>
            <remarks>
            	<para>
                    The <b>RadPanelBar</b> control is used to display a list of items in a Web Forms
                    page and is often used control for building  collapsible side-menu 
                    interfaces. The <b>RadPanelBar</b> control supports the following features:
                </para>
            	<list type="bullet">
            		<item>Databinding that allows the control to be populated from various
                    datasources</item>
            		<item>Programmatic access to the <strong>RadPanelBar</strong> object model
                    which allows to dynamic creation of panelbars, populate items, set
                    properties.</item>
            		<item>Customizable appearance through built-in or user-defined skins.</item>
            	</list>
            	<h3>Items</h3>
            	<para>
                    The <strong>RadPanelBar</strong> control is made up of tree of items represented
                    by <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> objects. Items at the first level (level 0) are
                    called root items. A items that has a parent item is called a child item. All root
                    items are stored in the <see cref="P:Telerik.Web.UI.RadPanelBar.Items">Items</see> collection. Child items are
                    stored in a parent item's <see cref="P:Telerik.Web.UI.RadPanelItem.Items">Items</see> collection.
                </para>
            	<para>
                    Each item has a <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> and a <see cref="P:Telerik.Web.UI.RadPanelItem.Value">Value</see> property. 
            		The value of the <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property is displayed in the <b>RadPanelBar</b> control, 
            		while the <see cref="P:Telerik.Web.UI.RadPanelItem.Value">Value</see> property is used to store any additional data about the item, 
            		such as data passed to the postback event associated with the item. When clicked, a item can
                    navigate to another Web page indicated by the <see cref="P:Telerik.Web.UI.RadPanelItem.NavigateUrl">NavigateUrl</see> property.
                </para>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.IRadPanelItemContainer">
            <summary>
                Defines properties that menu item containers (<see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see>,
                <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see>) should implement
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.IRadPanelItemContainer.Owner">
            <summary>Gets the parent <see cref="T:Telerik.Web.UI.IRadPanelItemContainer">IMenuItemContainer</see>.</summary>
        </member>
        <member name="P:Telerik.Web.UI.IRadPanelItemContainer.Items">
            <summary>Gets the collection of child items.</summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see> that represents the child
                items.
            </value>
            <remarks>
            Use this property to retrieve the child items. You can also use it to
            programmatically add or remove items.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.#ctor">
             <summary>
            		Initializes a new instance of the RadPanelBar class.
             </summary>
             <remarks>
            		Use this constructor to create and initialize a new instance of the RadPanelBar
            		control.
             </remarks>
             <example>
                 The following example demonstrates how to programmatically create a RadPanelBar
                 control. 
                 <code lang="CS">
            			void Page_Load(object sender, EventArgs e)
            			{
            				RadPanelBar RadPanelBar1 = new RadPanelBar();
            				RadPanelBar1.ID = "RadPanelBar1";
             
            				if (!Page.IsPostBack)
            				{
            					//RadPanelBar persist its item in ViewState (if EnableViewState is true). 
            					//Hence items should be created only on initial load.
             
            					PadPanelItem sportItem= new PadPanelItem("Sport");
            					RadPanelBar1.Items.Add(sportItem);
            			     
            					PadPanelItem newsItem = new PadPanelItem("News");
            					RadPanelBar1.Items.Add(newsItem);
            				}
             
            				PlaceHolder1.Controls.Add(newsItem);
            			}
                 </code>
             	<code lang="VB">
            			Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
            				Dim RadPanelBar1 As RadPanelBar = New RadPanelBar()
            				RadPanelBar1.ID = "RadPanelBar1"
            				
            				If Not Page.IsPostBack Then
            					'RadPanelBar persist its item in ViewState (if EnableViewState is true).				
             				'Hence items should be created only on initial load.
             
            					Dim sportItem As PadPanelItem = New PadPanelItem("Sport")
            					RadPanelBar1.Items.Add(sportItem)
            
            					Dim newsItem As PadPanelItem = New PadPanelItem("News")
            					RadPanelBar1.Items.Add(newsItem)
            				End If
             
            				PlaceHolder1.Controls.Add(newsItem)
            			 End Sub
                 </code>
             </example>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.LoadContentFile(System.String)">
            <summary>
            Populates the <strong>RadPanelBar</strong> control from external XML file.
            </summary>
            <remarks>
            The newly added items will be appended after any existing ones.
            </remarks>
            <example>
                The following example demonstrates how to populate <strong>RadPanelBar</strong> control
                from XML file. 
                <code lang="CS">
            private void Page_Load(object sender, EventArgs e)
            {
                if (!Page.IsPostBack)
                {
                     RadPanelBar1.LoadContentFile("~/RadPanelBar/Examples/panelbar.xml");
                }
            }
                </code>
            	<code lang="VB">
            Private Sub Page_Load(sender As Object, e As EventArgs) Handles MyBase.Load
                If Not Page.IsPostBack Then
                    RadPanelBar1.LoadContentFile("~/RadPanelBar/Examples/panelbar.xml")
                End If
            End Sub
                </code>
            </example>
            <param name="xmlFileName">The name of the XML file.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.FindItemByText(System.String)">
            <summary>
                Searches the <strong>RadPanelbar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> with a <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> whose <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property is equal
                to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="text">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.FindItemByText(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadPanelbar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> with a <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> whose <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property is equal
                to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="text">The value to search for.</param> 
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.FindItemByValue(System.String)">
            <summary>
                Searches the <strong>RadPanelbar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> with a <see cref="P:Telerik.Web.UI.RadPanelItem.Value">Value</see> property equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> whose <see cref="P:Telerik.Web.UI.RadPanelItem.Value">Value</see> property is
                equal to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="value">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.FindItemByValue(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadPanelbar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> with a <see cref="P:Telerik.Web.UI.RadPanelItem.Value">Value</see> property equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> whose <see cref="P:Telerik.Web.UI.RadPanelItem.Value">Value</see> property is
                equal to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="value">The value to search for.</param>  
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.FindItemByUrl(System.String)">
            <summary>
                Searches the <strong>RadPanelbar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadPanelItem">Item</see> with a <see cref="P:Telerik.Web.UI.RadPanelItem.NavigateUrl">NavigateUrl</see>
                property equal to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> whose <see cref="P:Telerik.Web.UI.RadPanelItem.NavigateUrl">NavigateUrl</see>
                property is equal to the specified value.
            </returns>
            <remarks>
            The method returns the first Item matching the search criteria. If no Item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="url">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.FindItem(System.Predicate{Telerik.Web.UI.RadPanelItem})">
            <summary>
            Returns  the first <strong>RadPanelItem</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindItem</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadPanel1.FindItem(ItemWithEqualsTextAndValue);
            }
            private static bool ItemWithEqualsTextAndValue(RadPanelItem item)
            {
                if (item.Text == item.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadPanel1.FindItem(ItemWithEqualsTextAndValue)
            End Sub
            Private Shared Function ItemWithEqualsTextAndValue(ByVal item As RadPanelItem) As Boolean
                If item.Text = item.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
            </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.GetAllItems">
            <summary>
            Gets a linear list of all items in the <strong>RadPanelBar</strong>
            control.
            </summary>
            <returns>
            An <strong>IList&lt;RadPanelBarItem&gt;</strong> containing all items (from all hierarchy
            levels).
            </returns>
            <remarks>
            Use the <strong>GetAllItems</strong> method to obtain a linear collection of all
            items regardless their place in the hierarchy.
            </remarks>
            <example>
                The following example demonstrates how to disable all items within a
                <strong>RadPanelBar</strong> control. 
                <code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                foreach (RadPanelBarItem item in RadPanelBar1.GetAllItems())
                {
                    item.Enabled = false;
                }
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                For Each childItem As RadPanelBarItem In RadPanelBar1.GetAllItems
                    childItem.Enabled = False
                Next
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.ClearSelectedItems">
            <summary>
            This methods clears the selected items of the current RadPanelBar instance. Useful when you need to clear item selection after postback.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.CollapseAllItems">
             <summary>
            This methods collapses all expanded panel items
             </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.OnItemClick(Telerik.Web.UI.RadPanelBarEventArgs)">
            <summary>
            Raises the ItemClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.OnItemDataBound(Telerik.Web.UI.RadPanelBarEventArgs)">
            <summary>
            Raises the ItemDataBound event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelBar.OnItemCreated(Telerik.Web.UI.RadPanelBarEventArgs)">
            <summary>
            Raises the ItematCreated event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.ClientChanges">
             <summary>
            		Gets a list of all client-side changes (adding an item, removing an item, changing an item's property) which have occurred.
             </summary>
             <value>
            		A list of <see cref="T:Telerik.Web.UI.ClientOperation`1"/> objects which represent all client-side changes the user has performed. 
            		By default the ClientChanges property returns empty list. Client-changes are recorded if and only if the client-side
            		methods trackChanges()/commitChanges() have been invoked.
             </value>
             <remarks>
            		You can use the ClientChanges property to respond to client-side modifications such as
            		<list type="bullet">
            			<item>adding a new item</item>
            			<item>removing existing item</item>
            			<item>clearing the children of an item or the control itself</item>
            			<item>changing a property of the item</item>
            		</list>
            		The ClientChanges property is available in the first postback (ajax) request after the client-side modifications
            		have taken place. After this moment the property will return empty list.
             </remarks>
             <example>
            		The following example demonstrates how to use the ClientChanges property
            		<code lang="CS">
            		foreach (ClientOperation&lt;RadPanelItem&gt; operation in RadToolBar1.ClientChanges)
            		{
            			RadPanelItem item = operation.Item;
            
            			switch (operation.Type)
            			{
            				case ClientOperationType.Insert:
            					//An item has been inserted - operation.Item contains the inserted item
            				break;
            				case ClientOperationType.Remove:
            					//An item has been inserted - operation.Item contains the removed item. 
                             //Keep in mind the item has been removed from the panelbar.
            				break;
            				case ClientOperationType.Update:
            					UpdateClientOperation&lt;RadPanelItem&gt; update = operation as UpdateClientOperation&lt;RadPanelItem&gt;
            					//The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            				break;
            				case ClientOperationType.Clear:
            					//All children of have been removed - operation.Item contains the parent item whose children have been removed. If operation.Item is null then the root items have been removed.
            				break;
            			}
            		}
            		</code>
            		<code lang="VB">
            			For Each operation As ClientOperation(Of RadPanelItem) In RadToolBar1.ClientChanges
            				Dim item As RadPanelItem = operation.Item
            				Select Case operation.Type
            					Case ClientOperationType.Insert
            						'An item has been inserted - operation.Item contains the inserted item
            					Exit Select
            					Case ClientOperationType.Remove
            						'An item has been inserted - operation.Item contains the removed item. 
            						'Keep in mind the item has been removed from the panelbar.
            					Exit Select
            					Case ClientOperationType.Update
            						Dim update As UpdateClientOperation(Of RadPanelItem) = TryCast(operation, UpdateClientOperation(Of RadPanelItem))
            						'The "UpdateOperation" provides an additional property "PropertyName". This is the property whose value was changed from the client side.
            					Exit Select
            					Case ClientOperationType.Clear
            						'All children of have been removed - operation.Item contains the parent item whose children have been removed. If operation.Item is Nothing then the root items have been removed.
            					Exist Select
            				End Select
            			Next
            		</code>
             </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.Items">
            <summary>
            	Gets a <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see> object that contains the root items of the current RadPanelBar control.
            </summary>
            <value>
                A <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see> that contains the root items of the current RadPanelBar control. By default
            	the collection is empty (RadPanelBar has no children).
            </value>
            <remarks>
            	Use the <b>Items</b> property to access the child items of RadPanelBar. You can also use the <b>Items</b> property to
            	manage the root items. You can add, remove or modify items from the <b>Items</b> collection.
            </remarks>
            <example>
                The following example demonstrates how to programmatically modify the properties of root items.
                <code lang="CS">
            		RadPanelBar1.Items[0].Text = "Example";
            		RadPanelBar1.Items[0].NavigateUrl = "http://www.example.com";
                </code>
            	<code lang="VB">
            		RadPanelBar1.Items(0).Text = "Example"
            		RadPanelBar1.Items(0).NavigateUrl = "http://www.example.com"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.SelectedItem">
            <summary>Gets the selected panel item.</summary>
            <value>
            Returns the panel item which is currently selected. If no item is selected
            the <strong>SelectedItem</strong> property will
            return <strong>null</strong> (<strong>Nothing</strong> in VB.NET).
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.ItemTemplate">
            <summary>
            Gets or sets the template for displaying the items in
            <strong>RadPanelBar</strong>.
            </summary>
            <value>
            	<para>A <strong>ITemplate</strong> implemented object that contains the template
                for displaying panel items. The default value is a null reference (<b>Nothing</b> in
                Visual Basic), which indicates that this property is not set.</para>
            	<para>The <strong>ItemTemplate</strong> property sets a template that will be used
                for all panel items.</para>
            	<para>
                    To specify unique display for individual items use the
                    <see cref="P:Telerik.Web.UI.RadPanelItem.ItemTemplate">ItemTemplate</see> property of the
                    <strong>RadPanelItem</strong> class.
                </para>
            </value>
            <example>
            	<para>The following example demonstrates how to use the
                <strong>ItemTemplate</strong> property to add a CheckBox for each item.</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadPanelBar runat="server" ID="RadPanelBar1"&gt;</para>
            	<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            		<para>&lt;ItemTemplate&gt;</para>
            		<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            			<para>&lt;asp:CheckBox runat="server"
                        ID="CheckBox"&gt;&lt;/asp:CheckBox&gt;<br/>
                        &lt;asp:Label runat="server" ID="Label1"</para>
            			<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            				<para>Text='&lt;%# DataBinder.Eval(Container, "Text") %&gt;'</para>
            				<para>&gt;&lt;/asp:Label&gt;</para>
            			</blockquote>
            		</blockquote>
            		<para>&lt;/ItemTemplate&gt;</para>
            		<para>&lt;Items&gt;</para>
            		<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            			<para>&lt;telerik:RadPanelItem Text="News" /&gt;</para>
            			<para>&lt;telerik:RadPanelItem Text="Sports" /&gt;</para>
            			<para>&lt;telerik:RadPanelItem Text="Games" /&gt;</para>
            		</blockquote>
            		<para>&lt;/Items&gt;</para>
            	</blockquote>
            	<para>&lt;/telerik:RadPanelBar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.ExpandMode">
            <summary>
            Gets of sets a value indicating the behavior of RadPanelbar when an item is
            expanded.
            </summary>
            <value>
                One of the <see cref="T:Telerik.Web.UI.PanelBarExpandMode">PanelBarExpandMode Enumeration</see>
                values. The default value is <strong>MultipleExpandedItems</strong>.
            </value>
            <remarks>
            	<para>Use the <strong>ExpandMode</strong> property to specify the way RadPanelbar
                should behave after an item is expanded. The available options are:</para>
            	<list type="bullet">
            		<item><strong>MultipleExpandedItems</strong> (default) - More than one item can
                    be expanded at a time.</item>
            		<item><strong>SingleExpandedItem</strong> - Only one item can be expanded at a
                    time. Expanding another item collapses the previously expanded one.</item>
            		<item><strong>FullExpandedItem</strong> - Only one item can be expanded at a
                    time. The expanded area occupies the entire height of the RadPanelbar. The
                    <strong>Height</strong> property should be set in order
                    <strong>RadPanelbar</strong> to operate correctly in this mode.</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.AllowCollapseAllItems">
            <summary>
            Gets or sets a value indicating whether all items can be collapsed.
            This allows all the items to be collapsed even if the panelbar's ExpandMode is set to <strong>SingleExpandedItem</strong> or <strong>FullExpandedItem</strong> mode.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.PostBackUrl">
            <summary>
            	<para>Gets or sets the URL of the page to post to from the current page when an item
                from the panel is clicked.</para>
            </summary>
            <value>
            The URL of the Web page to post to from the current page when an item from the
            panel control is clicked. The default value is an empty string (""), which causes
            the page to post back to itself.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.MaxDataBindDepth">
            <summary>
            	Gets or sets the maximum number of levels to bind to the <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> control.
            </summary>
            <value>
            	The maximum number of levels to bind to the <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> control. The default is -1, which binds all the levels in the data source to the control.
            </value>
            <remarks>
            	When binding the <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> control to a data source, use the MaxDataBindDepth 
            	property to limit the number of levels to bind to the control. For example, setting this property to 2 binds only 
            	the root panel items and their immediate children. All remaining records in the data source are ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.PersistStateInCookie">
            <summary>
            Gets or sets a value indicating whether the control would persists its state
            between pages (expanded and selected items).
            </summary>
            <value>
            	<strong>true</strong> if the control would persist its state;
            <strong>false</strong> otherwise. The default value is <strong>false</strong>.
            </value>
            <remarks>
            	<para>Use the <strong>PersistStateInCookie</strong> property to make
                <strong>RadPanelbar</strong> persist its state between pages. This feature requires
                browser cookies to be enabled. Also the <strong>ClientID</strong> and
                <strong>ID</strong> properties of the <strong>RadPanelbar</strong> control must be
                the same in all pages accessible via the control (and containing it).</para>
            	<para>Page1.aspx:</para>
            	<para>&lt;radP:RadPanelbar <strong>ID="RadPanelbar1"</strong> &gt; ...
                &lt;/radP:RadPanelbar&gt;</para>
            	<para>Page2.aspx</para>
            	<para>&lt;radP:RadPanelbar <strong>ID="RadPanelbar1"</strong> &gt; ...
                &lt;/radP:RadPanelbar&gt;</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.CookieName">
            <summary>
            Specifies the name of the cookie which should be used when PersistStateInCookie is set to true.
            </summary>
            <remarks>
            If this property is not set the ClientID property will be used as the name of the cookie.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.ExpandAnimation">
            <summary>Gets the settings for the animation played when an item opens.</summary>
            <value>
                An <see cref="T:Telerik.Web.UI.AnimationSettings">AnnimationSettings</see> that represents the
                expand animation.
            </value>
            <remarks>
            	<para>
                    Use the <strong>ExpandAnimation</strong> property to customize the expand
                    animation of <strong>RadPanelBar</strong>. You can specify the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see>,
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Duration">Duration</see> and the
                    To disable expand animation effects you should set the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> to
                    <strong>AnimationType.None</strong>.<br/>
                    To customize the collapse animation you can use the
                    <see cref="P:Telerik.Web.UI.RadPanelBar.CollapseAnimation">CollapseAnimation</see> property.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to set the <strong>ExpandAnimation</strong>
                of RadPanelBar. 
                <para>
            		<para><strong>ASPX:</strong></para>
            	</para>
            	<para>
            		<para>&lt;telerik:RadPanelBar ID="RadPanelBar1" runat="server"&gt;</para>
            		<para><strong>&lt;ExpandAnimation Type="OutQuint" Duration="300"
                    /&gt;</strong></para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="News" &gt;</para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="CNN" NavigateUrl="http://www.cnn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="Google News" NavigateUrl="http://news.google.com"
                    /&gt;</para>
            		<para>&lt;/Items&gt;</para>
            		<para>&lt;/telerik:RadPanelBarItem&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="Sport" &gt;</para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="ESPN" NavigateUrl="http://www.espn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="Eurosport" NavigateUrl="http://www.eurosport.com"
                    /&gt;</para>
            		<para>&lt;/Items&gt;</para>
            		<para>&lt;/telerik:RadPanelBarItem&gt;</para>
            		<para>&lt;/Items&gt;</para>
            	</para>
            	<para>
            		<para>&lt;/telerik:RadPanelBar&gt;</para>
            	</para>
            	<code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                RadPanelBar1.ExpandAnimation.Type = AnimationType.Linear;
                RadPanelBar1.ExpandAnimation.Duration = 300;
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                RadPanelBar1.ExpandAnimation.Type = AnimationType.Linear
                RadPanelBar1.ExpandAnimation.Duration = 300
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.ExpandDelay">
            <summary>
            Gets or sets a value indicating the timeout after which a panel item starts to
            open.
            </summary>
            <value>
            An integer specifying the timeout measured in milliseconds. The default value is
            100 milliseconds.
            </value>
            <remarks>
            	<para>Use the <strong>ExpandDelay</strong> property to delay item opening.</para>
            	<para>
                    To customize the timeout prior to item closing use the
                    <see cref="P:Telerik.Web.UI.RadPanelBar.CollapseDelay">CollapseDelay</see> property.
                </para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to specify a half second (500
                milliseconds) timeout prior to item opening:</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadPanelBar ID="RadPanelBar1" runat="server"
                <strong>ExpandDelay="500"</strong> /&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.CollapseAnimation">
            <summary>Gets the settings for the animation played when an item closes.</summary>
            <value>
                An <see cref="T:Telerik.Web.UI.AnimationSettings">AnnimationSettings</see> that represents the
                collapse animation.
            </value>
            <remarks>
            	<para>
                    Use the <strong>CollapseAnimation</strong> property to customize the expand
                    animation of <strong>RadPanelBar</strong>. You can specify the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see>,
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Duration">Duration</see> and the
                    items are collapsed.<br/>
                    To disable expand animation effects you should set the
                    <see cref="P:Telerik.Web.UI.AnimationSettings.Type">Type</see> to
                    <strong>AnimationType.None</strong>. To customize the expand animation you can
                    use the <see cref="P:Telerik.Web.UI.RadPanelBar.ExpandAnimation">ExpandAnimation</see> property.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to set the
                <strong>CollapseAnimation</strong> of RadPanelBar. 
                <para>
            		<para><strong>ASPX:</strong></para>
            	</para>
            	<para>
            		<para>&lt;telerik:RadPanelBar ID="RadPanelBar1" runat="server"&gt;</para>
            		<para><strong>&lt;CollapseAnimation Type="OutQuint" Duration="300"
                    /&gt;</strong></para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="News" &gt;</para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="CNN" NavigateUrl="http://www.cnn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="Google News" NavigateUrl="http://news.google.com"
                    /&gt;</para>
            		<para>&lt;/Items&gt;</para>
            		<para>&lt;/telerik:RadPanelBarItem&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="Sport" &gt;</para>
            		<para>&lt;Items&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="ESPN" NavigateUrl="http://www.espn.com"
                    /&gt;</para>
            		<para>&lt;telerik:RadPanelBarItem Text="Eurosport" NavigateUrl="http://www.eurosport.com"
                    /&gt;</para>
            		<para>&lt;/Items&gt;</para>
            		<para>&lt;/telerik:RadPanelBarItem&gt;</para>
            		<para>&lt;/Items&gt;</para>
            	</para>
            	<para>
            		<para>&lt;/telerik:RadPanelBar&gt;</para>
            		<code lang="CS">
            		</code>
            		<code lang="VB">
            		</code>
            	</para>
            	<code lang="CS">
            void Page_Load(object sender, EventArgs e)
            {
                RadPanelBar1.CollapseAnimation.Type = AnimationType.Linear;
                RadPanelBar1.CollapseAnimation.Duration = 300;
            }
                </code>
            	<code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
                RadPanelBar1.CollapseAnimation.Type = AnimationType.Linear
                RadPanelBar1.CollapseAnimation.Duration = 300
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.CollapseDelay">
            <summary>
            Gets or sets a value indicating the timeout after which a panel item starts to
            close.
            </summary>
            <value>
            An integer specifying the timeout measured in milliseconds. The default value is
            500 (half a second).
            </value>
            <remarks>
            	<para>Use the <strong>CollapseDelay</strong> property to delay item closing. To
                cause immediate item closing set this property to 0 (zero).</para>
            	<para>
                    To customize the timeout prior to item closing use the
                    <see cref="P:Telerik.Web.UI.RadPanelBar.ExpandDelay">ExpandDelay</see> property.
                </para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to specify one second (1000
                milliseconds) timeout prior to item closing:</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadPanelBar ID="RadPanelBar1" runat="server"
                <strong>ClosingDelay="1000"</strong> /&gt;</para>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadPanelBar.ItemCreated">
            <summary>
            Occurs on the server when an item in the <strong>RadPanelBar</strong> control is
            created.
            </summary>
            <remarks>
            	<para>The <b>ItemCreated</b> event is raised every time a new item is
                added.</para>
            	<para>The <b>ItemCreated</b> event is not related to data binding and you
                cannot retrieve the <strong>DataItem</strong> of the item in the event
                handler.</para>
            	<para>The <b>ItemCreated</b> event is often useful in scenarios where you want
                to initialize all items - for example setting the <strong>ToolTip</strong> of each
                <strong>RadPanelBarItem</strong> to be equal to the <strong>Text</strong> property.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the <strong>ItemCreated</strong>
                event to set the <strong>ToolTip</strong> property of each item.
                <code lang="CS">
            private void RadPanelBar1_ItemCreated(object sender, Telerik.WebControls.RadPanelBarItemEventArgs e)
            {
                e.Item.ToolTip = e.Item.Text;
            }
                </code>
            	<code lang="VB">
            Sub RadPanelBar1_ItemCreated(ByVal sender As Object, ByVal e As Telerik.WebControls.RadPanelBarItemEventArgs) Handles RadPanelBar1.ItemCreated
                e.Item.ToolTip = e.Item.Text
            End Sub
                </code>
            </example>
        </member>
        <member name="E:Telerik.Web.UI.RadPanelBar.ItemClick">
            <summary>
                Occurs on the server when a panel item in the <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see>
                control is clicked.
            </summary>
            <remarks>
            	<para>
            		The panel will also postback if you navigate to a panel item
                    using the [panel item] key and then press [enter] on the panel item that is focused. The
                    instance of the clicked panel item is passed to the <strong>ItemClick</strong> event
                    handler - you can obtain a reference to it using the eventArgs.RadPanelBarItem property.
                </para>
            </remarks>
        </member>
        <member name="E:Telerik.Web.UI.RadPanelBar.ItemDataBound">
            <summary>Occurs after a panel item is data bound.</summary>
            <remarks>
            	<para>
                    The <strong>ItemDataBound</strong> event is raised for each panel item upon
                    databinding. You can retrieve the item being bound using the event arguments.
                    The <strong>DataItem</strong> associated with the item can be retrieved using
                    the <see cref="P:Telerik.Web.UI.RadPanelItem.DataItem">DataItem</see> property.
                </para>
            	<para>The <strong>ItemDataBound</strong> event is often used in scenarios when
                you want to perform additional mapping of fields from the <strong>DataItem</strong>
                to their respective properties in the <strong>RadPanelBarItem</strong> class.</para>
            </remarks>
            <example>
                The following example demonstrates how to map fields from the data item to
                <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> properties using the <strong>ItemDataBound</strong>
                event.
            	<code lang="CS">
            private void RadPanelBar1_ItemDataBound(object sender, Telerik.WebControls.RadPanelBarEventArgs e)
            {
                RadPanelBarItem item = e.RadPanelBarItem;
                DataRowView dataRow = (DataRowView) e.Item.DataItem;
             
                item.ImageUrl = "image" + dataRow["ID"].ToString() + ".gif";
                item.NavigateUrl = dataRow["URL"].ToString();
            }
                </code>
            	<code lang="VB">
            Sub RadPanelBar1_ItemDataBound(ByVal sender As Object, ByVal e As RadPanelBarEventArgs) Handles RadPanelBar1.ItemDataBound
                Dim item As RadPanelBarItem = e.RadPanelBarItem
                Dim dataRow As DataRowView = CType(e.Item.DataItem, DataRowView)
             
                item.ImageUrl = "image" + dataRow("ID").ToString() + ".gif"
                item.NavigateUrl = dataRow("URL").ToString()
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.OnClientContextMenu">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            before the browser context panel shows (after right-clicking an item).
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>Use the <strong>OnClientContextMenu</strong> property to specify a JavaScript
                function that will be executed before the context menu shows after right clicking an
                item.</para>
            	<para>Two parameters are passed to the handler</para>
            	<list type="bullet">
            		<item>sender (the client-side RadPanelbar object)</item>
            		<item>
                        eventArgs with two properties 
                        <ul>
            				<li>Item - the instance of the selected item</li>
            				<li>EventObject - the browser DOM event</li>
            			</ul>
            		</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientContextpanel</strong> property. 
                <para>
            		<para class="sourcecode">&lt;script language="javascript"&gt;<br/>
                    function <strong>OnContextpanelHandler</strong>(sender, eventArgs)<br/>
                    {<br/>
                    var panelbar = sender;<br/>
                    var item = eventArgs.Item;<br/>
            			<br/>
                    alert("You have right-clicked the " + item.Text + " item in the " + panelbar.ID +
                    "panelbar.");<br/>
                    }<br/>
                    &lt;/script&gt;</para>
            		<para class="sourcecode">&lt;radP:RadPanelbar id="RadPanelbar1" runat="server"
                    <strong>OnClientContextpanel="OnContextpanelHandler"</strong>&gt;<br/>
                    &lt;Items&gt;<br/>
                    &lt;radP:RadPanelItem Text="Personal Details"&gt;&lt;/radP:RadPanelItem&gt;<br/>
                    &lt;radP:RadPanelItem Text="Education"&gt;&lt;/radP:RadPanelItem&gt;<br/>
                    &lt;radP:RadPanelItem Text="Computing Skills"&gt;&lt;/radP:RadPanelItem&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/radP:RadPanelbar&gt;</para>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.OnClientItemClicking">
            <remarks>
            	<para>This event is similar to <strong>OnClientItemFocus</strong> but fires only on
                mouse click.</para>
            	<para>If specified, the <strong>OnClientItemClicking</strong> client-side event
                handler is called before a panel item is clicked upon. Two parameters are passed to
                the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the panelbar client object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>Item</strong> (the
                    instance of the panel item).</item>
            	</list>
            	<para>The <strong>OnClientItemClicking</strong> event can be cancelled. To do so,
                return <strong>False</strong> from the event handler.</para>
            	<div>
            		<table class="hs-box"></table>
            	</div>
            </remarks>
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a panel item is clicked.
            </summary>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function OnClientItemClickingHandler(sender, eventArgs)<br/>
                {<br/>
                if (eventArgs.Item.Text == "News")<br/>
                {</para>
            	<para>return false;</para>
            	<para>}<br/>
                }<br/>
                &lt;/script&gt;<br/>
                &lt;radP:RadPanelbar ID="RadPanelbar1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemClicking="OnClientItemClickingHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/radP:RadPanelbar&gt;</para>
            </example>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.OnClientItemClicked">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            after a panel item is clicked.
            </summary>
            <remarks>
            	<para>This event is similar to <strong>OnClientItemFocus</strong> but fires only on
                mouse click.</para>
            	<para>If specified, the <strong>OnClientItemClicked</strong> client-side event
                handler is called after a panel item is clicked upon. Two parameters are passed to
                the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the panelbar client object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>Item</strong> (the
                    instance of the panel item).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
            &lt;script type="text/javascript"&gt;<br/>
            function OnClientItemClickedHandler(sender, eventArgs)<br/>
            {<br/>
            alert(eventArgs.Item.Text);<br/>
            }<br/>
            &lt;/script&gt;<br/>
            &lt;radP:RadPanelbar ID="RadPanelbar1"<br/>
            runat="server"<br/>
            	<strong>OnClientItemClicked="OnClientItemClickedHandler"</strong>&gt;<br/>
            ....<br/>
            &lt;/radP:RadPanelbar&gt;
            </example>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.OnClientItemFocus">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a panel item gets focus.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function OnClientItemFocusHandler(sender, eventArgs)<br/>
                {<br/>
                alert(eventArgs.Item.Text);<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;radP:RadPanelbar ID="RadPanelbar1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemFocus="OnClientItemFocusHandler"&gt;</strong><br/>
                ....<br/>
                &lt;/radP:RadPanelbar&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientItemFocus</strong> client-side event
                handler is called when a panel item is selected using either the keyboard (the
                [TAB] or arrow keys) or by clicking it. Two parameters are passed to the
                handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the panelbar client object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>Item</strong> (the
                    instance of the panel item).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.OnClientItemBlur">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            after an item loses focus.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the <strong>OnClientItemBlur</strong> client-side event handler
                is called when a panel item loses focus as a result of the user pressing a key or
                clicking elsewhere on the page. Two parameters are passed to the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the panelbar client object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>Item</strong> (the
                    instance of the panel item).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function OnClientItemBlurHandler(sender, eventArgs)<br/>
                {<br/>
                alert(eventArgs.Item.Text);<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;radP:RadPanelbar ID="RadPanelbar1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemBlur="OnClientItemBlurHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/radP:RadPanelbar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.OnClientItemExpand">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a group of child items expands.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <requirements>
            	<para>If specified, the <strong>OnClientItemOpen</strong> client-side event handler
                is called when a group of child items opens. Two parameters are passed to the
                handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the panelbar client object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>Item</strong> (the
                    instance of the panel item).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </requirements>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function OnClientItemExpandHandler(sender, eventArgs)<br/>
                {<br/>
                alert(eventArgs.Item.Text);<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;radP:RadPanelbar ID="RadPanelbar1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemExpand="OnClientItemExpandHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/radP:RadPanelbar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.OnClientItemCollapse">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            a group of child items collapses.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function OnClientItemCollapseHandler(sender, eventArgs)<br/>
                {<br/>
                alert(eventArgs.Item.Text);<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;radP:RadPanelbar ID="RadPanelbar1"<br/>
                runat="server"<br/>
            		<strong>OnClientItemCollapse="OnClientItemCollapseHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/radP:RadPanelbar&gt;</para>
            </example>
            <remarks>
            	<para>If specified, the <strong>OnClientItemClose</strong> client-side event
                handler is called when a group of child items closes. Two parameters are passed to
                the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the panelbar client object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>Item</strong> (the
                    instance of the panel item).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.OnClientLoad">
            <remarks>
            	<para>If specified, the <strong>OnClienLoad</strong> client-side event handler is
                called after the panelbar is fully initialized on the client.</para>
            	<para>A single parameter - the panelbar client object - is passed to the
                handler.</para>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function OnClientLoadHandler(sender)<br/>
                {<br/>
                alert(sender.ID);<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;radP:RadPanelbar ID="RadPanelbar1"<br/>
                runat= "server"<br/>
            		<strong>OnClientLoad= "OnClientLoadHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/radP:RadPanelbar&gt;</para>
            </example>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <summary>
            Gets or sets a value indicating the client-side event handler that is called
            after the <strong>RadPanelbar</strong> client-side object is initialized.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.OnClientMouseOver">
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the mouse moves over a panel item in the <strong>RadPanelbar</strong> control.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <remarks>
            	<para>If specified, the
                <strong>OnClientMouseOver</strong><font color="black">client-side event handler is
                called when the mouse moves over a panel item.</font> Two parameters are passed to
                the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the panelbar client object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>Item</strong> (the
                    instance of the panel item).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <example>
                The following example demonstrates how to use the
                <strong>OnClientMouseOver</strong> property. 
                <para>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;script type="text/javascript"&gt;<br/>
                        function OnClientMouseOverHandler(sender, eventArgs)<br/>
                        {<br/>
                        alert(eventArgs.Item.Text);<br/>
                        }<br/>
                        &lt;/script&gt;
                    </div>
            		<div class="LanguageSpecific" name="Code_VB">
                        &lt;radP:RadPanelbar ID="RadPanelbar1"<br/>
                        runat= "server"<br/>
            			<strong>OnClientMouseOver= "OnClientMouseOverHandler"</strong>&gt;<br/>
                        ....<br/>
                        &lt;/radP:RadPanelbar&gt;
                    </div>
            	</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelBar.OnClientMouseOut">
            <remarks>
            	<para>If specified, the <strong>OnClientMouseOut</strong> client-side event handler
                is called when the mouse moves out of a panel item. Two parameters are passed to
                the handler:</para>
            	<list type="bullet">
            		<item><strong>sender</strong>, the panelbar client object;</item>
            		<item><strong>eventArgs</strong> with one property, <strong>Item</strong> (the
                    instance of the panel item).</item>
            	</list>
            	<para>This event cannot be cancelled.</para>
            </remarks>
            <summary>
            Gets or sets a value indicating the client-side event handler that is called when
            the mouse moves out of a panel item in the <strong>RadPanelbar</strong> control.
            </summary>
            <value>
            A string specifying the name of the JavaScript function that will handle the
            event. The default value is empty string.
            </value>
            <example>
            	<para>&lt;script type="text/javascript"&gt;<br/>
                function OnClientMouseOutHandler(sender, eventArgs)<br/>
                {<br/>
                alert(eventArgs.Item.Text);<br/>
                }<br/>
                &lt;/script&gt;</para>
            	<para>&lt;radP:RadPanelbar ID="RadPanelbar1"<br/>
                runat= "server"<br/>
            		<strong>OnClientMouseOut= "OnClientMouseOutHandler"</strong>&gt;<br/>
                ....<br/>
                &lt;/radP:RadPanelbar&gt;</para>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.RadPanelItem">
            <summary>Represents a item in the <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> control.</summary>
            <remarks>
            	<para>
            		The <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> control is made up of items. Items which are immediate children
            		of the panelbar are root items. Items which are children of root items are child items.
            	</para>
            	<para>
            		A item usually stores data in two properties, the <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property and 
            		the <see cref="P:Telerik.Web.UI.RadPanelItem.Value">Value</see> property. The value of the <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property is displayed 
            		in the <b>RadPanelBar</b> control, and the <see cref="P:Telerik.Web.UI.RadPanelItem.Value">Value</see> property is used to store additional data.
            	</para>
            	<para>To create panel items, use one of the following methods:</para>
            	<list type="bullet">
            		<item>
            			Use declarative syntax to define items inline in your page or user control.
            		</item>
            		<item>
            			Use one of the constructors to dynamically create new instances of the
            			<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> class. These items can then be added to the
            			<b>Items</b> collection of another item or panelbar.
            		</item>
            		<item>
            			Data bind the <b>RadPanelBar</b> control to a data source.
            		</item>
            	</list>
            	<para>
                    When the user clicks a panel item, the <b>RadPanelBar</b> control can navigate
                    to a linked Web page, post back to the server or select that item. If the
                    <see cref="P:Telerik.Web.UI.RadPanelItem.NavigateUrl">NavigateUrl</see> property of a item is set, the
                    <b>RadPanelBar</b> control navigates to the linked page. By default, a linked page
                    is displayed in the same window or frame. To display the linked content in a different 
            		window or frame, use the <see cref="P:Telerik.Web.UI.RadPanelItem.Target">Target</see> property.
                </para>
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItem.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> class.</summary>
            <remarks>
                Use this constructor to create and initialize a new instance of the
                <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> class using default values.
            </remarks>
            <example>
                The following example demonstrates how to add items to
                <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> controls. 
                <code lang="CS" title="[New Example]">
            RadPanelItem item = new RadPanelItem();
            item.Text = "News";
            item.NavigateUrl = "~/News.aspx";
             
            RadPanelbar1.Items.Add(item);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim item As New RadPanelItem()
            item.Text = "News"
            item.NavigateUrl = "~/News.aspx"
             
            RadPanelbar1.Items.Add(item)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItem.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> class with the
                specified text data.
            </summary>
            <remarks>
            	<para>
                    Use this constructor to create and initialize a new instance of the
                    <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> class using the specified text.
                </para>
            </remarks>
            <example>
                The following example demonstrates how to add items to
                <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> controls. 
                <code lang="CS" title="[New Example]">
            RadPanelItem item = new RadPanelItem("News");
             
            RadPanelbar1.Items.Add(item);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim item As New RadPanelItem("News")
             
            RadPanelbar1.Items.Add(item)
                </code>
            </example>
            <param name="text">
                The text of the item. The <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property is set to the value
                of this parameter.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItem.ExpandParentItems">
            <summary>
            Expands all parent items so the item is visible.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItem.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> class with the
                specified text and URL to navigate to.
            </summary>
            <remarks>
            	<para>
                    Use this constructor to create and initialize a new instance of the
                    <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> class using the specified text and URL.
                </para>
            </remarks>
            <example>
                This example demonstrates how to add items to <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see>
                controls. 
                <code lang="CS" title="[New Example]">
            RadPanelItem item = new RadPanelItem("News", "~/News.aspx");
             
            RadPanelbar1.Items.Add(item);
                </code>
            	<code lang="VB" title="[New Example]">
            Dim item As New RadPanelItem("News", "~/News.aspx")
             
            RadPanelbar1.Items.Add(item)
                </code>
            </example>
            <param name="text">
                The text of the item. The <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property is set to the value
                of this parameter.
            </param>
            <param name="navigateUrl">
                The url which the item will navigate to. The
                <see cref="P:Telerik.Web.UI.RadPanelItem.NavigateUrl">NavigateUrl</see> property is set to the value of this
                parameter.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.ImagePosition">
            <summary>Gets or sets a value indicating the position of the image within the item.</summary>
            <value>
                One of the <see cref="T:Telerik.Web.UI.RadPanelItemImagePosition">RadPanelItemImagePosition
                Enumeration</see> values. The default value is <strong>Left</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.PanelBar">
            <summary>Gets the <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> instance which contains the item.</summary>
            <remarks>
                Use this property to obtain an instance to the
                <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> object containing the item.
            </remarks>		
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.Owner">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.IRadPanelItemContainer">IRadPanelItemContainer</see> instance which contains the current item.
            </summary>
            <value>
                The object which contains the item. It might be an instance of the
                <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> class or the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see>
                class depending on the hierarchy level.
            </value>
            <remarks>
                The value is of the <see cref="T:Telerik.Web.UI.IRadPanelItemContainer">IRadPanelItemContainer</see> type which is
                implemented by the <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> class and the
                <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> class. Use the <b>Owner</b> property when
                recursively traversing items in the <b>RadPanelBar</b> control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.IsSeparator">
            <summary>
            Sets or gets whether the item is separator. It also represents a logical state of
            the item. Might be used in some applications for keyboard navigation to omit processing
            items that are marked as separators.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.Expanded">
            <summary>Gets or sets a value indicating whether the panel item is expanded.</summary>
            <value>
            	<strong>true</strong> if the panel item is expanded; otherwise,
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.Level">
            <summary>
            Manages the item level of a particular Item instance. This property allows easy
            implementation/separation of the panel items in levels.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.ChildGroupHeight">
            <summary>Gets or sets the height of the child item group.</summary>
            <value>
            A <strong>Unit</strong> that represents the height of the child item group. The
            default value is <strong>Empty.</strong>
            </value>
            <remarks>
            If the total child group height exceeds the value specified with the
            <strong>ChildGroupHeight</strong> property scrolling will be applied.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.ChildGroupCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied to the element enclosing the child items.
            </summary>
            <value>
            The default value is empry string.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.DisabledCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the panel item is
            disabled.
            </summary>
            <value>
            The CSS class applied when the panel item is disabled. The default value is
            <strong>"disabled"</strong>.
            </value>
            <remarks>
            By default the visual appearance of disabled panel items is defined in the skin CSS
            file. You can use the <strong>DisabledCssClass</strong> property to specify unique
            appearance for the panel item when it is disabled.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.PostBack">
            <summary>
            Gets or sets a value indicating whether clicking on the item will
            postback.
            </summary>
            <value>
            	<strong>True</strong> if the panel item should postback; otherwise
                <strong>false</strong>. By default all the items will postback provided the user
                has subscribed to the <see cref="E:Telerik.Web.UI.RadPanelBar.ItemClick">ItemClick</see> event.
            </value>
            <remarks>
                If you subscribe to the <see cref="E:Telerik.Web.UI.RadPanelBar.ItemClick">ItemClick</see> all panel
                items will postback. To turn off that behavior you should set the
                <strong>PostBack</strong> property to <strong>false</strong>. 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.PreventCollapse">
            <summary>
            Gets or sets a value indicating whether clicking on the item will
            collapse it.
            </summary>
            <value>
            	<strong>False</strong> if the panel item should collapse; otherwise
                <strong>True</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.Selected">
            <summary>Gets or sets a value indicating whether the item is selected.</summary>
            <value>
            	<para><b>true</b> if the item is selected; otherwise, <b>false</b>. The default is
                <b>false</b>.</para>
            </value>
            <value>
            	<strong>true</strong> if the item is selected; otherwise <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
            <remarks>
                Use the <b>Selected</b> property to determine whether the item is currently selected. 
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.Text">
            <summary>Gets or sets the text caption for the panel item.</summary>
            <value>The text of the item. The default value is empty string.</value>
            <example>
                This example demonstrates how to set the text of the item using the
                <strong>Text</strong> property. 
                <para>
            		<para class="sourcecode">&lt;radP:RadPanelbar ID="RadPanelbar1"
                    runat="server"&gt;<br/>
                    &lt;Items&gt;<br/>
                    &lt;radP:RadPanelItem <strong>Text="News"</strong> /&gt;<br/>
                    &lt;radP:RadPanelItem <strong>Text="News"</strong> /&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/radP:RadPanelbar&gt;</para>
            	</para>
            </example>
            <remarks>
            Use the <strong>Text</strong> property to specify the text to display for the
            item.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.NavigateUrl">
            <summary>Gets or sets the URL to link to when the item is clicked.</summary>
            <value>
            The URL to link to when the item is clicked. The default value is empty
            string.
            </value>
            <example>
                The following example demonstrates how to use the <strong>NavigateUrl</strong>
                property 
                <para>
            		<para class="sourcecode">&lt;telerik:RadPanelBar id="RadPanelBar1"
                    runat="server"&gt;<br/>
                    &lt;Items&gt;<br/>
                    &lt;telerik:RadPanelItem Text="News" <strong>NavigateUrl="~/News.aspx"</strong>
                    /&gt;<br/>
                    &lt;telerik:RadPanelItem Text="External URL"
                    <strong>NavigateUrl="http://www.example.com"</strong> /&gt;<br/>
                    &lt;/Items&gt;<br/>
                    &lt;/telerik:RadPanelBar&gt;</para>
            	</para>
            </example>
            <remarks>
            Use the <strong>NavigateUrl</strong> property to specify the URL to link to when
            the item is clicked. Use "~" (tilde) in front of an URL within the same ASP.NET
            application. When specifying external URL do not forget the protocol (e.g.
            "http://").
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.Target">
            <summary>
            Gets or sets the target window or frame to display the Web page content linked to
            when the panel item is clicked.
            </summary>
            <value>
            	<para>The target window or frame to load the Web page linked to when the Item is
                selected. Values must begin with a letter in the range of a through z (case
                insensitive), except for the following special values, which begin with an
                underscore:</para>
            	<para>
            		<list type="Itemle">
            			<item>
            				<term>_blank</term>
            				<description>Renders the content in a new window without
                            frames.</description>
            			</item>
            			<item>
            				<term>_parent</term>
            				<description>Renders the content in the immediate frameset
                            parent.</description>
            			</item>
            			<item>
            				<term>_self</term>
            				<description>Renders the content in the frame with focus.</description>
            			</item>
            			<item>
            				<term>_top</term>
            				<description>Renders the content in the full window without
                            frames.</description>
            			</item>
            		</list>
            	</para>The default value is empty string.
            </value>
            <remarks>
            	<para>
                    Use the <b>Target</b> property to specify the frame or window that displays the
                    Web page linked to when the panel item is clicked. The Web page is specified by
                    setting the <see cref="P:Telerik.Web.UI.RadPanelItem.NavigateUrl">NavigateUrl</see> property.
                </para>
            	<para>If this property is not set, the Web page specified by the
                <strong>NavigateUrl</strong> property is loaded in the current window.</para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to use the <strong>Target</strong>
                property</para>
            	<para>ASPX:</para>
            	<para>&lt;telerik:RadPanelBar runat="server" ID="RadPanelBar1"&gt;</para>
            	<para>&lt;Items&gt;</para>
            	<para>&lt;telerik:RadPanelItem <strong>Target="_blank"</strong>
                NavigateUrl="http://www.google.com" /&gt;</para>
            	<para>&lt;/Items&gt;</para>
            	<para>&lt;/telerik:RadPanelBar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.Value">
            <summary>Gets or sets the value associated with the panel item.</summary>
            <value>The value associated with the item. The default value is empty string.</value>
            <remarks>
            	<para>Use the <b>Value</b> property to specify or determine the value associated
                with the item.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.DataItem">
            <summary>Gets or sets the data item represented by the item.</summary>
            <value>
                An object representing the data item to which the Item is bound to. The
                <strong>DataItem</strong> property will always return <strong>null</strong> when
                accessed outside of <see cref="E:Telerik.Web.UI.RadPanelBar.ItemDataBound">ItemDataBound</see>
                event handler.
            </value>
            <remarks>
                This property is applicable only during data binding. Use it along with the
                <see cref="E:Telerik.Web.UI.RadPanelBar.ItemDataBound">ItemDataBound</see> event to perform
                additional mapping of fields from the data item to
                <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> properties.
            </remarks>
            <example>
                The following example demonstrates how to map fields from the data item to
                %<strong>RadPanelItem</strong> properties. It assumes the user has subscribed to
                the ItemDataBound:RadPanelbar.ItemDataBound
                <see cref="E:Telerik.Web.UI.RadPanelBar.ItemDataBound">event.</see>:RadPanelItem% 
                <code lang="CS">
            private void RadPanelbar1_PanelItemDataBound(object sender, Telerik.WebControls.RadPanelbarEventArgs e)
            {
                RadPanelItem item = e.Item;
                DataRowView dataRow = (DataRowView) e.Item.DataItem;
             
                item.ImageUrl = "image" + dataRow["ID"].ToString() + ".gif";
                item.NavigateUrl = dataRow["URL"].ToString();
            }
                </code>
            	<code lang="VB">
            Sub RadPanel1_PanelItemDataBound(ByVal sender As Object, ByVal e As RadPanelbarEventArgs) Handles RadPanelbar1.ItemDataBound
                Dim item As RadPanelItem = e.Item
                Dim dataRow As DataRowView = CType(e.Item.DataItem, DataRowView)
             
                item.ImageUrl = "image" + dataRow("ID").ToString() + ".gif"
                item.NavigateUrl = dataRow("URL").ToString()
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.ItemTemplate">
            <summary>Gets or sets the template for displaying the item.</summary>
            <value>
            	<para>A <strong>ITemplate</strong> implemented object that contains the template
                for displaying the item. The default value is a null reference (<b>Nothing</b> in
                Visual Basic), which indicates that this property is not set.</para>
            	<para>
                    To specify common display for all panel items use the
                    <see cref="P:Telerik.Web.UI.RadPanelBar.ItemTemplate">ItemTemplate</see> property of the
                    <strong>RadPanelbar</strong> class.
                </para>
            </value>
            <example>
            	<para>The following template demonstrates how to add a Calendar control in certain
                panel item.</para>
            	<para>ASPX:</para>
            	<para>&lt;radP:RadPanelbar runat="server" ID="RadPanelbar1"&gt;</para>
            	<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            		<para>&lt;Items&gt;</para>
            		<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            			<para>&lt;radP:RadPanelItem Text="Date"&gt;</para>
            			<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            				<para>&lt;Items&gt;</para>
            				<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            					<para>&lt;radP:RadPanelItem Text="SelectDate"&gt;</para>
            					<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            						<para>&lt;ItemTemplate&gt;</para>
            						<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            							<para>&lt;asp:Calendar runat="server" ID="Calendar1"
                                        /&gt;</para>
            						</blockquote>
            						<para>&lt;/ItemTemplate&gt;</para>
            					</blockquote>
            					<para>&lt;/radP:RadPanelItem&gt;</para>
            				</blockquote>
            				<para>&lt;/Items&gt;</para>
            			</blockquote>
            			<para>&lt;/radP:RadPanelItem&gt;</para>
            		</blockquote>
            		<para>&lt;/Items&gt;</para>
            	</blockquote>
            	<para>&lt;/radP:RadPanelbar&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.ImageUrl">
            <summary>Gets or sets the path to an image to display for the item.</summary>
            <value>
            The path to the image to display for the item. The default value is empty
            string.
            </value>
            <remarks>
            Use the <strong>ImageUrl</strong> property to specify the image for the item. If
            the <strong>ImageUrl</strong> property is set to empty string no image will be
            rendered. Use "~" (tilde) when referring to images within the current ASP.NET
            application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.HoveredImageUrl">
            <summary>
            Gets or sets a value specifying the URL of the image rendered when the node is hovered with the mouse.
            </summary>
            <remarks>
            If the <c>HoveredImageUrl</c> property is not set the <see cref="P:Telerik.Web.UI.RadPanelItem.ImageUrl">ImageUrl</see> property will be 
            used when the node is hovered.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.DisabledImageUrl">
            <summary>Gets or sets the path to an image to display for the item when it is disabled.</summary>
            <value>
            The path to the image to display for the item. The default value is empty
            string.
            </value>
            <remarks>
            Use the <strong>DisabledImageUrl</strong> property to specify the image for the item when it is disabled. If
            the <strong>DisabledImageUrl</strong> property is set to empty string no image will be
            rendered. Use "~" (tilde) when referring to images within the current ASP.NET
            application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.SelectedImageUrl">
            <summary>Gets or sets the path to an image to display for the item when it is selected.</summary>
            <value>
            The path to the image to display for the item. The default value is empty
            string.
            </value>
            <remarks>
            Use the <strong>SelectedImageUrl</strong> property to specify the image for the item when it is disabled. If
            the <strong>SelectedImageUrl</strong> property is set to empty string no image will be
            rendered. Use "~" (tilde) when referring to images within the current ASP.NET
            application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.ExpandedImageUrl">
            <summary>Gets or sets the path to an image to display for the item when it is expanded.</summary>
            <value>
            The path to the image to display for the item. The default value is empty
            string.
            </value>
            <remarks>
            Use the <strong>ExpandedImageUrl</strong> property to specify the image for the item when it is expanded. If
            the <strong>ExpandedImageUrl</strong> property is set to empty string no image will be
            rendered. Use "~" (tilde) when referring to images within the current ASP.NET
            application.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.CssClass">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.ClickedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the panel item is
            clicked.
            </summary>
            <value>
            The CSS class applied when the panel item is clicked. The default value is
            <strong>"clicked"</strong>.
            </value>
            <example>
            By default the visual appearance of clicked panel items is defined in the skin CSS
            file. You can use the <strong>ClickedCssClass</strong> property to specify unique
            appearance for the panel item when it is clicked.
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.SelectedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the panel item is
            selected.
            </summary>
            <value>
            The CSS class applied when the panel item is selected. The default value is
            <strong>"selected"</strong>.
            </value>
            <remarks>
            By default the visual appearance of selected panel items is defined in the skin CSS
            file. You can use the <strong>SelectedCssClass</strong> property to specify unique
            appearance for the panel item when it is selected.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.ExpandedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the panel item is
            opened (its child items are visible).
            </summary>
            <value>
            The CSS class applied when the panel item is opened. The default value is
            <strong>"expanded"</strong>.
            </value>
            <remarks>
            By default the visual appearance of opened panel items is defined in the skin CSS
            file. You can use the <strong>ExpandedCssClass</strong> property to specify unique
            appearance for the panel item when it is opened.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItem.FocusedCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class applied when the panel item is
            focused.
            </summary>
            <value>
            The CSS class applied when the panel item is focused. The default value is
            <strong>"focused"</strong>.
            </value>
            <remarks>
            By default the visual appearance of focused panel items is defined in the skin CSS
            file. You can use the <strong>FocusedCssClass</strong> property to specify unique
            appearance for the panel item when it is focused.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadPanelItemBinding">
            <summary>
            	Represents the simple binding between the property value of an object and the property value of a
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see>.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemBinding.ApplyTo(Telerik.Web.UI.NavigationItem,System.Object,Telerik.Web.UI.PropertyDescriptorCache)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ChildGroupCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.ChildGroupCssClass">ChildGroupCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ChildGroupCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.ChildGroupCssClass">ChildGroupCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ChildGroupHeight">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.ChildGroupHeight">ChildGroupHeight</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ChildGroupHeightField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.ChildGroupHeight">ChildGroupHeight</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ClickedCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.ClickedCssClass">ClickedCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ClickedCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.ClickedCssClass">ClickedCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.DisabledCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.DisabledCssClass">DisabledCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.DisabledCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.DisabledCssClass">DisabledCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.DisabledImageUrl">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.DisabledImageUrl">DisabledImageUrl</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.DisabledImageUrlField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.DisabledImageUrl">DisabledImageUrl</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.Expanded">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.Expanded">Expanded</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ExpandedField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.Expanded">Expanded</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ExpandedImageUrl">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.ExpandedImageUrl">ExpandedImageUrl</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ExpandedImageUrlField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.ExpandedImageUrl">ExpandedImageUrl</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ExpandedCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.ExpandedCssClass">ExpandedCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ExpandedCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.ExpandedCssClass">ExpandedCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.FocusedCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.FocusedCssClass">FocusedCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.FocusedCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.FocusedCssClass">FocusedCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ImagePosition">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.ImagePosition">ImagePosition</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.ImagePositionField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.ImagePosition">ImagePosition</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.IsSeparator">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.IsSeparator">IsSeparator</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.IsSeparatorField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.IsSeparator">IsSeparator</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.PreventCollapse">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.PreventCollapse">PreventCollapse</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.PreventCollapseField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.PreventCollapse">PreventCollapse</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.SelectedCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.SelectedCssClass">SelectedCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.SelectedCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.SelectedCssClass">SelectedCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.SelectedImageUrl">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadPanelItem.SelectedImageUrl">SelectedImageUrl</see> property of the
            	<see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemBinding.SelectedImageUrlField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadPanelItem.SelectedImageUrl">SelectedImageUrl</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadPanelItemCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> objects in a
                <see cref="T:Telerik.Web.UI.RadPanelBar">RadPanelBar</see> control.
            </summary>
            <remarks>
            	The <strong>RadPanelItemCollection</strong> class represents a collection of
                <strong>RadPanelItem</strong> objects.
            	<list type="bullet">
            		<item>
                        Use the <see cref="P:Telerik.Web.UI.RadPanelItemCollection.Item(System.Int32)">indexer</see> to programmatically retrieve a
                        single RadPanelItem from the collection, using array notation.
                    </item>
            		<item>
                        Use the <strong>Count</strong> property to determine the total
                        number of panel items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadPanelItemCollection.Add(Telerik.Web.UI.RadPanelItem)">Add</see> method to add items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadPanelItemCollection.Remove(Telerik.Web.UI.RadPanelItem)">Remove</see> method to remove items from the
                        collection.
                    </item>
            	</list>
            </remarks>
            <moduleiscollection/>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see> class.
            </summary>
            <param name="parent">The owner of the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.Add(Telerik.Web.UI.RadPanelItem)">
            <summary>
            Appends the specified <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> object to the end of the current <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see>.
            </summary>
            <param name="item">
            The <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> to append to the end of the current <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see>.
            </param>
            <example>
            	The following example demonstrates how to programmatically add items in a
                <strong>RadPanelBar</strong> control.
            	<code lang="CS">
            		RadPanelItem newsItem = new RadPanelItem("News");
            		RadPanelBar1.Items.Add(newsItem);
                </code>
            	<code lang="VB">
            		Dim newsItem As RadPanelItem = New RadPanelItem("News")
            		RadPanelBar1.Items.Add(newsItem)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.AddRange(Telerik.Web.UI.RadPanelItem[])">
            <summary>Appends the specified array of <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> objects to the end of the 
            current <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see>.
            </summary>
            <example>
                The following example demonstrates how to use the <strong>AddRange</strong> method
                to add multiple items in a single step. 
                <code lang="CS">
            		RadPanelItem[] items = new RadPanelItem[] { new RadPanelItem("First"), new RadPanelItem("Second"), new RadPanelItem("Third") };
            		RadPanelBar1.Items.AddRange(items);
                </code>
            	<code lang="VB">
                    Dim items() As RadPanelItem = {New RadPanelItem("First"), New RadPanelItem("Second"), New RadPanelItem("Third")}
                    RadPanelBar1.Items.AddRange(items)
                </code>
            </example>
            <param name="items">
                The array of <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> o append to the end of the current 
            <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.Remove(Telerik.Web.UI.RadPanelItem)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> object from the current
            	<see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see>.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> object to remove.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> object at the specified index 
            from the current <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see>.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.IndexOf(Telerik.Web.UI.RadPanelItem)">
            <summary>
            Determines the index of the specified <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> object in the collection.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> to locate.
            </param>
            <returns>
            	The zero-based index of item within the current <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see>, 
            	if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.Contains(Telerik.Web.UI.RadPanelItem)">
            <summary>
            	Determines whether the specified <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> object is in the current 
            	<see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see>.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> object to find.
            </param>
            <returns>
            	<c>true</c> if the current collection contains the specified <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> object; 
            	otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.Insert(System.Int32,Telerik.Web.UI.RadPanelItem)">
            <summary>
            Inserts the specified <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> object in the current 
            <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see> at the specified index location.
            </summary>
            <param name="index">The zero-based index location at which to insert the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see>.</param>
            <param name="item">The <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.FindItemByText(System.String)">
            <summary>
            Searches all nodes for a <cee cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</cee> with a <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property
            equal to the specified text.
            </summary>
            <param name="text">The text to search for</param>
            <returns>A <c>RadPanelItem</c> whose <c>Text</c> property equals to the specified argument. Null (Nothing) is returned when no matching node is found.</returns>
            <remarks>This method is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.FindItemByValue(System.String)">
            <summary>
            Searches all nodes for a <cee cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</cee> with a <see cref="P:Telerik.Web.UI.RadPanelItem.Value">Value</see> property
            equal to the specified value.
            </summary>
            <param name="value">The value to search for</param>
            <returns>A <c>RadPanelItem</c> whose <c>Value</c> property equals to the specified argument. Null (Nothing) is returned when no matching node is found.</returns>
            <remarks>This method is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.FindItemByAttribute(System.String,System.String)">
            <summary>
            Searches the nodes in the collection for a <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> which contains the specified attribute and attribute value.
            </summary>
            <param name="attributeName">The name of the target attribute.</param>
            <param name="attributeValue">The value of the target attribute</param>
            <returns>The <c>RadPanelItem</c> that matches the specified arguments. Null (Nothing) is returned if no node is found.</returns>
            <remarks>This method is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.FindItem(System.Predicate{Telerik.Web.UI.RadPanelItem})">
            <summary>
            Returns  the first <strong>RadPanelItem</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindItem</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadPanel1.FindItem(ItemWithEqualsTextAndValue);
            }
            private static bool ItemWithEqualsTextAndValue(RadPanelItem item)
            {
                if (item.Text == item.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadPanel1.FindItem(ItemWithEqualsTextAndValue)
            End Sub
            Private Shared Function ItemWithEqualsTextAndValue(ByVal item As RadPanelItem) As Boolean
                If item.Text = item.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
            </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.FindItemByText(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadPanelbar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> with a <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> whose <see cref="P:Telerik.Web.UI.RadPanelItem.Text">Text</see> property is equal
                to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="text">The value to search for.</param> 
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadPanelItemCollection.FindItemByValue(System.String,System.Boolean)">
            <summary>
                Searches the <strong>RadPanelbar</strong> control for the first
                <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> with a <see cref="P:Telerik.Web.UI.RadPanelItem.Value">Value</see> property equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> whose <see cref="P:Telerik.Web.UI.RadPanelItem.Value">Value</see> property is
                equal to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="value">The value to search for.</param>  
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="P:Telerik.Web.UI.RadPanelItemCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> object at the specified index in 
            	the current <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see>.
            </summary>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> to retrieve.
            </param>
            <returns>
            	The <see cref="T:Telerik.Web.UI.RadPanelItem">RadPanelItem</see> at the specified index in the 
            	current <see cref="T:Telerik.Web.UI.RadPanelItemCollection">RadPanelItemCollection</see>.
            </returns>
        </member>
        <member name="T:Telerik.Web.UI.RadSpell">
            <summary>
            Telerik RadSpell
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadSpell.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag"></see> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag"></see> enumeration values.</returns>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.HandlerUrl">
            <summary>
            Gets or sets the URL for the spell dialog handler
            </summary>
            <value>the relative path for the spell dialog handler </value>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.DialogsCssFile">
            <summary>
            Gets or sets the location of a CSS file, that will be added in the dialog window. If you need to include 
            more than one file, use the CSS @import url(); rule to add the other files from the first.
            <remarks>This property is needed if you are using a custom skin. It allows you to include your custom skin
            CSS in the dialogs, which are separate from the main page.</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.DialogsScriptFile">
            <summary>
            Gets or sets the location of a JavaScript file, that will be added in the dialog window. If you need to include 
            more than one file, you will need to combine the scripts into one first.
            <remarks>This property is needed if want to override some of the default functionality without loading the dialog
            from an external ascx file.</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.AdditionalQueryString">
            <summary>
            Gets or sets an additional querystring appended to the dialog URL.
            </summary>
            <value>A <strong>String</strong>, appended to the dialog URL</value>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.AllowAddCustom">
            <summary>Gets or sets the value indicating whether the spell will allow adding custom words.</summary>
            <value>The default is <b>true</b></value>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.AjaxUrl">
            <summary>
            Gets or sets the URL which the AJAX call will be made to. Check the help for more information.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.ButtonText">
            <summary>Gets or sets the text of the button that will start the spellcheck. This property is localizable.</summary>
            <value>The default is <b>Spell Check</b></value>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.ButtonType">
            <summary>Gets or sets the type of the button that will start the spellcheck.</summary>
            <value>The default is <b>PushButton</b></value>
            <remarks>
            	<para>Values allowed:
                <strong>PushButton</strong>/<strong>LinkButton</strong>/<strong>ImageButton</strong>/<strong>
                None.</strong></para>
            	<para>Setting the value to <strong>None</strong> will not render a button. The only
                way to start a spellcheck will be through the client-side API.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.ClientTextSource">
             <summary>Gets or sets the class of the client side text source object.</summary>
             <value>
             A <strong>string</strong> containing the name of the JavaScript class. The
             default is <b>HtmlElementTextSource</b> -- a built in implementation that obtains the
             source from a HTML element.
             </value>
             <remarks>
             The text source is a JavaScript object.  It has to provide two methods: GetText() and SetText(newValue).
             </remarks>
             <example>
             <code lang="JScript" title="Different controls text source">
             &lt;script type="text/javascript"&gt;
             function DifferentControlsSource()
             {
                 this.GetText = function()
                 {
                     return document.getElementById('before').value;
                 }
            
                 this.SetText = function(newValue)
                 {
                     document.getElementById('after').value = newValue;
                 }
             }
             &lt;/script&gt;
             </code>
             </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.ControlToCheck">
            <summary>
            	The ID of the control to check.
            </summary>
            <remarks>
            The ID can be both a server-side ID, or a client-side ID. RadSpell will find the
            appropriate server control and use its ClientID to attach to it.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.ControlsToCheck">
            <summary>
            	An array of IDs of the control to check.
            </summary>
            <remarks>
            The IDs can be server-side or client-side. RadSpell will find the
            appropriate server control and use its ClientID to attach to it.
            Note that you cannot mix server and client IDs in this list - use only one kind.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.CustomDictionarySourceTypeName">
            <summary>
            Gets or sets the fully qualified type name that will be used to store and read
            the custom dictionary.
            </summary>
            <remarks>
                The type name must be fully qualified if the type is in a GAC-deployed assembly.
                The type must implement the
                <see cref="T:Telerik.Web.UI.Dictionaries.ICustomDictionarySource">ICustomDictionarySource</see>
                interface.
            </remarks>
            <example>
            	<code lang="CS" title="C#">
            spell1.CustomDictionarySourceTypeName = "RadSpellExtensions.CustomDictionarySource, RadSpellExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b5e57ccb698eab8e";
                </code>
            	<code lang="VB" title="VB">
            spell1.CustomDictionarySourceTypeName = "RadSpellExtensions.CustomDictionarySource, RadSpellExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b5e57ccb698eab8e"
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.CustomDictionarySuffix">
            <summary>Gets or sets the suffix for the custom dictionary files.</summary>
            <value>The default is <b>-Custom</b></value>
            <remarks>
            The filenames are formed with the following scheme: Language + CustomDictionarySuffix +
            ".txt". Different suffixes can be used to create different custom dictionaries for
            different users.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.DialogTypeName">
            <summary>Gets or sets the assembly qualified name of the SpellDialog type.</summary>
            <value>The default is <strong>string.Empty</strong></value>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.DialogVirtualPath">
            <summary>Gets or sets the virtual path of the UserControl that represents the SpellDialog.</summary>
            <value>The default is <strong>string.Empty</strong></value>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.DictionaryLanguage">
            <summary>Gets or sets the dictionary language used for spellchecking.</summary>
            <value>The default is <b>en-US</b></value>
            <remarks>
                The language name is used to find a corresponding dictionary file. Spellchecking in
                en-US will work only if a file en-US.TDF can be found inside the folder pointed to
                by <see cref="P:Telerik.Web.UI.RadSpell.DictionaryPath">DictionaryPath</see>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.DictionaryPath">
            <summary>Gets or sets the path for the dictionary files.</summary>
            <value>The default is <strong>~/RadControls/Spell/TDF/</strong></value>
            <remarks>
            This is the path that contains the TDF files, and the custom dictionary TXT
            files.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.EditDistance">
            <summary>
            Gets or sets a the edit distance. If you increase the value, the checking speed
            decreases but more suggestions are presented. Applicable only in EditDistance mode.
            </summary>
            <value>The default is <b>1</b></value>
            <remarks>
                This property takes effect only if the
                <see cref="P:Telerik.Web.UI.RadSpell.SpellCheckProvider">SpellCheckProvider</see> property is set to
                <strong>EditDistanceProvider</strong>.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.FragmentIgnoreOptions">
            <summary>
            Configures the spellchecker engine, so that it knows whether to skip URL's, email
            addresses, and filenames and not flag them as erros.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.IsClientID">
            <summary>
            Gets or sets a value indicating whether whether the ControlToCheck
            property provides a client element ID or a server side control ID.
            </summary>
            <value>The default is <strong>false</strong>.</value>
            <remarks>
                When <strong>true</strong> RadSpell will look for the server-side control and get
                its ClientID. When <strong>false</strong> the
                <see cref="P:Telerik.Web.UI.RadSpell.ControlToCheck">ControlToCheck</see> property will be interpreted as a
                client-side ID and will be used to attach to the target control.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.Language">
            <summary>Gets or sets the localization language for the user interface.</summary>
            <value>
            The localization language for the user interface. The default value is
            <strong>en-US</strong>.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.SpellChecked">
            <summary>
            Gets a value indicating if the target control has been spellchecked.
            </summary>
            <remarks>
            <para>Spellchecking the entire text by the client would set the property to
                <strong>true</strong> on postback.
            </para>
            <para>The property is used by the SpellCheckValidator class. You can set it on the
                client side with RadSpell's SetSpellChecked(false) on various events, say a
                TEXTAREA's OnChange.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.SpellCheckProviderTypeName">
            <summary>Allows the use of a custom spell checking provider. It must implement the ISpellCheckProvider interface.</summary>
            <value>The default is <b>PhoneticProvider</b></value>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.SpellCheckProvider">
            <summary>Specifies the spellchecking algorithm which will be used by RadSpell.</summary>
            <value>The default is <b>PhoneticProvider</b></value>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.SupportedLanguages">
            <summary>Gets or sets the supported languages.</summary>
            <remarks>
            The supported languages will be displayed in a drop-down list, and the user can
            select the language for spellchecking.
            </remarks>
            <value>
            A string array containing the codes and names of the languages (code, name, code,
            name...)
            </value>
            <example>
            	<code title="ASPNET">
            &lt;radS:RadSpell ID="spell1"
                Runat="server"
                ControlToCheck="textBox1"
                SupportedLanguages="en-US,English,fr-FR,French"&gt;
            &lt;/radS:RadSpell&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.WordIgnoreOptions">
            <summary>
            Gets or sets the value used to configure the spellchecker engine to ignore words containing: UPPERCASE, some 
            CaPitaL letters, numbers; or to ignore repeated words (very very)
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.OnClientLoad">
            <summary>
            Gets or sets the name of the client-side function that will be called when the
            spell control is initialized on the page.
            </summary>
            <remarks>
            The function should accept two parameters: sender (the spell client object) and arguments.
            </remarks>
            <example>
            	<code lang="JScript">
            function onSpellLoad(sender, args)
            {
                log("spell: " + sender.get_id() + " ready.");
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.OnClientCheckStarted">
            <summary>
            Gets or sets the name of the client-side function that will be called when the
            spell check starts.
            </summary>
            <remarks>
            The function should accept two parameters: sender (the spell client object) and arguments.
            </remarks>
            <example>
            	<code lang="JScript">
            function onCheckStarted(sender, args)
            {
                log("spell: " + sender.clientId + " started for: " + sender.targetControlId);
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.OnClientCheckFinished">
            <summary>
            Gets or sets the name of the client-side function that will be called when the
            spell check is finished.
            </summary>
            <remarks>
            The function should accept two parameters: sender (the spell client object) and arguments.
            </remarks>
            <example>
            	<code lang="JScript">
            function onCheckFinished(sender, args)
            {
                log("spell: " + sender.clientId + " finished for: " + sender.targetControlId);
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.OnClientCheckCancelled">
            <summary>
            Specifies the name of the client-side function that will be called when the user
            cancels the spell check.
            </summary>
            <remarks>
            The function should accept two parameters: sender (the spell client object) and arguments.
            </remarks>
            <example>
            	<code lang="JScript" title="[New Example]">
            function onCheckCancelled(sender, args)
            {
                log("spell: " + sender.clientId + " cancelled for: " + sender.targetControlId);
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.OnClientDialogClosed">
            <summary>
            Specifies the name of the client-side function that will be called before the
            spell check dialog closes.
            </summary>
            <remarks>
            The function should accept two parameters: sender (the dialog opener client object) and arguments.
            </remarks>
            <example>
            	<code lang="JScript" title="[New Example]">
            function onDialogClosed(sender, args)
            {
                alert("spell: " + sender.get_id()+ " dialog closed");
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.Skin">
            <summary>Gets or sets the skin name for the control user interface.</summary>
            <value>A string containing the skin name for the control user interface. The default is string.Empty.</value>
            <remarks>
            <para>
            If this property is not set, the control will render using the skin named "Default".
            If EnableEmbeddedSkins is set to false, the control will not render skin.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.EnableAjaxSkinRendering">
            <summary>Gets or sets the value, indicating whether to render the skin CSS files during Ajax requests</summary>
            <remarks>
            <para>
            If EnableAjaxSkinRendering is set to false you will have to register the needed control base CSS file by hand when adding/showing the control with Ajax.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.EnableEmbeddedScripts">
            <summary>Gets or sets the value, indicating whether to render links to the embedded client scripts or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedScripts is set to false you will have to register the needed script files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.EnableEmbeddedSkins">
            <summary>Gets or sets the value, indicating whether to render links to the embedded skins or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedSkins is set to false you will have to register the needed CSS files by hand.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadSpell.EnableEmbeddedBaseStylesheet">
            <summary>Gets or sets the value, indicating whether to render the link to the embedded base stylesheet of the control or not.</summary>
            <remarks>
            <para>
            If EnableEmbeddedBaseStylesheet is set to false you will have to register the needed control base CSS file by hand.
            </para>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.Spell.SpellDialog">
            <summary>
            This class is a container for the Spell Dialog UI
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Spell.SpellDialog.OnLoad(System.EventArgs)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.Spell.SpellDialog.DescribeComponent(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.Spell.SpellDialog.CreateChildControls">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.Spell.SpellDialog.OnPreRender(System.EventArgs)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.Spell.SpellDialog.EnableEmbeddedSkins">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.Spell.SpellDialog.Language">
            <summary>
            Gets or sets a string containing the localization language for the RadSpell Dialog
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.SpellCheckValidator">
            <summary>
            SpellCheckValidator validates a form based on a RadSpell control.  It can be used to enforce spellchecking before form submission.
            The ControlToValidate must be set to the ID of a RadSpell control.  The RadSpell control should be separately set up with a control to check and other options.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarButtonCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> objects in
                <see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see> and
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>.
            </summary>
            <remarks>
            	<para>The <strong>RadToolBarButtonCollection</strong> class represents a collection of
                <strong>RadToolBarButton</strong> objects. The <strong>RadToolBarButton</strong> objects
            	in turn represent buttons within a <see cref="T:Telerik.Web.UI.RadToolBarDropDown">RadToolBarDropDown</see> or
            	a <see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>.</para>
            	<list type="bullet">
            		<item>
                        Use the <see cref="P:Telerik.Web.UI.RadToolBarButtonCollection.Item(System.Int32)">indexer</see> to programmatically retrieve a
                        single RadToolBarButton from the collection, using array notation.
                    </item>
            		<item>
                        Use the <strong>Count</strong> property to determine the total
                        number of buttons in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadToolBarButtonCollection.Add(Telerik.Web.UI.RadToolBarButton)">Add</see> method to add buttons to the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadToolBarButtonCollection.Remove(Telerik.Web.UI.RadToolBarButton)">Remove</see> method to remove buttons from the
                        collection.
                    </item>
            	</list>
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarItemCollection">
            <summary>
                A collection of <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> objects in a
                <see cref="T:Telerik.Web.UI.RadToolBar">RadToolBar</see> control.
            </summary>
            <remarks>
            	<para>The <strong>RadToolBarItemCollection</strong> class represents a collection of
                <strong>RadToolBarItem</strong> objects. The <strong>RadToolBarItem</strong> objects
            	in turn represent items (buttons, dropdowns or split buttons) within a
            	<strong>RadToolBar</strong> control.</para> <list type="bullet">
            		<item>
                        Use the <see cref="P:Telerik.Web.UI.RadToolBarItemCollection.Item(System.Int32)">indexer</see> to programmatically retrieve a
                        single RadToolBarItem from the collection, using array notation.
                    </item>
            		<item>
                        Use the <strong>Count</strong> property to determine the total
                        number of toolbar items in the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadToolBarItemCollection.Add(Telerik.Web.UI.RadToolBarItem)">Add</see> method to add toolbar items to the collection.
                    </item>
            		<item>
                        Use the <see cref="M:Telerik.Web.UI.RadToolBarItemCollection.Remove(Telerik.Web.UI.RadToolBarItem)">Remove</see> method to remove toolbar items from the
                        collection.
                    </item>
            	</list>
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see> class.
            </summary>
            <param name="parent">The owner of the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.Add(Telerik.Web.UI.RadToolBarItem)">
            <summary>
            Appends the specified <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> object to the end of the
            current <see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see>.
            </summary>
            <param name="item">
            The <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> to append to the end of the current
            <see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see>.
            </param>
            <example>
            	The following example demonstrates how to programmatically add toolbar buttons in a
                <strong>RadToolBar</strong> control.
            	<code lang="CS">
            		RadToolBarButton createNewButton = new RadToolBarButton("CreateNew");
            		RadToolBar1.Items.Add(createNewButton);
                </code>
            	<code lang="VB">
            		Dim createNewButton As RadToolBarButton = New RadToolBarButton("CreateNew")
            		RadToolBar1.Items.Add(createNewButton)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.FindItemByText(System.String)">
            <summary>
                Searches the <strong>ToolBarItemCollection</strong> for the first
                <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> with a <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> which <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property is equal
                to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. This method is not recursive. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="text">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.FindItemByValue(System.String)">
            <summary>
                Searches the <strong>ToolBarItemCollection</strong> for the first button item
                (<see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> or
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>) with a
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see> property equal
                to the specified value.
            </summary>
            <returns>
                A button item which <see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see> property is
                equal to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. This method is not recursive. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="value">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.FindItemByText(System.String,System.Boolean)">
            <summary>
                Searches the <strong>ToolBarItemCollection</strong> for the first
                <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> with a <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> which <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property is equal
                to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. This method is not recursive. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="text">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.FindItemByValue(System.String,System.Boolean)">
            <summary>
                Searches the <strong>ToolBarItemCollection</strong> for the first button item
                (<see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> or
            	<see cref="T:Telerik.Web.UI.RadToolBarSplitButton">RadToolBarSplitButton</see>) with a
            	<see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see> property equal
                to the specified value.
            </summary>
            <returns>
                A button item which <see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see> property is
                equal to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. This method is not recursive. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="value">The value to search for.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.FindItemByAttribute(System.String,System.String)">
            <summary>
            Searches the items in the collection for a <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> which contains the specified attribute and attribute value.
            </summary>
            <param name="attributeName">The name of the target attribute.</param>
            <param name="attributeValue">The value of the target attribute</param>
            <returns>The <c>RadToolBarItem</c> that matches the specified arguments. Null (Nothing) is returned if no node is found.</returns>
            <remarks>This method is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.FindItem(System.Predicate{Telerik.Web.UI.RadToolBarItem})">
            <summary>
            Returns  the first <strong>RadToolBarItem</strong> 
            that matches the conditions defined by the specified predicate.
            The predicate should returns a boolean value.
            </summary>
            <example>
            The following example demonstrates how to use the <strong>FindItem</strong> method.
            <code lang="CS">	
            void Page_Load(object sender, EventArgs e)
            {
                RadToolBar1.FindItem(ItemWithEqualsTextAndValue);
            }
            private static bool ItemWithEqualsTextAndValue(RadToolBarItem item)
            {
                if (item.Text == item.Value)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            </code>
            <code lang="VB">
            Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)
                RadToolBar1.FindItem(ItemWithEqualsTextAndValue)
            End Sub
            Private Shared Function ItemWithEqualsTextAndValue(ByVal item As RadToolBarItem) As Boolean
                If item.Text = item.Value Then
                    Return True
                Else
                    Return False
                End If
            End Function
            </code>
            </example>
            <param name="match">The Predicate &lt;&gt; that defines the conditions of the element to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.Contains(Telerik.Web.UI.RadToolBarItem)">
            <summary>
            	Determines whether the specified <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> object is in the current 
            	<see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see>.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> object to find.
            </param>
            <returns>
            	<c>true</c> if the current collection contains the specified
            	<see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> object; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Web.UI.RadToolBarItem})">
            <summary>
            Appends the specified array of <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> objects
            to the end of the current <see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see>.
            </summary>
            <example>
                The following example demonstrates how to use the <strong>AddRange</strong> method
                to add multiple items in a single step. 
                <code lang="CS">
            		RadToolBarItem[] items = new RadToolBarItem[] { new RadToolBarButton("Create New"),
            					new RadToolBarDropDown("Manage"),
            					new RadToolBarSplitButton("Register Purchase")};
            		RadToolBar1.Items.AddRange(items);
                </code>
            	<code lang="VB">
                    Dim items() As RadToolBarItem = {New RadToolBarButton("Create New"),
            					New RadToolBarDropDown("Manage"),
            					New RadToolBarSplitButton("Register Purchase")}
                    RadToolBar1.Items.AddRange(items)
                </code>
            </example>
            <param name="items">
                The array of <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> objects to append to the end of the current 
            	<see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.IndexOf(Telerik.Web.UI.RadToolBarItem)">
            <summary>
            Determines the index of the specified <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> object in
            	the collection.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> to locate.
            </param>
            <returns>
            	The zero-based index of a toolbar item within the current
            	<see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see>, 
            	if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.Insert(System.Int32,Telerik.Web.UI.RadToolBarItem)">
            <summary>
            Inserts the specified <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> object in the current 
            <see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see> at the specified index location.
            </summary>
            <param name="index">The zero-based index location at which to insert the
            	<see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see>.</param>
            <param name="item">The <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.Remove(Telerik.Web.UI.RadToolBarItem)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> object from the current
            	<see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see>.
            </summary>
            <param name="item">
            	The <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> object to remove.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> object at the specified index 
            from the current <see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see>.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarItemCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> object at the specified index in 
            	the current <see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see>.
            </summary>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> to retrieve.
            </param>
            <returns>
            	The <see cref="T:Telerik.Web.UI.RadToolBarItem">RadToolBarItem</see> at the specified index in the 
            	current <see cref="T:Telerik.Web.UI.RadToolBarItemCollection">RadToolBarItemCollection</see>.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonCollection.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see> class.
            </summary>
            <param name="parent">The owner of the collection.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonCollection.Add(Telerik.Web.UI.RadToolBarButton)">
            <summary>
            Appends the specified <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object to the end of the
            current <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see>.
            </summary>
            <param name="item">
            The <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> to append to the end of the current
            <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see>.
            </param>
            <example>
            	The following example demonstrates how to programmatically add toolbar buttons to a
                <strong>RadToolBarDropDown</strong>.
            	<code lang="CS">
            		RadToolBarDropDown manageDropDown = new RadToolBarDropDown("Manage");
            
            		RadToolBarButton manageUsersButton = new RadToolBarButton("Users");
            		manageDropDown.Buttons.Add(manageUsersButton);
            
            		RadToolBarButton manageOrdersButton = new RadToolBarButton("Orders");
            		manageDropDown.Buttons.Add(manageOrdersButton);
            
            		RadToolBar1.Items.Add(manageDropDown);
                </code>
            	<code lang="VB">
            		Dim manageDropDown As RadToolBarDropDown = New RadToolBarDropDown("Manage")
            
            		Dim manageUsersButton As RadToolBarButton = New RadToolBarButton("Users")
            		manageDropDown.Buttons.Add(manageUsersButton)
            
            		Dim manageOrdersButton As RadToolBarButton = New RadToolBarButton("Orders")
            		manageDropDown.Buttons.Add(manageOrdersButton)
            
            		RadToolBar1.Items.Add(manageDropDown)
                </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonCollection.FindButtonByText(System.String)">
            <summary>
                Searches the <strong>RadToolBarButtonCollection</strong> for the first
                <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> with a <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property equal to
                the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> which <see cref="P:Telerik.Web.UI.RadToolBarItem.Text">Text</see> property is equal
                to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. This method is not recursive. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="text">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonCollection.FindButtonByValue(System.String)">
            <summary>
                Searches the <strong>RadToolBarButtonCollection</strong> for the first
                <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> with a <see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see> property equal
                to the specified value.
            </summary>
            <returns>
                A <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> whose <see cref="P:Telerik.Web.UI.RadToolBarButton.Value">Value</see> property is
                equal to the specified value.
            </returns>
            <remarks>
            The method returns the first item matching the search criteria. This method is not recursive. If no item is
            matching then <strong>null</strong> (<strong>Nothing</strong> in VB.NET) is
            returned.
            </remarks>
            <param name="value">The value to search for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonCollection.FindButtonByAttribute(System.String,System.String)">
            <summary>
            Searches the items in the collection for a <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see>
            which contains the specified attribute and attribute value.
            </summary>
            <param name="attributeName">The name of the target attribute.</param>
            <param name="attributeValue">The value of the target attribute</param>
            <returns>The <c>RadToolBarButton</c> that matches the specified arguments.
            	Null (Nothing) is returned if no node is found.</returns>
            <remarks>This method is not recursive.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonCollection.Contains(Telerik.Web.UI.RadToolBarButton)">
            <summary>
            	Determines whether the specified <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object
            	is in the current <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see>.
            </summary>
            <param name="button">
            	The <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object to find.
            </param>
            <returns>
            	<c>true</c> if the current collection contains the specified
            	<see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Web.UI.RadToolBarButton})">
            <summary>
            Appends the specified array of <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> objects
            to the end of the current <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see>.
            </summary>
            <example>
                The following example demonstrates how to use the <strong>AddRange</strong> method
                to add multiple buttons in a single step. 
            	<code lang="CS">
            		RadToolBarDropDown manageDropDown = new RadToolBarDropDown("Manage");
            		RadToolBarButton[] buttons = new RadToolBarButton[] { new RadToolBarButton("Users"),
            					new RadToolBarButton("Orders")};
            
            		manageDropDown.Buttons.AddRange(buttons);
            
            		RadToolBar1.Items.Add(manageDropDown);
                </code>
            	<code lang="VB">
            		Dim manageDropDown As RadToolBarDropDown = New RadToolBarDropDown("Manage")
                    Dim buttons() As RadToolBarButton = {New RadToolBarButton("Users"),
            					New RadToolBarButton("Orders")}
            
            		manageDropDown.Buttons.AddRange(buttons)
            
            		RadToolBar1.Items.Add(manageDropDown)
                </code>
            </example>
            <param name="buttons">
                The array of <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> objects to append to
            	the end of the current <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonCollection.IndexOf(Telerik.Web.UI.RadToolBarButton)">
            <summary>
            Determines the index of the specified <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object in
            	the collection.
            </summary>
            <param name="button">
            	The <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> to locate.
            </param>
            <returns>
            	The zero-based index of a toolbar button within the current
            	<see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see>, 
            	if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonCollection.Insert(System.Int32,Telerik.Web.UI.RadToolBarButton)">
            <summary>
            Inserts the specified <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object in the current 
            <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see> at the specified index location.
            </summary>
            <param name="index">The zero-based index location at which to insert the
            	<see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see>.</param>
            <param name="button">The <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> to insert.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonCollection.Remove(Telerik.Web.UI.RadToolBarButton)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object from the current
            	<see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see>.
            </summary>
            <param name="button">
            	The <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object to remove.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadToolBarButtonCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object at the specified index 
            from the current <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see>.
            </summary>
            <param name="index">The zero-based index of the button to remove.</param>
        </member>
        <member name="P:Telerik.Web.UI.RadToolBarButtonCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> object at the specified index in 
            	the current <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see>.
            </summary>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> to retrieve.
            </param>
            <returns>
            	The <see cref="T:Telerik.Web.UI.RadToolBarButton">RadToolBarButton</see> at the specified index in the 
            	current <see cref="T:Telerik.Web.UI.RadToolBarButtonCollection">RadToolBarButtonCollection</see>.
            </returns>
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarItemConverter">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Web.UI.ToolBarStyles">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadToolBarItemType">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.ToolBarAnimationSettings">
            <summary>
            Represents the animation settings like type and duration for the <see cref="T:Telerik.Web.UI.RadToolBar"/> control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.ToolBarAnimationSettings.Duration">
            <summary>Gets or sets the duration in milliseconds of the animation.</summary>
            <value>
            	An integer representing the duration in milliseconds of the animation. 
            	The default value is 450 milliseconds.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.ToolBarClientState">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.RadTreeViewContextMenu">
            <summary>
            	A context menu control used with the <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
            </summary>
            <remarks>
            	<para>
            		The RadTreeViewContextMenu object is used to assign context menus to <see cref="T:Telerik.Web.UI.RadTreeView"/> nodes. Use the
            		<see cref="P:Telerik.Web.UI.RadTreeView.ContextMenus"/> property to add context menus for a <see cref="T:Telerik.Web.UI.RadTreeView"/> 
            		object. 
            	</para>
            	<para>
            		Use the <see cref="P:Telerik.Web.UI.RadTreeNode.ContextMenuID"/> property to assign specific context menu to a given <see cref="T:Telerik.Web.UI.RadTreeNode"/>.
            	</para>
            </remarks>
            <example>
            	The following example demonstrates how to add context menus declaratively
            <code lang="html">
            	&lt;telerik:RadTreeView ID="RadTreeView1" runat="server"&gt;
            		&lt;ContextMenus&gt;
            			&lt;telerik:RadTreeViewContextMenu ID="ContextMenu1"&gt;
            				&lt;Items&gt;
            					&lt;telerik:RadMenuItem Text="Menu1Item1"&gt;&lt;/telerik:RadMenuItem&gt;
            					&lt;telerik:RadMenuItem Text="Menu1Item2"&gt;&lt;/telerik:RadMenuItem&gt;
            				&lt;/Items&gt;
            			&lt;/telerik:RadTreeViewContextMenu&gt;
            			&lt;telerik:RadTreeViewContextMenu Skin="Outlook" ID="ContextMenu2"&gt;
            				&lt;Items&gt;
            					&lt;telerik:RadMenuItem Text="Menu2Item1"&gt;&lt;/telerik:RadMenuItem&gt;
            					&lt;telerik:RadMenuItem Text="Menu2Item2"&gt;&lt;/telerik:RadMenuItem&gt;
            				&lt;/Items&gt;
            			&lt;/telerik:RadTreeViewContextMenu&gt;
            		&lt;/ContextMenus&gt;
            		&lt;Nodes&gt;
            			&lt;telerik:RadTreeNode Text="Node1" ContextMenuID="ContextMenu2"&gt;
            				&lt;Nodes&gt;
            					&lt;telerik:RadTreeNode Text="Node11" ContextMenuID="ContextMenu2"&gt;&lt;/telerik:RadTreeNode&gt;
            					&lt;telerik:RadTreeNode Text="Node12" ContextMenuID="ContextMenu2"&gt;&lt;/telerik:RadTreeNode&gt;
            				&lt;/Nodes&gt;
            			&lt;/telerik:RadTreeNode&gt;
            			&lt;telerik:RadTreeNode Text="Node2" ContextMenuID="ContextMenu2"&gt;
            				&lt;Nodes&gt;
            					&lt;telerik:RadTreeNode Text="Node21" ContextMenuID="ContextMenu2"&gt;&lt;/telerik:RadTreeNode&gt;
            					&lt;telerik:RadTreeNode Text="Node22" ContextMenuID="ContextMenu2"&gt;&lt;/telerik:RadTreeNode&gt;
            				&lt;/Nodes&gt;
            			&lt;/telerik:RadTreeNode&gt;
            		&lt;/Nodes&gt;
            	&lt;/telerik:RadTreeView&gt;
            </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenu.ResolveControlTargetIds">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenu.DescribeTargets(System.Web.UI.ScriptComponentDescriptor)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenu.LoadTargetsViewState(System.Object[])">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenu.SaveTargetsViewState">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenu.TrackTargetsViewState">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeViewContextMenu.Targets">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="E:Telerik.Web.UI.RadTreeViewContextMenu.ItemClick">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeViewContextMenu.OnClientItemClicking">
            <summary>
            OnClientItemClicking is not available for RadTreeViewContextMenu. Use the OnClientContextMenuItemClicking property of RadTreeView instead.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeViewContextMenu.OnClientItemClicked">
            <summary>
            OnClientItemClicked is not available for RadTreeViewContextMenu. Use the OnClientContextMenuItemClicked property of RadTreeView instead.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeViewContextMenu.OnClientShowing">
            <summary>
            OnClientShowing is not available for RadTreeViewContextMenu. Use the OnClientContextMenuShowing property of RadTreeView instead.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeViewContextMenu.OnClientShown">
            <summary>
            OnClientShown is not available for RadTreeViewContextMenu. Use the OnClientContextMenuShown property of RadTreeView instead.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeViewContextMenuCollection">
            <summary>
            Provides a collection container that enables RadTreeView to maintain a list of its RadTreeViewContextMenus.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenuCollection.#ctor(Telerik.Web.UI.RadTreeView)">
            <summary>
            Initializes a new instance of the RadTreeViewContextMenuCollection class for the specified RadTreeView. 
            </summary>
            <param name="treeView">The RadTreeView that the RadTreeViewContextMenuCollection is created for.</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenuCollection.Add(Telerik.Web.UI.RadTreeViewContextMenu)">
            <summary>
            Adds the specified RadTreeViewContextMenu object to the collection
            </summary>
            <param name="target">The RadTreeViewContextMenu to add to the collection</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenuCollection.Contains(Telerik.Web.UI.RadTreeViewContextMenu)">
            <summary>
            	Determines whether the specified RadTreeViewContextMenu is in the parent
            	RadTreeView's RadTreeViewContextMenuCollection object.
            </summary>
            <param name="target">The RadTreeViewContextMenu to search for in the collection</param>
            <returns><strong>true</strong> if the specified RadTreeViewContextMenu exists in
            	the collection; otherwise, <strong>false</strong>.</returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenuCollection.CopyTo(Telerik.Web.UI.RadTreeViewContextMenu[],System.Int32)">
            <summary>
            	Copies the RadTreeViewContextMenu instances stored in the
            	<see cref="T:Telerik.Web.UI.RadTreeViewContextMenuCollection">RadTreeViewContextMenuCollection</see>
            	object to an System.Array object, beginning at the specified index location in the System.Array. 
            </summary>
            <param name="array">The System.Array to copy the RadTreeViewContextMenu instances to.</param>
            <param name="index">The zero-based relative index in array where copying begins</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenuCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Web.UI.RadTreeViewContextMenu})">
            <summary>Appends the specified array of <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu"/> objects to the end of the 
            current <see cref="T:Telerik.Web.UI.RadTreeViewContextMenuCollection"/>.
            </summary>
            <param name="contextMenus">
                The array of <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu"/> to append to the end of the current 
            	<see cref="T:Telerik.Web.UI.RadTreeViewContextMenuCollection"/>.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenuCollection.IndexOf(Telerik.Web.UI.RadTreeViewContextMenu)">
            <summary>
            	Retrieves the index of a specified RadTreeViewContextMenu object in the collection.
            </summary>
            <param name="target">The <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see>
            	for which the index is returned.</param>
            <returns>The index of the specified <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see>
            	instance. If the <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> is not
            	currently a member of the collection, it returns -1. </returns>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenuCollection.Insert(System.Int32,Telerik.Web.UI.RadTreeViewContextMenu)">
            <summary>
            	Inserts the specified <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> object
            	to the collection at the specified index location.
            </summary>
            <param name="index">The location in the array at which to add the <strong>RadTreeViewContextMenu</strong> instance.</param>
            <param name="target">The <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> to add to the collection</param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenuCollection.Remove(Telerik.Web.UI.RadTreeViewContextMenu)">
            <summary>
            	Removes the specified <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see>
            	from the parent <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see>'s <see cref="T:Telerik.Web.UI.RadTreeViewContextMenuCollection">RadTreeViewContextMenuCollection</see>
            	object. 
            </summary>
            <param name="target">The <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> to be removed</param>
            <remarks>To remove a control from an index location, use the <see cref="M:Telerik.Web.UI.RadTreeViewContextMenuCollection.RemoveAt(System.Int32)">RemoveAt</see> method.</remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenuCollection.RemoveAt(System.Int32)">
            <summary>
            	Removes a child <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see>, at the
            	specified index location, from the <see cref="T:Telerik.Web.UI.RadTreeViewContextMenuCollection">RadTreeViewContextMenuCollection</see>
            	object. 
            </summary>
            <param name="index">The ordinal index of the <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see>
            	to be removed from the collection.</param>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeViewContextMenuCollection.Item(System.Int32)">
            <summary>
            Gets a reference to the RadTreeViewContextMenu at the specified index location in the
            RadTreeViewContextMenuCollection object.
            </summary>
            <param name="index">The location of the RadTreeViewContextMenu in the <see cref="T:Telerik.Web.UI.RadTreeViewContextMenuCollection">RadTreeViewContextMenuCollection</see></param>
            <returns>The reference to the RadTreeViewContextMenu.</returns>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeViewContextMenuEventHandler">
             <summary>
            		Represents the method that handles the <see cref="E:Telerik.Web.UI.RadTreeView.ContextMenuItemClick">ContextMenuItemClick</see>
            		event of a <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control.
             </summary>
             <param name="sender">The source of the event.</param>
             <param name="e">A <see cref="T:Telerik.Web.UI.RadTreeViewContextMenuEventArgs">RadTreeViewContextMenuEventArgs</see>
            		that contains the event data.</param>
            	<remarks>
            		<para>
            		The <see cref="E:Telerik.Web.UI.RadTreeView.ContextMenuItemClick">ContextMenuItemClick</see> event is raised
            		when an item in the <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> of the
            		<see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control is clicked.
            		</para>
            		<para>
            		A click on a <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> item of the
            		<see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> makes a postback only if an event handler is attached
            		to the <see cref="E:Telerik.Web.UI.RadTreeView.ContextMenuItemClick">ContextMenuItemClick</see> event.
            		</para>
             </remarks>
            <example>
            		The following example demonstrates how to display information about the clicked item in the
            		<see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> shown after a right-click
            		on a <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see>.
             <code lang="CS">
            		&lt;%@ Page Language="C#" AutoEventWireup="true" %&gt;
            		&lt;%@ Register TagPrefix="Telerik" Namespace="Telerik.Web.UI" Assembly="Telerik.Web.UI" %&gt;
            		
            		&lt;script runat="server"&gt;
            			void RadTreeView1_ContextMenuItemClick(object sender, RadTreeViewContextMenuEventArgs e)
            			{
            				lblInfo.Text = string.Format(@"You clicked on Menu Item {0}(""{1}"") of Node {2}(""{3}"")",
            					e.MenuItem.Index, e.MenuItem.Text, e.Node.Index, e.Node.Text);
            			}
            		&lt;/script&gt;
            		
            		&lt;html&gt;
            		&lt;body&gt;
            		&lt;form id="form1" runat="server"&gt;
            		&lt;Telerik:RadScriptManager ID="RadScriptManager1" runat="server"&gt;&lt;/Telerik:RadScriptManager&gt;
            		&lt;br /&gt;
            		&lt;asp:Label ID="lblInfo" style="border:solid 1px black; background-color:InfoBackground;font:normal 12px Courier New;" runat="server"&gt;Click on a context menu item to see the information for it.&lt;/asp:Label&gt;
            		&lt;br /&gt;
            		&lt;Telerik:RadTreeView ID="RadTreeView1" runat="server" OnContextMenuItemClick="RadTreeView1_ContextMenuItemClick"&gt;
            			&lt;ContextMenus&gt;
            				&lt;Telerik:RadTreeViewContextMenu ID="ContextMenu1"&gt;
            					&lt;Items&gt;
            						&lt;Telerik:RadMenuItem Text="Menu1Item1"&gt;&lt;/Telerik:RadMenuItem&gt;
            						&lt;Telerik:RadMenuItem Text="Menu1Item2"&gt;&lt;/Telerik:RadMenuItem&gt;
            					&lt;/Items&gt;
            				&lt;/Telerik:RadTreeViewContextMenu&gt;
            				&lt;Telerik:RadTreeViewContextMenu Skin="Outlook" ID="ContextMenu2"&gt;
            					&lt;Items&gt;
            						&lt;Telerik:RadMenuItem Text="Menu2Item1"&gt;&lt;/Telerik:RadMenuItem&gt;
            						&lt;Telerik:RadMenuItem Text="Menu2Item2"&gt;&lt;/Telerik:RadMenuItem&gt;
            					&lt;/Items&gt;
            				&lt;/Telerik:RadTreeViewContextMenu&gt;
            			&lt;/ContextMenus&gt;
            			&lt;Nodes&gt;
            				&lt;Telerik:RadTreeNode Text="Node1" ContextMenuID="ContextMenu2"&gt;
            					&lt;Nodes&gt;
            						&lt;Telerik:RadTreeNode Text="Node11" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            						&lt;Telerik:RadTreeNode Text="Node12" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;/Nodes&gt;
            				&lt;/Telerik:RadTreeNode&gt;
            				&lt;Telerik:RadTreeNode Text="Node2" ContextMenuID="ContextMenu2"&gt;
            					&lt;Nodes&gt;
            						&lt;Telerik:RadTreeNode Text="Node21" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            						&lt;Telerik:RadTreeNode Text="Node22" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;/Nodes&gt;
            				&lt;/Telerik:RadTreeNode&gt;
            			&lt;/Nodes&gt;
            		&lt;/Telerik:RadTreeView&gt;
            		
            		&lt;/form&gt;
            		&lt;/body&gt;
            		&lt;/html&gt;
             </code>
             <code lang="VB">
            		&lt;%@ Page Language="VB" AutoEventWireup="true" %&gt;
            		&lt;%@ Register TagPrefix="Telerik" Namespace="Telerik.Web.UI" Assembly="Telerik.Web.UI" %&gt;
            		
            		&lt;script runat="server"&gt;
            			Sub RadTreeView1_ContextMenuItemClick(ByVal sender as Object, ByVal e as RadTreeViewContextMenuEventArgs)
            				lblInfo.Text = String.Format("You clicked on Menu Item {0}(""{1}"") of Node {2}(""{3}"")", _
            		   e.MenuItem.Index, e.MenuItem.Text, e.Node.Index, e.Node.Text)
            			End Sub
            		&lt;/script&gt;
            		
            		&lt;html&gt;
            		&lt;body&gt;
            		&lt;form id="form1" runat="server"&gt;
            		&lt;Telerik:RadScriptManager ID="RadScriptManager1" runat="server"&gt;&lt;/Telerik:RadScriptManager&gt;
            		&lt;br /&gt;
            		&lt;asp:Label ID="lblInfo" style="border:solid 1px black; background-color:InfoBackground;font:normal 12px Courier New;" runat="server"&gt;Click on a context menu item to see the information for it.&lt;/asp:Label&gt;
            		&lt;br /&gt;
            		&lt;Telerik:RadTreeView ID="RadTreeView1" runat="server" OnContextMenuItemClick="RadTreeView1_ContextMenuItemClick"&gt;
            			&lt;ContextMenus&gt;
            				&lt;Telerik:RadTreeViewContextMenu ID="ContextMenu1"&gt;
            					&lt;Items&gt;
            						&lt;Telerik:RadMenuItem Text="Menu1Item1"&gt;&lt;/Telerik:RadMenuItem&gt;
            						&lt;Telerik:RadMenuItem Text="Menu1Item2"&gt;&lt;/Telerik:RadMenuItem&gt;
            					&lt;/Items&gt;
            				&lt;/Telerik:RadTreeViewContextMenu&gt;
            				&lt;Telerik:RadTreeViewContextMenu Skin="Outlook" ID="ContextMenu2"&gt;
            					&lt;Items&gt;
            						&lt;Telerik:RadMenuItem Text="Menu2Item1"&gt;&lt;/Telerik:RadMenuItem&gt;
            						&lt;Telerik:RadMenuItem Text="Menu2Item2"&gt;&lt;/Telerik:RadMenuItem&gt;
            					&lt;/Items&gt;
            				&lt;/Telerik:RadTreeViewContextMenu&gt;
            			&lt;/ContextMenus&gt;
            			&lt;Nodes&gt;
            				&lt;Telerik:RadTreeNode Text="Node1" ContextMenuID="ContextMenu2"&gt;
            					&lt;Nodes&gt;
            						&lt;Telerik:RadTreeNode Text="Node11" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            						&lt;Telerik:RadTreeNode Text="Node12" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;/Nodes&gt;
            				&lt;/Telerik:RadTreeNode&gt;
            				&lt;Telerik:RadTreeNode Text="Node2" ContextMenuID="ContextMenu2"&gt;
            					&lt;Nodes&gt;
            						&lt;Telerik:RadTreeNode Text="Node21" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            						&lt;Telerik:RadTreeNode Text="Node22" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;/Nodes&gt;
            				&lt;/Telerik:RadTreeNode&gt;
            			&lt;/Nodes&gt;
            		&lt;/Telerik:RadTreeView&gt;
            		
            		&lt;/form&gt;
            		&lt;/body&gt;
            		&lt;/html&gt;
             </code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeViewContextMenuEventArgs">
             <summary>
            		Provides data for the <see cref="E:Telerik.Web.UI.RadTreeView.ContextMenuItemClick">ContextMenuItemClick</see>
            		event of the <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control. This class cannot be inherited. 
             </summary>
             <remarks>
            		<para>
            		The <see cref="E:Telerik.Web.UI.RadTreeView.ContextMenuItemClick">ContextMenuItemClick</see> event is raised
            		when an item in the <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> of the
            		<see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control is clicked.
            		</para>
            		<para>
            		A click on a <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> item of the
            		<see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> makes a postback only if an event handler is attached
            		to the <see cref="E:Telerik.Web.UI.RadTreeView.ContextMenuItemClick">ContextMenuItemClick</see> event.
            		</para>
            </remarks>
            <example>
            		The following example demonstrates how to display information about the clicked item in the
            		<see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> shown after a right-click
            		on a <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see>.
             <code lang="CS">
            		&lt;%@ Page Language="C#" AutoEventWireup="true" %&gt;
            		&lt;%@ Register TagPrefix="Telerik" Namespace="Telerik.Web.UI" Assembly="Telerik.Web.UI" %&gt;
            		
            		&lt;script runat="server"&gt;
            			void RadTreeView1_ContextMenuItemClick(object sender, RadTreeViewContextMenuEventArgs e)
            			{
            				lblInfo.Text = string.Format(@"You clicked on Menu Item {0}(""{1}"") of Node {2}(""{3}"")",
            					e.MenuItem.Index, e.MenuItem.Text, e.Node.Index, e.Node.Text);
            			}
            		&lt;/script&gt;
            		
            		&lt;html&gt;
            		&lt;body&gt;
            		&lt;form id="form1" runat="server"&gt;
            		&lt;Telerik:RadScriptManager ID="RadScriptManager1" runat="server"&gt;&lt;/Telerik:RadScriptManager&gt;
            		&lt;br /&gt;
            		&lt;asp:Label ID="lblInfo" style="border:solid 1px black; background-color:InfoBackground;font:normal 12px Courier New;" runat="server"&gt;Click on a context menu item to see the information for it.&lt;/asp:Label&gt;
            		&lt;br /&gt;
            		&lt;Telerik:RadTreeView ID="RadTreeView1" runat="server" OnContextMenuItemClick="RadTreeView1_ContextMenuItemClick"&gt;
            			&lt;ContextMenus&gt;
            				&lt;Telerik:RadTreeViewContextMenu ID="ContextMenu1"&gt;
            					&lt;Items&gt;
            						&lt;Telerik:RadMenuItem Text="Menu1Item1"&gt;&lt;/Telerik:RadMenuItem&gt;
            						&lt;Telerik:RadMenuItem Text="Menu1Item2"&gt;&lt;/Telerik:RadMenuItem&gt;
            					&lt;/Items&gt;
            				&lt;/Telerik:RadTreeViewContextMenu&gt;
            				&lt;Telerik:RadTreeViewContextMenu Skin="Outlook" ID="ContextMenu2"&gt;
            					&lt;Items&gt;
            						&lt;Telerik:RadMenuItem Text="Menu2Item1"&gt;&lt;/Telerik:RadMenuItem&gt;
            						&lt;Telerik:RadMenuItem Text="Menu2Item2"&gt;&lt;/Telerik:RadMenuItem&gt;
            					&lt;/Items&gt;
            				&lt;/Telerik:RadTreeViewContextMenu&gt;
            			&lt;/ContextMenus&gt;
            			&lt;Nodes&gt;
            				&lt;Telerik:RadTreeNode Text="Node1" ContextMenuID="ContextMenu2"&gt;
            					&lt;Nodes&gt;
            						&lt;Telerik:RadTreeNode Text="Node11" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            						&lt;Telerik:RadTreeNode Text="Node12" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;/Nodes&gt;
            				&lt;/Telerik:RadTreeNode&gt;
            				&lt;Telerik:RadTreeNode Text="Node2" ContextMenuID="ContextMenu2"&gt;
            					&lt;Nodes&gt;
            						&lt;Telerik:RadTreeNode Text="Node21" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            						&lt;Telerik:RadTreeNode Text="Node22" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;/Nodes&gt;
            				&lt;/Telerik:RadTreeNode&gt;
            			&lt;/Nodes&gt;
            		&lt;/Telerik:RadTreeView&gt;
            		
            		&lt;/form&gt;
            		&lt;/body&gt;
            		&lt;/html&gt;
             </code>
             <code lang="VB">
            		&lt;%@ Page Language="VB" AutoEventWireup="true" %&gt;
            		&lt;%@ Register TagPrefix="Telerik" Namespace="Telerik.Web.UI" Assembly="Telerik.Web.UI" %&gt;
            		
            		&lt;script runat="server"&gt;
            			Sub RadTreeView1_ContextMenuItemClick(ByVal sender as Object, ByVal e as RadTreeViewContextMenuEventArgs)
            				lblInfo.Text = String.Format("You clicked on Menu Item {0}(""{1}"") of Node {2}(""{3}"")", _
            		   e.MenuItem.Index, e.MenuItem.Text, e.Node.Index, e.Node.Text)
            			End Sub
            		&lt;/script&gt;
            		
            		&lt;html&gt;
            		&lt;body&gt;
            		&lt;form id="form1" runat="server"&gt;
            		&lt;Telerik:RadScriptManager ID="RadScriptManager1" runat="server"&gt;&lt;/Telerik:RadScriptManager&gt;
            		&lt;br /&gt;
            		&lt;asp:Label ID="lblInfo" style="border:solid 1px black; background-color:InfoBackground;font:normal 12px Courier New;" runat="server"&gt;Click on a context menu item to see the information for it.&lt;/asp:Label&gt;
            		&lt;br /&gt;
            		&lt;Telerik:RadTreeView ID="RadTreeView1" runat="server" OnContextMenuItemClick="RadTreeView1_ContextMenuItemClick"&gt;
            			&lt;ContextMenus&gt;
            				&lt;Telerik:RadTreeViewContextMenu ID="ContextMenu1"&gt;
            					&lt;Items&gt;
            						&lt;Telerik:RadMenuItem Text="Menu1Item1"&gt;&lt;/Telerik:RadMenuItem&gt;
            						&lt;Telerik:RadMenuItem Text="Menu1Item2"&gt;&lt;/Telerik:RadMenuItem&gt;
            					&lt;/Items&gt;
            				&lt;/Telerik:RadTreeViewContextMenu&gt;
            				&lt;Telerik:RadTreeViewContextMenu Skin="Outlook" ID="ContextMenu2"&gt;
            					&lt;Items&gt;
            						&lt;Telerik:RadMenuItem Text="Menu2Item1"&gt;&lt;/Telerik:RadMenuItem&gt;
            						&lt;Telerik:RadMenuItem Text="Menu2Item2"&gt;&lt;/Telerik:RadMenuItem&gt;
            					&lt;/Items&gt;
            				&lt;/Telerik:RadTreeViewContextMenu&gt;
            			&lt;/ContextMenus&gt;
            			&lt;Nodes&gt;
            				&lt;Telerik:RadTreeNode Text="Node1" ContextMenuID="ContextMenu2"&gt;
            					&lt;Nodes&gt;
            						&lt;Telerik:RadTreeNode Text="Node11" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            						&lt;Telerik:RadTreeNode Text="Node12" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;/Nodes&gt;
            				&lt;/Telerik:RadTreeNode&gt;
            				&lt;Telerik:RadTreeNode Text="Node2" ContextMenuID="ContextMenu2"&gt;
            					&lt;Nodes&gt;
            						&lt;Telerik:RadTreeNode Text="Node21" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            						&lt;Telerik:RadTreeNode Text="Node22" ContextMenuID="ContextMenu2"&gt;&lt;/Telerik:RadTreeNode&gt;
            					&lt;/Nodes&gt;
            				&lt;/Telerik:RadTreeNode&gt;
            			&lt;/Nodes&gt;
            		&lt;/Telerik:RadTreeView&gt;
            		
            		&lt;/form&gt;
            		&lt;/body&gt;
            		&lt;/html&gt;
             </code>
            </example>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeViewContextMenuEventArgs.#ctor(Telerik.Web.UI.RadTreeNode,Telerik.Web.UI.RadMenuItem)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTreeViewContextMenuEventArgs">RadTreeViewContextMenuEventArgs</see> class.
            </summary>
            <param name="node">A <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> which represents a
            	node in the <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control.
            </param>
            <param name="menuItem">A <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> which represents an
            	item in the <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> control.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeViewContextMenuEventArgs.MenuItem">
            <summary>
                Gets the referenced <see cref="T:Telerik.Web.UI.RadMenuItem">RadMenuItem</see> in the
                <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> control
            	when the event is raised.
            </summary>
            <remarks>
                Use this property to programmatically access the item referenced in the
                <see cref="T:Telerik.Web.UI.RadTreeViewContextMenu">RadTreeViewContextMenu</see> when the event is raised.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeViewContextMenuEventArgs.Node">
            <summary>
                Gets the referenced <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> in the
                <see cref="T:Telerik.Web.UI.RadTreeView">RadTreeView</see> control when the event is raised.
            </summary>
            <remarks>
                Use this property to programmatically access the item referenced in the
                <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> when the event is raised.
            </remarks>
        </member>
        <member name="T:Telerik.Web.UI.TreeNodeCheckState">
            <summary>
            Specifies the checked state of <see cref="T:Telerik.Web.UI.RadTreeNode"/>.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TreeNodeCheckState.Unchecked">
            <summary>
            The <see cref="T:Telerik.Web.UI.RadTreeNode"/> is not checked
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TreeNodeCheckState.Checked">
            <summary>
            The <see cref="T:Telerik.Web.UI.RadTreeNode"/> is checked
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TreeNodeCheckState.Indeterminate">
            <summary>
            The <see cref="T:Telerik.Web.UI.RadTreeNode"/> is in Indeterminate mode (some of its child nodes is not checked)
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.TreeNodeExpandMode">
            <summary>
            This enumeration controls the expand behaviour of the nodes.	
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TreeNodeExpandMode.ClientSide">
            <summary>
            The default behaviour - all nodes are loaded in the intial request and expand is performed on the client, without server interaction
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TreeNodeExpandMode.ServerSide">
            <summary>
            Forces firing of the NodeExpand event - a postback occurs and developers can populate the node with its children in server side event handler
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TreeNodeExpandMode.ServerSideCallBack">
            <summary>
            Forces firing of the NodeExpand event asyncronously from the client without postback - the NodeExpand event fires and child nodes added to the node collection are automatically transferred to the client without postback.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TreeNodeExpandMode.WebService">
            <summary>
            The child nodes are loaded from the web service specified by the RadTreeView.WebServicePath and RadTreeView.WebServiceMethod properties.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.TreeViewLoadingStatusPosition">
            <summary>
            Specifies where the loading message is shown when Client-side load on demand is used.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TreeViewLoadingStatusPosition.BeforeNodeText">
            <summary>
            If the node text is "Some Text", the text is changed to "(loading ...) Some Text" when child nodes are being loaded (Assuming the LoadingMessage property has been set to "(loading...)";
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TreeViewLoadingStatusPosition.AfterNodeText">
            <summary>
            If the node text is "Some Text", the text is changed to "Some Text (loading ...)" when child nodes are being loaded (Assuming the LoadingMessage property has been set to "(loading...)";
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TreeViewLoadingStatusPosition.BelowNodeText">
            <summary>
            The text is not changed and (loading ...)" when child nodes are being loaded (Assuming the LoadingMessage property has been set to "(loading...)";
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.TreeViewLoadingStatusPosition.None">
            <summary>
            No loading text is displayed at all.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeViewDropPosition">
            <summary>
            	Specifies the position at which the user has dragged and dropped the source node(s) with regards to the 
            	destination node.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.RadTreeViewDropPosition.Over">
            <summary>
            The source node(s) is dropped over (onto) the destination node.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.RadTreeViewDropPosition.Above">
            <summary>
            The source node(s) is dropped above (before) the destination node.
            </summary>
        </member>
        <member name="F:Telerik.Web.UI.RadTreeViewDropPosition.Below">
            <summary>
            The source node(s) is dropped below (after) the destination node.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeNodeDragDropEventArgs">
            <summary>
            	Provides data for the <see cref="E:Telerik.Web.UI.RadTreeView.NodeDrop"/> event of the <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeDragDropEventArgs.#ctor(System.Collections.Generic.IList{Telerik.Web.UI.RadTreeNode},Telerik.Web.UI.RadTreeNode,Telerik.Web.UI.RadTreeViewDropPosition)">
            <summary>
            	Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTreeNodeDragDropEventArgs"/> class.
            </summary>
            <param name="sourceNodes">A list of <see cref="T:Telerik.Web.UI.RadTreeNode"/> objects representing the source (dragged) nodes.</param>
            <param name="destinationNode">A <see cref="T:Telerik.Web.UI.RadTreeNode"/> representing the destination node.</param>
            <param name="dropPosition">
            	A <see cref="T:Telerik.Web.UI.RadTreeViewDropPosition"/> value representing the drop position of the 
            	source node(s) with regards to the destination node.
            </param>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeDragDropEventArgs.#ctor(System.Collections.Generic.IList{Telerik.Web.UI.RadTreeNode},System.String)">
            <summary>
            	Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTreeNodeDragDropEventArgs"/> class.
            </summary>
            <param name="sourceNodes">A list of <see cref="T:Telerik.Web.UI.RadTreeNode"/> objects representing the source (dragged) nodes.</param>
            <param name="htmlElementId">A string representing the id of the HTML element on which the source nodes are dropped.</param>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeDragDropEventArgs.SourceDragNode">
            <summary>
            	Gets the source (dragged) node.
            </summary>
            <value>
            	A <see cref="T:Telerik.Web.UI.RadTreeNode"/> object representing the currently dragged node. The first dragged node is 
            	returned if there is more than one dragged node.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeDragDropEventArgs.DestDragNode">
            <summary>
            	Gets the destination node.
            </summary>
            <value>
            	A <see cref="T:Telerik.Web.UI.RadTreeNode"/> object representing the destination node. 
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeDragDropEventArgs.DraggedNodes">
            <summary>
            	Gets all source (dragged) nodes.
            </summary>
            <value>
            	A list of <see cref="T:Telerik.Web.UI.RadTreeNode"/> object representing the source nodes.
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeDragDropEventArgs.DropPosition">
            <summary>
            	Gets or sets the position at which the user drops the source node(s) with regards to the destination nodes.
            </summary>
            <value>
            	One of the <see cref="T:Telerik.Web.UI.RadTreeViewDropPosition"/> enumeration values. 
            </value>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeDragDropEventArgs.HtmlElementID">
            <summary>
            	Gets or sets the ID of the HTML element on which the source node(s) is dropped.
            </summary>
            <value>
            	A string representing the ID of the HTML element on which the source node(s) is dropped.
            </value>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeNodeEditEventArgs">
            <summary>
            	Provides data for the <see cref="E:Telerik.Web.UI.RadTreeView.NodeEdit"/> event of the <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeNodeEventArgs">
            <summary>
            	Provides data for the <see cref="E:Telerik.Web.UI.RadTreeView.NodeClick"/>, <see cref="E:Telerik.Web.UI.RadTreeView.NodeExpand"/>,
            	<see cref="E:Telerik.Web.UI.RadTreeView.NodeCheck"/>, <see cref="E:Telerik.Web.UI.RadTreeView.NodeDataBound"/>,
            	<see cref="E:Telerik.Web.UI.RadTreeView.NodeCollapse"/> and <see cref="E:Telerik.Web.UI.RadTreeView.NodeCreated"/>
            	events of the <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeEventArgs.#ctor(Telerik.Web.UI.RadTreeNode)">
            <summary>
                Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTreeNodeEventArgs"/> class.
            </summary>
            <param name="node">
                A <see cref="T:Telerik.Web.UI.RadTreeNode"/> which represents a node in the <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
            </param>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeEventArgs.Node">
            <summary>
               Gets the referenced node in the <see cref="T:Telerik.Web.UI.RadTreeView"/> control when the event is raised.
            </summary>
            <value>
                The referenced node in the <see cref="T:Telerik.Web.UI.RadTreeView"/> control when the event is raised.
            </value>
            <remarks>
                Use this property to programmatically access the node referenced in the <see cref="T:Telerik.Web.UI.RadTreeView"/> control when the event is raised.
            </remarks>
        </member>
        <member name="M:Telerik.Web.UI.RadTreeNodeEditEventArgs.#ctor(Telerik.Web.UI.RadTreeNode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Web.UI.RadTreeNodeEditEventArgs"/> class
            </summary>
            <param name="node">A <see cref="T:Telerik.Web.UI.RadTreeNode"/> object representing the node being edited.</param>
            <param name="text">A string representing the text entered by the user.</param>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeEditEventArgs.Text">
            <summary>
            	Gets the text which the user entered during node editing.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeViewDragDropEventHandler">
            <summary>
            	Represents the method that handles the <see cref="E:Telerik.Web.UI.RadTreeView.NodeDrop"/> event provided by the <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeViewEditEventHandler">
            <summary>
            	Represents the method that handles the <see cref="E:Telerik.Web.UI.RadTreeView.NodeEdit"/> event provided by the <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeViewEventHandler">
            <summary>
            	Represents the method that handles the <see cref="E:Telerik.Web.UI.RadTreeView.NodeClick"/>, <see cref="E:Telerik.Web.UI.RadTreeView.NodeExpand"/>,
            	<see cref="E:Telerik.Web.UI.RadTreeView.NodeCheck"/>, <see cref="E:Telerik.Web.UI.RadTreeView.NodeDataBound"/>,
            	<see cref="E:Telerik.Web.UI.RadTreeView.NodeCollapse"/> and <see cref="E:Telerik.Web.UI.RadTreeView.NodeCreated"/>
            	events provided by the <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeNodeData">
            <summary>
            	Data class used for transferring tree nodes from and to web services.
            </summary>
            <remarks>
            	For information about the role of each property see the
            	<see cref="T:Telerik.Web.UI.RadTreeNode"/> class.
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.ExpandMode">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.ExpandMode">RadTreeNode.ExpandMode</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.NavigateUrl">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.NavigateUrl">RadTreeNode.NavigateUrl</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.PostBack">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.PostBack">RadTreeNode.PostBack</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.CssClass">
            <summary>
            The CssClass of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.DisabledCssClass">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.DisabledCssClass">RadTreeNode.DisabledCssClass</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.SelectedCssClass">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.SelectedCssClass">RadTreeNode.SelectedCssClass</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.ContentCssClass">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.ContentCssClass">RadTreeNode.ContentCssClass</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.HoveredCssClass">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.HoveredCssClass">RadTreeNode.HoveredCssClass</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.ImageUrl">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.ImageUrl">RadTreeNode.ImageUrl</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.HoveredImageUrl">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.HoveredImageUrl">RadTreeNode.HoveredImageUrl</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.DisabledImageUrl">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.DisabledImageUrl">RadTreeNode.DisabledImageUrl</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.ExpandedImageUrl">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.ExpandedImageUrl">RadTreeNode.ExpandedImageUrl</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeData.ContextMenuID">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadTreeNode.ContextMenuID">RadTreeNode.ContextMenuID</see>.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeNodeBinding">
            <summary>
            	Represents the simple binding between the property value of an object and the property value of a
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see>.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.ContextMenuID">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.ContextMenuID">ContextMenuID</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.ContextMenuIDField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.ContextMenuID">ContextMenuID</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.AllowDrag">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.AllowDrag">AllowDrag</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.AllowDragField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.AllowDrag">AllowDrag</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.AllowDrop">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.AllowDrop">AllowDrop</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.AllowDropField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.AllowDrop">AllowDrop</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.AllowEdit">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.AllowEdit">AllowEdit</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.AllowEditField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.AllowEdit">AllowEdit</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.Category">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.Category">Category</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.CategoryField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.Category">Category</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.Checkable">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.Checkable">Checkable</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.CheckableField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.Checkable">Checkable</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.Checked">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.Checked">Checked</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.CheckedField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.Checked">Checked</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.DisabledCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.DisabledCssClass">DisabledCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.DisabledCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.DisabledCssClass">DisabledCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.DisabledImageUrl">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.DisabledImageUrl">DisabledImageUrl</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.DisabledImageUrlField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.DisabledImageUrl">DisabledImageUrl</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.EnableContextMenu">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.EnableContextMenu">EnableContextMenu</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.EnableContextMenuField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNodeBinding.EnableContextMenu">EnableContextMenu</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.Expanded">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.Expanded">Expanded</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.ExpandedField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.Expanded">Expanded</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.ExpandedImageUrl">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.ExpandedImageUrl">ExpandedImageUrl</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.ExpandedImageUrlField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.ExpandedImageUrl">ExpandedImageUrl</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.ExpandMode">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.ExpandMode">ExpandMode</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.ExpandModeField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.ExpandMode">ExpandMode</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.HoveredCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.HoveredCssClass">HoveredCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.HoveredCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.HoveredCssClass">HoveredCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.SelectedCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.SelectedCssClass">SelectedCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.SelectedCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.SelectedCssClass">SelectedCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.ContentCssClass">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.ContentCssClass">ContentCssClass</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.ContentCssClassField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.ContentCssClass">ContentCssClass</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.SelectedImageUrl">
            <summary>
            	Specifies the exact value of the <see cref="P:Telerik.Web.UI.RadTreeNode.SelectedImageUrl">SelectedImageUrl</see> property of the
            	<see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during the data binding.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBinding.SelectedImageUrlField">
            <summary>
            	Specifies the field, containing the <see cref="P:Telerik.Web.UI.RadTreeNode.SelectedImageUrl">SelectedImageUrl</see> property 
            	value of the <see cref="T:Telerik.Web.UI.RadTreeNode">RadTreeNode</see> that will be created during
            	the data binding.
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.RadTreeNodeBindingCollection">
            <summary>
            	Defines the relationship between a data item and the menu item it is binding to in a 
            	<see cref="T:Telerik.Web.UI.RadMenu"/>control. 
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.RadTreeNodeBindingCollection.Item(System.Int32)">
            <summary>
            	Gets the <see cref="T:Telerik.Web.UI.RadTreeNodeBinding"/> object at the specified index in 
            	the current <see cref="T:Telerik.Web.UI.RadTreeNodeBindingCollection"/>.
            </summary>
            <param name="index">
            	The zero-based index of the <see cref="T:Telerik.Web.UI.RadTreeNodeBinding"/> to retrieve.
            </param>
            <returns>
            	The <see cref="T:Telerik.Web.UI.RadTreeNodeBinding"/> at the specified index in the 
            	current <see cref="T:Telerik.Web.UI.RadTreeNodeBindingCollection"/>.
            </returns>
        </member>
        <member name="T:Telerik.Web.UI.TreeViewAnimationSettings">
            <summary>
            Represents the animation settings like type and duration for the <see cref="T:Telerik.Web.UI.RadTreeView"/> control.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.TreeViewAnimationSettings.Duration">
            <summary>Gets or sets the duration in milliseconds of the animation.</summary>
            <value>
            	An integer representing the duration in milliseconds of the animation. 
            	The default value is 200 milliseconds
            </value>
        </member>
        <member name="T:Telerik.Web.UI.TreeViewClientState">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.TreeViewPostBackCommand">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.TreeViewPostBackArguments">
            <summary>
            For internal use only.
            </summary>
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Telerik.Web.UI.Upload.UploadedFileEventHandler">
            <summary>
                Represents the method that will handle the event that has an
                <see cref="T:Telerik.Web.UI.Upload.UploadedFileEventArgs">UploadedFileEventArgs</see> event data.
            </summary>
            <param name="sender">The <see cref="T:Telerik.Web.UI.RadUpload">RadUpload</see> instance which fired the event.</param>
            <param name="e">An <see cref="T:Telerik.Web.UI.Upload.UploadedFileEventArgs">UploadedFileEventArgs</see> that contain the event data.</param>
        </member>
        <member name="T:Telerik.Web.UI.Upload.UploadedFileEventArgs">
            <summary>
            	UploadedFileEventArgs is the base class for the <see cref="T:Telerik.Web.UI.RadUpload">RadUpload</see> event data.
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Upload.UploadedFileEventArgs.UploadedFile">
            <summary>Gets the currently processed <see cref="P:Telerik.Web.UI.Upload.UploadedFileEventArgs.UploadedFile">UploadedFile</see>.</summary>
            <value>
            	<see cref="P:Telerik.Web.UI.Upload.UploadedFileEventArgs.UploadedFile">UploadedFile</see> object that contains information about
                the currently processed file.
            </value>
            <example>
                The following example demonstrates how to use the
                <see cref="P:Telerik.Web.UI.Upload.UploadedFileEventArgs.UploadedFile">UploadedFile</see> property to save a file in the
                FileExists event.
                <code lang="VB">
            Private Sub RadUpload1_FileExists(ByVal sender As Object, ByVal e As WebControls.UploadedFileEventArgs) Handles RadUpload1.FileExists
                Dim TheFile As Telerik.WebControls.UploadedFile = e.UploadedFile
             
                e.UploadedFile.SaveAs(Path.Combine(RadUpload1.TargetFolder, TheFile.GetName + "1" + TheFile.GetExtension))
            End Sub
                </code>
            	<code lang="CS">
            private void RadUpload1_FileExists(object sender, Telerik.WebControls.UploadedFileEventArgs e)
            {
                Telerik.WebControls.UploadedFile TheFile = e.UploadedFile;
             
                TheFile.SaveAs(Path.Combine(RadUpload1.TargetFolder, TheFile.GetName() + "1" + TheFile.GetExtension()));
            }
                </code>
            </example>
        </member>
        <member name="T:Telerik.Web.UI.Upload.ValidateFileEventHandler">
            <summary>
            	<para>Represents the method that will handle the custom validation event.</para>
            </summary>
            <param name="sender">The RadUpload instance which fired the event.</param>
            <param name="e">
                A <see cref="T:Telerik.Web.UI.Upload.ValidateFileEventArgs">ValidateFileEventArgs</see> that contain the
                event data.
            </param>
        </member>
        <member name="T:Telerik.Web.UI.Upload.ValidateFileEventArgs">
            <summary>
                Provides data for the <see cref="E:Telerik.Web.UI.RadUpload.ValidatingFile">ValidatingFile
                event</see> of the <see cref="T:Telerik.Web.UI.RadUpload">RadUpload</see> control.
            </summary>
            <remarks>
            	<para>
                    A ValidatingFileEventArgs is passed to the
                    <see cref="E:Telerik.Web.UI.RadUpload.ValidatingFile">ValidatingFile event</see> handler to
                    provide event data to the handler. The
                    <see cref="E:Telerik.Web.UI.RadUpload.ValidatingFile">ValidatingFile event</see> event is raised
                    when validation is performed on the server. This allows you to perform a custom
                    server-side validation routine on a file of a
                    <see cref="T:Telerik.Web.UI.RadUpload">RadUpload</see> control.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Web.UI.Upload.ValidateFileEventArgs.IsValid">
            <summary>
                Gets or sets whether the value specified by
                <see cref="P:Telerik.Web.UI.Upload.UploadedFileEventArgs.UploadedFile">UploadedFile property</see> passed
                validation.
            </summary>
            <value>
            	<strong>true</strong> to indicate that the value specified by the
                <see cref="P:Telerik.Web.UI.Upload.UploadedFileEventArgs.UploadedFile">UploadedFile property</see> passed
                validation; otherwise, <b>false</b>
            </value>
            <remarks>
            	<para>
                    Once your validation routine finishes, use the <strong>IsValid</strong>
                    property to indicate whether the value specified by the
                    <see cref="P:Telerik.Web.UI.Upload.UploadedFileEventArgs.UploadedFile">UploadedFile property</see>
                    passed validation. This value determines whether the file from the
                    <see cref="T:Telerik.Web.UI.RadUpload">RadUpload</see> control passed validation.
                </para>
            </remarks>
            <example>
                This example demonstrates how to implement validation for filenames. 
                <code lang="VB">
            Private Sub RadUpload1_ValidatingFile(ByVal sender As Object, ByVal e As WebControls.ValidateFileEventArgs) Handles RadUpload1.ValidatingFile
                If e.UploadedFile.GetExtension.ToLower() = ".zip" Then
                    'The zip files are not allowed for upload
                    e.IsValid = False
                End If
            End Sub
                </code>
            	<code lang="CS">
            private void RadUpload1_ValidatingFile(object sender, ValidateFileEventArgs e)
            {
                if (e.UploadedFile.GetExtension().ToLower() == ".zip")
                {
                    //The zip files are not allowed for upload
                    e.IsValid = false;
                }
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.Web.UI.Upload.ValidateFileEventArgs.SkipInternalValidation">
            <summary>
            Gets or sets whether the internal validation should continue validating the file
            specified by the <see cref="T:Telerik.Web.UI.UploadedFile">UploadedFile</see> property.
            </summary>
            <value>
            	<strong>false</strong> to indicate that the internal validation should validate
            the file specified by the <see cref="T:Telerik.Web.UI.UploadedFile">UploadedFile</see> property; otherwise,
            <b>true</b>
            </value>
            <remarks>
            Once your validation routine finishes, use the <b>SkipInternalValidation</b>
            property to skip the internal validation provided by the <see cref="T:Telerik.Web.UI.RadUpload">RadUpload</see>
            control.
            </remarks>
            <example>
                This example demostrates how to implement custom validation for specific file type.
                
                <code lang="VB">
            Private Sub RadUpload1_ValidatingFile(ByVal sender As Object, ByVal e As WebControls.ValidateFileEventArgs) Handles RadUpload1.ValidatingFile
                If e.UploadedFile.GetExtension.ToLower = ".zip" Then
                    Dim maxZipFileSize As Integer = 10000000 '~10MB
                    If e.UploadedFile.ContentLength &gt; maxZipFileSize Then
                        e.IsValid = False
                    End If
                    'The zip files are not validated for file size, extension and mime type
                    e.SkipInternalValidation = True
                End If
            End Sub
                </code>
            	<code lang="CS">
            private void RadUpload1_ValidatingFile(object sender, ValidateFileEventArgs e)
            {
                if (e.UploadedFile.GetExtension().ToLower() == ".zip")
                {
                    int maxZipFileSize = 10000000; //~10MB
                    if (e.UploadedFile.ContentLength &gt; maxZipFileSize)
                    {
                        e.IsValid = false;
                    }
                    //The zip files are not validated for file size, extension and content type
                    e.SkipInternalValidation = true;
                }
            }
                </code>
            </example>
            <seealso cref="P:Telerik.Web.UI.RadUpload.MaxFileSize">MaxFileSize Property (Telerik.WebControls.RadUpload)</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.AllowedMimeTypes">AllowedMimeTypes Property (Telerik.WebControls.RadUpload)</seealso>
            <seealso cref="P:Telerik.Web.UI.RadUpload.AllowedFileExtensions">AllowedFileExtensions Property (Telerik.WebControls.RadUpload)</seealso>
        </member>
        <member name="T:Telerik.Web.UI.Upload.ProgressWorkerRequest">
            <summary>
            Derives from HttpWorker request; Updates the current RadProgressContext
            with upload progress information;
            </summary>
        </member>
        <member name="T:Telerik.Web.UI.Upload.RequestField">
            <summary>
            Stores a single request field - header data and body info (does not hold the entire body).
            No boundary here.
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Upload.RequestField.AddData(System.Byte[],System.Boolean)">
            <summary>
            Continuously fills the current request field member (header or body);
            </summary>
            <param name="data">The byte data of the current request field</param>
            <param name="lastData">Indicates if this is the last chunk of information</param>
        </member>
        <member name="P:Telerik.Web.UI.Upload.RequestField.Header">
            <summary>
            Returns null if the header is not complete yet:
            </summary>
        </member>
        <member name="M:Telerik.Web.UI.Upload.RequestStateStore.Record(System.Byte[],System.Boolean)">
            <summary>
            Records field information
            </summary>
            <param name="fieldContent">the raw byte array for the field (if the entire field is in the byte array,
            this would include the header and the body)</param>
            <param name="isFinal">indicates if this is the final part of the field body data (e.g., in terms
            of the request parser - if the boundary is reached after this field)</param>
        </member>
        <member name="P:Telerik.Web.UI.Upload.RequestStateStore.Fields">
            <summary>
            Contains only fields with complete headers
            </summary>
        </member>
        <member name="P:Telerik.Web.UI.Upload.RequestStateStore.LastHeaderCompleteField">
            <summary>
            The most current field, which header is complete
            </summary>
        </member>
    </members>
</doc>
