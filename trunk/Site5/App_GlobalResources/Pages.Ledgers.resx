<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UploadBankFiles_BankScreenshot" xml:space="preserve">
    <value>Bank Screenshot</value>
    <comment>Displayed as header above modally zoomed screenshot</comment>
  </data>
  <data name="UploadBankFiles_DownloadDataSince" xml:space="preserve">
    <value>&lt;/p&gt;&lt;p&gt;(The most recent data in Activizr in &lt;em&gt;{0}&lt;/em&gt; is from {1:yyyy-MMM-dd}. You should download bank data from at least &lt;strong&gt;{2:yyyy-MMM-dd}.&lt;/strong&gt;)</value>
    <comment>Displayed to help user determine scope of bank download</comment>
  </data>
  <data name="UploadBankFiles_DownloadDataSince_Paypal" xml:space="preserve">
    <value>&lt;/p&gt;&lt;p&gt;(Paypal will tell you the time of the last transaction download. Download all transactions from that point in time, adding some three days of overlap.)</value>
    <comment>Displayed instead of date of last transaction in the case of Paypal.</comment>
  </data>
  <data name="UploadBankFiles_DownloadInstructions" xml:space="preserve">
    <value>Bank Download Instructions</value>
    <comment>Header above instructions for generation of the bank file type selected.</comment>
  </data>
  <data name="UploadBankFiles_DownloadInstructions_BankgiroSEFile" xml:space="preserve">
    <value>Different banks have different means of obtaining the BGMAX format file. On SEB, you go to &lt;strong&gt;Payments&lt;/strong&gt; and &lt;strong&gt;File communications&lt;/strong&gt; to see a list of files to retrieve. Other banks will vary. In any case, upload them here.</value>
  </data>
  <data name="UploadBankFiles_DownloadInstructions_PaypalFile" xml:space="preserve">
    <value>Log on to PayPal. Go to &lt;strong&gt;Your Account&lt;/strong&gt;, and under the &lt;strong&gt;History&lt;/strong&gt; menu, select &lt;strong&gt;Download History&lt;/strong&gt;. Select &lt;strong&gt;Custom Date Range&lt;/strong&gt;, enter the range since last download (as indicated) plus some overlap, and most importantly, select &lt;strong&gt;Tab Delimited - All Activity&lt;/strong&gt;. Click &lt;strong&gt;Download&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Some time will pass before you get a mail from PayPal saying that the file is ready for download. It will be named &lt;em&gt;download.txt&lt;/em&gt;. Upload this file.</value>
  </data>
  <data name="UploadBankFiles_DownloadInstructions_PaysonFile" xml:space="preserve">
    <value>Log on to Payson. Go to the &lt;strong&gt;History&lt;/strong&gt; tab, and click &lt;strong&gt;Export history&lt;/strong&gt;. The downloaded file will be named &lt;em&gt;Payson_Export_[date].xls&lt;/em&gt;. Upload this file.</value>
  </data>
  <data name="UploadBankFiles_DownloadInstructions_SebAccountFile" xml:space="preserve">
    <value>Open SEB's internet bank. Go to &lt;strong&gt;your account&lt;/strong&gt;, and enter the date span you wish to download in the search box. Press &lt;strong&gt;filter&lt;/strong&gt;. After that, click the link to &lt;strong&gt;save the account history&lt;/strong&gt;. A popup will appear. Choose &lt;strong&gt;csv&lt;/strong&gt; and &lt;strong&gt;tab separated&lt;/strong&gt;, then &lt;strong&gt;save&lt;/strong&gt;. The downloaded file will be named &lt;em&gt;Kontohändelser.csv&lt;/em&gt;. Upload this file.</value>
    <comment>Only translate to languages where SEB is active.</comment>
  </data>
  <data name="UploadBankFiles_ErrorBalance" xml:space="preserve">
    <value>&lt;p&gt;The file contained {0:N0} transactions. &lt;strong&gt;{1:N0} transactions&lt;/strong&gt; have been successfully imported into the &lt;em&gt;{2}&lt;/em&gt; bookkeeping account. ({3:N0} transactions were duplicates.)&lt;/p&gt;&lt;p&gt;&lt;strong&gt;However, the bank balance does not match the records in Activizr.&lt;/strong&gt; This is usually due to missing transactions. Please upload a transaction list with a larger time span to make sure that Activizr sees all transactions.&lt;/p&gt;&lt;p&gt;Activizr's bookkeeping account is currently &lt;strong&gt;not in sync&lt;/strong&gt; with that of the bank.&lt;/p&gt;</value>
    <comment>Displayed when import successful, but end balance out of sync. Assumes plural along all pasted numbers.</comment>
  </data>
  <data name="UploadBankFiles_ErrorInterpretation" xml:space="preserve">
    <value>&lt;h3&gt;The bank file could not be imported.&lt;/h3&gt;&lt;p&gt;This has one of three reasons: you missed some detail in the download instructions, the bank has changed its format, or you accidentally uploaded the wrong file entirely (like a photo from your last party instead of the transactions list). No transactions were imported at all. &lt;strong&gt;Please retry.&lt;/strong&gt;</value>
  </data>
  <data name="UploadBankFiles_FileImportedHeader" xml:space="preserve">
    <value>File Successfully Imported</value>
    <comment>Displayed as header after successful processing</comment>
  </data>
  <data name="UploadBankFiles_FileImportedHeader_ErrorBalance" xml:space="preserve">
    <value>File Imported, But Data Out Of Sync</value>
    <comment>Displayed as header after a good processing that ended in sync failure</comment>
  </data>
  <data name="UploadBankFiles_ImportError" xml:space="preserve">
    <value>Error on importing file</value>
    <comment>Displayed as header on import failure</comment>
  </data>
  <data name="UploadBankFiles_ImportResults" xml:space="preserve">
    <value>&lt;p&gt;The file contained {0:N0} transactions. &lt;strong&gt;{1:N0} transactions&lt;/strong&gt; have been successfully imported into the &lt;em&gt;{2}&lt;/em&gt; bookkeeping account. ({3:N0} transactions were duplicates.)&lt;/p&gt;&lt;p&gt;After import, the account balance in Activizr matches that of the bank.&lt;/p&gt;</value>
    <comment>Displayed on successful import. Assumes plural among all pasted numbers.</comment>
  </data>
  <data name="UploadBankFiles_Info" xml:space="preserve">
    <value>Here, you can upload files from your bank or payment provider into your organization's bookkeeping. Examples include account history and payments received.</value>
    <comment>Displayed in sidebar on page.</comment>
  </data>
  <data name="UploadBankFiles_PageTitle" xml:space="preserve">
    <value>Upload Bank Files</value>
    <comment>Displayed above main content.</comment>
  </data>
  <data name="UploadBankFiles_PaymentAllDuplicates" xml:space="preserve">
    <value>However, they were all duplicates of payment information that was previously uploaded. No new payment information has been imported to Activizr.</value>
  </data>
  <data name="UploadBankFiles_PaymentCount" xml:space="preserve">
    <value>no payments|one payment|{0} payments</value>
    <comment>none|one|many</comment>
  </data>
  <data name="UploadBankFiles_PaymentFileUploadedHeader" xml:space="preserve">
    <value>Payment File Uploaded</value>
  </data>
  <data name="UploadBankFiles_PaymentGroupCount" xml:space="preserve">
    <value>no payment groups|one payment group|{0} payment groups</value>
    <comment>none|one|many</comment>
  </data>
  <data name="UploadBankFiles_PaymentSummary1" xml:space="preserve">
    <value>The payment file contained {0}.</value>
  </data>
  <data name="UploadBankFiles_PaymentSummary2" xml:space="preserve">
    <value>&lt;strong&gt;{0} {1:N2}&lt;/strong&gt; in payments were imported, distributed over {2} across {3}.</value>
    <comment>like EUR 2,102.00 in 3 payments across 2 groups </comment>
  </data>
  <data name="UploadBankFiles_PaymentSummaryDuplicates" xml:space="preserve">
    <value>There was also some duplicate information ({0} across {1}).</value>
  </data>
  <data name="UploadBankFiles_SelectAccount" xml:space="preserve">
    <value>Select Bookkeeping Account</value>
    <comment>Select prompt for the financial account in the organization's bookkeeping.</comment>
  </data>
  <data name="UploadBankFiles_SelectBankAndAccount" xml:space="preserve">
    <value>Select File Type And Account For Upload</value>
  </data>
  <data name="UploadBankFiles_SelectBankFileType" xml:space="preserve">
    <value>Select Bank File Type</value>
    <comment>Header above several bank logos, prompting a selection of bank.</comment>
  </data>
  <data name="UploadBankFiles_UploadAnother" xml:space="preserve">
    <value>Upload another bank file?</value>
    <comment>Displayed as link</comment>
  </data>
  <data name="UploadBankFiles_UploadBankFile" xml:space="preserve">
    <value>Upload Bank File</value>
    <comment>Displayed as header above download instructions / upload form</comment>
  </data>
</root>